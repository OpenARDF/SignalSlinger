
NanoFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000652  00804000  0000f898  0000f94c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000f898  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000464  00804652  00804652  0000ff9e  2**0
                  ALLOC
  3 .eeprom       00000053  00810000  00810000  0000ff9e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  0000fff1  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00010050  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000b90  00000000  00000000  00010090  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000efad  00000000  00000000  00010c20  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004e6d  00000000  00000000  0001fbcd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00009caf  00000000  00000000  00024a3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000028f8  00000000  00000000  0002e6ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006246  00000000  00000000  00030fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000054eb  00000000  00000000  0003722a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000af0  00000000  00000000  0003c715  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 39 02 	jmp	0x472	; 0x472 <__dtors_end>
       4:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
       8:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
       c:	0c 94 e3 0e 	jmp	0x1dc6	; 0x1dc6 <__vector_3>
      10:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      14:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      18:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      1c:	0c 94 64 66 	jmp	0xccc8	; 0xccc8 <__vector_7>
      20:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      24:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      28:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      2c:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      30:	0c 94 5d 13 	jmp	0x26ba	; 0x26ba <__vector_12>
      34:	0c 94 47 49 	jmp	0x928e	; 0x928e <__vector_13>
      38:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      3c:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      40:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      44:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      48:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      4c:	0c 94 74 08 	jmp	0x10e8	; 0x10e8 <__vector_19>
      50:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__vector_20>
      54:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      58:	0c 94 18 16 	jmp	0x2c30	; 0x2c30 <__vector_22>
      5c:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      60:	0c 94 47 38 	jmp	0x708e	; 0x708e <__vector_24>
      64:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      68:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      6c:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      70:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      74:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      78:	0c 94 bd 66 	jmp	0xcd7a	; 0xcd7a <__vector_30>
      7c:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__vector_31>
      80:	0c 94 c5 0d 	jmp	0x1b8a	; 0x1b8a <__vector_32>
      84:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      88:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      8c:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      90:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      94:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      98:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      9c:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      a0:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__bad_interrupt>
      a4:	63 2d       	mov	r22, r3
      a6:	77 2d       	mov	r23, r7
      a8:	8d 2d       	mov	r24, r13
      aa:	a3 2d       	mov	r26, r3
      ac:	b9 2d       	mov	r27, r9
      ae:	ff 2e       	mov	r15, r31
      b0:	f4 2e       	mov	r15, r20
      b2:	f4 2d       	mov	r31, r4
      b4:	04 2e       	mov	r0, r20
      b6:	16 2e       	mov	r1, r22
      b8:	28 2e       	mov	r2, r24
      ba:	3a 2e       	mov	r3, r26
      bc:	74 2e       	mov	r7, r20
      be:	84 2e       	mov	r8, r20
      c0:	96 2e       	mov	r9, r22
      c2:	a8 2e       	mov	r10, r24
      c4:	ba 2e       	mov	r11, r26
      c6:	dd 3f       	cpi	r29, 0xFD	; 253
      c8:	ea 3f       	cpi	r30, 0xFA	; 250
      ca:	81 3f       	cpi	r24, 0xF1	; 241
      cc:	ea 3f       	cpi	r30, 0xFA	; 250
      ce:	ea 3f       	cpi	r30, 0xFA	; 250
      d0:	ea 3f       	cpi	r30, 0xFA	; 250
      d2:	8f 3f       	cpi	r24, 0xFF	; 255
      d4:	ea 3f       	cpi	r30, 0xFA	; 250
      d6:	ea 3f       	cpi	r30, 0xFA	; 250
      d8:	ea 3f       	cpi	r30, 0xFA	; 250
      da:	d9 3e       	cpi	r29, 0xE9	; 233
      dc:	ea 3f       	cpi	r30, 0xFA	; 250
      de:	ea 3f       	cpi	r30, 0xFA	; 250
      e0:	ea 3f       	cpi	r30, 0xFA	; 250
      e2:	ea 3f       	cpi	r30, 0xFA	; 250
      e4:	ea 3f       	cpi	r30, 0xFA	; 250
      e6:	ea 3f       	cpi	r30, 0xFA	; 250
      e8:	ea 3f       	cpi	r30, 0xFA	; 250
      ea:	ea 3f       	cpi	r30, 0xFA	; 250
      ec:	ea 3f       	cpi	r30, 0xFA	; 250
      ee:	ea 3f       	cpi	r30, 0xFA	; 250
      f0:	ea 3f       	cpi	r30, 0xFA	; 250
      f2:	ea 3f       	cpi	r30, 0xFA	; 250
      f4:	ea 3f       	cpi	r30, 0xFA	; 250
      f6:	ea 3f       	cpi	r30, 0xFA	; 250
      f8:	ea 3f       	cpi	r30, 0xFA	; 250
      fa:	ea 3f       	cpi	r30, 0xFA	; 250
      fc:	ea 3f       	cpi	r30, 0xFA	; 250
      fe:	ea 3f       	cpi	r30, 0xFA	; 250
     100:	ea 3f       	cpi	r30, 0xFA	; 250
     102:	ea 3f       	cpi	r30, 0xFA	; 250
     104:	09 3f       	cpi	r16, 0xF9	; 249
     106:	ea 3f       	cpi	r30, 0xFA	; 250
     108:	ea 3f       	cpi	r30, 0xFA	; 250
     10a:	ea 3f       	cpi	r30, 0xFA	; 250
     10c:	ea 3f       	cpi	r30, 0xFA	; 250
     10e:	ea 3f       	cpi	r30, 0xFA	; 250
     110:	ea 3f       	cpi	r30, 0xFA	; 250
     112:	ea 3f       	cpi	r30, 0xFA	; 250
     114:	ea 3f       	cpi	r30, 0xFA	; 250
     116:	ea 3f       	cpi	r30, 0xFA	; 250
     118:	ea 3f       	cpi	r30, 0xFA	; 250
     11a:	ea 3f       	cpi	r30, 0xFA	; 250
     11c:	ea 3f       	cpi	r30, 0xFA	; 250
     11e:	ea 3f       	cpi	r30, 0xFA	; 250
     120:	ea 3f       	cpi	r30, 0xFA	; 250
     122:	ea 3f       	cpi	r30, 0xFA	; 250
     124:	ea 3f       	cpi	r30, 0xFA	; 250
     126:	ea 3f       	cpi	r30, 0xFA	; 250
     128:	ea 3f       	cpi	r30, 0xFA	; 250
     12a:	ea 3f       	cpi	r30, 0xFA	; 250
     12c:	ea 3f       	cpi	r30, 0xFA	; 250
     12e:	39 3f       	cpi	r19, 0xF9	; 249
     130:	ea 3f       	cpi	r30, 0xFA	; 250
     132:	ea 3f       	cpi	r30, 0xFA	; 250
     134:	ea 3f       	cpi	r30, 0xFA	; 250
     136:	ea 3f       	cpi	r30, 0xFA	; 250
     138:	ea 3f       	cpi	r30, 0xFA	; 250
     13a:	ea 3f       	cpi	r30, 0xFA	; 250
     13c:	ea 3f       	cpi	r30, 0xFA	; 250
     13e:	ea 3f       	cpi	r30, 0xFA	; 250
     140:	6d 3f       	cpi	r22, 0xFD	; 253
     142:	77 3f       	cpi	r23, 0xF7	; 247
     144:	9d 3f       	cpi	r25, 0xFD	; 253
     146:	b0 3e       	cpi	r27, 0xE0	; 224
     148:	ea 3f       	cpi	r30, 0xFA	; 250
     14a:	ea 3f       	cpi	r30, 0xFA	; 250
     14c:	ea 3f       	cpi	r30, 0xFA	; 250
     14e:	be 3e       	cpi	r27, 0xEE	; 238
     150:	ea 3f       	cpi	r30, 0xFA	; 250
     152:	ea 3f       	cpi	r30, 0xFA	; 250
     154:	ea 3f       	cpi	r30, 0xFA	; 250
     156:	cc 3e       	cpi	r28, 0xEC	; 236
     158:	ea 3f       	cpi	r30, 0xFA	; 250
     15a:	a7 3f       	cpi	r26, 0xF7	; 247
     15c:	b1 3f       	cpi	r27, 0xF1	; 241
     15e:	ea 3f       	cpi	r30, 0xFA	; 250
     160:	bc 3f       	cpi	r27, 0xFC	; 252
     162:	ea 3f       	cpi	r30, 0xFA	; 250
     164:	c7 3f       	cpi	r28, 0xF7	; 247
     166:	ea 3f       	cpi	r30, 0xFA	; 250
     168:	d2 3f       	cpi	r29, 0xF2	; 242
     16a:	93 4b       	sbci	r25, 0xB3	; 179
     16c:	a6 4b       	sbci	r26, 0xB6	; 182
     16e:	b0 4b       	sbci	r27, 0xB0	; 176
     170:	ba 4b       	sbci	r27, 0xBA	; 186
     172:	ea 4b       	sbci	r30, 0xBA	; 186
     174:	d2 4b       	sbci	r29, 0xB2	; 178
     176:	02 4c       	sbci	r16, 0xC2	; 194
     178:	df 4c       	sbci	r29, 0xCF	; 207
     17a:	f5 4c       	sbci	r31, 0xC5	; 197
     17c:	b0 4c       	sbci	r27, 0xC0	; 192
     17e:	7e 4c       	sbci	r23, 0xCE	; 206
     180:	4c 4c       	sbci	r20, 0xCC	; 204
     182:	1a 4c       	sbci	r17, 0xCA	; 202
     184:	ad 4c       	sbci	r26, 0xCD	; 205
     186:	ba 54       	subi	r27, 0x4A	; 74
     188:	4a 54       	subi	r20, 0x4A	; 74
     18a:	9e 54       	subi	r25, 0x4E	; 78
     18c:	c8 54       	subi	r28, 0x48	; 72
     18e:	a5 54       	subi	r26, 0x45	; 69
     190:	c8 54       	subi	r28, 0x48	; 72
     192:	66 54       	subi	r22, 0x46	; 70
     194:	43 54       	subi	r20, 0x43	; 67
     196:	58 54       	subi	r21, 0x48	; 72
     198:	5f 54       	subi	r21, 0x4F	; 79
     19a:	c8 54       	subi	r28, 0x48	; 72
     19c:	82 54       	subi	r24, 0x42	; 66
     19e:	35 54       	subi	r19, 0x45	; 69
     1a0:	90 54       	subi	r25, 0x40	; 64
     1a2:	2e 54       	subi	r18, 0x4E	; 78
     1a4:	51 54       	subi	r21, 0x41	; 65
     1a6:	e9 53       	subi	r30, 0x39	; 57
     1a8:	f0 53       	subi	r31, 0x30	; 48
     1aa:	f7 53       	subi	r31, 0x37	; 55
     1ac:	fe 53       	subi	r31, 0x3E	; 62
     1ae:	05 54       	subi	r16, 0x45	; 69
     1b0:	0c 54       	subi	r16, 0x4C	; 76
     1b2:	12 54       	subi	r17, 0x42	; 66
     1b4:	19 54       	subi	r17, 0x49	; 73
     1b6:	20 54       	subi	r18, 0x40	; 64
     1b8:	27 54       	subi	r18, 0x47	; 71
     1ba:	6d 54       	subi	r22, 0x4D	; 77
     1bc:	74 54       	subi	r23, 0x44	; 68
     1be:	c1 54       	subi	r28, 0x41	; 65
     1c0:	7b 54       	subi	r23, 0x4B	; 75
     1c2:	c8 54       	subi	r28, 0x48	; 72
     1c4:	3c 54       	subi	r19, 0x4C	; 76
     1c6:	ac 54       	subi	r26, 0x4C	; 76
     1c8:	37 53       	subi	r19, 0x37	; 55
     1ca:	3e 53       	subi	r19, 0x3E	; 62
     1cc:	45 53       	subi	r20, 0x35	; 53
     1ce:	4c 53       	subi	r20, 0x3C	; 60
     1d0:	53 53       	subi	r21, 0x33	; 51
     1d2:	59 53       	subi	r21, 0x39	; 57
     1d4:	60 53       	subi	r22, 0x30	; 48
     1d6:	67 53       	subi	r22, 0x37	; 55
     1d8:	6d 53       	subi	r22, 0x3D	; 61
     1da:	73 53       	subi	r23, 0x33	; 51
     1dc:	7a 53       	subi	r23, 0x3A	; 58
     1de:	81 53       	subi	r24, 0x31	; 49
     1e0:	88 53       	subi	r24, 0x38	; 56
     1e2:	8f 53       	subi	r24, 0x3F	; 63
     1e4:	96 53       	subi	r25, 0x36	; 54
     1e6:	9d 53       	subi	r25, 0x3D	; 61
     1e8:	a4 53       	subi	r26, 0x34	; 52
     1ea:	ab 53       	subi	r26, 0x3B	; 59
     1ec:	b2 53       	subi	r27, 0x32	; 50
     1ee:	b8 53       	subi	r27, 0x38	; 56
     1f0:	bf 53       	subi	r27, 0x3F	; 63
     1f2:	c6 53       	subi	r28, 0x36	; 54
     1f4:	cd 53       	subi	r28, 0x3D	; 61
     1f6:	d4 53       	subi	r29, 0x34	; 52
     1f8:	db 53       	subi	r29, 0x3B	; 59
     1fa:	e2 53       	subi	r30, 0x32	; 50
     1fc:	c8 54       	subi	r28, 0x48	; 72
     1fe:	c8 54       	subi	r28, 0x48	; 72
     200:	c8 54       	subi	r28, 0x48	; 72
     202:	c8 54       	subi	r28, 0x48	; 72
     204:	97 54       	subi	r25, 0x47	; 71
     206:	c8 54       	subi	r28, 0x48	; 72
     208:	c8 54       	subi	r28, 0x48	; 72
     20a:	c8 54       	subi	r28, 0x48	; 72
     20c:	c8 54       	subi	r28, 0x48	; 72
     20e:	c8 54       	subi	r28, 0x48	; 72
     210:	c8 54       	subi	r28, 0x48	; 72
     212:	c8 54       	subi	r28, 0x48	; 72
     214:	c8 54       	subi	r28, 0x48	; 72
     216:	c8 54       	subi	r28, 0x48	; 72
     218:	c8 54       	subi	r28, 0x48	; 72
     21a:	c8 54       	subi	r28, 0x48	; 72
     21c:	c8 54       	subi	r28, 0x48	; 72
     21e:	c8 54       	subi	r28, 0x48	; 72
     220:	c8 54       	subi	r28, 0x48	; 72
     222:	c8 54       	subi	r28, 0x48	; 72
     224:	c8 54       	subi	r28, 0x48	; 72
     226:	c8 54       	subi	r28, 0x48	; 72
     228:	c8 54       	subi	r28, 0x48	; 72
     22a:	c8 54       	subi	r28, 0x48	; 72
     22c:	c8 54       	subi	r28, 0x48	; 72
     22e:	c8 54       	subi	r28, 0x48	; 72
     230:	c8 54       	subi	r28, 0x48	; 72
     232:	c8 54       	subi	r28, 0x48	; 72
     234:	c8 54       	subi	r28, 0x48	; 72
     236:	c8 54       	subi	r28, 0x48	; 72
     238:	c8 54       	subi	r28, 0x48	; 72
     23a:	c8 54       	subi	r28, 0x48	; 72
     23c:	c8 54       	subi	r28, 0x48	; 72
     23e:	b3 54       	subi	r27, 0x43	; 67
     240:	c8 54       	subi	r28, 0x48	; 72
     242:	89 54       	subi	r24, 0x49	; 73
     244:	6e 6f       	ori	r22, 0xFE	; 254
     246:	79 6f       	ori	r23, 0xF9	; 249
     248:	84 6f       	ori	r24, 0xF4	; 244
     24a:	8f 6f       	ori	r24, 0xFF	; 255
     24c:	9a 6f       	ori	r25, 0xFA	; 250
     24e:	a5 6f       	ori	r26, 0xF5	; 245
     250:	b0 6f       	ori	r27, 0xF0	; 240
     252:	bb 6f       	ori	r27, 0xFB	; 251
     254:	c6 6f       	ori	r28, 0xF6	; 246
     256:	d1 6f       	ori	r29, 0xF1	; 241
     258:	dc 6f       	ori	r29, 0xFC	; 252
     25a:	e7 6f       	ori	r30, 0xF7	; 247
     25c:	f2 6f       	ori	r31, 0xF2	; 242
     25e:	fd 6f       	ori	r31, 0xFD	; 253
     260:	08 70       	andi	r16, 0x08	; 8
     262:	13 70       	andi	r17, 0x03	; 3
     264:	1e 70       	andi	r17, 0x0E	; 14
     266:	29 70       	andi	r18, 0x09	; 9

00000268 <__trampolines_end>:
     268:	4e 41       	sbci	r20, 0x1E	; 30
     26a:	4e 49       	Address 0x0000026a is out of bounds.
.word	0xffff	; ????

0000026b <pstr_inity>:
     26b:	49 4e 49 54 59                                      INITY

00000270 <pstr_inf>:
     270:	49 4e 46                                            INF

00000273 <pwr_m10>:
     273:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     283:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000028b <pwr_p10>:
     28b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     29b:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     2ab:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     2bb:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     2cb:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     2db:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     2eb:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     2fb:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     30b:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     31b:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     32b:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     33b:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     34b:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     35b:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     36b:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     37b:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     38b:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     39b:	3d 27                                               ='

0000039d <strfmonths>:
     39d:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     3ad:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     3bd:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     3cd:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     3dd:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     3ed:	65 6d 62 65 72 20 00                                ember .

000003f4 <strfwkdays>:
     3f4:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     404:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     414:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     424:	53 61 74 75 72 64 61 79 20 00                       Saturday .

0000042e <ascdays>:
     42e:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     43e:	72 69 53 61 74 00                                   riSat.

00000444 <ascmonths>:
     444:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     454:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     464:	76 44 65 63 00 00                                   vDec..

0000046a <__ctors_start>:
     46a:	44 36       	cpi	r20, 0x64	; 100
     46c:	c3 38       	cpi	r28, 0x83	; 131

0000046e <__ctors_end>:
     46e:	51 36       	cpi	r21, 0x61	; 97
     470:	d0 38       	cpi	r29, 0x80	; 128

00000472 <__dtors_end>:
     472:	11 24       	eor	r1, r1
     474:	1f be       	out	0x3f, r1	; 63
     476:	cf ef       	ldi	r28, 0xFF	; 255
     478:	cd bf       	out	0x3d, r28	; 61
     47a:	df e7       	ldi	r29, 0x7F	; 127
     47c:	de bf       	out	0x3e, r29	; 62

0000047e <__do_copy_data>:
     47e:	16 e4       	ldi	r17, 0x46	; 70
     480:	a0 e0       	ldi	r26, 0x00	; 0
     482:	b0 e4       	ldi	r27, 0x40	; 64
     484:	e8 e9       	ldi	r30, 0x98	; 152
     486:	f8 ef       	ldi	r31, 0xF8	; 248
     488:	00 e0       	ldi	r16, 0x00	; 0
     48a:	0b bf       	out	0x3b, r16	; 59
     48c:	02 c0       	rjmp	.+4      	; 0x492 <__do_copy_data+0x14>
     48e:	07 90       	elpm	r0, Z+
     490:	0d 92       	st	X+, r0
     492:	a2 35       	cpi	r26, 0x52	; 82
     494:	b1 07       	cpc	r27, r17
     496:	d9 f7       	brne	.-10     	; 0x48e <__do_copy_data+0x10>

00000498 <__do_clear_bss>:
     498:	2a e4       	ldi	r18, 0x4A	; 74
     49a:	a2 e5       	ldi	r26, 0x52	; 82
     49c:	b6 e4       	ldi	r27, 0x46	; 70
     49e:	01 c0       	rjmp	.+2      	; 0x4a2 <.do_clear_bss_start>

000004a0 <.do_clear_bss_loop>:
     4a0:	1d 92       	st	X+, r1

000004a2 <.do_clear_bss_start>:
     4a2:	a6 3b       	cpi	r26, 0xB6	; 182
     4a4:	b2 07       	cpc	r27, r18
     4a6:	e1 f7       	brne	.-8      	; 0x4a0 <.do_clear_bss_loop>

000004a8 <__do_global_ctors>:
     4a8:	12 e0       	ldi	r17, 0x02	; 2
     4aa:	c7 e3       	ldi	r28, 0x37	; 55
     4ac:	d2 e0       	ldi	r29, 0x02	; 2
     4ae:	04 c0       	rjmp	.+8      	; 0x4b8 <__do_global_ctors+0x10>
     4b0:	21 97       	sbiw	r28, 0x01	; 1
     4b2:	fe 01       	movw	r30, r28
     4b4:	0e 94 4d 73 	call	0xe69a	; 0xe69a <__tablejump2__>
     4b8:	c5 33       	cpi	r28, 0x35	; 53
     4ba:	d1 07       	cpc	r29, r17
     4bc:	c9 f7       	brne	.-14     	; 0x4b0 <__do_global_ctors+0x8>
     4be:	0e 94 da 16 	call	0x2db4	; 0x2db4 <main>
     4c2:	0c 94 3f 7c 	jmp	0xf87e	; 0xf87e <__do_global_dtors>

000004c6 <__bad_interrupt>:
     4c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000004ca <is_leap_year>:
     4ca:	9c 01       	movw	r18, r24
     4cc:	23 70       	andi	r18, 0x03	; 3
     4ce:	33 27       	eor	r19, r19
     4d0:	23 2b       	or	r18, r19
     4d2:	59 f4       	brne	.+22     	; 0x4ea <is_leap_year+0x20>
     4d4:	64 e6       	ldi	r22, 0x64	; 100
     4d6:	70 e0       	ldi	r23, 0x00	; 0
     4d8:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     4dc:	89 2b       	or	r24, r25
     4de:	39 f4       	brne	.+14     	; 0x4ee <is_leap_year+0x24>
     4e0:	63 70       	andi	r22, 0x03	; 3
     4e2:	77 27       	eor	r23, r23
     4e4:	81 e0       	ldi	r24, 0x01	; 1
     4e6:	67 2b       	or	r22, r23
     4e8:	19 f0       	breq	.+6      	; 0x4f0 <is_leap_year+0x26>
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	08 95       	ret
     4ee:	81 e0       	ldi	r24, 0x01	; 1
     4f0:	08 95       	ret

000004f2 <localtime>:
     4f2:	62 ea       	ldi	r22, 0xA2	; 162
     4f4:	7a e4       	ldi	r23, 0x4A	; 74
     4f6:	0e 94 80 02 	call	0x500	; 0x500 <localtime_r>
     4fa:	82 ea       	ldi	r24, 0xA2	; 162
     4fc:	9a e4       	ldi	r25, 0x4A	; 74
     4fe:	08 95       	ret

00000500 <localtime_r>:
     500:	cf 92       	push	r12
     502:	df 92       	push	r13
     504:	ef 92       	push	r14
     506:	ff 92       	push	r15
     508:	0f 93       	push	r16
     50a:	1f 93       	push	r17
     50c:	cf 93       	push	r28
     50e:	df 93       	push	r29
     510:	00 d0       	rcall	.+0      	; 0x512 <localtime_r+0x12>
     512:	00 d0       	rcall	.+0      	; 0x514 <localtime_r+0x14>
     514:	cd b7       	in	r28, 0x3d	; 61
     516:	de b7       	in	r29, 0x3e	; 62
     518:	6c 01       	movw	r12, r24
     51a:	7b 01       	movw	r14, r22
     51c:	e0 91 b2 4a 	lds	r30, 0x4AB2	; 0x804ab2 <__dst_ptr>
     520:	f0 91 b3 4a 	lds	r31, 0x4AB3	; 0x804ab3 <__dst_ptr+0x1>
     524:	30 97       	sbiw	r30, 0x00	; 0
     526:	29 f0       	breq	.+10     	; 0x532 <localtime_r+0x32>
     528:	6e ea       	ldi	r22, 0xAE	; 174
     52a:	7a e4       	ldi	r23, 0x4A	; 74
     52c:	09 95       	icall
     52e:	8c 01       	movw	r16, r24
     530:	02 c0       	rjmp	.+4      	; 0x536 <localtime_r+0x36>
     532:	0f ef       	ldi	r16, 0xFF	; 255
     534:	1f ef       	ldi	r17, 0xFF	; 255
     536:	f6 01       	movw	r30, r12
     538:	40 81       	ld	r20, Z
     53a:	51 81       	ldd	r21, Z+1	; 0x01
     53c:	62 81       	ldd	r22, Z+2	; 0x02
     53e:	73 81       	ldd	r23, Z+3	; 0x03
     540:	80 91 ae 4a 	lds	r24, 0x4AAE	; 0x804aae <__utc_offset>
     544:	90 91 af 4a 	lds	r25, 0x4AAF	; 0x804aaf <__utc_offset+0x1>
     548:	a0 91 b0 4a 	lds	r26, 0x4AB0	; 0x804ab0 <__utc_offset+0x2>
     54c:	b0 91 b1 4a 	lds	r27, 0x4AB1	; 0x804ab1 <__utc_offset+0x3>
     550:	84 0f       	add	r24, r20
     552:	95 1f       	adc	r25, r21
     554:	a6 1f       	adc	r26, r22
     556:	b7 1f       	adc	r27, r23
     558:	10 16       	cp	r1, r16
     55a:	11 06       	cpc	r1, r17
     55c:	4c f4       	brge	.+18     	; 0x570 <localtime_r+0x70>
     55e:	a8 01       	movw	r20, r16
     560:	01 2e       	mov	r0, r17
     562:	00 0c       	add	r0, r0
     564:	66 0b       	sbc	r22, r22
     566:	77 0b       	sbc	r23, r23
     568:	84 0f       	add	r24, r20
     56a:	95 1f       	adc	r25, r21
     56c:	a6 1f       	adc	r26, r22
     56e:	b7 1f       	adc	r27, r23
     570:	89 83       	std	Y+1, r24	; 0x01
     572:	9a 83       	std	Y+2, r25	; 0x02
     574:	ab 83       	std	Y+3, r26	; 0x03
     576:	bc 83       	std	Y+4, r27	; 0x04
     578:	b7 01       	movw	r22, r14
     57a:	ce 01       	movw	r24, r28
     57c:	01 96       	adiw	r24, 0x01	; 1
     57e:	0e 94 08 07 	call	0xe10	; 0xe10 <gmtime_r>
     582:	f7 01       	movw	r30, r14
     584:	02 87       	std	Z+10, r16	; 0x0a
     586:	13 87       	std	Z+11, r17	; 0x0b
     588:	24 96       	adiw	r28, 0x04	; 4
     58a:	cd bf       	out	0x3d, r28	; 61
     58c:	de bf       	out	0x3e, r29	; 62
     58e:	df 91       	pop	r29
     590:	cf 91       	pop	r28
     592:	1f 91       	pop	r17
     594:	0f 91       	pop	r16
     596:	ff 90       	pop	r15
     598:	ef 90       	pop	r14
     59a:	df 90       	pop	r13
     59c:	cf 90       	pop	r12
     59e:	08 95       	ret

000005a0 <month_length>:
     5a0:	62 30       	cpi	r22, 0x02	; 2
     5a2:	21 f4       	brne	.+8      	; 0x5ac <month_length+0xc>
     5a4:	0e 94 65 02 	call	0x4ca	; 0x4ca <is_leap_year>
     5a8:	84 5e       	subi	r24, 0xE4	; 228
     5aa:	08 95       	ret
     5ac:	68 30       	cpi	r22, 0x08	; 8
     5ae:	08 f0       	brcs	.+2      	; 0x5b2 <month_length+0x12>
     5b0:	6f 5f       	subi	r22, 0xFF	; 255
     5b2:	61 70       	andi	r22, 0x01	; 1
     5b4:	8e e1       	ldi	r24, 0x1E	; 30
     5b6:	86 0f       	add	r24, r22
     5b8:	08 95       	ret

000005ba <set_system_time>:
     5ba:	0f b6       	in	r0, 0x3f	; 63
     5bc:	f8 94       	cli
     5be:	60 93 9e 4a 	sts	0x4A9E, r22	; 0x804a9e <__system_time>
     5c2:	70 93 9f 4a 	sts	0x4A9F, r23	; 0x804a9f <__system_time+0x1>
     5c6:	80 93 a0 4a 	sts	0x4AA0, r24	; 0x804aa0 <__system_time+0x2>
     5ca:	90 93 a1 4a 	sts	0x4AA1, r25	; 0x804aa1 <__system_time+0x3>
     5ce:	0f be       	out	0x3f, r0	; 63
     5d0:	08 95       	ret

000005d2 <pgm_copystring>:
     5d2:	cf 92       	push	r12
     5d4:	df 92       	push	r13
     5d6:	ef 92       	push	r14
     5d8:	0f 93       	push	r16
     5da:	6b 01       	movw	r12, r22
     5dc:	e8 2e       	mov	r14, r24
     5de:	7c 2d       	mov	r23, r12
     5e0:	6d 2d       	mov	r22, r13
     5e2:	5e 2d       	mov	r21, r14
     5e4:	ae 2d       	mov	r26, r14
     5e6:	c6 01       	movw	r24, r12
     5e8:	01 96       	adiw	r24, 0x01	; 1
     5ea:	a1 1d       	adc	r26, r1
     5ec:	44 23       	and	r20, r20
     5ee:	51 f0       	breq	.+20     	; 0x604 <pgm_copystring+0x32>
     5f0:	6c 01       	movw	r12, r24
     5f2:	ea 2e       	mov	r14, r26
     5f4:	e7 2f       	mov	r30, r23
     5f6:	f6 2f       	mov	r31, r22
     5f8:	0e 94 2c 7c 	call	0xf858	; 0xf858 <__xload_1>
     5fc:	60 32       	cpi	r22, 0x20	; 32
     5fe:	79 f7       	brne	.-34     	; 0x5de <pgm_copystring+0xc>
     600:	41 50       	subi	r20, 0x01	; 1
     602:	ed cf       	rjmp	.-38     	; 0x5de <pgm_copystring+0xc>
     604:	f6 01       	movw	r30, r12
     606:	0e 94 2c 7c 	call	0xf858	; 0xf858 <__xload_1>
     60a:	6c 01       	movw	r12, r24
     60c:	ea 2e       	mov	r14, r26
     60e:	80 e0       	ldi	r24, 0x00	; 0
     610:	60 32       	cpi	r22, 0x20	; 32
     612:	39 f4       	brne	.+14     	; 0x622 <pgm_copystring+0x50>
     614:	f9 01       	movw	r30, r18
     616:	10 82       	st	Z, r1
     618:	0f 91       	pop	r16
     61a:	ef 90       	pop	r14
     61c:	df 90       	pop	r13
     61e:	cf 90       	pop	r12
     620:	08 95       	ret
     622:	80 17       	cp	r24, r16
     624:	b9 f3       	breq	.-18     	; 0x614 <pgm_copystring+0x42>
     626:	2f 5f       	subi	r18, 0xFF	; 255
     628:	3f 4f       	sbci	r19, 0xFF	; 255
     62a:	f9 01       	movw	r30, r18
     62c:	31 97       	sbiw	r30, 0x01	; 1
     62e:	60 83       	st	Z, r22
     630:	8f 5f       	subi	r24, 0xFF	; 255
     632:	f6 01       	movw	r30, r12
     634:	5e 2d       	mov	r21, r14
     636:	0e 94 2c 7c 	call	0xf858	; 0xf858 <__xload_1>
     63a:	9f ef       	ldi	r25, 0xFF	; 255
     63c:	c9 1a       	sub	r12, r25
     63e:	d9 0a       	sbc	r13, r25
     640:	e9 0a       	sbc	r14, r25
     642:	e6 cf       	rjmp	.-52     	; 0x610 <pgm_copystring+0x3e>

00000644 <strftime>:
     644:	2f 92       	push	r2
     646:	3f 92       	push	r3
     648:	4f 92       	push	r4
     64a:	5f 92       	push	r5
     64c:	6f 92       	push	r6
     64e:	7f 92       	push	r7
     650:	8f 92       	push	r8
     652:	9f 92       	push	r9
     654:	af 92       	push	r10
     656:	bf 92       	push	r11
     658:	cf 92       	push	r12
     65a:	df 92       	push	r13
     65c:	ef 92       	push	r14
     65e:	ff 92       	push	r15
     660:	0f 93       	push	r16
     662:	1f 93       	push	r17
     664:	cf 93       	push	r28
     666:	df 93       	push	r29
     668:	cd b7       	in	r28, 0x3d	; 61
     66a:	de b7       	in	r29, 0x3e	; 62
     66c:	a2 97       	sbiw	r28, 0x22	; 34
     66e:	cd bf       	out	0x3d, r28	; 61
     670:	de bf       	out	0x3e, r29	; 62
     672:	2c 01       	movw	r4, r24
     674:	69 a3       	std	Y+33, r22	; 0x21
     676:	7a a3       	std	Y+34, r23	; 0x22
     678:	4a 01       	movw	r8, r20
     67a:	79 01       	movw	r14, r18
     67c:	61 2c       	mov	r6, r1
     67e:	71 2c       	mov	r7, r1
     680:	9e 01       	movw	r18, r28
     682:	2f 5f       	subi	r18, 0xFF	; 255
     684:	3f 4f       	sbci	r19, 0xFF	; 255
     686:	69 01       	movw	r12, r18
     688:	84 e6       	ldi	r24, 0x64	; 100
     68a:	28 2e       	mov	r2, r24
     68c:	31 2c       	mov	r3, r1
     68e:	90 ef       	ldi	r25, 0xF0	; 240
     690:	a9 2e       	mov	r10, r25
     692:	95 e4       	ldi	r25, 0x45	; 69
     694:	b9 2e       	mov	r11, r25
     696:	29 a1       	ldd	r18, Y+33	; 0x21
     698:	3a a1       	ldd	r19, Y+34	; 0x22
     69a:	62 16       	cp	r6, r18
     69c:	73 06       	cpc	r7, r19
     69e:	08 f0       	brcs	.+2      	; 0x6a2 <strftime+0x5e>
     6a0:	cd c2       	rjmp	.+1434   	; 0xc3c <strftime+0x5f8>
     6a2:	d4 01       	movw	r26, r8
     6a4:	8c 91       	ld	r24, X
     6a6:	85 32       	cpi	r24, 0x25	; 37
     6a8:	09 f0       	breq	.+2      	; 0x6ac <strftime+0x68>
     6aa:	bc c2       	rjmp	.+1400   	; 0xc24 <strftime+0x5e0>
     6ac:	11 96       	adiw	r26, 0x01	; 1
     6ae:	1c 91       	ld	r17, X
     6b0:	15 34       	cpi	r17, 0x45	; 69
     6b2:	31 f0       	breq	.+12     	; 0x6c0 <strftime+0x7c>
     6b4:	1f 34       	cpi	r17, 0x4F	; 79
     6b6:	21 f0       	breq	.+8      	; 0x6c0 <strftime+0x7c>
     6b8:	b2 e0       	ldi	r27, 0x02	; 2
     6ba:	8b 0e       	add	r8, r27
     6bc:	91 1c       	adc	r9, r1
     6be:	06 c0       	rjmp	.+12     	; 0x6cc <strftime+0x88>
     6c0:	f4 01       	movw	r30, r8
     6c2:	12 81       	ldd	r17, Z+2	; 0x02
     6c4:	94 01       	movw	r18, r8
     6c6:	2d 5f       	subi	r18, 0xFD	; 253
     6c8:	3f 4f       	sbci	r19, 0xFF	; 255
     6ca:	49 01       	movw	r8, r18
     6cc:	19 35       	cpi	r17, 0x59	; 89
     6ce:	09 f4       	brne	.+2      	; 0x6d2 <strftime+0x8e>
     6d0:	32 c2       	rjmp	.+1124   	; 0xb36 <strftime+0x4f2>
     6d2:	0c f0       	brlt	.+2      	; 0x6d6 <strftime+0x92>
     6d4:	60 c0       	rjmp	.+192    	; 0x796 <strftime+0x152>
     6d6:	19 34       	cpi	r17, 0x49	; 73
     6d8:	09 f4       	brne	.+2      	; 0x6dc <strftime+0x98>
     6da:	3f c1       	rjmp	.+638    	; 0x95a <strftime+0x316>
     6dc:	44 f5       	brge	.+80     	; 0x72e <strftime+0xea>
     6de:	13 34       	cpi	r17, 0x43	; 67
     6e0:	09 f4       	brne	.+2      	; 0x6e4 <strftime+0xa0>
     6e2:	e7 c0       	rjmp	.+462    	; 0x8b2 <strftime+0x26e>
     6e4:	54 f4       	brge	.+20     	; 0x6fa <strftime+0xb6>
     6e6:	11 34       	cpi	r17, 0x41	; 65
     6e8:	09 f4       	brne	.+2      	; 0x6ec <strftime+0xa8>
     6ea:	be c0       	rjmp	.+380    	; 0x868 <strftime+0x224>
     6ec:	0c f0       	brlt	.+2      	; 0x6f0 <strftime+0xac>
     6ee:	ca c0       	rjmp	.+404    	; 0x884 <strftime+0x240>
     6f0:	15 32       	cpi	r17, 0x25	; 37
     6f2:	09 f0       	breq	.+2      	; 0x6f6 <strftime+0xb2>
     6f4:	74 c2       	rjmp	.+1256   	; 0xbde <strftime+0x59a>
     6f6:	19 83       	std	Y+1, r17	; 0x01
     6f8:	75 c2       	rjmp	.+1258   	; 0xbe4 <strftime+0x5a0>
     6fa:	16 34       	cpi	r17, 0x46	; 70
     6fc:	09 f4       	brne	.+2      	; 0x700 <strftime+0xbc>
     6fe:	ea c0       	rjmp	.+468    	; 0x8d4 <strftime+0x290>
     700:	64 f4       	brge	.+24     	; 0x71a <strftime+0xd6>
     702:	14 34       	cpi	r17, 0x44	; 68
     704:	09 f0       	breq	.+2      	; 0x708 <strftime+0xc4>
     706:	6b c2       	rjmp	.+1238   	; 0xbde <strftime+0x59a>
     708:	f7 01       	movw	r30, r14
     70a:	86 81       	ldd	r24, Z+6	; 0x06
     70c:	97 81       	ldd	r25, Z+7	; 0x07
     70e:	b1 01       	movw	r22, r2
     710:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     714:	9f 93       	push	r25
     716:	8f 93       	push	r24
     718:	e7 c1       	rjmp	.+974    	; 0xae8 <strftime+0x4a4>
     71a:	17 34       	cpi	r17, 0x47	; 71
     71c:	09 f4       	brne	.+2      	; 0x720 <strftime+0xdc>
     71e:	f8 c0       	rjmp	.+496    	; 0x910 <strftime+0x2cc>
     720:	18 34       	cpi	r17, 0x48	; 72
     722:	09 f0       	breq	.+2      	; 0x726 <strftime+0xe2>
     724:	5c c2       	rjmp	.+1208   	; 0xbde <strftime+0x59a>
     726:	d7 01       	movw	r26, r14
     728:	12 96       	adiw	r26, 0x02	; 2
     72a:	8c 91       	ld	r24, X
     72c:	30 c1       	rjmp	.+608    	; 0x98e <strftime+0x34a>
     72e:	14 35       	cpi	r17, 0x54	; 84
     730:	09 f4       	brne	.+2      	; 0x734 <strftime+0xf0>
     732:	89 c1       	rjmp	.+786    	; 0xa46 <strftime+0x402>
     734:	64 f4       	brge	.+24     	; 0x74e <strftime+0x10a>
     736:	12 35       	cpi	r17, 0x52	; 82
     738:	09 f4       	brne	.+2      	; 0x73c <strftime+0xf8>
     73a:	6e c1       	rjmp	.+732    	; 0xa18 <strftime+0x3d4>
     73c:	0c f0       	brlt	.+2      	; 0x740 <strftime+0xfc>
     73e:	25 c1       	rjmp	.+586    	; 0x98a <strftime+0x346>
     740:	1d 34       	cpi	r17, 0x4D	; 77
     742:	09 f0       	breq	.+2      	; 0x746 <strftime+0x102>
     744:	4c c2       	rjmp	.+1176   	; 0xbde <strftime+0x59a>
     746:	d7 01       	movw	r26, r14
     748:	11 96       	adiw	r26, 0x01	; 1
     74a:	8c 91       	ld	r24, X
     74c:	20 c1       	rjmp	.+576    	; 0x98e <strftime+0x34a>
     74e:	16 35       	cpi	r17, 0x56	; 86
     750:	09 f4       	brne	.+2      	; 0x754 <strftime+0x110>
     752:	a5 c1       	rjmp	.+842    	; 0xa9e <strftime+0x45a>
     754:	0c f4       	brge	.+2      	; 0x758 <strftime+0x114>
     756:	a1 c1       	rjmp	.+834    	; 0xa9a <strftime+0x456>
     758:	17 35       	cpi	r17, 0x57	; 87
     75a:	09 f4       	brne	.+2      	; 0x75e <strftime+0x11a>
     75c:	b4 c1       	rjmp	.+872    	; 0xac6 <strftime+0x482>
     75e:	18 35       	cpi	r17, 0x58	; 88
     760:	09 f0       	breq	.+2      	; 0x764 <strftime+0x120>
     762:	3d c2       	rjmp	.+1146   	; 0xbde <strftime+0x59a>
     764:	f7 01       	movw	r30, r14
     766:	80 81       	ld	r24, Z
     768:	28 2f       	mov	r18, r24
     76a:	08 2e       	mov	r0, r24
     76c:	00 0c       	add	r0, r0
     76e:	33 0b       	sbc	r19, r19
     770:	3f 93       	push	r19
     772:	8f 93       	push	r24
     774:	81 81       	ldd	r24, Z+1	; 0x01
     776:	28 2f       	mov	r18, r24
     778:	08 2e       	mov	r0, r24
     77a:	00 0c       	add	r0, r0
     77c:	33 0b       	sbc	r19, r19
     77e:	3f 93       	push	r19
     780:	8f 93       	push	r24
     782:	82 81       	ldd	r24, Z+2	; 0x02
     784:	28 2f       	mov	r18, r24
     786:	08 2e       	mov	r0, r24
     788:	00 0c       	add	r0, r0
     78a:	33 0b       	sbc	r19, r19
     78c:	3f 93       	push	r19
     78e:	8f 93       	push	r24
     790:	88 e3       	ldi	r24, 0x38	; 56
     792:	96 e4       	ldi	r25, 0x46	; 70
     794:	c0 c1       	rjmp	.+896    	; 0xb16 <strftime+0x4d2>
     796:	1d 36       	cpi	r17, 0x6D	; 109
     798:	09 f4       	brne	.+2      	; 0x79c <strftime+0x158>
     79a:	f0 c0       	rjmp	.+480    	; 0x97c <strftime+0x338>
     79c:	ac f5       	brge	.+106    	; 0x808 <strftime+0x1c4>
     79e:	14 36       	cpi	r17, 0x64	; 100
     7a0:	09 f4       	brne	.+2      	; 0x7a4 <strftime+0x160>
     7a2:	94 c0       	rjmp	.+296    	; 0x8cc <strftime+0x288>
     7a4:	74 f4       	brge	.+28     	; 0x7c2 <strftime+0x17e>
     7a6:	12 36       	cpi	r17, 0x62	; 98
     7a8:	09 f4       	brne	.+2      	; 0x7ac <strftime+0x168>
     7aa:	66 c0       	rjmp	.+204    	; 0x878 <strftime+0x234>
     7ac:	0c f0       	brlt	.+2      	; 0x7b0 <strftime+0x16c>
     7ae:	75 c0       	rjmp	.+234    	; 0x89a <strftime+0x256>
     7b0:	11 36       	cpi	r17, 0x61	; 97
     7b2:	09 f0       	breq	.+2      	; 0x7b6 <strftime+0x172>
     7b4:	14 c2       	rjmp	.+1064   	; 0xbde <strftime+0x59a>
     7b6:	03 e0       	ldi	r16, 0x03	; 3
     7b8:	96 01       	movw	r18, r12
     7ba:	d7 01       	movw	r26, r14
     7bc:	14 96       	adiw	r26, 0x04	; 4
     7be:	4c 91       	ld	r20, X
     7c0:	57 c0       	rjmp	.+174    	; 0x870 <strftime+0x22c>
     7c2:	17 36       	cpi	r17, 0x67	; 103
     7c4:	09 f4       	brne	.+2      	; 0x7c8 <strftime+0x184>
     7c6:	a4 c0       	rjmp	.+328    	; 0x910 <strftime+0x2cc>
     7c8:	74 f4       	brge	.+28     	; 0x7e6 <strftime+0x1a2>
     7ca:	15 36       	cpi	r17, 0x65	; 101
     7cc:	09 f0       	breq	.+2      	; 0x7d0 <strftime+0x18c>
     7ce:	07 c2       	rjmp	.+1038   	; 0xbde <strftime+0x59a>
     7d0:	f7 01       	movw	r30, r14
     7d2:	83 81       	ldd	r24, Z+3	; 0x03
     7d4:	28 2f       	mov	r18, r24
     7d6:	08 2e       	mov	r0, r24
     7d8:	00 0c       	add	r0, r0
     7da:	33 0b       	sbc	r19, r19
     7dc:	3f 93       	push	r19
     7de:	8f 93       	push	r24
     7e0:	85 ef       	ldi	r24, 0xF5	; 245
     7e2:	95 e4       	ldi	r25, 0x45	; 69
     7e4:	c8 c0       	rjmp	.+400    	; 0x976 <strftime+0x332>
     7e6:	18 36       	cpi	r17, 0x68	; 104
     7e8:	09 f4       	brne	.+2      	; 0x7ec <strftime+0x1a8>
     7ea:	46 c0       	rjmp	.+140    	; 0x878 <strftime+0x234>
     7ec:	1a 36       	cpi	r17, 0x6A	; 106
     7ee:	09 f0       	breq	.+2      	; 0x7f2 <strftime+0x1ae>
     7f0:	f6 c1       	rjmp	.+1004   	; 0xbde <strftime+0x59a>
     7f2:	d7 01       	movw	r26, r14
     7f4:	18 96       	adiw	r26, 0x08	; 8
     7f6:	8d 91       	ld	r24, X+
     7f8:	9c 91       	ld	r25, X
     7fa:	19 97       	sbiw	r26, 0x09	; 9
     7fc:	01 96       	adiw	r24, 0x01	; 1
     7fe:	9f 93       	push	r25
     800:	8f 93       	push	r24
     802:	8b e0       	ldi	r24, 0x0B	; 11
     804:	96 e4       	ldi	r25, 0x46	; 70
     806:	b7 c0       	rjmp	.+366    	; 0x976 <strftime+0x332>
     808:	15 37       	cpi	r17, 0x75	; 117
     80a:	09 f4       	brne	.+2      	; 0x80e <strftime+0x1ca>
     80c:	35 c1       	rjmp	.+618    	; 0xa78 <strftime+0x434>
     80e:	b4 f4       	brge	.+44     	; 0x83c <strftime+0x1f8>
     810:	10 37       	cpi	r17, 0x70	; 112
     812:	09 f4       	brne	.+2      	; 0x816 <strftime+0x1d2>
     814:	c2 c0       	rjmp	.+388    	; 0x99a <strftime+0x356>
     816:	34 f4       	brge	.+12     	; 0x824 <strftime+0x1e0>
     818:	1e 36       	cpi	r17, 0x6E	; 110
     81a:	09 f0       	breq	.+2      	; 0x81e <strftime+0x1da>
     81c:	e0 c1       	rjmp	.+960    	; 0xbde <strftime+0x59a>
     81e:	8a e0       	ldi	r24, 0x0A	; 10
     820:	89 83       	std	Y+1, r24	; 0x01
     822:	e0 c1       	rjmp	.+960    	; 0xbe4 <strftime+0x5a0>
     824:	12 37       	cpi	r17, 0x72	; 114
     826:	09 f4       	brne	.+2      	; 0x82a <strftime+0x1e6>
     828:	c6 c0       	rjmp	.+396    	; 0x9b6 <strftime+0x372>
     82a:	14 37       	cpi	r17, 0x74	; 116
     82c:	09 f0       	breq	.+2      	; 0x830 <strftime+0x1ec>
     82e:	d7 c1       	rjmp	.+942    	; 0xbde <strftime+0x59a>
     830:	61 e2       	ldi	r22, 0x21	; 33
     832:	76 e4       	ldi	r23, 0x46	; 70
     834:	c6 01       	movw	r24, r12
     836:	0e 94 28 75 	call	0xea50	; 0xea50 <strcpy>
     83a:	d4 c1       	rjmp	.+936    	; 0xbe4 <strftime+0x5a0>
     83c:	18 37       	cpi	r17, 0x78	; 120
     83e:	09 f4       	brne	.+2      	; 0x842 <strftime+0x1fe>
     840:	48 c1       	rjmp	.+656    	; 0xad2 <strftime+0x48e>
     842:	5c f4       	brge	.+22     	; 0x85a <strftime+0x216>
     844:	17 37       	cpi	r17, 0x77	; 119
     846:	09 f0       	breq	.+2      	; 0x84a <strftime+0x206>
     848:	ca c1       	rjmp	.+916    	; 0xbde <strftime+0x59a>
     84a:	f7 01       	movw	r30, r14
     84c:	84 81       	ldd	r24, Z+4	; 0x04
     84e:	28 2f       	mov	r18, r24
     850:	08 2e       	mov	r0, r24
     852:	00 0c       	add	r0, r0
     854:	33 0b       	sbc	r19, r19
     856:	3f 93       	push	r19
     858:	74 c1       	rjmp	.+744    	; 0xb42 <strftime+0x4fe>
     85a:	19 37       	cpi	r17, 0x79	; 121
     85c:	09 f4       	brne	.+2      	; 0x860 <strftime+0x21c>
     85e:	5e c1       	rjmp	.+700    	; 0xb1c <strftime+0x4d8>
     860:	1a 37       	cpi	r17, 0x7A	; 122
     862:	09 f4       	brne	.+2      	; 0x866 <strftime+0x222>
     864:	7e c1       	rjmp	.+764    	; 0xb62 <strftime+0x51e>
     866:	bb c1       	rjmp	.+886    	; 0xbde <strftime+0x59a>
     868:	0f ef       	ldi	r16, 0xFF	; 255
     86a:	96 01       	movw	r18, r12
     86c:	f7 01       	movw	r30, r14
     86e:	44 81       	ldd	r20, Z+4	; 0x04
     870:	64 ef       	ldi	r22, 0xF4	; 244
     872:	73 e0       	ldi	r23, 0x03	; 3
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	0d c0       	rjmp	.+26     	; 0x892 <strftime+0x24e>
     878:	03 e0       	ldi	r16, 0x03	; 3
     87a:	96 01       	movw	r18, r12
     87c:	d7 01       	movw	r26, r14
     87e:	15 96       	adiw	r26, 0x05	; 5
     880:	4c 91       	ld	r20, X
     882:	04 c0       	rjmp	.+8      	; 0x88c <strftime+0x248>
     884:	0f ef       	ldi	r16, 0xFF	; 255
     886:	96 01       	movw	r18, r12
     888:	f7 01       	movw	r30, r14
     88a:	45 81       	ldd	r20, Z+5	; 0x05
     88c:	6d e9       	ldi	r22, 0x9D	; 157
     88e:	73 e0       	ldi	r23, 0x03	; 3
     890:	80 e0       	ldi	r24, 0x00	; 0
     892:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <pgm_copystring>
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	a7 c1       	rjmp	.+846    	; 0xbe8 <strftime+0x5a4>
     89a:	b6 01       	movw	r22, r12
     89c:	c7 01       	movw	r24, r14
     89e:	0e 94 85 06 	call	0xd0a	; 0xd0a <asctime_r>
     8a2:	f6 01       	movw	r30, r12
     8a4:	cf 01       	movw	r24, r30
     8a6:	8c 19       	sub	r24, r12
     8a8:	9d 09       	sbc	r25, r13
     8aa:	21 91       	ld	r18, Z+
     8ac:	21 11       	cpse	r18, r1
     8ae:	fa cf       	rjmp	.-12     	; 0x8a4 <strftime+0x260>
     8b0:	9b c1       	rjmp	.+822    	; 0xbe8 <strftime+0x5a4>
     8b2:	d7 01       	movw	r26, r14
     8b4:	16 96       	adiw	r26, 0x06	; 6
     8b6:	8d 91       	ld	r24, X+
     8b8:	9c 91       	ld	r25, X
     8ba:	17 97       	sbiw	r26, 0x07	; 7
     8bc:	84 59       	subi	r24, 0x94	; 148
     8be:	98 4f       	sbci	r25, 0xF8	; 248
     8c0:	b1 01       	movw	r22, r2
     8c2:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     8c6:	7f 93       	push	r23
     8c8:	6f 93       	push	r22
     8ca:	3b c0       	rjmp	.+118    	; 0x942 <strftime+0x2fe>
     8cc:	d7 01       	movw	r26, r14
     8ce:	13 96       	adiw	r26, 0x03	; 3
     8d0:	8c 91       	ld	r24, X
     8d2:	5d c0       	rjmp	.+186    	; 0x98e <strftime+0x34a>
     8d4:	d7 01       	movw	r26, r14
     8d6:	13 96       	adiw	r26, 0x03	; 3
     8d8:	8c 91       	ld	r24, X
     8da:	13 97       	sbiw	r26, 0x03	; 3
     8dc:	28 2f       	mov	r18, r24
     8de:	08 2e       	mov	r0, r24
     8e0:	00 0c       	add	r0, r0
     8e2:	33 0b       	sbc	r19, r19
     8e4:	3f 93       	push	r19
     8e6:	8f 93       	push	r24
     8e8:	15 96       	adiw	r26, 0x05	; 5
     8ea:	8c 91       	ld	r24, X
     8ec:	15 97       	sbiw	r26, 0x05	; 5
     8ee:	08 2e       	mov	r0, r24
     8f0:	00 0c       	add	r0, r0
     8f2:	99 0b       	sbc	r25, r25
     8f4:	01 96       	adiw	r24, 0x01	; 1
     8f6:	9f 93       	push	r25
     8f8:	8f 93       	push	r24
     8fa:	16 96       	adiw	r26, 0x06	; 6
     8fc:	8d 91       	ld	r24, X+
     8fe:	9c 91       	ld	r25, X
     900:	17 97       	sbiw	r26, 0x07	; 7
     902:	84 59       	subi	r24, 0x94	; 148
     904:	98 4f       	sbci	r25, 0xF8	; 248
     906:	9f 93       	push	r25
     908:	8f 93       	push	r24
     90a:	89 ef       	ldi	r24, 0xF9	; 249
     90c:	95 e4       	ldi	r25, 0x45	; 69
     90e:	03 c1       	rjmp	.+518    	; 0xb16 <strftime+0x4d2>
     910:	d7 01       	movw	r26, r14
     912:	18 96       	adiw	r26, 0x08	; 8
     914:	6d 91       	ld	r22, X+
     916:	7c 91       	ld	r23, X
     918:	19 97       	sbiw	r26, 0x09	; 9
     91a:	16 96       	adiw	r26, 0x06	; 6
     91c:	8d 91       	ld	r24, X+
     91e:	9c 91       	ld	r25, X
     920:	17 97       	sbiw	r26, 0x07	; 7
     922:	ae 01       	movw	r20, r28
     924:	45 5e       	subi	r20, 0xE5	; 229
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	84 59       	subi	r24, 0x94	; 148
     92a:	98 4f       	sbci	r25, 0xF8	; 248
     92c:	0e 94 de 07 	call	0xfbc	; 0xfbc <iso_week_date_r>
     930:	17 36       	cpi	r17, 0x67	; 103
     932:	51 f4       	brne	.+20     	; 0x948 <strftime+0x304>
     934:	8b 8d       	ldd	r24, Y+27	; 0x1b
     936:	9c 8d       	ldd	r25, Y+28	; 0x1c
     938:	b1 01       	movw	r22, r2
     93a:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     93e:	9f 93       	push	r25
     940:	8f 93       	push	r24
     942:	e1 e0       	ldi	r30, 0x01	; 1
     944:	f6 e4       	ldi	r31, 0x46	; 70
     946:	a6 c0       	rjmp	.+332    	; 0xa94 <strftime+0x450>
     948:	8c 8d       	ldd	r24, Y+28	; 0x1c
     94a:	8f 93       	push	r24
     94c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     94e:	8f 93       	push	r24
     950:	46 e0       	ldi	r20, 0x06	; 6
     952:	56 e4       	ldi	r21, 0x46	; 70
     954:	5f 93       	push	r21
     956:	4f 93       	push	r20
     958:	f9 c0       	rjmp	.+498    	; 0xb4c <strftime+0x508>
     95a:	f7 01       	movw	r30, r14
     95c:	82 81       	ldd	r24, Z+2	; 0x02
     95e:	6c e0       	ldi	r22, 0x0C	; 12
     960:	0e 94 1e 7c 	call	0xf83c	; 0xf83c <__divmodqi4>
     964:	99 23       	and	r25, r25
     966:	21 f0       	breq	.+8      	; 0x970 <strftime+0x32c>
     968:	89 2f       	mov	r24, r25
     96a:	99 0f       	add	r25, r25
     96c:	99 0b       	sbc	r25, r25
     96e:	de c0       	rjmp	.+444    	; 0xb2c <strftime+0x4e8>
     970:	8c e0       	ldi	r24, 0x0C	; 12
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	db c0       	rjmp	.+438    	; 0xb2c <strftime+0x4e8>
     976:	9f 93       	push	r25
     978:	8f 93       	push	r24
     97a:	e8 c0       	rjmp	.+464    	; 0xb4c <strftime+0x508>
     97c:	f7 01       	movw	r30, r14
     97e:	85 81       	ldd	r24, Z+5	; 0x05
     980:	08 2e       	mov	r0, r24
     982:	00 0c       	add	r0, r0
     984:	99 0b       	sbc	r25, r25
     986:	01 96       	adiw	r24, 0x01	; 1
     988:	d1 c0       	rjmp	.+418    	; 0xb2c <strftime+0x4e8>
     98a:	d7 01       	movw	r26, r14
     98c:	8c 91       	ld	r24, X
     98e:	28 2f       	mov	r18, r24
     990:	08 2e       	mov	r0, r24
     992:	00 0c       	add	r0, r0
     994:	33 0b       	sbc	r19, r19
     996:	3f 93       	push	r19
     998:	ca c0       	rjmp	.+404    	; 0xb2e <strftime+0x4ea>
     99a:	81 e4       	ldi	r24, 0x41	; 65
     99c:	89 83       	std	Y+1, r24	; 0x01
     99e:	f7 01       	movw	r30, r14
     9a0:	82 81       	ldd	r24, Z+2	; 0x02
     9a2:	8c 30       	cpi	r24, 0x0C	; 12
     9a4:	14 f0       	brlt	.+4      	; 0x9aa <strftime+0x366>
     9a6:	80 e5       	ldi	r24, 0x50	; 80
     9a8:	89 83       	std	Y+1, r24	; 0x01
     9aa:	8d e4       	ldi	r24, 0x4D	; 77
     9ac:	8a 83       	std	Y+2, r24	; 0x02
     9ae:	1b 82       	std	Y+3, r1	; 0x03
     9b0:	82 e0       	ldi	r24, 0x02	; 2
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	19 c1       	rjmp	.+562    	; 0xbe8 <strftime+0x5a4>
     9b6:	d7 01       	movw	r26, r14
     9b8:	12 96       	adiw	r26, 0x02	; 2
     9ba:	8c 91       	ld	r24, X
     9bc:	6c e0       	ldi	r22, 0x0C	; 12
     9be:	0e 94 1e 7c 	call	0xf83c	; 0xf83c <__divmodqi4>
     9c2:	99 23       	and	r25, r25
     9c4:	21 f0       	breq	.+8      	; 0x9ce <strftime+0x38a>
     9c6:	89 2f       	mov	r24, r25
     9c8:	99 0f       	add	r25, r25
     9ca:	99 0b       	sbc	r25, r25
     9cc:	02 c0       	rjmp	.+4      	; 0x9d2 <strftime+0x38e>
     9ce:	8c e0       	ldi	r24, 0x0C	; 12
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	f7 01       	movw	r30, r14
     9d4:	20 81       	ld	r18, Z
     9d6:	42 2f       	mov	r20, r18
     9d8:	02 2e       	mov	r0, r18
     9da:	00 0c       	add	r0, r0
     9dc:	55 0b       	sbc	r21, r21
     9de:	5f 93       	push	r21
     9e0:	2f 93       	push	r18
     9e2:	21 81       	ldd	r18, Z+1	; 0x01
     9e4:	42 2f       	mov	r20, r18
     9e6:	02 2e       	mov	r0, r18
     9e8:	00 0c       	add	r0, r0
     9ea:	55 0b       	sbc	r21, r21
     9ec:	5f 93       	push	r21
     9ee:	2f 93       	push	r18
     9f0:	9f 93       	push	r25
     9f2:	8f 93       	push	r24
     9f4:	20 e1       	ldi	r18, 0x10	; 16
     9f6:	36 e4       	ldi	r19, 0x46	; 70
     9f8:	3f 93       	push	r19
     9fa:	2f 93       	push	r18
     9fc:	df 92       	push	r13
     9fe:	cf 92       	push	r12
     a00:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
     a04:	cd bf       	out	0x3d, r28	; 61
     a06:	de bf       	out	0x3e, r29	; 62
     a08:	f7 01       	movw	r30, r14
     a0a:	22 81       	ldd	r18, Z+2	; 0x02
     a0c:	2c 30       	cpi	r18, 0x0C	; 12
     a0e:	0c f4       	brge	.+2      	; 0xa12 <strftime+0x3ce>
     a10:	eb c0       	rjmp	.+470    	; 0xbe8 <strftime+0x5a4>
     a12:	20 e5       	ldi	r18, 0x50	; 80
     a14:	2b 87       	std	Y+11, r18	; 0x0b
     a16:	e8 c0       	rjmp	.+464    	; 0xbe8 <strftime+0x5a4>
     a18:	d7 01       	movw	r26, r14
     a1a:	11 96       	adiw	r26, 0x01	; 1
     a1c:	8c 91       	ld	r24, X
     a1e:	11 97       	sbiw	r26, 0x01	; 1
     a20:	28 2f       	mov	r18, r24
     a22:	08 2e       	mov	r0, r24
     a24:	00 0c       	add	r0, r0
     a26:	33 0b       	sbc	r19, r19
     a28:	3f 93       	push	r19
     a2a:	8f 93       	push	r24
     a2c:	12 96       	adiw	r26, 0x02	; 2
     a2e:	8c 91       	ld	r24, X
     a30:	28 2f       	mov	r18, r24
     a32:	08 2e       	mov	r0, r24
     a34:	00 0c       	add	r0, r0
     a36:	33 0b       	sbc	r19, r19
     a38:	3f 93       	push	r19
     a3a:	8f 93       	push	r24
     a3c:	88 e2       	ldi	r24, 0x28	; 40
     a3e:	96 e4       	ldi	r25, 0x46	; 70
     a40:	9f 93       	push	r25
     a42:	8f 93       	push	r24
     a44:	c5 c0       	rjmp	.+394    	; 0xbd0 <strftime+0x58c>
     a46:	f7 01       	movw	r30, r14
     a48:	80 81       	ld	r24, Z
     a4a:	28 2f       	mov	r18, r24
     a4c:	08 2e       	mov	r0, r24
     a4e:	00 0c       	add	r0, r0
     a50:	33 0b       	sbc	r19, r19
     a52:	3f 93       	push	r19
     a54:	8f 93       	push	r24
     a56:	81 81       	ldd	r24, Z+1	; 0x01
     a58:	28 2f       	mov	r18, r24
     a5a:	08 2e       	mov	r0, r24
     a5c:	00 0c       	add	r0, r0
     a5e:	33 0b       	sbc	r19, r19
     a60:	3f 93       	push	r19
     a62:	8f 93       	push	r24
     a64:	82 81       	ldd	r24, Z+2	; 0x02
     a66:	28 2f       	mov	r18, r24
     a68:	08 2e       	mov	r0, r24
     a6a:	00 0c       	add	r0, r0
     a6c:	33 0b       	sbc	r19, r19
     a6e:	3f 93       	push	r19
     a70:	8f 93       	push	r24
     a72:	83 e2       	ldi	r24, 0x23	; 35
     a74:	96 e4       	ldi	r25, 0x46	; 70
     a76:	4f c0       	rjmp	.+158    	; 0xb16 <strftime+0x4d2>
     a78:	d7 01       	movw	r26, r14
     a7a:	14 96       	adiw	r26, 0x04	; 4
     a7c:	8c 91       	ld	r24, X
     a7e:	08 2e       	mov	r0, r24
     a80:	00 0c       	add	r0, r0
     a82:	99 0b       	sbc	r25, r25
     a84:	00 97       	sbiw	r24, 0x00	; 0
     a86:	11 f4       	brne	.+4      	; 0xa8c <strftime+0x448>
     a88:	87 e0       	ldi	r24, 0x07	; 7
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	9f 93       	push	r25
     a8e:	8f 93       	push	r24
     a90:	e2 e3       	ldi	r30, 0x32	; 50
     a92:	f6 e4       	ldi	r31, 0x46	; 70
     a94:	ff 93       	push	r31
     a96:	ef 93       	push	r30
     a98:	59 c0       	rjmp	.+178    	; 0xb4c <strftime+0x508>
     a9a:	60 e0       	ldi	r22, 0x00	; 0
     a9c:	15 c0       	rjmp	.+42     	; 0xac8 <strftime+0x484>
     a9e:	d7 01       	movw	r26, r14
     aa0:	18 96       	adiw	r26, 0x08	; 8
     aa2:	6d 91       	ld	r22, X+
     aa4:	7c 91       	ld	r23, X
     aa6:	19 97       	sbiw	r26, 0x09	; 9
     aa8:	16 96       	adiw	r26, 0x06	; 6
     aaa:	8d 91       	ld	r24, X+
     aac:	9c 91       	ld	r25, X
     aae:	17 97       	sbiw	r26, 0x07	; 7
     ab0:	ae 01       	movw	r20, r28
     ab2:	45 5e       	subi	r20, 0xE5	; 229
     ab4:	5f 4f       	sbci	r21, 0xFF	; 255
     ab6:	84 59       	subi	r24, 0x94	; 148
     ab8:	98 4f       	sbci	r25, 0xF8	; 248
     aba:	0e 94 de 07 	call	0xfbc	; 0xfbc <iso_week_date_r>
     abe:	8e 8d       	ldd	r24, Y+30	; 0x1e
     ac0:	8f 93       	push	r24
     ac2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ac4:	34 c0       	rjmp	.+104    	; 0xb2e <strftime+0x4ea>
     ac6:	61 e0       	ldi	r22, 0x01	; 1
     ac8:	c7 01       	movw	r24, r14
     aca:	0e 94 4a 06 	call	0xc94	; 0xc94 <week_of_year>
     ace:	1f 92       	push	r1
     ad0:	2e c0       	rjmp	.+92     	; 0xb2e <strftime+0x4ea>
     ad2:	d7 01       	movw	r26, r14
     ad4:	16 96       	adiw	r26, 0x06	; 6
     ad6:	8d 91       	ld	r24, X+
     ad8:	9c 91       	ld	r25, X
     ada:	17 97       	sbiw	r26, 0x07	; 7
     adc:	b1 01       	movw	r22, r2
     ade:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     ae2:	9f 93       	push	r25
     ae4:	8f 93       	push	r24
     ae6:	f7 01       	movw	r30, r14
     ae8:	83 81       	ldd	r24, Z+3	; 0x03
     aea:	28 2f       	mov	r18, r24
     aec:	08 2e       	mov	r0, r24
     aee:	00 0c       	add	r0, r0
     af0:	33 0b       	sbc	r19, r19
     af2:	3f 93       	push	r19
     af4:	8f 93       	push	r24
     af6:	85 81       	ldd	r24, Z+5	; 0x05
     af8:	08 2e       	mov	r0, r24
     afa:	00 0c       	add	r0, r0
     afc:	99 0b       	sbc	r25, r25
     afe:	01 96       	adiw	r24, 0x01	; 1
     b00:	9f 93       	push	r25
     b02:	8f 93       	push	r24
     b04:	26 ee       	ldi	r18, 0xE6	; 230
     b06:	35 e4       	ldi	r19, 0x45	; 69
     b08:	3f 93       	push	r19
     b0a:	2f 93       	push	r18
     b0c:	df 92       	push	r13
     b0e:	cf 92       	push	r12
     b10:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
     b14:	61 c0       	rjmp	.+194    	; 0xbd8 <strftime+0x594>
     b16:	9f 93       	push	r25
     b18:	8f 93       	push	r24
     b1a:	f8 cf       	rjmp	.-16     	; 0xb0c <strftime+0x4c8>
     b1c:	d7 01       	movw	r26, r14
     b1e:	16 96       	adiw	r26, 0x06	; 6
     b20:	8d 91       	ld	r24, X+
     b22:	9c 91       	ld	r25, X
     b24:	17 97       	sbiw	r26, 0x07	; 7
     b26:	b1 01       	movw	r22, r2
     b28:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     b2c:	9f 93       	push	r25
     b2e:	8f 93       	push	r24
     b30:	bf 92       	push	r11
     b32:	af 92       	push	r10
     b34:	0b c0       	rjmp	.+22     	; 0xb4c <strftime+0x508>
     b36:	f7 01       	movw	r30, r14
     b38:	86 81       	ldd	r24, Z+6	; 0x06
     b3a:	97 81       	ldd	r25, Z+7	; 0x07
     b3c:	84 59       	subi	r24, 0x94	; 148
     b3e:	98 4f       	sbci	r25, 0xF8	; 248
     b40:	9f 93       	push	r25
     b42:	8f 93       	push	r24
     b44:	25 e3       	ldi	r18, 0x35	; 53
     b46:	36 e4       	ldi	r19, 0x46	; 70
     b48:	3f 93       	push	r19
     b4a:	2f 93       	push	r18
     b4c:	df 92       	push	r13
     b4e:	cf 92       	push	r12
     b50:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
     b54:	0f 90       	pop	r0
     b56:	0f 90       	pop	r0
     b58:	0f 90       	pop	r0
     b5a:	0f 90       	pop	r0
     b5c:	0f 90       	pop	r0
     b5e:	0f 90       	pop	r0
     b60:	43 c0       	rjmp	.+134    	; 0xbe8 <strftime+0x5a4>
     b62:	60 91 ae 4a 	lds	r22, 0x4AAE	; 0x804aae <__utc_offset>
     b66:	70 91 af 4a 	lds	r23, 0x4AAF	; 0x804aaf <__utc_offset+0x1>
     b6a:	80 91 b0 4a 	lds	r24, 0x4AB0	; 0x804ab0 <__utc_offset+0x2>
     b6e:	90 91 b1 4a 	lds	r25, 0x4AB1	; 0x804ab1 <__utc_offset+0x3>
     b72:	2c e3       	ldi	r18, 0x3C	; 60
     b74:	30 e0       	ldi	r19, 0x00	; 0
     b76:	40 e0       	ldi	r20, 0x00	; 0
     b78:	50 e0       	ldi	r21, 0x00	; 0
     b7a:	0e 94 2e 73 	call	0xe65c	; 0xe65c <__divmodsi4>
     b7e:	89 01       	movw	r16, r18
     b80:	9a 01       	movw	r18, r20
     b82:	f8 01       	movw	r30, r16
     b84:	d7 01       	movw	r26, r14
     b86:	1a 96       	adiw	r26, 0x0a	; 10
     b88:	8d 91       	ld	r24, X+
     b8a:	9c 91       	ld	r25, X
     b8c:	1b 97       	sbiw	r26, 0x0b	; 11
     b8e:	6c e3       	ldi	r22, 0x3C	; 60
     b90:	70 e0       	ldi	r23, 0x00	; 0
     b92:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     b96:	16 16       	cp	r1, r22
     b98:	17 06       	cpc	r1, r23
     b9a:	1c f4       	brge	.+6      	; 0xba2 <strftime+0x55e>
     b9c:	fb 01       	movw	r30, r22
     b9e:	e0 0f       	add	r30, r16
     ba0:	f1 1f       	adc	r31, r17
     ba2:	cf 01       	movw	r24, r30
     ba4:	6c e3       	ldi	r22, 0x3C	; 60
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     bac:	97 ff       	sbrs	r25, 7
     bae:	03 c0       	rjmp	.+6      	; 0xbb6 <strftime+0x572>
     bb0:	91 95       	neg	r25
     bb2:	81 95       	neg	r24
     bb4:	91 09       	sbc	r25, r1
     bb6:	9f 93       	push	r25
     bb8:	8f 93       	push	r24
     bba:	cf 01       	movw	r24, r30
     bbc:	6c e3       	ldi	r22, 0x3C	; 60
     bbe:	70 e0       	ldi	r23, 0x00	; 0
     bc0:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     bc4:	7f 93       	push	r23
     bc6:	6f 93       	push	r22
     bc8:	e7 e4       	ldi	r30, 0x47	; 71
     bca:	f6 e4       	ldi	r31, 0x46	; 70
     bcc:	ff 93       	push	r31
     bce:	ef 93       	push	r30
     bd0:	df 92       	push	r13
     bd2:	cf 92       	push	r12
     bd4:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
     bd8:	cd bf       	out	0x3d, r28	; 61
     bda:	de bf       	out	0x3e, r29	; 62
     bdc:	05 c0       	rjmp	.+10     	; 0xbe8 <strftime+0x5a4>
     bde:	8f e3       	ldi	r24, 0x3F	; 63
     be0:	89 83       	std	Y+1, r24	; 0x01
     be2:	1a 82       	std	Y+2, r1	; 0x02
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	93 01       	movw	r18, r6
     bea:	28 0f       	add	r18, r24
     bec:	39 1f       	adc	r19, r25
     bee:	a9 a1       	ldd	r26, Y+33	; 0x21
     bf0:	ba a1       	ldd	r27, Y+34	; 0x22
     bf2:	2a 17       	cp	r18, r26
     bf4:	3b 07       	cpc	r19, r27
     bf6:	98 f4       	brcc	.+38     	; 0xc1e <strftime+0x5da>
     bf8:	d2 01       	movw	r26, r4
     bfa:	f6 01       	movw	r30, r12
     bfc:	af 01       	movw	r20, r30
     bfe:	4c 19       	sub	r20, r12
     c00:	5d 09       	sbc	r21, r13
     c02:	48 17       	cp	r20, r24
     c04:	59 07       	cpc	r21, r25
     c06:	1c f4       	brge	.+6      	; 0xc0e <strftime+0x5ca>
     c08:	41 91       	ld	r20, Z+
     c0a:	4d 93       	st	X+, r20
     c0c:	f7 cf       	rjmp	.-18     	; 0xbfc <strftime+0x5b8>
     c0e:	97 ff       	sbrs	r25, 7
     c10:	02 c0       	rjmp	.+4      	; 0xc16 <strftime+0x5d2>
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	48 0e       	add	r4, r24
     c18:	59 1e       	adc	r5, r25
     c1a:	39 01       	movw	r6, r18
     c1c:	3c cd       	rjmp	.-1416   	; 0x696 <strftime+0x52>
     c1e:	f2 01       	movw	r30, r4
     c20:	10 82       	st	Z, r1
     c22:	0e c0       	rjmp	.+28     	; 0xc40 <strftime+0x5fc>
     c24:	d2 01       	movw	r26, r4
     c26:	8d 93       	st	X+, r24
     c28:	2d 01       	movw	r4, r26
     c2a:	bf ef       	ldi	r27, 0xFF	; 255
     c2c:	6b 1a       	sub	r6, r27
     c2e:	7b 0a       	sbc	r7, r27
     c30:	88 23       	and	r24, r24
     c32:	31 f0       	breq	.+12     	; 0xc40 <strftime+0x5fc>
     c34:	ef ef       	ldi	r30, 0xFF	; 255
     c36:	8e 1a       	sub	r8, r30
     c38:	9e 0a       	sbc	r9, r30
     c3a:	2d cd       	rjmp	.-1446   	; 0x696 <strftime+0x52>
     c3c:	d2 01       	movw	r26, r4
     c3e:	1c 92       	st	X, r1
     c40:	c3 01       	movw	r24, r6
     c42:	a2 96       	adiw	r28, 0x22	; 34
     c44:	cd bf       	out	0x3d, r28	; 61
     c46:	de bf       	out	0x3e, r29	; 62
     c48:	df 91       	pop	r29
     c4a:	cf 91       	pop	r28
     c4c:	1f 91       	pop	r17
     c4e:	0f 91       	pop	r16
     c50:	ff 90       	pop	r15
     c52:	ef 90       	pop	r14
     c54:	df 90       	pop	r13
     c56:	cf 90       	pop	r12
     c58:	bf 90       	pop	r11
     c5a:	af 90       	pop	r10
     c5c:	9f 90       	pop	r9
     c5e:	8f 90       	pop	r8
     c60:	7f 90       	pop	r7
     c62:	6f 90       	pop	r6
     c64:	5f 90       	pop	r5
     c66:	4f 90       	pop	r4
     c68:	3f 90       	pop	r3
     c6a:	2f 90       	pop	r2
     c6c:	08 95       	ret

00000c6e <time>:
     c6e:	fc 01       	movw	r30, r24
     c70:	0f b6       	in	r0, 0x3f	; 63
     c72:	f8 94       	cli
     c74:	60 91 9e 4a 	lds	r22, 0x4A9E	; 0x804a9e <__system_time>
     c78:	70 91 9f 4a 	lds	r23, 0x4A9F	; 0x804a9f <__system_time+0x1>
     c7c:	80 91 a0 4a 	lds	r24, 0x4AA0	; 0x804aa0 <__system_time+0x2>
     c80:	90 91 a1 4a 	lds	r25, 0x4AA1	; 0x804aa1 <__system_time+0x3>
     c84:	0f be       	out	0x3f, r0	; 63
     c86:	30 97       	sbiw	r30, 0x00	; 0
     c88:	21 f0       	breq	.+8      	; 0xc92 <time+0x24>
     c8a:	60 83       	st	Z, r22
     c8c:	71 83       	std	Z+1, r23	; 0x01
     c8e:	82 83       	std	Z+2, r24	; 0x02
     c90:	93 83       	std	Z+3, r25	; 0x03
     c92:	08 95       	ret

00000c94 <week_of_year>:
     c94:	fc 01       	movw	r30, r24
     c96:	20 85       	ldd	r18, Z+8	; 0x08
     c98:	31 85       	ldd	r19, Z+9	; 0x09
     c9a:	c9 01       	movw	r24, r18
     c9c:	07 96       	adiw	r24, 0x07	; 7
     c9e:	44 81       	ldd	r20, Z+4	; 0x04
     ca0:	84 1b       	sub	r24, r20
     ca2:	91 09       	sbc	r25, r1
     ca4:	47 fd       	sbrc	r20, 7
     ca6:	93 95       	inc	r25
     ca8:	86 0f       	add	r24, r22
     caa:	91 1d       	adc	r25, r1
     cac:	e7 e0       	ldi	r30, 0x07	; 7
     cae:	f0 e0       	ldi	r31, 0x00	; 0
     cb0:	bf 01       	movw	r22, r30
     cb2:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     cb6:	a9 01       	movw	r20, r18
     cb8:	48 1b       	sub	r20, r24
     cba:	59 0b       	sbc	r21, r25
     cbc:	ca 01       	movw	r24, r20
     cbe:	57 fd       	sbrc	r21, 7
     cc0:	06 c0       	rjmp	.+12     	; 0xcce <week_of_year+0x3a>
     cc2:	bf 01       	movw	r22, r30
     cc4:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	86 0f       	add	r24, r22
     ccc:	08 95       	ret
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	08 95       	ret

00000cd2 <system_tick>:
     cd2:	8f 93       	push	r24
     cd4:	8f b7       	in	r24, 0x3f	; 63
     cd6:	8f 93       	push	r24
     cd8:	f8 94       	cli
     cda:	80 91 9e 4a 	lds	r24, 0x4A9E	; 0x804a9e <__system_time>
     cde:	8f 5f       	subi	r24, 0xFF	; 255
     ce0:	80 93 9e 4a 	sts	0x4A9E, r24	; 0x804a9e <__system_time>
     ce4:	80 91 9f 4a 	lds	r24, 0x4A9F	; 0x804a9f <__system_time+0x1>
     ce8:	8f 4f       	sbci	r24, 0xFF	; 255
     cea:	80 93 9f 4a 	sts	0x4A9F, r24	; 0x804a9f <__system_time+0x1>
     cee:	80 91 a0 4a 	lds	r24, 0x4AA0	; 0x804aa0 <__system_time+0x2>
     cf2:	8f 4f       	sbci	r24, 0xFF	; 255
     cf4:	80 93 a0 4a 	sts	0x4AA0, r24	; 0x804aa0 <__system_time+0x2>
     cf8:	80 91 a1 4a 	lds	r24, 0x4AA1	; 0x804aa1 <__system_time+0x3>
     cfc:	8f 4f       	sbci	r24, 0xFF	; 255
     cfe:	80 93 a1 4a 	sts	0x4AA1, r24	; 0x804aa1 <__system_time+0x3>
     d02:	8f 91       	pop	r24
     d04:	8f bf       	out	0x3f, r24	; 63
     d06:	8f 91       	pop	r24
     d08:	08 95       	ret

00000d0a <asctime_r>:
     d0a:	cf 92       	push	r12
     d0c:	df 92       	push	r13
     d0e:	ef 92       	push	r14
     d10:	ff 92       	push	r15
     d12:	0f 93       	push	r16
     d14:	1f 93       	push	r17
     d16:	cf 93       	push	r28
     d18:	df 93       	push	r29
     d1a:	8c 01       	movw	r16, r24
     d1c:	eb 01       	movw	r28, r22
     d1e:	fc 01       	movw	r30, r24
     d20:	84 81       	ldd	r24, Z+4	; 0x04
     d22:	b8 2f       	mov	r27, r24
     d24:	bb 0f       	add	r27, r27
     d26:	b8 0f       	add	r27, r24
     d28:	85 81       	ldd	r24, Z+5	; 0x05
     d2a:	78 2f       	mov	r23, r24
     d2c:	77 0f       	add	r23, r23
     d2e:	78 0f       	add	r23, r24
     d30:	9e 01       	movw	r18, r28
     d32:	40 e0       	ldi	r20, 0x00	; 0
     d34:	8b 2f       	mov	r24, r27
     d36:	84 0f       	add	r24, r20
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	a0 e0       	ldi	r26, 0x00	; 0
     d3c:	82 5d       	subi	r24, 0xD2	; 210
     d3e:	9b 4f       	sbci	r25, 0xFB	; 251
     d40:	af 4f       	sbci	r26, 0xFF	; 255
     d42:	fc 01       	movw	r30, r24
     d44:	5a 2f       	mov	r21, r26
     d46:	0e 94 2c 7c 	call	0xf858	; 0xf858 <__xload_1>
     d4a:	f9 01       	movw	r30, r18
     d4c:	61 93       	st	Z+, r22
     d4e:	9f 01       	movw	r18, r30
     d50:	87 2f       	mov	r24, r23
     d52:	84 0f       	add	r24, r20
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	a0 e0       	ldi	r26, 0x00	; 0
     d58:	8c 5b       	subi	r24, 0xBC	; 188
     d5a:	9b 4f       	sbci	r25, 0xFB	; 251
     d5c:	af 4f       	sbci	r26, 0xFF	; 255
     d5e:	fc 01       	movw	r30, r24
     d60:	5a 2f       	mov	r21, r26
     d62:	0e 94 2c 7c 	call	0xf858	; 0xf858 <__xload_1>
     d66:	f9 01       	movw	r30, r18
     d68:	63 83       	std	Z+3, r22	; 0x03
     d6a:	4f 5f       	subi	r20, 0xFF	; 255
     d6c:	43 30       	cpi	r20, 0x03	; 3
     d6e:	11 f7       	brne	.-60     	; 0xd34 <asctime_r+0x2a>
     d70:	80 e2       	ldi	r24, 0x20	; 32
     d72:	8f 83       	std	Y+7, r24	; 0x07
     d74:	8b 83       	std	Y+3, r24	; 0x03
     d76:	be 01       	movw	r22, r28
     d78:	68 5f       	subi	r22, 0xF8	; 248
     d7a:	7f 4f       	sbci	r23, 0xFF	; 255
     d7c:	f8 01       	movw	r30, r16
     d7e:	83 81       	ldd	r24, Z+3	; 0x03
     d80:	40 e2       	ldi	r20, 0x20	; 32
     d82:	08 2e       	mov	r0, r24
     d84:	00 0c       	add	r0, r0
     d86:	99 0b       	sbc	r25, r25
     d88:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__print_lz>
     d8c:	be 01       	movw	r22, r28
     d8e:	65 5f       	subi	r22, 0xF5	; 245
     d90:	7f 4f       	sbci	r23, 0xFF	; 255
     d92:	f8 01       	movw	r30, r16
     d94:	82 81       	ldd	r24, Z+2	; 0x02
     d96:	4a e3       	ldi	r20, 0x3A	; 58
     d98:	08 2e       	mov	r0, r24
     d9a:	00 0c       	add	r0, r0
     d9c:	99 0b       	sbc	r25, r25
     d9e:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__print_lz>
     da2:	be 01       	movw	r22, r28
     da4:	62 5f       	subi	r22, 0xF2	; 242
     da6:	7f 4f       	sbci	r23, 0xFF	; 255
     da8:	f8 01       	movw	r30, r16
     daa:	81 81       	ldd	r24, Z+1	; 0x01
     dac:	4a e3       	ldi	r20, 0x3A	; 58
     dae:	08 2e       	mov	r0, r24
     db0:	00 0c       	add	r0, r0
     db2:	99 0b       	sbc	r25, r25
     db4:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__print_lz>
     db8:	be 01       	movw	r22, r28
     dba:	6f 5e       	subi	r22, 0xEF	; 239
     dbc:	7f 4f       	sbci	r23, 0xFF	; 255
     dbe:	f8 01       	movw	r30, r16
     dc0:	80 81       	ld	r24, Z
     dc2:	40 e2       	ldi	r20, 0x20	; 32
     dc4:	08 2e       	mov	r0, r24
     dc6:	00 0c       	add	r0, r0
     dc8:	99 0b       	sbc	r25, r25
     dca:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__print_lz>
     dce:	f8 01       	movw	r30, r16
     dd0:	86 81       	ldd	r24, Z+6	; 0x06
     dd2:	97 81       	ldd	r25, Z+7	; 0x07
     dd4:	64 e6       	ldi	r22, 0x64	; 100
     dd6:	70 e0       	ldi	r23, 0x00	; 0
     dd8:	84 59       	subi	r24, 0x94	; 148
     dda:	98 4f       	sbci	r25, 0xF8	; 248
     ddc:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     de0:	6b 01       	movw	r12, r22
     de2:	7c 01       	movw	r14, r24
     de4:	be 01       	movw	r22, r28
     de6:	6c 5e       	subi	r22, 0xEC	; 236
     de8:	7f 4f       	sbci	r23, 0xFF	; 255
     dea:	40 e2       	ldi	r20, 0x20	; 32
     dec:	c6 01       	movw	r24, r12
     dee:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__print_lz>
     df2:	be 01       	movw	r22, r28
     df4:	6a 5e       	subi	r22, 0xEA	; 234
     df6:	7f 4f       	sbci	r23, 0xFF	; 255
     df8:	40 e0       	ldi	r20, 0x00	; 0
     dfa:	c7 01       	movw	r24, r14
     dfc:	df 91       	pop	r29
     dfe:	cf 91       	pop	r28
     e00:	1f 91       	pop	r17
     e02:	0f 91       	pop	r16
     e04:	ff 90       	pop	r15
     e06:	ef 90       	pop	r14
     e08:	df 90       	pop	r13
     e0a:	cf 90       	pop	r12
     e0c:	0c 94 58 08 	jmp	0x10b0	; 0x10b0 <__print_lz>

00000e10 <gmtime_r>:
     e10:	cf 92       	push	r12
     e12:	df 92       	push	r13
     e14:	ef 92       	push	r14
     e16:	ff 92       	push	r15
     e18:	0f 93       	push	r16
     e1a:	1f 93       	push	r17
     e1c:	cf 93       	push	r28
     e1e:	df 93       	push	r29
     e20:	cd b7       	in	r28, 0x3d	; 61
     e22:	de b7       	in	r29, 0x3e	; 62
     e24:	28 97       	sbiw	r28, 0x08	; 8
     e26:	cd bf       	out	0x3d, r28	; 61
     e28:	de bf       	out	0x3e, r29	; 62
     e2a:	8b 01       	movw	r16, r22
     e2c:	fc 01       	movw	r30, r24
     e2e:	60 81       	ld	r22, Z
     e30:	71 81       	ldd	r23, Z+1	; 0x01
     e32:	82 81       	ldd	r24, Z+2	; 0x02
     e34:	93 81       	ldd	r25, Z+3	; 0x03
     e36:	20 e8       	ldi	r18, 0x80	; 128
     e38:	31 e5       	ldi	r19, 0x51	; 81
     e3a:	41 e0       	ldi	r20, 0x01	; 1
     e3c:	50 e0       	ldi	r21, 0x00	; 0
     e3e:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
     e42:	69 01       	movw	r12, r18
     e44:	7a 01       	movw	r14, r20
     e46:	2c e3       	ldi	r18, 0x3C	; 60
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	40 e0       	ldi	r20, 0x00	; 0
     e4c:	50 e0       	ldi	r21, 0x00	; 0
     e4e:	0e 94 2e 73 	call	0xe65c	; 0xe65c <__divmodsi4>
     e52:	29 83       	std	Y+1, r18	; 0x01
     e54:	3a 83       	std	Y+2, r19	; 0x02
     e56:	4b 83       	std	Y+3, r20	; 0x03
     e58:	5c 83       	std	Y+4, r21	; 0x04
     e5a:	89 81       	ldd	r24, Y+1	; 0x01
     e5c:	9a 81       	ldd	r25, Y+2	; 0x02
     e5e:	ab 81       	ldd	r26, Y+3	; 0x03
     e60:	bc 81       	ldd	r27, Y+4	; 0x04
     e62:	f8 01       	movw	r30, r16
     e64:	60 83       	st	Z, r22
     e66:	6c e3       	ldi	r22, 0x3C	; 60
     e68:	70 e0       	ldi	r23, 0x00	; 0
     e6a:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     e6e:	dc 01       	movw	r26, r24
     e70:	cb 01       	movw	r24, r22
     e72:	f8 01       	movw	r30, r16
     e74:	a1 83       	std	Z+1, r26	; 0x01
     e76:	82 83       	std	Z+2, r24	; 0x02
     e78:	c6 01       	movw	r24, r12
     e7a:	06 96       	adiw	r24, 0x06	; 6
     e7c:	67 e0       	ldi	r22, 0x07	; 7
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	0e 94 e4 72 	call	0xe5c8	; 0xe5c8 <__udivmodhi4>
     e84:	84 83       	std	Z+4, r24	; 0x04
     e86:	2d ea       	ldi	r18, 0xAD	; 173
     e88:	3e e8       	ldi	r19, 0x8E	; 142
     e8a:	40 e0       	ldi	r20, 0x00	; 0
     e8c:	50 e0       	ldi	r21, 0x00	; 0
     e8e:	c7 01       	movw	r24, r14
     e90:	b6 01       	movw	r22, r12
     e92:	0e 94 2e 73 	call	0xe65c	; 0xe65c <__divmodsi4>
     e96:	29 83       	std	Y+1, r18	; 0x01
     e98:	3a 83       	std	Y+2, r19	; 0x02
     e9a:	6d 83       	std	Y+5, r22	; 0x05
     e9c:	7e 83       	std	Y+6, r23	; 0x06
     e9e:	8f 83       	std	Y+7, r24	; 0x07
     ea0:	98 87       	std	Y+8, r25	; 0x08
     ea2:	89 81       	ldd	r24, Y+1	; 0x01
     ea4:	9a 81       	ldd	r25, Y+2	; 0x02
     ea6:	24 e6       	ldi	r18, 0x64	; 100
     ea8:	28 9f       	mul	r18, r24
     eaa:	60 01       	movw	r12, r0
     eac:	29 9f       	mul	r18, r25
     eae:	d0 0c       	add	r13, r0
     eb0:	11 24       	eor	r1, r1
     eb2:	6d 81       	ldd	r22, Y+5	; 0x05
     eb4:	7e 81       	ldd	r23, Y+6	; 0x06
     eb6:	8f 81       	ldd	r24, Y+7	; 0x07
     eb8:	98 85       	ldd	r25, Y+8	; 0x08
     eba:	25 eb       	ldi	r18, 0xB5	; 181
     ebc:	35 e0       	ldi	r19, 0x05	; 5
     ebe:	40 e0       	ldi	r20, 0x00	; 0
     ec0:	50 e0       	ldi	r21, 0x00	; 0
     ec2:	0e 94 2e 73 	call	0xe65c	; 0xe65c <__divmodsi4>
     ec6:	29 83       	std	Y+1, r18	; 0x01
     ec8:	3a 83       	std	Y+2, r19	; 0x02
     eca:	6d 83       	std	Y+5, r22	; 0x05
     ecc:	7e 83       	std	Y+6, r23	; 0x06
     ece:	e9 80       	ldd	r14, Y+1	; 0x01
     ed0:	fa 80       	ldd	r15, Y+2	; 0x02
     ed2:	ee 0c       	add	r14, r14
     ed4:	ff 1c       	adc	r15, r15
     ed6:	ee 0c       	add	r14, r14
     ed8:	ff 1c       	adc	r15, r15
     eda:	ec 0c       	add	r14, r12
     edc:	fd 1c       	adc	r15, r13
     ede:	8d 81       	ldd	r24, Y+5	; 0x05
     ee0:	9e 81       	ldd	r25, Y+6	; 0x06
     ee2:	f5 e6       	ldi	r31, 0x65	; 101
     ee4:	ef 16       	cp	r14, r31
     ee6:	f1 04       	cpc	r15, r1
     ee8:	10 f0       	brcs	.+4      	; 0xeee <gmtime_r+0xde>
     eea:	01 96       	adiw	r24, 0x01	; 1
     eec:	04 c0       	rjmp	.+8      	; 0xef6 <gmtime_r+0xe6>
     eee:	24 e6       	ldi	r18, 0x64	; 100
     ef0:	e2 16       	cp	r14, r18
     ef2:	f1 04       	cpc	r15, r1
     ef4:	19 f0       	breq	.+6      	; 0xefc <gmtime_r+0xec>
     ef6:	21 e0       	ldi	r18, 0x01	; 1
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <gmtime_r+0xf0>
     efc:	20 e0       	ldi	r18, 0x00	; 0
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	a9 01       	movw	r20, r18
     f02:	44 59       	subi	r20, 0x94	; 148
     f04:	5e 4f       	sbci	r21, 0xFE	; 254
     f06:	48 17       	cp	r20, r24
     f08:	59 07       	cpc	r21, r25
     f0a:	68 f4       	brcc	.+26     	; 0xf26 <gmtime_r+0x116>
     f0c:	6d e6       	ldi	r22, 0x6D	; 109
     f0e:	71 e0       	ldi	r23, 0x01	; 1
     f10:	82 1b       	sub	r24, r18
     f12:	93 0b       	sbc	r25, r19
     f14:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     f18:	dc 01       	movw	r26, r24
     f1a:	cb 01       	movw	r24, r22
     f1c:	e8 0e       	add	r14, r24
     f1e:	f9 1e       	adc	r15, r25
     f20:	cd 01       	movw	r24, r26
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	44 e6       	ldi	r20, 0x64	; 100
     f28:	e4 0e       	add	r14, r20
     f2a:	f1 1c       	adc	r15, r1
     f2c:	f8 01       	movw	r30, r16
     f2e:	e6 82       	std	Z+6, r14	; 0x06
     f30:	f7 82       	std	Z+7, r15	; 0x07
     f32:	80 87       	std	Z+8, r24	; 0x08
     f34:	91 87       	std	Z+9, r25	; 0x09
     f36:	25 5c       	subi	r18, 0xC5	; 197
     f38:	3f 4f       	sbci	r19, 0xFF	; 255
     f3a:	82 17       	cp	r24, r18
     f3c:	93 07       	cpc	r25, r19
     f3e:	48 f4       	brcc	.+18     	; 0xf52 <gmtime_r+0x142>
     f40:	6f e1       	ldi	r22, 0x1F	; 31
     f42:	70 e0       	ldi	r23, 0x00	; 0
     f44:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     f48:	dc 01       	movw	r26, r24
     f4a:	cb 01       	movw	r24, r22
     f4c:	f8 01       	movw	r30, r16
     f4e:	85 83       	std	Z+5, r24	; 0x05
     f50:	22 c0       	rjmp	.+68     	; 0xf96 <gmtime_r+0x186>
     f52:	69 e9       	ldi	r22, 0x99	; 153
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	82 1b       	sub	r24, r18
     f58:	93 0b       	sbc	r25, r19
     f5a:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     f5e:	dc 01       	movw	r26, r24
     f60:	cb 01       	movw	r24, r22
     f62:	f8 2e       	mov	r15, r24
     f64:	ff 0c       	add	r15, r15
     f66:	ff 0c       	add	r15, r15
     f68:	f8 0e       	add	r15, r24
     f6a:	6d e3       	ldi	r22, 0x3D	; 61
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	cd 01       	movw	r24, r26
     f70:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     f74:	dc 01       	movw	r26, r24
     f76:	cb 01       	movw	r24, r22
     f78:	e8 2e       	mov	r14, r24
     f7a:	ee 0c       	add	r14, r14
     f7c:	6f e1       	ldi	r22, 0x1F	; 31
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	cd 01       	movw	r24, r26
     f82:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
     f86:	dc 01       	movw	r26, r24
     f88:	cb 01       	movw	r24, r22
     f8a:	22 e0       	ldi	r18, 0x02	; 2
     f8c:	28 0f       	add	r18, r24
     f8e:	f2 0e       	add	r15, r18
     f90:	fe 0c       	add	r15, r14
     f92:	f8 01       	movw	r30, r16
     f94:	f5 82       	std	Z+5, r15	; 0x05
     f96:	a3 83       	std	Z+3, r26	; 0x03
     f98:	f8 01       	movw	r30, r16
     f9a:	12 86       	std	Z+10, r1	; 0x0a
     f9c:	13 86       	std	Z+11, r1	; 0x0b
     f9e:	83 81       	ldd	r24, Z+3	; 0x03
     fa0:	8f 5f       	subi	r24, 0xFF	; 255
     fa2:	83 83       	std	Z+3, r24	; 0x03
     fa4:	28 96       	adiw	r28, 0x08	; 8
     fa6:	cd bf       	out	0x3d, r28	; 61
     fa8:	de bf       	out	0x3e, r29	; 62
     faa:	df 91       	pop	r29
     fac:	cf 91       	pop	r28
     fae:	1f 91       	pop	r17
     fb0:	0f 91       	pop	r16
     fb2:	ff 90       	pop	r15
     fb4:	ef 90       	pop	r14
     fb6:	df 90       	pop	r13
     fb8:	cf 90       	pop	r12
     fba:	08 95       	ret

00000fbc <iso_week_date_r>:
     fbc:	cf 92       	push	r12
     fbe:	df 92       	push	r13
     fc0:	ef 92       	push	r14
     fc2:	ff 92       	push	r15
     fc4:	0f 93       	push	r16
     fc6:	1f 93       	push	r17
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	8c 01       	movw	r16, r24
     fce:	7b 01       	movw	r14, r22
     fd0:	ea 01       	movw	r28, r20
     fd2:	88 83       	st	Y, r24
     fd4:	99 83       	std	Y+1, r25	; 0x01
     fd6:	0e 94 65 02 	call	0x4ca	; 0x4ca <is_leap_year>
     fda:	28 2f       	mov	r18, r24
     fdc:	a8 01       	movw	r20, r16
     fde:	40 5d       	subi	r20, 0xD0	; 208
     fe0:	57 40       	sbci	r21, 0x07	; 7
     fe2:	6d e6       	ldi	r22, 0x6D	; 109
     fe4:	71 e0       	ldi	r23, 0x01	; 1
     fe6:	46 9f       	mul	r20, r22
     fe8:	c0 01       	movw	r24, r0
     fea:	47 9f       	mul	r20, r23
     fec:	90 0d       	add	r25, r0
     fee:	56 9f       	mul	r21, r22
     ff0:	90 0d       	add	r25, r0
     ff2:	11 24       	eor	r1, r1
     ff4:	8e 0d       	add	r24, r14
     ff6:	9f 1d       	adc	r25, r15
     ff8:	41 15       	cp	r20, r1
     ffa:	51 05       	cpc	r21, r1
     ffc:	79 f0       	breq	.+30     	; 0x101c <iso_week_date_r+0x60>
     ffe:	ba 01       	movw	r22, r20
    1000:	76 95       	lsr	r23
    1002:	67 95       	ror	r22
    1004:	76 95       	lsr	r23
    1006:	67 95       	ror	r22
    1008:	6f 5f       	subi	r22, 0xFF	; 255
    100a:	7f 4f       	sbci	r23, 0xFF	; 255
    100c:	86 0f       	add	r24, r22
    100e:	97 1f       	adc	r25, r23
    1010:	82 1b       	sub	r24, r18
    1012:	91 09       	sbc	r25, r1
    1014:	45 36       	cpi	r20, 0x65	; 101
    1016:	51 05       	cpc	r21, r1
    1018:	08 f0       	brcs	.+2      	; 0x101c <iso_week_date_r+0x60>
    101a:	01 97       	sbiw	r24, 0x01	; 1
    101c:	06 96       	adiw	r24, 0x06	; 6
    101e:	67 e0       	ldi	r22, 0x07	; 7
    1020:	70 e0       	ldi	r23, 0x00	; 0
    1022:	0e 94 e4 72 	call	0xe5c8	; 0xe5c8 <__udivmodhi4>
    1026:	6c 01       	movw	r12, r24
    1028:	89 2b       	or	r24, r25
    102a:	19 f4       	brne	.+6      	; 0x1032 <iso_week_date_r+0x76>
    102c:	87 e0       	ldi	r24, 0x07	; 7
    102e:	c8 2e       	mov	r12, r24
    1030:	d1 2c       	mov	r13, r1
    1032:	cc 82       	std	Y+4, r12	; 0x04
    1034:	dd 82       	std	Y+5, r13	; 0x05
    1036:	c7 01       	movw	r24, r14
    1038:	0b 96       	adiw	r24, 0x0b	; 11
    103a:	8c 19       	sub	r24, r12
    103c:	9d 09       	sbc	r25, r13
    103e:	67 e0       	ldi	r22, 0x07	; 7
    1040:	70 e0       	ldi	r23, 0x00	; 0
    1042:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
    1046:	65 33       	cpi	r22, 0x35	; 53
    1048:	71 05       	cpc	r23, r1
    104a:	b1 f4       	brne	.+44     	; 0x1078 <iso_week_date_r+0xbc>
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	c8 1a       	sub	r12, r24
    1050:	d1 08       	sbc	r13, r1
    1052:	ec 18       	sub	r14, r12
    1054:	fd 08       	sbc	r15, r13
    1056:	82 2f       	mov	r24, r18
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	84 59       	subi	r24, 0x94	; 148
    105c:	9e 4f       	sbci	r25, 0xFE	; 254
    105e:	23 e0       	ldi	r18, 0x03	; 3
    1060:	e2 0e       	add	r14, r18
    1062:	f1 1c       	adc	r15, r1
    1064:	8e 15       	cp	r24, r14
    1066:	9f 05       	cpc	r25, r15
    1068:	3c f4       	brge	.+14     	; 0x1078 <iso_week_date_r+0xbc>
    106a:	88 81       	ld	r24, Y
    106c:	99 81       	ldd	r25, Y+1	; 0x01
    106e:	01 96       	adiw	r24, 0x01	; 1
    1070:	88 83       	st	Y, r24
    1072:	99 83       	std	Y+1, r25	; 0x01
    1074:	61 e0       	ldi	r22, 0x01	; 1
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	6a 83       	std	Y+2, r22	; 0x02
    107a:	7b 83       	std	Y+3, r23	; 0x03
    107c:	67 2b       	or	r22, r23
    107e:	79 f4       	brne	.+30     	; 0x109e <iso_week_date_r+0xe2>
    1080:	01 50       	subi	r16, 0x01	; 1
    1082:	11 09       	sbc	r17, r1
    1084:	c8 01       	movw	r24, r16
    1086:	0e 94 65 02 	call	0x4ca	; 0x4ca <is_leap_year>
    108a:	68 2f       	mov	r22, r24
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	64 59       	subi	r22, 0x94	; 148
    1090:	7e 4f       	sbci	r23, 0xFE	; 254
    1092:	ae 01       	movw	r20, r28
    1094:	c8 01       	movw	r24, r16
    1096:	0e 94 de 07 	call	0xfbc	; 0xfbc <iso_week_date_r>
    109a:	cc 82       	std	Y+4, r12	; 0x04
    109c:	dd 82       	std	Y+5, r13	; 0x05
    109e:	df 91       	pop	r29
    10a0:	cf 91       	pop	r28
    10a2:	1f 91       	pop	r17
    10a4:	0f 91       	pop	r16
    10a6:	ff 90       	pop	r15
    10a8:	ef 90       	pop	r14
    10aa:	df 90       	pop	r13
    10ac:	cf 90       	pop	r12
    10ae:	08 95       	ret

000010b0 <__print_lz>:
    10b0:	1f 93       	push	r17
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
    10b6:	eb 01       	movw	r28, r22
    10b8:	14 2f       	mov	r17, r20
    10ba:	6a e0       	ldi	r22, 0x0A	; 10
    10bc:	70 e0       	ldi	r23, 0x00	; 0
    10be:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
    10c2:	60 5d       	subi	r22, 0xD0	; 208
    10c4:	68 83       	st	Y, r22
    10c6:	80 5d       	subi	r24, 0xD0	; 208
    10c8:	89 83       	std	Y+1, r24	; 0x01
    10ca:	1a 83       	std	Y+2, r17	; 0x02
    10cc:	df 91       	pop	r29
    10ce:	cf 91       	pop	r28
    10d0:	1f 91       	pop	r17
    10d2:	08 95       	ret

000010d4 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
    10d8:	cd b7       	in	r28, 0x3d	; 61
    10da:	de b7       	in	r29, 0x3e	; 62
	system_init();
    10dc:	0e 94 ab 3d 	call	0x7b56	; 0x7b56 <system_init>
}
    10e0:	00 00       	nop
    10e2:	df 91       	pop	r29
    10e4:	cf 91       	pop	r28
    10e6:	08 95       	ret

000010e8 <__vector_19>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(USART0_RXC_vect)
{
    10e8:	1f 92       	push	r1
    10ea:	0f 92       	push	r0
    10ec:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    10f0:	0f 92       	push	r0
    10f2:	11 24       	eor	r1, r1
    10f4:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    10f8:	0f 92       	push	r0
    10fa:	2f 93       	push	r18
    10fc:	3f 93       	push	r19
    10fe:	4f 93       	push	r20
    1100:	5f 93       	push	r21
    1102:	6f 93       	push	r22
    1104:	7f 93       	push	r23
    1106:	8f 93       	push	r24
    1108:	9f 93       	push	r25
    110a:	af 93       	push	r26
    110c:	bf 93       	push	r27
    110e:	ef 93       	push	r30
    1110:	ff 93       	push	r31
    1112:	cf 93       	push	r28
    1114:	df 93       	push	r29
    1116:	1f 92       	push	r1
    1118:	cd b7       	in	r28, 0x3d	; 61
    111a:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
    111c:	0e 94 82 6c 	call	0xd904	; 0xd904 <USART0_get_data>
    1120:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
    1122:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1126:	88 23       	and	r24, r24
    1128:	19 f4       	brne	.+6      	; 0x1130 <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
    112a:	89 81       	ldd	r24, Y+1	; 0x01
    112c:	0e 94 41 0c 	call	0x1882	; 0x1882 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
    1130:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_serialbus_usart_number>
    1134:	88 23       	and	r24, r24
    1136:	19 f4       	brne	.+6      	; 0x113e <__vector_19+0x56>
	{
		serial_Rx(rx_char);
    1138:	89 81       	ldd	r24, Y+1	; 0x01
    113a:	0e 94 b8 08 	call	0x1170	; 0x1170 <_Z9serial_Rxh>
	}
}
    113e:	00 00       	nop
    1140:	0f 90       	pop	r0
    1142:	df 91       	pop	r29
    1144:	cf 91       	pop	r28
    1146:	ff 91       	pop	r31
    1148:	ef 91       	pop	r30
    114a:	bf 91       	pop	r27
    114c:	af 91       	pop	r26
    114e:	9f 91       	pop	r25
    1150:	8f 91       	pop	r24
    1152:	7f 91       	pop	r23
    1154:	6f 91       	pop	r22
    1156:	5f 91       	pop	r21
    1158:	4f 91       	pop	r20
    115a:	3f 91       	pop	r19
    115c:	2f 91       	pop	r18
    115e:	0f 90       	pop	r0
    1160:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1164:	0f 90       	pop	r0
    1166:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    116a:	0f 90       	pop	r0
    116c:	1f 90       	pop	r1
    116e:	18 95       	reti

00001170 <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	cd b7       	in	r28, 0x3d	; 61
    1176:	de b7       	in	r29, 0x3e	; 62
    1178:	2a 97       	sbiw	r28, 0x0a	; 10
    117a:	cd bf       	out	0x3d, r28	; 61
    117c:	de bf       	out	0x3e, r29	; 62
    117e:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    1180:	80 91 52 46 	lds	r24, 0x4652	; 0x804652 <__data_end>
    1184:	90 91 53 46 	lds	r25, 0x4653	; 0x804653 <__data_end+0x1>
    1188:	89 2b       	or	r24, r25
    118a:	31 f4       	brne	.+12     	; 0x1198 <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
    118c:	0e 94 eb 57 	call	0xafd6	; 0xafd6 <nextEmptySBRxBuffer>
    1190:	80 93 52 46 	sts	0x4652, r24	; 0x804652 <__data_end>
    1194:	90 93 53 46 	sts	0x4653, r25	; 0x804653 <__data_end+0x1>
	}

	if(buff)
    1198:	80 91 52 46 	lds	r24, 0x4652	; 0x804652 <__data_end>
    119c:	90 91 53 46 	lds	r25, 0x4653	; 0x804653 <__data_end+0x1>
    11a0:	89 2b       	or	r24, r25
    11a2:	09 f4       	brne	.+2      	; 0x11a6 <_Z9serial_Rxh+0x36>
    11a4:	5e c2       	rjmp	.+1212   	; 0x1662 <_Z9serial_Rxh+0x4f2>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
    11a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    11a8:	88 2f       	mov	r24, r24
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	0e 94 fa 74 	call	0xe9f4	; 0xe9f4 <toupper>
    11b0:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
    11b2:	80 91 54 46 	lds	r24, 0x4654	; 0x804654 <_ZZ9serial_RxhE11ignoreCount>
    11b6:	88 23       	and	r24, r24
    11b8:	39 f0       	breq	.+14     	; 0x11c8 <_Z9serial_Rxh+0x58>
		{
			rx_char = '\0';
    11ba:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
    11bc:	80 91 54 46 	lds	r24, 0x4654	; 0x804654 <_ZZ9serial_RxhE11ignoreCount>
    11c0:	81 50       	subi	r24, 0x01	; 1
    11c2:	80 93 54 46 	sts	0x4654, r24	; 0x804654 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11c6:	4d c2       	rjmp	.+1178   	; 0x1662 <_Z9serial_Rxh+0x4f2>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
    11c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    11ca:	8b 31       	cpi	r24, 0x1B	; 27
    11cc:	91 f4       	brne	.+36     	; 0x11f2 <_Z9serial_Rxh+0x82>
		{
			rx_char = '\0';
    11ce:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
    11d0:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    11d4:	84 31       	cpi	r24, 0x14	; 20
    11d6:	48 f4       	brcc	.+18     	; 0x11ea <_Z9serial_Rxh+0x7a>
			{
				rx_char = textBuff[charIndex];
    11d8:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    11dc:	88 2f       	mov	r24, r24
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	8a 5a       	subi	r24, 0xAA	; 170
    11e2:	99 4b       	sbci	r25, 0xB9	; 185
    11e4:	fc 01       	movw	r30, r24
    11e6:	80 81       	ld	r24, Z
    11e8:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
    11ea:	82 e0       	ldi	r24, 0x02	; 2
    11ec:	80 93 54 46 	sts	0x4654, r24	; 0x804654 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11f0:	38 c2       	rjmp	.+1136   	; 0x1662 <_Z9serial_Rxh+0x4f2>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
    11f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    11f4:	8d 30       	cpi	r24, 0x0D	; 13
    11f6:	09 f0       	breq	.+2      	; 0x11fa <_Z9serial_Rxh+0x8a>
    11f8:	60 c0       	rjmp	.+192    	; 0x12ba <_Z9serial_Rxh+0x14a>
		{
			if(receiving_msg)
    11fa:	80 91 88 46 	lds	r24, 0x4688	; 0x804688 <_ZZ9serial_RxhE13receiving_msg>
    11fe:	88 23       	and	r24, r24
    1200:	09 f4       	brne	.+2      	; 0x1204 <_Z9serial_Rxh+0x94>
    1202:	41 c0       	rjmp	.+130    	; 0x1286 <_Z9serial_Rxh+0x116>
			{
				if(charIndex > 0)
    1204:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    1208:	88 23       	and	r24, r24
    120a:	d1 f1       	breq	.+116    	; 0x1280 <_Z9serial_Rxh+0x110>
				{
					buff->type = SERIALBUS_MSG_QUERY;
    120c:	80 91 52 46 	lds	r24, 0x4652	; 0x804652 <__data_end>
    1210:	90 91 53 46 	lds	r25, 0x4653	; 0x804653 <__data_end+0x1>
    1214:	22 e0       	ldi	r18, 0x02	; 2
    1216:	fc 01       	movw	r30, r24
    1218:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
    121a:	80 91 52 46 	lds	r24, 0x4652	; 0x804652 <__data_end>
    121e:	90 91 53 46 	lds	r25, 0x4653	; 0x804653 <__data_end+0x1>
    1222:	20 91 89 46 	lds	r18, 0x4689	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    1226:	30 91 8a 46 	lds	r19, 0x468A	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
    122a:	fc 01       	movw	r30, r24
    122c:	21 83       	std	Z+1, r18	; 0x01
    122e:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
    1230:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    1234:	88 23       	and	r24, r24
    1236:	e1 f0       	breq	.+56     	; 0x1270 <_Z9serial_Rxh+0x100>
					{
						buff->fields[field_index - 1][field_len] = 0;
    1238:	40 91 52 46 	lds	r20, 0x4652	; 0x804652 <__data_end>
    123c:	50 91 53 46 	lds	r21, 0x4653	; 0x804653 <__data_end+0x1>
    1240:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    1244:	88 2f       	mov	r24, r24
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	bc 01       	movw	r22, r24
    124a:	61 50       	subi	r22, 0x01	; 1
    124c:	71 09       	sbc	r23, r1
    124e:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    1252:	88 2f       	mov	r24, r24
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	e4 e1       	ldi	r30, 0x14	; 20
    1258:	e6 9f       	mul	r30, r22
    125a:	90 01       	movw	r18, r0
    125c:	e7 9f       	mul	r30, r23
    125e:	30 0d       	add	r19, r0
    1260:	11 24       	eor	r1, r1
    1262:	24 0f       	add	r18, r20
    1264:	35 1f       	adc	r19, r21
    1266:	82 0f       	add	r24, r18
    1268:	93 1f       	adc	r25, r19
    126a:	03 96       	adiw	r24, 0x03	; 3
    126c:	fc 01       	movw	r30, r24
    126e:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
    1270:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    1274:	88 2f       	mov	r24, r24
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	8a 5a       	subi	r24, 0xAA	; 170
    127a:	99 4b       	sbci	r25, 0xB9	; 185
    127c:	fc 01       	movw	r30, r24
    127e:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
    1280:	0e 94 de 59 	call	0xb3bc	; 0xb3bc <sb_send_NewLine>
    1284:	09 c0       	rjmp	.+18     	; 0x1298 <_Z9serial_Rxh+0x128>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
    1286:	80 91 52 46 	lds	r24, 0x4652	; 0x804652 <__data_end>
    128a:	90 91 53 46 	lds	r25, 0x4653	; 0x804653 <__data_end+0x1>
    128e:	2f ef       	ldi	r18, 0xFF	; 255
    1290:	3f ef       	ldi	r19, 0xFF	; 255
    1292:	fc 01       	movw	r30, r24
    1294:	21 83       	std	Z+1, r18	; 0x01
    1296:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
    1298:	10 92 55 46 	sts	0x4655, r1	; 0x804655 <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
    129c:	10 92 8c 46 	sts	0x468C, r1	; 0x80468c <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
    12a0:	10 92 89 46 	sts	0x4689, r1	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    12a4:	10 92 8a 46 	sts	0x468A, r1	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
    12a8:	10 92 8b 46 	sts	0x468B, r1	; 0x80468b <_ZZ9serial_RxhE11field_index>
			buff = NULL;
    12ac:	10 92 52 46 	sts	0x4652, r1	; 0x804652 <__data_end>
    12b0:	10 92 53 46 	sts	0x4653, r1	; 0x804653 <__data_end+0x1>

			receiving_msg = false;
    12b4:	10 92 88 46 	sts	0x4688, r1	; 0x804688 <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    12b8:	d4 c1       	rjmp	.+936    	; 0x1662 <_Z9serial_Rxh+0x4f2>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
    12ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    12bc:	88 23       	and	r24, r24
    12be:	09 f4       	brne	.+2      	; 0x12c2 <_Z9serial_Rxh+0x152>
    12c0:	d0 c1       	rjmp	.+928    	; 0x1662 <_Z9serial_Rxh+0x4f2>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
    12c2:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    12c6:	88 2f       	mov	r24, r24
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	8a 5a       	subi	r24, 0xAA	; 170
    12cc:	99 4b       	sbci	r25, 0xB9	; 185
    12ce:	2a 85       	ldd	r18, Y+10	; 0x0a
    12d0:	fc 01       	movw	r30, r24
    12d2:	20 83       	st	Z, r18

			if(charIndex)
    12d4:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    12d8:	88 23       	and	r24, r24
    12da:	09 f4       	brne	.+2      	; 0x12de <_Z9serial_Rxh+0x16e>
    12dc:	7c c1       	rjmp	.+760    	; 0x15d6 <_Z9serial_Rxh+0x466>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
    12de:	8a 85       	ldd	r24, Y+10	; 0x0a
    12e0:	8f 37       	cpi	r24, 0x7F	; 127
    12e2:	09 f0       	breq	.+2      	; 0x12e6 <_Z9serial_Rxh+0x176>
    12e4:	a1 c0       	rjmp	.+322    	; 0x1428 <_Z9serial_Rxh+0x2b8>
				{
					charIndex--;
    12e6:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    12ea:	81 50       	subi	r24, 0x01	; 1
    12ec:	80 93 55 46 	sts	0x4655, r24	; 0x804655 <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
    12f0:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    12f4:	88 23       	and	r24, r24
    12f6:	29 f5       	brne	.+74     	; 0x1342 <_Z9serial_Rxh+0x1d2>
					{
						msg_ID -= textBuff[charIndex];
    12f8:	20 91 89 46 	lds	r18, 0x4689	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    12fc:	30 91 8a 46 	lds	r19, 0x468A	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
    1300:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    1304:	88 2f       	mov	r24, r24
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	8a 5a       	subi	r24, 0xAA	; 170
    130a:	99 4b       	sbci	r25, 0xB9	; 185
    130c:	fc 01       	movw	r30, r24
    130e:	80 81       	ld	r24, Z
    1310:	88 2f       	mov	r24, r24
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	a9 01       	movw	r20, r18
    1316:	48 1b       	sub	r20, r24
    1318:	59 0b       	sbc	r21, r25
    131a:	ca 01       	movw	r24, r20
    131c:	80 93 89 46 	sts	0x4689, r24	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    1320:	90 93 8a 46 	sts	0x468A, r25	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
    1324:	80 91 89 46 	lds	r24, 0x4689	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    1328:	90 91 8a 46 	lds	r25, 0x468A	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
    132c:	2a e0       	ldi	r18, 0x0A	; 10
    132e:	30 e0       	ldi	r19, 0x00	; 0
    1330:	b9 01       	movw	r22, r18
    1332:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
    1336:	cb 01       	movw	r24, r22
    1338:	80 93 89 46 	sts	0x4689, r24	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    133c:	90 93 8a 46 	sts	0x468A, r25	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
    1340:	63 c0       	rjmp	.+198    	; 0x1408 <_Z9serial_Rxh+0x298>
					}
					else if(field_len)
    1342:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    1346:	88 23       	and	r24, r24
    1348:	11 f1       	breq	.+68     	; 0x138e <_Z9serial_Rxh+0x21e>
					{
						field_len--;
    134a:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    134e:	81 50       	subi	r24, 0x01	; 1
    1350:	80 93 8c 46 	sts	0x468C, r24	; 0x80468c <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
    1354:	40 91 52 46 	lds	r20, 0x4652	; 0x804652 <__data_end>
    1358:	50 91 53 46 	lds	r21, 0x4653	; 0x804653 <__data_end+0x1>
    135c:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    1360:	88 2f       	mov	r24, r24
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	bc 01       	movw	r22, r24
    1366:	61 50       	subi	r22, 0x01	; 1
    1368:	71 09       	sbc	r23, r1
    136a:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    136e:	88 2f       	mov	r24, r24
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	e4 e1       	ldi	r30, 0x14	; 20
    1374:	e6 9f       	mul	r30, r22
    1376:	90 01       	movw	r18, r0
    1378:	e7 9f       	mul	r30, r23
    137a:	30 0d       	add	r19, r0
    137c:	11 24       	eor	r1, r1
    137e:	24 0f       	add	r18, r20
    1380:	35 1f       	adc	r19, r21
    1382:	82 0f       	add	r24, r18
    1384:	93 1f       	adc	r25, r19
    1386:	03 96       	adiw	r24, 0x03	; 3
    1388:	fc 01       	movw	r30, r24
    138a:	10 82       	st	Z, r1
    138c:	3d c0       	rjmp	.+122    	; 0x1408 <_Z9serial_Rxh+0x298>
					}
					else if(textBuff[charIndex] == ' ')
    138e:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    1392:	88 2f       	mov	r24, r24
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	8a 5a       	subi	r24, 0xAA	; 170
    1398:	99 4b       	sbci	r25, 0xB9	; 185
    139a:	fc 01       	movw	r30, r24
    139c:	80 81       	ld	r24, Z
    139e:	80 32       	cpi	r24, 0x20	; 32
    13a0:	d9 f4       	brne	.+54     	; 0x13d8 <_Z9serial_Rxh+0x268>
					{
						field_index--;
    13a2:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    13a6:	81 50       	subi	r24, 0x01	; 1
    13a8:	80 93 8b 46 	sts	0x468B, r24	; 0x80468b <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
    13ac:	20 91 52 46 	lds	r18, 0x4652	; 0x804652 <__data_end>
    13b0:	30 91 53 46 	lds	r19, 0x4653	; 0x804653 <__data_end+0x1>
    13b4:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    13b8:	48 2f       	mov	r20, r24
    13ba:	50 e0       	ldi	r21, 0x00	; 0
    13bc:	64 e1       	ldi	r22, 0x14	; 20
    13be:	64 9f       	mul	r22, r20
    13c0:	c0 01       	movw	r24, r0
    13c2:	65 9f       	mul	r22, r21
    13c4:	90 0d       	add	r25, r0
    13c6:	11 24       	eor	r1, r1
    13c8:	03 96       	adiw	r24, 0x03	; 3
    13ca:	82 0f       	add	r24, r18
    13cc:	93 1f       	adc	r25, r19
    13ce:	0e 94 2f 75 	call	0xea5e	; 0xea5e <strlen>
    13d2:	80 93 8c 46 	sts	0x468C, r24	; 0x80468c <_ZZ9serial_RxhE9field_len>
    13d6:	18 c0       	rjmp	.+48     	; 0x1408 <_Z9serial_Rxh+0x298>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
    13d8:	20 91 52 46 	lds	r18, 0x4652	; 0x804652 <__data_end>
    13dc:	30 91 53 46 	lds	r19, 0x4653	; 0x804653 <__data_end+0x1>
    13e0:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    13e4:	48 2f       	mov	r20, r24
    13e6:	50 e0       	ldi	r21, 0x00	; 0
    13e8:	64 e1       	ldi	r22, 0x14	; 20
    13ea:	64 9f       	mul	r22, r20
    13ec:	c0 01       	movw	r24, r0
    13ee:	65 9f       	mul	r22, r21
    13f0:	90 0d       	add	r25, r0
    13f2:	11 24       	eor	r1, r1
    13f4:	82 0f       	add	r24, r18
    13f6:	93 1f       	adc	r25, r19
    13f8:	03 96       	adiw	r24, 0x03	; 3
    13fa:	fc 01       	movw	r30, r24
    13fc:	10 82       	st	Z, r1
						field_index--;
    13fe:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    1402:	81 50       	subi	r24, 0x01	; 1
    1404:	80 93 8b 46 	sts	0x468B, r24	; 0x80468b <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
    1408:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    140c:	88 2f       	mov	r24, r24
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	8a 5a       	subi	r24, 0xAA	; 170
    1412:	99 4b       	sbci	r25, 0xB9	; 185
    1414:	fc 01       	movw	r30, r24
    1416:	10 82       	st	Z, r1

					if(charIndex == 0)
    1418:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    141c:	88 23       	and	r24, r24
    141e:	09 f0       	breq	.+2      	; 0x1422 <_Z9serial_Rxh+0x2b2>
    1420:	1a c1       	rjmp	.+564    	; 0x1656 <_Z9serial_Rxh+0x4e6>
					{
						receiving_msg = false;
    1422:	10 92 88 46 	sts	0x4688, r1	; 0x804688 <_ZZ9serial_RxhE13receiving_msg>
    1426:	17 c1       	rjmp	.+558    	; 0x1656 <_Z9serial_Rxh+0x4e6>
					}
				}
				else
				{
					if(rx_char == ' ')
    1428:	8a 85       	ldd	r24, Y+10	; 0x0a
    142a:	80 32       	cpi	r24, 0x20	; 32
    142c:	09 f0       	breq	.+2      	; 0x1430 <_Z9serial_Rxh+0x2c0>
    142e:	55 c0       	rjmp	.+170    	; 0x14da <_Z9serial_Rxh+0x36a>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
    1430:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    1434:	88 2f       	mov	r24, r24
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	01 97       	sbiw	r24, 0x01	; 1
    143a:	8a 5a       	subi	r24, 0xAA	; 170
    143c:	99 4b       	sbci	r25, 0xB9	; 185
    143e:	fc 01       	movw	r30, r24
    1440:	80 81       	ld	r24, Z
    1442:	80 32       	cpi	r24, 0x20	; 32
    1444:	39 f0       	breq	.+14     	; 0x1454 <_Z9serial_Rxh+0x2e4>
    1446:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    144a:	88 2f       	mov	r24, r24
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	01 96       	adiw	r24, 0x01	; 1
    1450:	03 97       	sbiw	r24, 0x03	; 3
    1452:	14 f0       	brlt	.+4      	; 0x1458 <_Z9serial_Rxh+0x2e8>
						{
							rx_char = '\0';
    1454:	1a 86       	std	Y+10, r1	; 0x0a
    1456:	ff c0       	rjmp	.+510    	; 0x1656 <_Z9serial_Rxh+0x4e6>
						}
						else
						{
							if(field_index > 0)
    1458:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    145c:	88 23       	and	r24, r24
    145e:	e1 f0       	breq	.+56     	; 0x1498 <_Z9serial_Rxh+0x328>
							{
								buff->fields[field_index - 1][field_len] = '\0';
    1460:	40 91 52 46 	lds	r20, 0x4652	; 0x804652 <__data_end>
    1464:	50 91 53 46 	lds	r21, 0x4653	; 0x804653 <__data_end+0x1>
    1468:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    146c:	88 2f       	mov	r24, r24
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	bc 01       	movw	r22, r24
    1472:	61 50       	subi	r22, 0x01	; 1
    1474:	71 09       	sbc	r23, r1
    1476:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    147a:	88 2f       	mov	r24, r24
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	e4 e1       	ldi	r30, 0x14	; 20
    1480:	e6 9f       	mul	r30, r22
    1482:	90 01       	movw	r18, r0
    1484:	e7 9f       	mul	r30, r23
    1486:	30 0d       	add	r19, r0
    1488:	11 24       	eor	r1, r1
    148a:	24 0f       	add	r18, r20
    148c:	35 1f       	adc	r19, r21
    148e:	82 0f       	add	r24, r18
    1490:	93 1f       	adc	r25, r19
    1492:	03 96       	adiw	r24, 0x03	; 3
    1494:	fc 01       	movw	r30, r24
    1496:	10 82       	st	Z, r1
							}

							field_index++;
    1498:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    149c:	8f 5f       	subi	r24, 0xFF	; 255
    149e:	80 93 8b 46 	sts	0x468B, r24	; 0x80468b <_ZZ9serial_RxhE11field_index>
							field_len = 0;
    14a2:	10 92 8c 46 	sts	0x468C, r1	; 0x80468c <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    14a6:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    14aa:	88 2f       	mov	r24, r24
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	01 96       	adiw	r24, 0x01	; 1
    14b0:	8a 83       	std	Y+2, r24	; 0x02
    14b2:	9b 83       	std	Y+3, r25	; 0x03
    14b4:	81 e3       	ldi	r24, 0x31	; 49
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	8c 83       	std	Y+4, r24	; 0x04
    14ba:	9d 83       	std	Y+5, r25	; 0x05
    14bc:	2a 81       	ldd	r18, Y+2	; 0x02
    14be:	3b 81       	ldd	r19, Y+3	; 0x03
    14c0:	8c 81       	ldd	r24, Y+4	; 0x04
    14c2:	9d 81       	ldd	r25, Y+5	; 0x05
    14c4:	28 17       	cp	r18, r24
    14c6:	39 07       	cpc	r19, r25
    14c8:	1c f4       	brge	.+6      	; 0x14d0 <_Z9serial_Rxh+0x360>
    14ca:	8a 81       	ldd	r24, Y+2	; 0x02
    14cc:	9b 81       	ldd	r25, Y+3	; 0x03
    14ce:	02 c0       	rjmp	.+4      	; 0x14d4 <_Z9serial_Rxh+0x364>
    14d0:	8c 81       	ldd	r24, Y+4	; 0x04
    14d2:	9d 81       	ldd	r25, Y+5	; 0x05
    14d4:	80 93 55 46 	sts	0x4655, r24	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    14d8:	be c0       	rjmp	.+380    	; 0x1656 <_Z9serial_Rxh+0x4e6>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
    14da:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    14de:	85 31       	cpi	r24, 0x15	; 21
    14e0:	08 f0       	brcs	.+2      	; 0x14e4 <_Z9serial_Rxh+0x374>
    14e2:	77 c0       	rjmp	.+238    	; 0x15d2 <_Z9serial_Rxh+0x462>
					{
						if(field_index == 0)    /* message ID received */
    14e4:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    14e8:	88 23       	and	r24, r24
    14ea:	e1 f4       	brne	.+56     	; 0x1524 <_Z9serial_Rxh+0x3b4>
						{
							msg_ID = msg_ID * 10 + rx_char;
    14ec:	80 91 89 46 	lds	r24, 0x4689	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    14f0:	90 91 8a 46 	lds	r25, 0x468A	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
    14f4:	88 0f       	add	r24, r24
    14f6:	99 1f       	adc	r25, r25
    14f8:	9c 01       	movw	r18, r24
    14fa:	22 0f       	add	r18, r18
    14fc:	33 1f       	adc	r19, r19
    14fe:	22 0f       	add	r18, r18
    1500:	33 1f       	adc	r19, r19
    1502:	28 0f       	add	r18, r24
    1504:	39 1f       	adc	r19, r25
    1506:	8a 85       	ldd	r24, Y+10	; 0x0a
    1508:	88 2f       	mov	r24, r24
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	82 0f       	add	r24, r18
    150e:	93 1f       	adc	r25, r19
    1510:	80 93 89 46 	sts	0x4689, r24	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    1514:	90 93 8a 46 	sts	0x468A, r25	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
    1518:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    151c:	8f 5f       	subi	r24, 0xFF	; 255
    151e:	80 93 8c 46 	sts	0x468C, r24	; 0x80468c <_ZZ9serial_RxhE9field_len>
    1522:	3d c0       	rjmp	.+122    	; 0x159e <_Z9serial_Rxh+0x42e>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
    1524:	40 91 52 46 	lds	r20, 0x4652	; 0x804652 <__data_end>
    1528:	50 91 53 46 	lds	r21, 0x4653	; 0x804653 <__data_end+0x1>
    152c:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    1530:	88 2f       	mov	r24, r24
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	bc 01       	movw	r22, r24
    1536:	61 50       	subi	r22, 0x01	; 1
    1538:	71 09       	sbc	r23, r1
    153a:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    153e:	91 e0       	ldi	r25, 0x01	; 1
    1540:	98 0f       	add	r25, r24
    1542:	90 93 8c 46 	sts	0x468C, r25	; 0x80468c <_ZZ9serial_RxhE9field_len>
    1546:	88 2f       	mov	r24, r24
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	e4 e1       	ldi	r30, 0x14	; 20
    154c:	e6 9f       	mul	r30, r22
    154e:	90 01       	movw	r18, r0
    1550:	e7 9f       	mul	r30, r23
    1552:	30 0d       	add	r19, r0
    1554:	11 24       	eor	r1, r1
    1556:	24 0f       	add	r18, r20
    1558:	35 1f       	adc	r19, r21
    155a:	82 0f       	add	r24, r18
    155c:	93 1f       	adc	r25, r19
    155e:	03 96       	adiw	r24, 0x03	; 3
    1560:	2a 85       	ldd	r18, Y+10	; 0x0a
    1562:	fc 01       	movw	r30, r24
    1564:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
    1566:	40 91 52 46 	lds	r20, 0x4652	; 0x804652 <__data_end>
    156a:	50 91 53 46 	lds	r21, 0x4653	; 0x804653 <__data_end+0x1>
    156e:	80 91 8b 46 	lds	r24, 0x468B	; 0x80468b <_ZZ9serial_RxhE11field_index>
    1572:	88 2f       	mov	r24, r24
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	bc 01       	movw	r22, r24
    1578:	61 50       	subi	r22, 0x01	; 1
    157a:	71 09       	sbc	r23, r1
    157c:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ9serial_RxhE9field_len>
    1580:	88 2f       	mov	r24, r24
    1582:	90 e0       	ldi	r25, 0x00	; 0
    1584:	e4 e1       	ldi	r30, 0x14	; 20
    1586:	e6 9f       	mul	r30, r22
    1588:	90 01       	movw	r18, r0
    158a:	e7 9f       	mul	r30, r23
    158c:	30 0d       	add	r19, r0
    158e:	11 24       	eor	r1, r1
    1590:	24 0f       	add	r18, r20
    1592:	35 1f       	adc	r19, r21
    1594:	82 0f       	add	r24, r18
    1596:	93 1f       	adc	r25, r19
    1598:	03 96       	adiw	r24, 0x03	; 3
    159a:	fc 01       	movw	r30, r24
    159c:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    159e:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    15a2:	88 2f       	mov	r24, r24
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	01 96       	adiw	r24, 0x01	; 1
    15a8:	8e 83       	std	Y+6, r24	; 0x06
    15aa:	9f 83       	std	Y+7, r25	; 0x07
    15ac:	81 e3       	ldi	r24, 0x31	; 49
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	88 87       	std	Y+8, r24	; 0x08
    15b2:	99 87       	std	Y+9, r25	; 0x09
    15b4:	2e 81       	ldd	r18, Y+6	; 0x06
    15b6:	3f 81       	ldd	r19, Y+7	; 0x07
    15b8:	88 85       	ldd	r24, Y+8	; 0x08
    15ba:	99 85       	ldd	r25, Y+9	; 0x09
    15bc:	28 17       	cp	r18, r24
    15be:	39 07       	cpc	r19, r25
    15c0:	1c f4       	brge	.+6      	; 0x15c8 <_Z9serial_Rxh+0x458>
    15c2:	8e 81       	ldd	r24, Y+6	; 0x06
    15c4:	9f 81       	ldd	r25, Y+7	; 0x07
    15c6:	02 c0       	rjmp	.+4      	; 0x15cc <_Z9serial_Rxh+0x45c>
    15c8:	88 85       	ldd	r24, Y+8	; 0x08
    15ca:	99 85       	ldd	r25, Y+9	; 0x09
    15cc:	80 93 55 46 	sts	0x4655, r24	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    15d0:	42 c0       	rjmp	.+132    	; 0x1656 <_Z9serial_Rxh+0x4e6>
					}
					else
					{
						rx_char = '\0';
    15d2:	1a 86       	std	Y+10, r1	; 0x0a
    15d4:	40 c0       	rjmp	.+128    	; 0x1656 <_Z9serial_Rxh+0x4e6>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
    15d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    15d8:	8f 37       	cpi	r24, 0x7F	; 127
    15da:	69 f4       	brne	.+26     	; 0x15f6 <_Z9serial_Rxh+0x486>
				{
					if(msg_ID <= 0)
    15dc:	80 91 89 46 	lds	r24, 0x4689	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    15e0:	90 91 8a 46 	lds	r25, 0x468A	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
    15e4:	18 16       	cp	r1, r24
    15e6:	19 06       	cpc	r1, r25
    15e8:	0c f0       	brlt	.+2      	; 0x15ec <_Z9serial_Rxh+0x47c>
					{
						rx_char = '\0';
    15ea:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
    15ec:	10 92 89 46 	sts	0x4689, r1	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    15f0:	10 92 8a 46 	sts	0x468A, r1	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>
    15f4:	30 c0       	rjmp	.+96     	; 0x1656 <_Z9serial_Rxh+0x4e6>
				}
				else if(rx_char == ' ') /* Handle Space */
    15f6:	8a 85       	ldd	r24, Y+10	; 0x0a
    15f8:	80 32       	cpi	r24, 0x20	; 32
    15fa:	11 f4       	brne	.+4      	; 0x1600 <_Z9serial_Rxh+0x490>
				{
					rx_char = '\0';
    15fc:	1a 86       	std	Y+10, r1	; 0x0a
    15fe:	2b c0       	rjmp	.+86     	; 0x1656 <_Z9serial_Rxh+0x4e6>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
    1600:	10 92 8b 46 	sts	0x468B, r1	; 0x80468b <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
    1604:	8a 85       	ldd	r24, Y+10	; 0x0a
    1606:	88 2f       	mov	r24, r24
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	80 93 89 46 	sts	0x4689, r24	; 0x804689 <_ZZ9serial_RxhE6msg_ID>
    160e:	90 93 8a 46 	sts	0x468A, r25	; 0x80468a <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    1612:	19 82       	std	Y+1, r1	; 0x01
    1614:	89 81       	ldd	r24, Y+1	; 0x01
    1616:	83 30       	cpi	r24, 0x03	; 3
    1618:	b0 f4       	brcc	.+44     	; 0x1646 <_Z9serial_Rxh+0x4d6>
					{
						buff->fields[i][0] = '\0';
    161a:	20 91 52 46 	lds	r18, 0x4652	; 0x804652 <__data_end>
    161e:	30 91 53 46 	lds	r19, 0x4653	; 0x804653 <__data_end+0x1>
    1622:	89 81       	ldd	r24, Y+1	; 0x01
    1624:	48 2f       	mov	r20, r24
    1626:	50 e0       	ldi	r21, 0x00	; 0
    1628:	64 e1       	ldi	r22, 0x14	; 20
    162a:	64 9f       	mul	r22, r20
    162c:	c0 01       	movw	r24, r0
    162e:	65 9f       	mul	r22, r21
    1630:	90 0d       	add	r25, r0
    1632:	11 24       	eor	r1, r1
    1634:	82 0f       	add	r24, r18
    1636:	93 1f       	adc	r25, r19
    1638:	03 96       	adiw	r24, 0x03	; 3
    163a:	fc 01       	movw	r30, r24
    163c:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    163e:	89 81       	ldd	r24, Y+1	; 0x01
    1640:	8f 5f       	subi	r24, 0xFF	; 255
    1642:	89 83       	std	Y+1, r24	; 0x01
    1644:	e7 cf       	rjmp	.-50     	; 0x1614 <_Z9serial_Rxh+0x4a4>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
    1646:	81 e0       	ldi	r24, 0x01	; 1
    1648:	80 93 88 46 	sts	0x4688, r24	; 0x804688 <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
    164c:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZZ9serial_RxhE9charIndex>
    1650:	8f 5f       	subi	r24, 0xFF	; 255
    1652:	80 93 55 46 	sts	0x4655, r24	; 0x804655 <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
    1656:	8a 85       	ldd	r24, Y+10	; 0x0a
    1658:	88 23       	and	r24, r24
    165a:	19 f0       	breq	.+6      	; 0x1662 <_Z9serial_Rxh+0x4f2>
			{
				sb_echo_char(rx_char);
    165c:	8a 85       	ldd	r24, Y+10	; 0x0a
    165e:	0e 94 ef 59 	call	0xb3de	; 0xb3de <sb_echo_char>
			}
		}
	}	
}
    1662:	00 00       	nop
    1664:	2a 96       	adiw	r28, 0x0a	; 10
    1666:	cd bf       	out	0x3d, r28	; 61
    1668:	de bf       	out	0x3e, r29	; 62
    166a:	df 91       	pop	r29
    166c:	cf 91       	pop	r28
    166e:	08 95       	ret

00001670 <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
    1670:	1f 92       	push	r1
    1672:	0f 92       	push	r0
    1674:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1678:	0f 92       	push	r0
    167a:	11 24       	eor	r1, r1
    167c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1680:	0f 92       	push	r0
    1682:	2f 93       	push	r18
    1684:	3f 93       	push	r19
    1686:	4f 93       	push	r20
    1688:	5f 93       	push	r21
    168a:	6f 93       	push	r22
    168c:	7f 93       	push	r23
    168e:	8f 93       	push	r24
    1690:	9f 93       	push	r25
    1692:	af 93       	push	r26
    1694:	bf 93       	push	r27
    1696:	ef 93       	push	r30
    1698:	ff 93       	push	r31
    169a:	cf 93       	push	r28
    169c:	df 93       	push	r29
    169e:	cd b7       	in	r28, 0x3d	; 61
    16a0:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
    16a2:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    16a6:	88 23       	and	r24, r24
    16a8:	09 f0       	breq	.+2      	; 0x16ac <__vector_20+0x3c>
    16aa:	45 c0       	rjmp	.+138    	; 0x1736 <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    16ac:	80 91 8d 46 	lds	r24, 0x468D	; 0x80468d <_ZZ11__vector_20E4buff>
    16b0:	90 91 8e 46 	lds	r25, 0x468E	; 0x80468e <_ZZ11__vector_20E4buff+0x1>
    16b4:	89 2b       	or	r24, r25
    16b6:	31 f4       	brne	.+12     	; 0x16c4 <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
    16b8:	0e 94 28 4e 	call	0x9c50	; 0x9c50 <_Z18nextFullLBTxBufferv>
    16bc:	80 93 8d 46 	sts	0x468D, r24	; 0x80468d <_ZZ11__vector_20E4buff>
    16c0:	90 93 8e 46 	sts	0x468E, r25	; 0x80468e <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
    16c4:	20 91 8d 46 	lds	r18, 0x468D	; 0x80468d <_ZZ11__vector_20E4buff>
    16c8:	30 91 8e 46 	lds	r19, 0x468E	; 0x80468e <_ZZ11__vector_20E4buff+0x1>
    16cc:	80 91 8f 46 	lds	r24, 0x468F	; 0x80468f <_ZZ11__vector_20E9charIndex>
    16d0:	88 2f       	mov	r24, r24
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	82 0f       	add	r24, r18
    16d6:	93 1f       	adc	r25, r19
    16d8:	fc 01       	movw	r30, r24
    16da:	80 81       	ld	r24, Z
    16dc:	88 23       	and	r24, r24
    16de:	a9 f0       	breq	.+42     	; 0x170a <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    16e0:	80 e0       	ldi	r24, 0x00	; 0
    16e2:	98 e0       	ldi	r25, 0x08	; 8
    16e4:	40 91 8d 46 	lds	r20, 0x468D	; 0x80468d <_ZZ11__vector_20E4buff>
    16e8:	50 91 8e 46 	lds	r21, 0x468E	; 0x80468e <_ZZ11__vector_20E4buff+0x1>
    16ec:	20 91 8f 46 	lds	r18, 0x468F	; 0x80468f <_ZZ11__vector_20E9charIndex>
    16f0:	31 e0       	ldi	r19, 0x01	; 1
    16f2:	32 0f       	add	r19, r18
    16f4:	30 93 8f 46 	sts	0x468F, r19	; 0x80468f <_ZZ11__vector_20E9charIndex>
    16f8:	22 2f       	mov	r18, r18
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	24 0f       	add	r18, r20
    16fe:	35 1f       	adc	r19, r21
    1700:	f9 01       	movw	r30, r18
    1702:	20 81       	ld	r18, Z
    1704:	fc 01       	movw	r30, r24
    1706:	22 83       	std	Z+2, r18	; 0x02
    1708:	16 c0       	rjmp	.+44     	; 0x1736 <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
    170a:	10 92 8f 46 	sts	0x468F, r1	; 0x80468f <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
    170e:	80 91 8d 46 	lds	r24, 0x468D	; 0x80468d <_ZZ11__vector_20E4buff>
    1712:	90 91 8e 46 	lds	r25, 0x468E	; 0x80468e <_ZZ11__vector_20E4buff+0x1>
    1716:	fc 01       	movw	r30, r24
    1718:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    171a:	0e 94 28 4e 	call	0x9c50	; 0x9c50 <_Z18nextFullLBTxBufferv>
    171e:	80 93 8d 46 	sts	0x468D, r24	; 0x80468d <_ZZ11__vector_20E4buff>
    1722:	90 93 8e 46 	sts	0x468E, r25	; 0x80468e <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
    1726:	80 91 8d 46 	lds	r24, 0x468D	; 0x80468d <_ZZ11__vector_20E4buff>
    172a:	90 91 8e 46 	lds	r25, 0x468E	; 0x80468e <_ZZ11__vector_20E4buff+0x1>
    172e:	89 2b       	or	r24, r25
    1730:	11 f4       	brne	.+4      	; 0x1736 <__vector_20+0xc6>
			{
				linkbus_end_tx();
    1732:	0e 94 6d 4f 	call	0x9eda	; 0x9eda <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
    1736:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_serialbus_usart_number>
    173a:	88 23       	and	r24, r24
    173c:	09 f0       	breq	.+2      	; 0x1740 <__vector_20+0xd0>
    173e:	45 c0       	rjmp	.+138    	; 0x17ca <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1740:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_20E4buff_0>
    1744:	90 91 91 46 	lds	r25, 0x4691	; 0x804691 <_ZZ11__vector_20E4buff_0+0x1>
    1748:	89 2b       	or	r24, r25
    174a:	31 f4       	brne	.+12     	; 0x1758 <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
    174c:	0e 94 55 57 	call	0xaeaa	; 0xaeaa <nextFullSBTxBuffer>
    1750:	80 93 90 46 	sts	0x4690, r24	; 0x804690 <_ZZ11__vector_20E4buff_0>
    1754:	90 93 91 46 	sts	0x4691, r25	; 0x804691 <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1758:	20 91 90 46 	lds	r18, 0x4690	; 0x804690 <_ZZ11__vector_20E4buff_0>
    175c:	30 91 91 46 	lds	r19, 0x4691	; 0x804691 <_ZZ11__vector_20E4buff_0+0x1>
    1760:	80 91 92 46 	lds	r24, 0x4692	; 0x804692 <_ZZ11__vector_20E9charIndex_0>
    1764:	88 2f       	mov	r24, r24
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	82 0f       	add	r24, r18
    176a:	93 1f       	adc	r25, r19
    176c:	fc 01       	movw	r30, r24
    176e:	80 81       	ld	r24, Z
    1770:	88 23       	and	r24, r24
    1772:	a9 f0       	breq	.+42     	; 0x179e <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    1774:	80 e0       	ldi	r24, 0x00	; 0
    1776:	98 e0       	ldi	r25, 0x08	; 8
    1778:	40 91 90 46 	lds	r20, 0x4690	; 0x804690 <_ZZ11__vector_20E4buff_0>
    177c:	50 91 91 46 	lds	r21, 0x4691	; 0x804691 <_ZZ11__vector_20E4buff_0+0x1>
    1780:	20 91 92 46 	lds	r18, 0x4692	; 0x804692 <_ZZ11__vector_20E9charIndex_0>
    1784:	31 e0       	ldi	r19, 0x01	; 1
    1786:	32 0f       	add	r19, r18
    1788:	30 93 92 46 	sts	0x4692, r19	; 0x804692 <_ZZ11__vector_20E9charIndex_0>
    178c:	22 2f       	mov	r18, r18
    178e:	30 e0       	ldi	r19, 0x00	; 0
    1790:	24 0f       	add	r18, r20
    1792:	35 1f       	adc	r19, r21
    1794:	f9 01       	movw	r30, r18
    1796:	20 81       	ld	r18, Z
    1798:	fc 01       	movw	r30, r24
    179a:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    179c:	16 c0       	rjmp	.+44     	; 0x17ca <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    179e:	10 92 92 46 	sts	0x4692, r1	; 0x804692 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
    17a2:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_20E4buff_0>
    17a6:	90 91 91 46 	lds	r25, 0x4691	; 0x804691 <_ZZ11__vector_20E4buff_0+0x1>
    17aa:	fc 01       	movw	r30, r24
    17ac:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    17ae:	0e 94 55 57 	call	0xaeaa	; 0xaeaa <nextFullSBTxBuffer>
    17b2:	80 93 90 46 	sts	0x4690, r24	; 0x804690 <_ZZ11__vector_20E4buff_0>
    17b6:	90 93 91 46 	sts	0x4691, r25	; 0x804691 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
    17ba:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_20E4buff_0>
    17be:	90 91 91 46 	lds	r25, 0x4691	; 0x804691 <_ZZ11__vector_20E4buff_0+0x1>
    17c2:	89 2b       	or	r24, r25
    17c4:	11 f4       	brne	.+4      	; 0x17ca <__vector_20+0x15a>
			{
				serialbus_end_tx();
    17c6:	0e 94 aa 58 	call	0xb154	; 0xb154 <serialbus_end_tx>
			}
		}
	}
}
    17ca:	00 00       	nop
    17cc:	df 91       	pop	r29
    17ce:	cf 91       	pop	r28
    17d0:	ff 91       	pop	r31
    17d2:	ef 91       	pop	r30
    17d4:	bf 91       	pop	r27
    17d6:	af 91       	pop	r26
    17d8:	9f 91       	pop	r25
    17da:	8f 91       	pop	r24
    17dc:	7f 91       	pop	r23
    17de:	6f 91       	pop	r22
    17e0:	5f 91       	pop	r21
    17e2:	4f 91       	pop	r20
    17e4:	3f 91       	pop	r19
    17e6:	2f 91       	pop	r18
    17e8:	0f 90       	pop	r0
    17ea:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    17ee:	0f 90       	pop	r0
    17f0:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17f4:	0f 90       	pop	r0
    17f6:	1f 90       	pop	r1
    17f8:	18 95       	reti

000017fa <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    17fa:	1f 92       	push	r1
    17fc:	0f 92       	push	r0
    17fe:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1802:	0f 92       	push	r0
    1804:	11 24       	eor	r1, r1
    1806:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    180a:	0f 92       	push	r0
    180c:	2f 93       	push	r18
    180e:	3f 93       	push	r19
    1810:	4f 93       	push	r20
    1812:	5f 93       	push	r21
    1814:	6f 93       	push	r22
    1816:	7f 93       	push	r23
    1818:	8f 93       	push	r24
    181a:	9f 93       	push	r25
    181c:	af 93       	push	r26
    181e:	bf 93       	push	r27
    1820:	ef 93       	push	r30
    1822:	ff 93       	push	r31
    1824:	cf 93       	push	r28
    1826:	df 93       	push	r29
    1828:	1f 92       	push	r1
    182a:	cd b7       	in	r28, 0x3d	; 61
    182c:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
    182e:	0e 94 e0 6b 	call	0xd7c0	; 0xd7c0 <USART1_get_data>
    1832:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
    1834:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1838:	81 30       	cpi	r24, 0x01	; 1
    183a:	19 f4       	brne	.+6      	; 0x1842 <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
    183c:	89 81       	ldd	r24, Y+1	; 0x01
    183e:	0e 94 41 0c 	call	0x1882	; 0x1882 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
    1842:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_serialbus_usart_number>
    1846:	81 30       	cpi	r24, 0x01	; 1
    1848:	19 f4       	brne	.+6      	; 0x1850 <__vector_31+0x56>
	{
		serial_Rx(rx_char);
    184a:	89 81       	ldd	r24, Y+1	; 0x01
    184c:	0e 94 b8 08 	call	0x1170	; 0x1170 <_Z9serial_Rxh>
	}
}
    1850:	00 00       	nop
    1852:	0f 90       	pop	r0
    1854:	df 91       	pop	r29
    1856:	cf 91       	pop	r28
    1858:	ff 91       	pop	r31
    185a:	ef 91       	pop	r30
    185c:	bf 91       	pop	r27
    185e:	af 91       	pop	r26
    1860:	9f 91       	pop	r25
    1862:	8f 91       	pop	r24
    1864:	7f 91       	pop	r23
    1866:	6f 91       	pop	r22
    1868:	5f 91       	pop	r21
    186a:	4f 91       	pop	r20
    186c:	3f 91       	pop	r19
    186e:	2f 91       	pop	r18
    1870:	0f 90       	pop	r0
    1872:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1876:	0f 90       	pop	r0
    1878:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    187c:	0f 90       	pop	r0
    187e:	1f 90       	pop	r1
    1880:	18 95       	reti

00001882 <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
    1882:	cf 93       	push	r28
    1884:	df 93       	push	r29
    1886:	1f 92       	push	r1
    1888:	cd b7       	in	r28, 0x3d	; 61
    188a:	de b7       	in	r29, 0x3e	; 62
    188c:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;
	static bool escapeNext = false;

	if(!buff)
    188e:	80 91 93 46 	lds	r24, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    1892:	90 91 94 46 	lds	r25, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    1896:	89 2b       	or	r24, r25
    1898:	31 f4       	brne	.+12     	; 0x18a6 <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    189a:	0e 94 b6 4e 	call	0x9d6c	; 0x9d6c <_Z19nextEmptyLBRxBufferv>
    189e:	80 93 93 46 	sts	0x4693, r24	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    18a2:	90 93 94 46 	sts	0x4694, r25	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    18a6:	80 91 93 46 	lds	r24, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    18aa:	90 91 94 46 	lds	r25, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    18ae:	89 2b       	or	r24, r25
    18b0:	09 f4       	brne	.+2      	; 0x18b4 <_Z10linkbus_Rxh+0x32>
    18b2:	66 c1       	rjmp	.+716    	; 0x1b80 <_Z10linkbus_Rxh+0x2fe>
	{
		rx_char = toupper(rx_char);
    18b4:	89 81       	ldd	r24, Y+1	; 0x01
    18b6:	88 2f       	mov	r24, r24
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	0e 94 fa 74 	call	0xe9f4	; 0xe9f4 <toupper>
    18be:	89 83       	std	Y+1, r24	; 0x01
		
		if(!escapeNext && (rx_char == '\\'))
    18c0:	90 91 95 46 	lds	r25, 0x4695	; 0x804695 <_ZZ10linkbus_RxhE10escapeNext>
    18c4:	81 e0       	ldi	r24, 0x01	; 1
    18c6:	89 27       	eor	r24, r25
    18c8:	88 23       	and	r24, r24
    18ca:	39 f0       	breq	.+14     	; 0x18da <_Z10linkbus_Rxh+0x58>
    18cc:	89 81       	ldd	r24, Y+1	; 0x01
    18ce:	8c 35       	cpi	r24, 0x5C	; 92
    18d0:	21 f4       	brne	.+8      	; 0x18da <_Z10linkbus_Rxh+0x58>
		{
			escapeNext = true;
    18d2:	81 e0       	ldi	r24, 0x01	; 1
    18d4:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ10linkbus_RxhE10escapeNext>
    18d8:	3c c1       	rjmp	.+632    	; 0x1b52 <_Z10linkbus_Rxh+0x2d0>
		}
		else if(!escapeNext && ((rx_char == '$') || (rx_char == '!')))    /* start of new message = $ */
    18da:	90 91 95 46 	lds	r25, 0x4695	; 0x804695 <_ZZ10linkbus_RxhE10escapeNext>
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	89 27       	eor	r24, r25
    18e2:	88 23       	and	r24, r24
    18e4:	09 f4       	brne	.+2      	; 0x18e8 <_Z10linkbus_Rxh+0x66>
    18e6:	43 c0       	rjmp	.+134    	; 0x196e <_Z10linkbus_Rxh+0xec>
    18e8:	89 81       	ldd	r24, Y+1	; 0x01
    18ea:	84 32       	cpi	r24, 0x24	; 36
    18ec:	19 f0       	breq	.+6      	; 0x18f4 <_Z10linkbus_Rxh+0x72>
    18ee:	89 81       	ldd	r24, Y+1	; 0x01
    18f0:	81 32       	cpi	r24, 0x21	; 33
    18f2:	e9 f5       	brne	.+122    	; 0x196e <_Z10linkbus_Rxh+0xec>
		{
			charIndex = 0;
    18f4:	10 92 96 46 	sts	0x4696, r1	; 0x804696 <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    18f8:	80 91 93 46 	lds	r24, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    18fc:	90 91 94 46 	lds	r25, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    1900:	29 81       	ldd	r18, Y+1	; 0x01
    1902:	21 32       	cpi	r18, 0x21	; 33
    1904:	11 f4       	brne	.+4      	; 0x190a <_Z10linkbus_Rxh+0x88>
    1906:	23 e0       	ldi	r18, 0x03	; 3
    1908:	01 c0       	rjmp	.+2      	; 0x190c <_Z10linkbus_Rxh+0x8a>
    190a:	21 e0       	ldi	r18, 0x01	; 1
    190c:	fc 01       	movw	r30, r24
    190e:	20 83       	st	Z, r18
			field_len = 0;
    1910:	10 92 97 46 	sts	0x4697, r1	; 0x804697 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1914:	10 92 98 46 	sts	0x4698, r1	; 0x804698 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1918:	10 92 99 46 	sts	0x4699, r1	; 0x804699 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    191c:	10 92 9a 46 	sts	0x469A, r1	; 0x80469a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1920:	10 92 9b 46 	sts	0x469B, r1	; 0x80469b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1924:	81 e0       	ldi	r24, 0x01	; 1
    1926:	80 93 9c 46 	sts	0x469C, r24	; 0x80469c <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    192a:	10 92 9d 46 	sts	0x469D, r1	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    192e:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    1932:	83 30       	cpi	r24, 0x03	; 3
    1934:	c8 f4       	brcc	.+50     	; 0x1968 <_Z10linkbus_Rxh+0xe6>
			{
				buff->fields[field_index][0] = '\0';
    1936:	20 91 93 46 	lds	r18, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    193a:	30 91 94 46 	lds	r19, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    193e:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    1942:	48 2f       	mov	r20, r24
    1944:	50 e0       	ldi	r21, 0x00	; 0
    1946:	65 e1       	ldi	r22, 0x15	; 21
    1948:	64 9f       	mul	r22, r20
    194a:	c0 01       	movw	r24, r0
    194c:	65 9f       	mul	r22, r21
    194e:	90 0d       	add	r25, r0
    1950:	11 24       	eor	r1, r1
    1952:	82 0f       	add	r24, r18
    1954:	93 1f       	adc	r25, r19
    1956:	03 96       	adiw	r24, 0x03	; 3
    1958:	fc 01       	movw	r30, r24
    195a:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    195c:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    1960:	8f 5f       	subi	r24, 0xFF	; 255
    1962:	80 93 9d 46 	sts	0x469D, r24	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    1966:	e3 cf       	rjmp	.-58     	; 0x192e <_Z10linkbus_Rxh+0xac>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    1968:	10 92 9d 46 	sts	0x469D, r1	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    196c:	f2 c0       	rjmp	.+484    	; 0x1b52 <_Z10linkbus_Rxh+0x2d0>
		}
		else if(receiving_msg)
    196e:	80 91 9c 46 	lds	r24, 0x469C	; 0x80469c <_ZZ10linkbus_RxhE13receiving_msg>
    1972:	88 23       	and	r24, r24
    1974:	09 f4       	brne	.+2      	; 0x1978 <_Z10linkbus_Rxh+0xf6>
    1976:	d0 c0       	rjmp	.+416    	; 0x1b18 <_Z10linkbus_Rxh+0x296>
		{
			if(!escapeNext && ((rx_char == ',') || (rx_char == ';') || (rx_char == '?')))   /* new field = ,; end of message = ; */
    1978:	90 91 95 46 	lds	r25, 0x4695	; 0x804695 <_ZZ10linkbus_RxhE10escapeNext>
    197c:	81 e0       	ldi	r24, 0x01	; 1
    197e:	89 27       	eor	r24, r25
    1980:	88 23       	and	r24, r24
    1982:	09 f4       	brne	.+2      	; 0x1986 <_Z10linkbus_Rxh+0x104>
    1984:	75 c0       	rjmp	.+234    	; 0x1a70 <_Z10linkbus_Rxh+0x1ee>
    1986:	89 81       	ldd	r24, Y+1	; 0x01
    1988:	8c 32       	cpi	r24, 0x2C	; 44
    198a:	39 f0       	breq	.+14     	; 0x199a <_Z10linkbus_Rxh+0x118>
    198c:	89 81       	ldd	r24, Y+1	; 0x01
    198e:	8b 33       	cpi	r24, 0x3B	; 59
    1990:	21 f0       	breq	.+8      	; 0x199a <_Z10linkbus_Rxh+0x118>
    1992:	89 81       	ldd	r24, Y+1	; 0x01
    1994:	8f 33       	cpi	r24, 0x3F	; 63
    1996:	09 f0       	breq	.+2      	; 0x199a <_Z10linkbus_Rxh+0x118>
    1998:	6b c0       	rjmp	.+214    	; 0x1a70 <_Z10linkbus_Rxh+0x1ee>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    199a:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    199e:	88 23       	and	r24, r24
    19a0:	e1 f0       	breq	.+56     	; 0x19da <_Z10linkbus_Rxh+0x158>
				{
					buff->fields[field_index - 1][field_len] = 0;
    19a2:	40 91 93 46 	lds	r20, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    19a6:	50 91 94 46 	lds	r21, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    19aa:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    19ae:	88 2f       	mov	r24, r24
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	bc 01       	movw	r22, r24
    19b4:	61 50       	subi	r22, 0x01	; 1
    19b6:	71 09       	sbc	r23, r1
    19b8:	80 91 97 46 	lds	r24, 0x4697	; 0x804697 <_ZZ10linkbus_RxhE9field_len>
    19bc:	88 2f       	mov	r24, r24
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	e5 e1       	ldi	r30, 0x15	; 21
    19c2:	e6 9f       	mul	r30, r22
    19c4:	90 01       	movw	r18, r0
    19c6:	e7 9f       	mul	r30, r23
    19c8:	30 0d       	add	r19, r0
    19ca:	11 24       	eor	r1, r1
    19cc:	24 0f       	add	r18, r20
    19ce:	35 1f       	adc	r19, r21
    19d0:	82 0f       	add	r24, r18
    19d2:	93 1f       	adc	r25, r19
    19d4:	03 96       	adiw	r24, 0x03	; 3
    19d6:	fc 01       	movw	r30, r24
    19d8:	10 82       	st	Z, r1
				}

				field_index++;
    19da:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    19de:	8f 5f       	subi	r24, 0xFF	; 255
    19e0:	80 93 9d 46 	sts	0x469D, r24	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    19e4:	10 92 97 46 	sts	0x4697, r1	; 0x804697 <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    19e8:	89 81       	ldd	r24, Y+1	; 0x01
    19ea:	8b 33       	cpi	r24, 0x3B	; 59
    19ec:	b1 f4       	brne	.+44     	; 0x1a1a <_Z10linkbus_Rxh+0x198>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    19ee:	80 91 96 46 	lds	r24, 0x4696	; 0x804696 <_ZZ10linkbus_RxhE9charIndex>
    19f2:	84 30       	cpi	r24, 0x04	; 4
    19f4:	78 f0       	brcs	.+30     	; 0x1a14 <_Z10linkbus_Rxh+0x192>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    19f6:	20 91 93 46 	lds	r18, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    19fa:	30 91 94 46 	lds	r19, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    19fe:	80 91 98 46 	lds	r24, 0x4698	; 0x804698 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1a02:	90 91 99 46 	lds	r25, 0x4699	; 0x804699 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1a06:	a0 91 9a 46 	lds	r26, 0x469A	; 0x80469a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1a0a:	b0 91 9b 46 	lds	r27, 0x469B	; 0x80469b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1a0e:	f9 01       	movw	r30, r18
    1a10:	81 83       	std	Z+1, r24	; 0x01
    1a12:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1a14:	10 92 9c 46 	sts	0x469C, r1	; 0x80469c <_ZZ10linkbus_RxhE13receiving_msg>
    1a18:	1f c0       	rjmp	.+62     	; 0x1a58 <_Z10linkbus_Rxh+0x1d6>
				}
				else if(rx_char == '?')
    1a1a:	89 81       	ldd	r24, Y+1	; 0x01
    1a1c:	8f 33       	cpi	r24, 0x3F	; 63
    1a1e:	e1 f4       	brne	.+56     	; 0x1a58 <_Z10linkbus_Rxh+0x1d6>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1a20:	80 91 93 46 	lds	r24, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    1a24:	90 91 94 46 	lds	r25, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    1a28:	22 e0       	ldi	r18, 0x02	; 2
    1a2a:	fc 01       	movw	r30, r24
    1a2c:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1a2e:	80 91 96 46 	lds	r24, 0x4696	; 0x804696 <_ZZ10linkbus_RxhE9charIndex>
    1a32:	83 30       	cpi	r24, 0x03	; 3
    1a34:	78 f0       	brcs	.+30     	; 0x1a54 <_Z10linkbus_Rxh+0x1d2>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1a36:	20 91 93 46 	lds	r18, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    1a3a:	30 91 94 46 	lds	r19, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    1a3e:	80 91 98 46 	lds	r24, 0x4698	; 0x804698 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1a42:	90 91 99 46 	lds	r25, 0x4699	; 0x804699 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1a46:	a0 91 9a 46 	lds	r26, 0x469A	; 0x80469a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1a4a:	b0 91 9b 46 	lds	r27, 0x469B	; 0x80469b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1a4e:	f9 01       	movw	r30, r18
    1a50:	81 83       	std	Z+1, r24	; 0x01
    1a52:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1a54:	10 92 9c 46 	sts	0x469C, r1	; 0x80469c <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    1a58:	90 91 9c 46 	lds	r25, 0x469C	; 0x80469c <_ZZ10linkbus_RxhE13receiving_msg>
    1a5c:	81 e0       	ldi	r24, 0x01	; 1
    1a5e:	89 27       	eor	r24, r25
    1a60:	88 23       	and	r24, r24
    1a62:	09 f4       	brne	.+2      	; 0x1a66 <_Z10linkbus_Rxh+0x1e4>
    1a64:	76 c0       	rjmp	.+236    	; 0x1b52 <_Z10linkbus_Rxh+0x2d0>
				{
					buff = 0;
    1a66:	10 92 93 46 	sts	0x4693, r1	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    1a6a:	10 92 94 46 	sts	0x4694, r1	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    1a6e:	71 c0       	rjmp	.+226    	; 0x1b52 <_Z10linkbus_Rxh+0x2d0>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1a70:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    1a74:	88 23       	and	r24, r24
    1a76:	61 f5       	brne	.+88     	; 0x1ad0 <_Z10linkbus_Rxh+0x24e>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    1a78:	80 91 98 46 	lds	r24, 0x4698	; 0x804698 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1a7c:	90 91 99 46 	lds	r25, 0x4699	; 0x804699 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1a80:	a0 91 9a 46 	lds	r26, 0x469A	; 0x80469a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1a84:	b0 91 9b 46 	lds	r27, 0x469B	; 0x80469b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1a88:	88 0f       	add	r24, r24
    1a8a:	99 1f       	adc	r25, r25
    1a8c:	aa 1f       	adc	r26, r26
    1a8e:	bb 1f       	adc	r27, r27
    1a90:	9c 01       	movw	r18, r24
    1a92:	ad 01       	movw	r20, r26
    1a94:	22 0f       	add	r18, r18
    1a96:	33 1f       	adc	r19, r19
    1a98:	44 1f       	adc	r20, r20
    1a9a:	55 1f       	adc	r21, r21
    1a9c:	22 0f       	add	r18, r18
    1a9e:	33 1f       	adc	r19, r19
    1aa0:	44 1f       	adc	r20, r20
    1aa2:	55 1f       	adc	r21, r21
    1aa4:	28 0f       	add	r18, r24
    1aa6:	39 1f       	adc	r19, r25
    1aa8:	4a 1f       	adc	r20, r26
    1aaa:	5b 1f       	adc	r21, r27
    1aac:	89 81       	ldd	r24, Y+1	; 0x01
    1aae:	88 2f       	mov	r24, r24
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	a0 e0       	ldi	r26, 0x00	; 0
    1ab4:	b0 e0       	ldi	r27, 0x00	; 0
    1ab6:	82 0f       	add	r24, r18
    1ab8:	93 1f       	adc	r25, r19
    1aba:	a4 1f       	adc	r26, r20
    1abc:	b5 1f       	adc	r27, r21
    1abe:	80 93 98 46 	sts	0x4698, r24	; 0x804698 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1ac2:	90 93 99 46 	sts	0x4699, r25	; 0x804699 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1ac6:	a0 93 9a 46 	sts	0x469A, r26	; 0x80469a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1aca:	b0 93 9b 46 	sts	0x469B, r27	; 0x80469b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1ace:	21 c0       	rjmp	.+66     	; 0x1b12 <_Z10linkbus_Rxh+0x290>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1ad0:	40 91 93 46 	lds	r20, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    1ad4:	50 91 94 46 	lds	r21, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    1ad8:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
    1adc:	88 2f       	mov	r24, r24
    1ade:	90 e0       	ldi	r25, 0x00	; 0
    1ae0:	bc 01       	movw	r22, r24
    1ae2:	61 50       	subi	r22, 0x01	; 1
    1ae4:	71 09       	sbc	r23, r1
    1ae6:	80 91 97 46 	lds	r24, 0x4697	; 0x804697 <_ZZ10linkbus_RxhE9field_len>
    1aea:	91 e0       	ldi	r25, 0x01	; 1
    1aec:	98 0f       	add	r25, r24
    1aee:	90 93 97 46 	sts	0x4697, r25	; 0x804697 <_ZZ10linkbus_RxhE9field_len>
    1af2:	88 2f       	mov	r24, r24
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	e5 e1       	ldi	r30, 0x15	; 21
    1af8:	e6 9f       	mul	r30, r22
    1afa:	90 01       	movw	r18, r0
    1afc:	e7 9f       	mul	r30, r23
    1afe:	30 0d       	add	r19, r0
    1b00:	11 24       	eor	r1, r1
    1b02:	24 0f       	add	r18, r20
    1b04:	35 1f       	adc	r19, r21
    1b06:	82 0f       	add	r24, r18
    1b08:	93 1f       	adc	r25, r19
    1b0a:	03 96       	adiw	r24, 0x03	; 3
    1b0c:	29 81       	ldd	r18, Y+1	; 0x01
    1b0e:	fc 01       	movw	r30, r24
    1b10:	20 83       	st	Z, r18
				}
				
				escapeNext = false;
    1b12:	10 92 95 46 	sts	0x4695, r1	; 0x804695 <_ZZ10linkbus_RxhE10escapeNext>
    1b16:	1d c0       	rjmp	.+58     	; 0x1b52 <_Z10linkbus_Rxh+0x2d0>
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1b18:	89 81       	ldd	r24, Y+1	; 0x01
    1b1a:	8d 30       	cpi	r24, 0x0D	; 13
    1b1c:	d1 f4       	brne	.+52     	; 0x1b52 <_Z10linkbus_Rxh+0x2d0>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1b1e:	80 91 93 46 	lds	r24, 0x4693	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    1b22:	90 91 94 46 	lds	r25, 0x4694	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
    1b26:	fc 01       	movw	r30, r24
    1b28:	11 82       	std	Z+1, r1	; 0x01
    1b2a:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1b2c:	82 e3       	ldi	r24, 0x32	; 50
    1b2e:	80 93 96 46 	sts	0x4696, r24	; 0x804696 <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1b32:	10 92 97 46 	sts	0x4697, r1	; 0x804697 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1b36:	10 92 98 46 	sts	0x4698, r1	; 0x804698 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1b3a:	10 92 99 46 	sts	0x4699, r1	; 0x804699 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1b3e:	10 92 9a 46 	sts	0x469A, r1	; 0x80469a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1b42:	10 92 9b 46 	sts	0x469B, r1	; 0x80469b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1b46:	10 92 9d 46 	sts	0x469D, r1	; 0x80469d <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1b4a:	10 92 93 46 	sts	0x4693, r1	; 0x804693 <_ZZ10linkbus_RxhE4buff>
    1b4e:	10 92 94 46 	sts	0x4694, r1	; 0x804694 <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(!escapeNext)
    1b52:	90 91 95 46 	lds	r25, 0x4695	; 0x804695 <_ZZ10linkbus_RxhE10escapeNext>
    1b56:	81 e0       	ldi	r24, 0x01	; 1
    1b58:	89 27       	eor	r24, r25
    1b5a:	88 23       	and	r24, r24
    1b5c:	89 f0       	breq	.+34     	; 0x1b80 <_Z10linkbus_Rxh+0x2fe>
		{
			if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    1b5e:	80 91 96 46 	lds	r24, 0x4696	; 0x804696 <_ZZ10linkbus_RxhE9charIndex>
    1b62:	8f 5f       	subi	r24, 0xFF	; 255
    1b64:	80 93 96 46 	sts	0x4696, r24	; 0x804696 <_ZZ10linkbus_RxhE9charIndex>
    1b68:	90 91 96 46 	lds	r25, 0x4696	; 0x804696 <_ZZ10linkbus_RxhE9charIndex>
    1b6c:	81 e0       	ldi	r24, 0x01	; 1
    1b6e:	92 33       	cpi	r25, 0x32	; 50
    1b70:	08 f4       	brcc	.+2      	; 0x1b74 <_Z10linkbus_Rxh+0x2f2>
    1b72:	80 e0       	ldi	r24, 0x00	; 0
    1b74:	88 23       	and	r24, r24
    1b76:	21 f0       	breq	.+8      	; 0x1b80 <_Z10linkbus_Rxh+0x2fe>
			{
				receiving_msg = false;
    1b78:	10 92 9c 46 	sts	0x469C, r1	; 0x80469c <_ZZ10linkbus_RxhE13receiving_msg>
				charIndex = 0;
    1b7c:	10 92 96 46 	sts	0x4696, r1	; 0x804696 <_ZZ10linkbus_RxhE9charIndex>
			}
		}
	}
}
    1b80:	00 00       	nop
    1b82:	0f 90       	pop	r0
    1b84:	df 91       	pop	r29
    1b86:	cf 91       	pop	r28
    1b88:	08 95       	ret

00001b8a <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    1b8a:	1f 92       	push	r1
    1b8c:	0f 92       	push	r0
    1b8e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1b92:	0f 92       	push	r0
    1b94:	11 24       	eor	r1, r1
    1b96:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1b9a:	0f 92       	push	r0
    1b9c:	2f 93       	push	r18
    1b9e:	3f 93       	push	r19
    1ba0:	4f 93       	push	r20
    1ba2:	5f 93       	push	r21
    1ba4:	6f 93       	push	r22
    1ba6:	7f 93       	push	r23
    1ba8:	8f 93       	push	r24
    1baa:	9f 93       	push	r25
    1bac:	af 93       	push	r26
    1bae:	bf 93       	push	r27
    1bb0:	ef 93       	push	r30
    1bb2:	ff 93       	push	r31
    1bb4:	cf 93       	push	r28
    1bb6:	df 93       	push	r29
    1bb8:	cd b7       	in	r28, 0x3d	; 61
    1bba:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1bbc:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_serialbus_usart_number>
    1bc0:	81 30       	cpi	r24, 0x01	; 1
    1bc2:	09 f0       	breq	.+2      	; 0x1bc6 <__vector_32+0x3c>
    1bc4:	45 c0       	rjmp	.+138    	; 0x1c50 <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1bc6:	80 91 9e 46 	lds	r24, 0x469E	; 0x80469e <_ZZ11__vector_32E4buff>
    1bca:	90 91 9f 46 	lds	r25, 0x469F	; 0x80469f <_ZZ11__vector_32E4buff+0x1>
    1bce:	89 2b       	or	r24, r25
    1bd0:	31 f4       	brne	.+12     	; 0x1bde <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1bd2:	0e 94 55 57 	call	0xaeaa	; 0xaeaa <nextFullSBTxBuffer>
    1bd6:	80 93 9e 46 	sts	0x469E, r24	; 0x80469e <_ZZ11__vector_32E4buff>
    1bda:	90 93 9f 46 	sts	0x469F, r25	; 0x80469f <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1bde:	20 91 9e 46 	lds	r18, 0x469E	; 0x80469e <_ZZ11__vector_32E4buff>
    1be2:	30 91 9f 46 	lds	r19, 0x469F	; 0x80469f <_ZZ11__vector_32E4buff+0x1>
    1be6:	80 91 a0 46 	lds	r24, 0x46A0	; 0x8046a0 <_ZZ11__vector_32E9charIndex>
    1bea:	88 2f       	mov	r24, r24
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	82 0f       	add	r24, r18
    1bf0:	93 1f       	adc	r25, r19
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	80 81       	ld	r24, Z
    1bf6:	88 23       	and	r24, r24
    1bf8:	a9 f0       	breq	.+42     	; 0x1c24 <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1bfa:	80 e2       	ldi	r24, 0x20	; 32
    1bfc:	98 e0       	ldi	r25, 0x08	; 8
    1bfe:	40 91 9e 46 	lds	r20, 0x469E	; 0x80469e <_ZZ11__vector_32E4buff>
    1c02:	50 91 9f 46 	lds	r21, 0x469F	; 0x80469f <_ZZ11__vector_32E4buff+0x1>
    1c06:	20 91 a0 46 	lds	r18, 0x46A0	; 0x8046a0 <_ZZ11__vector_32E9charIndex>
    1c0a:	31 e0       	ldi	r19, 0x01	; 1
    1c0c:	32 0f       	add	r19, r18
    1c0e:	30 93 a0 46 	sts	0x46A0, r19	; 0x8046a0 <_ZZ11__vector_32E9charIndex>
    1c12:	22 2f       	mov	r18, r18
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	24 0f       	add	r18, r20
    1c18:	35 1f       	adc	r19, r21
    1c1a:	f9 01       	movw	r30, r18
    1c1c:	20 81       	ld	r18, Z
    1c1e:	fc 01       	movw	r30, r24
    1c20:	22 83       	std	Z+2, r18	; 0x02
    1c22:	16 c0       	rjmp	.+44     	; 0x1c50 <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    1c24:	10 92 a0 46 	sts	0x46A0, r1	; 0x8046a0 <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1c28:	80 91 9e 46 	lds	r24, 0x469E	; 0x80469e <_ZZ11__vector_32E4buff>
    1c2c:	90 91 9f 46 	lds	r25, 0x469F	; 0x80469f <_ZZ11__vector_32E4buff+0x1>
    1c30:	fc 01       	movw	r30, r24
    1c32:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1c34:	0e 94 55 57 	call	0xaeaa	; 0xaeaa <nextFullSBTxBuffer>
    1c38:	80 93 9e 46 	sts	0x469E, r24	; 0x80469e <_ZZ11__vector_32E4buff>
    1c3c:	90 93 9f 46 	sts	0x469F, r25	; 0x80469f <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1c40:	80 91 9e 46 	lds	r24, 0x469E	; 0x80469e <_ZZ11__vector_32E4buff>
    1c44:	90 91 9f 46 	lds	r25, 0x469F	; 0x80469f <_ZZ11__vector_32E4buff+0x1>
    1c48:	89 2b       	or	r24, r25
    1c4a:	11 f4       	brne	.+4      	; 0x1c50 <__vector_32+0xc6>
			{
				serialbus_end_tx();
    1c4c:	0e 94 aa 58 	call	0xb154	; 0xb154 <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    1c50:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1c54:	81 30       	cpi	r24, 0x01	; 1
    1c56:	09 f0       	breq	.+2      	; 0x1c5a <__vector_32+0xd0>
    1c58:	45 c0       	rjmp	.+138    	; 0x1ce4 <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1c5a:	80 91 a1 46 	lds	r24, 0x46A1	; 0x8046a1 <_ZZ11__vector_32E4buff_0>
    1c5e:	90 91 a2 46 	lds	r25, 0x46A2	; 0x8046a2 <_ZZ11__vector_32E4buff_0+0x1>
    1c62:	89 2b       	or	r24, r25
    1c64:	31 f4       	brne	.+12     	; 0x1c72 <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    1c66:	0e 94 28 4e 	call	0x9c50	; 0x9c50 <_Z18nextFullLBTxBufferv>
    1c6a:	80 93 a1 46 	sts	0x46A1, r24	; 0x8046a1 <_ZZ11__vector_32E4buff_0>
    1c6e:	90 93 a2 46 	sts	0x46A2, r25	; 0x8046a2 <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1c72:	20 91 a1 46 	lds	r18, 0x46A1	; 0x8046a1 <_ZZ11__vector_32E4buff_0>
    1c76:	30 91 a2 46 	lds	r19, 0x46A2	; 0x8046a2 <_ZZ11__vector_32E4buff_0+0x1>
    1c7a:	80 91 a3 46 	lds	r24, 0x46A3	; 0x8046a3 <_ZZ11__vector_32E9charIndex_0>
    1c7e:	88 2f       	mov	r24, r24
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	82 0f       	add	r24, r18
    1c84:	93 1f       	adc	r25, r19
    1c86:	fc 01       	movw	r30, r24
    1c88:	80 81       	ld	r24, Z
    1c8a:	88 23       	and	r24, r24
    1c8c:	a9 f0       	breq	.+42     	; 0x1cb8 <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1c8e:	80 e2       	ldi	r24, 0x20	; 32
    1c90:	98 e0       	ldi	r25, 0x08	; 8
    1c92:	40 91 a1 46 	lds	r20, 0x46A1	; 0x8046a1 <_ZZ11__vector_32E4buff_0>
    1c96:	50 91 a2 46 	lds	r21, 0x46A2	; 0x8046a2 <_ZZ11__vector_32E4buff_0+0x1>
    1c9a:	20 91 a3 46 	lds	r18, 0x46A3	; 0x8046a3 <_ZZ11__vector_32E9charIndex_0>
    1c9e:	31 e0       	ldi	r19, 0x01	; 1
    1ca0:	32 0f       	add	r19, r18
    1ca2:	30 93 a3 46 	sts	0x46A3, r19	; 0x8046a3 <_ZZ11__vector_32E9charIndex_0>
    1ca6:	22 2f       	mov	r18, r18
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	24 0f       	add	r18, r20
    1cac:	35 1f       	adc	r19, r21
    1cae:	f9 01       	movw	r30, r18
    1cb0:	20 81       	ld	r18, Z
    1cb2:	fc 01       	movw	r30, r24
    1cb4:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    1cb6:	16 c0       	rjmp	.+44     	; 0x1ce4 <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1cb8:	10 92 a3 46 	sts	0x46A3, r1	; 0x8046a3 <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    1cbc:	80 91 a1 46 	lds	r24, 0x46A1	; 0x8046a1 <_ZZ11__vector_32E4buff_0>
    1cc0:	90 91 a2 46 	lds	r25, 0x46A2	; 0x8046a2 <_ZZ11__vector_32E4buff_0+0x1>
    1cc4:	fc 01       	movw	r30, r24
    1cc6:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1cc8:	0e 94 28 4e 	call	0x9c50	; 0x9c50 <_Z18nextFullLBTxBufferv>
    1ccc:	80 93 a1 46 	sts	0x46A1, r24	; 0x8046a1 <_ZZ11__vector_32E4buff_0>
    1cd0:	90 93 a2 46 	sts	0x46A2, r25	; 0x8046a2 <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    1cd4:	80 91 a1 46 	lds	r24, 0x46A1	; 0x8046a1 <_ZZ11__vector_32E4buff_0>
    1cd8:	90 91 a2 46 	lds	r25, 0x46A2	; 0x8046a2 <_ZZ11__vector_32E4buff_0+0x1>
    1cdc:	89 2b       	or	r24, r25
    1cde:	11 f4       	brne	.+4      	; 0x1ce4 <__vector_32+0x15a>
			{
				linkbus_end_tx();
    1ce0:	0e 94 6d 4f 	call	0x9eda	; 0x9eda <_Z14linkbus_end_txv>
			}
		}
	}
}
    1ce4:	00 00       	nop
    1ce6:	df 91       	pop	r29
    1ce8:	cf 91       	pop	r28
    1cea:	ff 91       	pop	r31
    1cec:	ef 91       	pop	r30
    1cee:	bf 91       	pop	r27
    1cf0:	af 91       	pop	r26
    1cf2:	9f 91       	pop	r25
    1cf4:	8f 91       	pop	r24
    1cf6:	7f 91       	pop	r23
    1cf8:	6f 91       	pop	r22
    1cfa:	5f 91       	pop	r21
    1cfc:	4f 91       	pop	r20
    1cfe:	3f 91       	pop	r19
    1d00:	2f 91       	pop	r18
    1d02:	0f 90       	pop	r0
    1d04:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1d08:	0f 90       	pop	r0
    1d0a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1d0e:	0f 90       	pop	r0
    1d10:	1f 90       	pop	r1
    1d12:	18 95       	reti

00001d14 <PORTA_set_pin_level>:
uint8_t dec2bcd(uint8_t val)
{
	uint8_t result = val % 10;
	result |= (val / 10) << 4;
	return (result);
}
    1d14:	cf 93       	push	r28
    1d16:	df 93       	push	r29
    1d18:	00 d0       	rcall	.+0      	; 0x1d1a <PORTA_set_pin_level+0x6>
    1d1a:	cd b7       	in	r28, 0x3d	; 61
    1d1c:	de b7       	in	r29, 0x3e	; 62
    1d1e:	89 83       	std	Y+1, r24	; 0x01
    1d20:	6a 83       	std	Y+2, r22	; 0x02
    1d22:	8a 81       	ldd	r24, Y+2	; 0x02
    1d24:	88 23       	and	r24, r24
    1d26:	a9 f0       	breq	.+42     	; 0x1d52 <PORTA_set_pin_level+0x3e>
    1d28:	20 e0       	ldi	r18, 0x00	; 0
    1d2a:	30 e0       	ldi	r19, 0x00	; 0
    1d2c:	80 e0       	ldi	r24, 0x00	; 0
    1d2e:	90 e0       	ldi	r25, 0x00	; 0
    1d30:	fc 01       	movw	r30, r24
    1d32:	81 81       	ldd	r24, Z+1	; 0x01
    1d34:	68 2f       	mov	r22, r24
    1d36:	89 81       	ldd	r24, Y+1	; 0x01
    1d38:	48 2f       	mov	r20, r24
    1d3a:	50 e0       	ldi	r21, 0x00	; 0
    1d3c:	81 e0       	ldi	r24, 0x01	; 1
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	02 c0       	rjmp	.+4      	; 0x1d46 <PORTA_set_pin_level+0x32>
    1d42:	88 0f       	add	r24, r24
    1d44:	99 1f       	adc	r25, r25
    1d46:	4a 95       	dec	r20
    1d48:	e2 f7       	brpl	.-8      	; 0x1d42 <PORTA_set_pin_level+0x2e>
    1d4a:	86 2b       	or	r24, r22
    1d4c:	f9 01       	movw	r30, r18
    1d4e:	81 83       	std	Z+1, r24	; 0x01
    1d50:	15 c0       	rjmp	.+42     	; 0x1d7c <PORTA_set_pin_level+0x68>
    1d52:	20 e0       	ldi	r18, 0x00	; 0
    1d54:	30 e0       	ldi	r19, 0x00	; 0
    1d56:	80 e0       	ldi	r24, 0x00	; 0
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	fc 01       	movw	r30, r24
    1d5c:	81 81       	ldd	r24, Z+1	; 0x01
    1d5e:	68 2f       	mov	r22, r24
    1d60:	89 81       	ldd	r24, Y+1	; 0x01
    1d62:	48 2f       	mov	r20, r24
    1d64:	50 e0       	ldi	r21, 0x00	; 0
    1d66:	81 e0       	ldi	r24, 0x01	; 1
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	02 c0       	rjmp	.+4      	; 0x1d70 <PORTA_set_pin_level+0x5c>
    1d6c:	88 0f       	add	r24, r24
    1d6e:	99 1f       	adc	r25, r25
    1d70:	4a 95       	dec	r20
    1d72:	e2 f7       	brpl	.-8      	; 0x1d6c <PORTA_set_pin_level+0x58>
    1d74:	80 95       	com	r24
    1d76:	86 23       	and	r24, r22
    1d78:	f9 01       	movw	r30, r18
    1d7a:	81 83       	std	Z+1, r24	; 0x01
    1d7c:	00 00       	nop
    1d7e:	0f 90       	pop	r0
    1d80:	0f 90       	pop	r0
    1d82:	df 91       	pop	r29
    1d84:	cf 91       	pop	r28
    1d86:	08 95       	ret

00001d88 <PORTD_get_pin_level>:
    1d88:	cf 93       	push	r28
    1d8a:	df 93       	push	r29
    1d8c:	1f 92       	push	r1
    1d8e:	cd b7       	in	r28, 0x3d	; 61
    1d90:	de b7       	in	r29, 0x3e	; 62
    1d92:	89 83       	std	Y+1, r24	; 0x01
    1d94:	8c e0       	ldi	r24, 0x0C	; 12
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	fc 01       	movw	r30, r24
    1d9a:	82 81       	ldd	r24, Z+2	; 0x02
    1d9c:	88 2f       	mov	r24, r24
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	29 81       	ldd	r18, Y+1	; 0x01
    1da2:	22 2f       	mov	r18, r18
    1da4:	30 e0       	ldi	r19, 0x00	; 0
    1da6:	02 c0       	rjmp	.+4      	; 0x1dac <PORTD_get_pin_level+0x24>
    1da8:	95 95       	asr	r25
    1daa:	87 95       	ror	r24
    1dac:	2a 95       	dec	r18
    1dae:	e2 f7       	brpl	.-8      	; 0x1da8 <PORTD_get_pin_level+0x20>
    1db0:	81 70       	andi	r24, 0x01	; 1
    1db2:	99 27       	eor	r25, r25
    1db4:	21 e0       	ldi	r18, 0x01	; 1
    1db6:	89 2b       	or	r24, r25
    1db8:	09 f4       	brne	.+2      	; 0x1dbc <PORTD_get_pin_level+0x34>
    1dba:	20 e0       	ldi	r18, 0x00	; 0
    1dbc:	82 2f       	mov	r24, r18
    1dbe:	0f 90       	pop	r0
    1dc0:	df 91       	pop	r29
    1dc2:	cf 91       	pop	r28
    1dc4:	08 95       	ret

00001dc6 <__vector_3>:
    1dc6:	1f 92       	push	r1
    1dc8:	0f 92       	push	r0
    1dca:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1dce:	0f 92       	push	r0
    1dd0:	11 24       	eor	r1, r1
    1dd2:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1dd6:	0f 92       	push	r0
    1dd8:	2f 93       	push	r18
    1dda:	3f 93       	push	r19
    1ddc:	4f 93       	push	r20
    1dde:	5f 93       	push	r21
    1de0:	6f 93       	push	r22
    1de2:	7f 93       	push	r23
    1de4:	8f 93       	push	r24
    1de6:	9f 93       	push	r25
    1de8:	af 93       	push	r26
    1dea:	bf 93       	push	r27
    1dec:	ef 93       	push	r30
    1dee:	ff 93       	push	r31
    1df0:	cf 93       	push	r28
    1df2:	df 93       	push	r29
    1df4:	cd b7       	in	r28, 0x3d	; 61
    1df6:	de b7       	in	r29, 0x3e	; 62
    1df8:	80 e4       	ldi	r24, 0x40	; 64
    1dfa:	91 e0       	ldi	r25, 0x01	; 1
    1dfc:	fc 01       	movw	r30, r24
    1dfe:	83 81       	ldd	r24, Z+3	; 0x03
    1e00:	88 2f       	mov	r24, r24
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	81 70       	andi	r24, 0x01	; 1
    1e06:	99 27       	eor	r25, r25
    1e08:	21 e0       	ldi	r18, 0x01	; 1
    1e0a:	89 2b       	or	r24, r25
    1e0c:	09 f4       	brne	.+2      	; 0x1e10 <__vector_3+0x4a>
    1e0e:	20 e0       	ldi	r18, 0x00	; 0
    1e10:	22 23       	and	r18, r18
    1e12:	21 f0       	breq	.+8      	; 0x1e1c <__vector_3+0x56>
    1e14:	0e 94 69 06 	call	0xcd2	; 0xcd2 <system_tick>
    1e18:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_Z17handle_1sec_tasksv>
    1e1c:	80 e4       	ldi	r24, 0x40	; 64
    1e1e:	91 e0       	ldi	r25, 0x01	; 1
    1e20:	23 e0       	ldi	r18, 0x03	; 3
    1e22:	fc 01       	movw	r30, r24
    1e24:	23 83       	std	Z+3, r18	; 0x03
    1e26:	00 00       	nop
    1e28:	df 91       	pop	r29
    1e2a:	cf 91       	pop	r28
    1e2c:	ff 91       	pop	r31
    1e2e:	ef 91       	pop	r30
    1e30:	bf 91       	pop	r27
    1e32:	af 91       	pop	r26
    1e34:	9f 91       	pop	r25
    1e36:	8f 91       	pop	r24
    1e38:	7f 91       	pop	r23
    1e3a:	6f 91       	pop	r22
    1e3c:	5f 91       	pop	r21
    1e3e:	4f 91       	pop	r20
    1e40:	3f 91       	pop	r19
    1e42:	2f 91       	pop	r18
    1e44:	0f 90       	pop	r0
    1e46:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1e4a:	0f 90       	pop	r0
    1e4c:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1e50:	0f 90       	pop	r0
    1e52:	1f 90       	pop	r1
    1e54:	18 95       	reti

00001e56 <_Z17handle_1sec_tasksv>:
    1e56:	ef 92       	push	r14
    1e58:	ff 92       	push	r15
    1e5a:	0f 93       	push	r16
    1e5c:	1f 93       	push	r17
    1e5e:	cf 93       	push	r28
    1e60:	df 93       	push	r29
    1e62:	cd b7       	in	r28, 0x3d	; 61
    1e64:	de b7       	in	r29, 0x3e	; 62
    1e66:	63 97       	sbiw	r28, 0x13	; 19
    1e68:	cd bf       	out	0x3d, r28	; 61
    1e6a:	de bf       	out	0x3e, r29	; 62
    1e6c:	80 91 24 47 	lds	r24, 0x4724	; 0x804724 <_ZL10g_sleeping>
    1e70:	88 23       	and	r24, r24
    1e72:	09 f4       	brne	.+2      	; 0x1e76 <_Z17handle_1sec_tasksv+0x20>
    1e74:	86 c0       	rjmp	.+268    	; 0x1f82 <_Z17handle_1sec_tasksv+0x12c>
    1e76:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <_ZL11g_sleepType>
    1e7a:	81 e0       	ldi	r24, 0x01	; 1
    1e7c:	92 30       	cpi	r25, 0x02	; 2
    1e7e:	09 f0       	breq	.+2      	; 0x1e82 <_Z17handle_1sec_tasksv+0x2c>
    1e80:	80 e0       	ldi	r24, 0x00	; 0
    1e82:	88 23       	and	r24, r24
    1e84:	09 f4       	brne	.+2      	; 0x1e88 <_Z17handle_1sec_tasksv+0x32>
    1e86:	51 c0       	rjmp	.+162    	; 0x1f2a <_Z17handle_1sec_tasksv+0xd4>
    1e88:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    1e8c:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    1e90:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    1e94:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    1e98:	88 27       	eor	r24, r24
    1e9a:	b7 fd       	sbrc	r27, 7
    1e9c:	83 95       	inc	r24
    1e9e:	99 27       	eor	r25, r25
    1ea0:	aa 27       	eor	r26, r26
    1ea2:	bb 27       	eor	r27, r27
    1ea4:	88 23       	and	r24, r24
    1ea6:	99 f0       	breq	.+38     	; 0x1ece <_Z17handle_1sec_tasksv+0x78>
    1ea8:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    1eac:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    1eb0:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    1eb4:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    1eb8:	01 96       	adiw	r24, 0x01	; 1
    1eba:	a1 1d       	adc	r26, r1
    1ebc:	b1 1d       	adc	r27, r1
    1ebe:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    1ec2:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    1ec6:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    1eca:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    1ece:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    1ed2:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    1ed6:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    1eda:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    1ede:	8b 3f       	cpi	r24, 0xFB	; 251
    1ee0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee2:	af 4f       	sbci	r26, 0xFF	; 255
    1ee4:	bf 4f       	sbci	r27, 0xFF	; 255
    1ee6:	9c f4       	brge	.+38     	; 0x1f0e <_Z17handle_1sec_tasksv+0xb8>
    1ee8:	80 e0       	ldi	r24, 0x00	; 0
    1eea:	90 e0       	ldi	r25, 0x00	; 0
    1eec:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    1ef0:	9b 01       	movw	r18, r22
    1ef2:	ac 01       	movw	r20, r24
    1ef4:	80 91 25 47 	lds	r24, 0x4725	; 0x804725 <_ZL17g_time_to_wake_up>
    1ef8:	90 91 26 47 	lds	r25, 0x4726	; 0x804726 <_ZL17g_time_to_wake_up+0x1>
    1efc:	a0 91 27 47 	lds	r26, 0x4727	; 0x804727 <_ZL17g_time_to_wake_up+0x2>
    1f00:	b0 91 28 47 	lds	r27, 0x4728	; 0x804728 <_ZL17g_time_to_wake_up+0x3>
    1f04:	28 17       	cp	r18, r24
    1f06:	39 07       	cpc	r19, r25
    1f08:	4a 07       	cpc	r20, r26
    1f0a:	5b 07       	cpc	r21, r27
    1f0c:	10 f0       	brcs	.+4      	; 0x1f12 <_Z17handle_1sec_tasksv+0xbc>
    1f0e:	81 e0       	ldi	r24, 0x01	; 1
    1f10:	01 c0       	rjmp	.+2      	; 0x1f14 <_Z17handle_1sec_tasksv+0xbe>
    1f12:	80 e0       	ldi	r24, 0x00	; 0
    1f14:	88 23       	and	r24, r24
    1f16:	09 f4       	brne	.+2      	; 0x1f1a <_Z17handle_1sec_tasksv+0xc4>
    1f18:	c5 c3       	rjmp	.+1930   	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    1f1a:	10 92 23 47 	sts	0x4723, r1	; 0x804723 <_ZL17g_go_to_sleep_now>
    1f1e:	10 92 24 47 	sts	0x4724, r1	; 0x804724 <_ZL10g_sleeping>
    1f22:	81 e0       	ldi	r24, 0x01	; 1
    1f24:	80 93 29 47 	sts	0x4729, r24	; 0x804729 <_ZL12g_awakenedBy>
    1f28:	bd c3       	rjmp	.+1914   	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    1f2a:	80 e0       	ldi	r24, 0x00	; 0
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    1f32:	9b 01       	movw	r18, r22
    1f34:	ac 01       	movw	r20, r24
    1f36:	80 91 25 47 	lds	r24, 0x4725	; 0x804725 <_ZL17g_time_to_wake_up>
    1f3a:	90 91 26 47 	lds	r25, 0x4726	; 0x804726 <_ZL17g_time_to_wake_up+0x1>
    1f3e:	a0 91 27 47 	lds	r26, 0x4727	; 0x804727 <_ZL17g_time_to_wake_up+0x2>
    1f42:	b0 91 28 47 	lds	r27, 0x4728	; 0x804728 <_ZL17g_time_to_wake_up+0x3>
    1f46:	61 e0       	ldi	r22, 0x01	; 1
    1f48:	28 17       	cp	r18, r24
    1f4a:	39 07       	cpc	r19, r25
    1f4c:	4a 07       	cpc	r20, r26
    1f4e:	5b 07       	cpc	r21, r27
    1f50:	08 f4       	brcc	.+2      	; 0x1f54 <_Z17handle_1sec_tasksv+0xfe>
    1f52:	60 e0       	ldi	r22, 0x00	; 0
    1f54:	66 23       	and	r22, r22
    1f56:	41 f0       	breq	.+16     	; 0x1f68 <_Z17handle_1sec_tasksv+0x112>
    1f58:	10 92 23 47 	sts	0x4723, r1	; 0x804723 <_ZL17g_go_to_sleep_now>
    1f5c:	10 92 24 47 	sts	0x4724, r1	; 0x804724 <_ZL10g_sleeping>
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	80 93 29 47 	sts	0x4729, r24	; 0x804729 <_ZL12g_awakenedBy>
    1f66:	9e c3       	rjmp	.+1852   	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    1f68:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    1f6c:	88 23       	and	r24, r24
    1f6e:	09 f4       	brne	.+2      	; 0x1f72 <_Z17handle_1sec_tasksv+0x11c>
    1f70:	99 c3       	rjmp	.+1842   	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    1f72:	10 92 23 47 	sts	0x4723, r1	; 0x804723 <_ZL17g_go_to_sleep_now>
    1f76:	10 92 24 47 	sts	0x4724, r1	; 0x804724 <_ZL10g_sleeping>
    1f7a:	82 e0       	ldi	r24, 0x02	; 2
    1f7c:	80 93 29 47 	sts	0x4729, r24	; 0x804729 <_ZL12g_awakenedBy>
    1f80:	91 c3       	rjmp	.+1826   	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    1f82:	1d 82       	std	Y+5, r1	; 0x05
    1f84:	1e 82       	std	Y+6, r1	; 0x06
    1f86:	1f 82       	std	Y+7, r1	; 0x07
    1f88:	18 86       	std	Y+8, r1	; 0x08
    1f8a:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <g_event_commenced>
    1f8e:	88 23       	and	r24, r24
    1f90:	09 f4       	brne	.+2      	; 0x1f94 <_Z17handle_1sec_tasksv+0x13e>
    1f92:	5d c0       	rjmp	.+186    	; 0x204e <_Z17handle_1sec_tasksv+0x1f8>
    1f94:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    1f98:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    1f9c:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    1fa0:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    1fa4:	89 2b       	or	r24, r25
    1fa6:	8a 2b       	or	r24, r26
    1fa8:	8b 2b       	or	r24, r27
    1faa:	71 f0       	breq	.+28     	; 0x1fc8 <_Z17handle_1sec_tasksv+0x172>
    1fac:	90 91 21 47 	lds	r25, 0x4721	; 0x804721 <g_check_for_next_event>
    1fb0:	81 e0       	ldi	r24, 0x01	; 1
    1fb2:	89 27       	eor	r24, r25
    1fb4:	88 23       	and	r24, r24
    1fb6:	41 f0       	breq	.+16     	; 0x1fc8 <_Z17handle_1sec_tasksv+0x172>
    1fb8:	90 91 e5 46 	lds	r25, 0x46E5	; 0x8046e5 <_ZL20g_shutting_down_wifi>
    1fbc:	81 e0       	ldi	r24, 0x01	; 1
    1fbe:	89 27       	eor	r24, r25
    1fc0:	88 23       	and	r24, r24
    1fc2:	11 f0       	breq	.+4      	; 0x1fc8 <_Z17handle_1sec_tasksv+0x172>
    1fc4:	81 e0       	ldi	r24, 0x01	; 1
    1fc6:	01 c0       	rjmp	.+2      	; 0x1fca <_Z17handle_1sec_tasksv+0x174>
    1fc8:	80 e0       	ldi	r24, 0x00	; 0
    1fca:	88 23       	and	r24, r24
    1fcc:	09 f4       	brne	.+2      	; 0x1fd0 <_Z17handle_1sec_tasksv+0x17a>
    1fce:	3f c0       	rjmp	.+126    	; 0x204e <_Z17handle_1sec_tasksv+0x1f8>
    1fd0:	80 e0       	ldi	r24, 0x00	; 0
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    1fd8:	dc 01       	movw	r26, r24
    1fda:	cb 01       	movw	r24, r22
    1fdc:	8d 83       	std	Y+5, r24	; 0x05
    1fde:	9e 83       	std	Y+6, r25	; 0x06
    1fe0:	af 83       	std	Y+7, r26	; 0x07
    1fe2:	b8 87       	std	Y+8, r27	; 0x08
    1fe4:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    1fe8:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    1fec:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    1ff0:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    1ff4:	61 e0       	ldi	r22, 0x01	; 1
    1ff6:	2d 81       	ldd	r18, Y+5	; 0x05
    1ff8:	3e 81       	ldd	r19, Y+6	; 0x06
    1ffa:	4f 81       	ldd	r20, Y+7	; 0x07
    1ffc:	58 85       	ldd	r21, Y+8	; 0x08
    1ffe:	28 17       	cp	r18, r24
    2000:	39 07       	cpc	r19, r25
    2002:	4a 07       	cpc	r20, r26
    2004:	5b 07       	cpc	r21, r27
    2006:	08 f4       	brcc	.+2      	; 0x200a <_Z17handle_1sec_tasksv+0x1b4>
    2008:	60 e0       	ldi	r22, 0x00	; 0
    200a:	66 23       	and	r22, r22
    200c:	01 f1       	breq	.+64     	; 0x204e <_Z17handle_1sec_tasksv+0x1f8>
    200e:	8c ef       	ldi	r24, 0xFC	; 252
    2010:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    2014:	10 92 dd 46 	sts	0x46DD, r1	; 0x8046dd <_ZL12g_on_the_air>
    2018:	10 92 de 46 	sts	0x46DE, r1	; 0x8046de <_ZL12g_on_the_air+0x1>
    201c:	10 92 df 46 	sts	0x46DF, r1	; 0x8046df <_ZL12g_on_the_air+0x2>
    2020:	10 92 e0 46 	sts	0x46E0, r1	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    2024:	80 e0       	ldi	r24, 0x00	; 0
    2026:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    202a:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    202e:	10 92 20 47 	sts	0x4720, r1	; 0x804720 <g_event_commenced>
    2032:	81 e0       	ldi	r24, 0x01	; 1
    2034:	80 93 21 47 	sts	0x4721, r24	; 0x804721 <g_check_for_next_event>
    2038:	82 e0       	ldi	r24, 0x02	; 2
    203a:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    203e:	60 e0       	ldi	r22, 0x00	; 0
    2040:	82 e3       	ldi	r24, 0x32	; 50
    2042:	97 e4       	ldi	r25, 0x47	; 71
    2044:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    2048:	83 e0       	ldi	r24, 0x03	; 3
    204a:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    204e:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <g_event_enabled>
    2052:	88 23       	and	r24, r24
    2054:	09 f4       	brne	.+2      	; 0x2058 <_Z17handle_1sec_tasksv+0x202>
    2056:	af c2       	rjmp	.+1374   	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    2058:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <g_event_commenced>
    205c:	88 23       	and	r24, r24
    205e:	09 f4       	brne	.+2      	; 0x2062 <_Z17handle_1sec_tasksv+0x20c>
    2060:	02 c2       	rjmp	.+1028   	; 0x2466 <_Z17handle_1sec_tasksv+0x610>
    2062:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    2066:	90 91 e2 46 	lds	r25, 0x46E2	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    206a:	21 e0       	ldi	r18, 0x01	; 1
    206c:	89 2b       	or	r24, r25
    206e:	09 f4       	brne	.+2      	; 0x2072 <_Z17handle_1sec_tasksv+0x21c>
    2070:	20 e0       	ldi	r18, 0x00	; 0
    2072:	22 23       	and	r18, r18
    2074:	49 f0       	breq	.+18     	; 0x2088 <_Z17handle_1sec_tasksv+0x232>
    2076:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    207a:	90 91 e2 46 	lds	r25, 0x46E2	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    207e:	01 97       	sbiw	r24, 0x01	; 1
    2080:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    2084:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    2088:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    208c:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    2090:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    2094:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    2098:	21 e0       	ldi	r18, 0x01	; 1
    209a:	89 2b       	or	r24, r25
    209c:	8a 2b       	or	r24, r26
    209e:	8b 2b       	or	r24, r27
    20a0:	09 f4       	brne	.+2      	; 0x20a4 <_Z17handle_1sec_tasksv+0x24e>
    20a2:	20 e0       	ldi	r18, 0x00	; 0
    20a4:	22 23       	and	r18, r18
    20a6:	09 f4       	brne	.+2      	; 0x20aa <_Z17handle_1sec_tasksv+0x254>
    20a8:	86 c2       	rjmp	.+1292   	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    20aa:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    20ae:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    20b2:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    20b6:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    20ba:	21 e0       	ldi	r18, 0x01	; 1
    20bc:	18 16       	cp	r1, r24
    20be:	19 06       	cpc	r1, r25
    20c0:	1a 06       	cpc	r1, r26
    20c2:	1b 06       	cpc	r1, r27
    20c4:	0c f0       	brlt	.+2      	; 0x20c8 <_Z17handle_1sec_tasksv+0x272>
    20c6:	20 e0       	ldi	r18, 0x00	; 0
    20c8:	22 23       	and	r18, r18
    20ca:	09 f4       	brne	.+2      	; 0x20ce <_Z17handle_1sec_tasksv+0x278>
    20cc:	70 c1       	rjmp	.+736    	; 0x23ae <_Z17handle_1sec_tasksv+0x558>
    20ce:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    20d2:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    20d6:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    20da:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    20de:	01 97       	sbiw	r24, 0x01	; 1
    20e0:	a1 09       	sbc	r26, r1
    20e2:	b1 09       	sbc	r27, r1
    20e4:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    20e8:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    20ec:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    20f0:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    20f4:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    20f8:	90 91 e2 46 	lds	r25, 0x46E2	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    20fc:	89 2b       	or	r24, r25
    20fe:	41 f4       	brne	.+16     	; 0x2110 <_Z17handle_1sec_tasksv+0x2ba>
    2100:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <g_time_needed_for_ID>
    2104:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <g_time_needed_for_ID+0x1>
    2108:	89 2b       	or	r24, r25
    210a:	11 f0       	breq	.+4      	; 0x2110 <_Z17handle_1sec_tasksv+0x2ba>
    210c:	81 e0       	ldi	r24, 0x01	; 1
    210e:	01 c0       	rjmp	.+2      	; 0x2112 <_Z17handle_1sec_tasksv+0x2bc>
    2110:	80 e0       	ldi	r24, 0x00	; 0
    2112:	88 23       	and	r24, r24
    2114:	a9 f1       	breq	.+106    	; 0x2180 <_Z17handle_1sec_tasksv+0x32a>
    2116:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <g_time_needed_for_ID>
    211a:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <g_time_needed_for_ID+0x1>
    211e:	9c 01       	movw	r18, r24
    2120:	40 e0       	ldi	r20, 0x00	; 0
    2122:	50 e0       	ldi	r21, 0x00	; 0
    2124:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    2128:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    212c:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    2130:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    2134:	61 e0       	ldi	r22, 0x01	; 1
    2136:	28 17       	cp	r18, r24
    2138:	39 07       	cpc	r19, r25
    213a:	4a 07       	cpc	r20, r26
    213c:	5b 07       	cpc	r21, r27
    213e:	09 f0       	breq	.+2      	; 0x2142 <_Z17handle_1sec_tasksv+0x2ec>
    2140:	60 e0       	ldi	r22, 0x00	; 0
    2142:	66 23       	and	r22, r22
    2144:	e9 f0       	breq	.+58     	; 0x2180 <_Z17handle_1sec_tasksv+0x32a>
    2146:	8f ee       	ldi	r24, 0xEF	; 239
    2148:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    214c:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    2150:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    2154:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    2158:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    215c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    2160:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    2164:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2168:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    216c:	19 8a       	std	Y+17, r1	; 0x11
    216e:	ce 01       	movw	r24, r28
    2170:	41 96       	adiw	r24, 0x11	; 17
    2172:	40 e0       	ldi	r20, 0x00	; 0
    2174:	50 e0       	ldi	r21, 0x00	; 0
    2176:	bc 01       	movw	r22, r24
    2178:	8e ef       	ldi	r24, 0xFE	; 254
    217a:	96 e4       	ldi	r25, 0x46	; 70
    217c:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    2180:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    2184:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    2188:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    218c:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    2190:	21 e0       	ldi	r18, 0x01	; 1
    2192:	89 2b       	or	r24, r25
    2194:	8a 2b       	or	r24, r26
    2196:	8b 2b       	or	r24, r27
    2198:	09 f0       	breq	.+2      	; 0x219c <_Z17handle_1sec_tasksv+0x346>
    219a:	20 e0       	ldi	r18, 0x00	; 0
    219c:	22 23       	and	r18, r18
    219e:	09 f4       	brne	.+2      	; 0x21a2 <_Z17handle_1sec_tasksv+0x34c>
    21a0:	0a c2       	rjmp	.+1044   	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    21a2:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    21a6:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    21aa:	21 e0       	ldi	r18, 0x01	; 1
    21ac:	89 2b       	or	r24, r25
    21ae:	09 f4       	brne	.+2      	; 0x21b2 <_Z17handle_1sec_tasksv+0x35c>
    21b0:	20 e0       	ldi	r18, 0x00	; 0
    21b2:	22 23       	and	r18, r18
    21b4:	09 f4       	brne	.+2      	; 0x21b8 <_Z17handle_1sec_tasksv+0x362>
    21b6:	e2 c0       	rjmp	.+452    	; 0x237c <_Z17handle_1sec_tasksv+0x526>
    21b8:	80 e0       	ldi	r24, 0x00	; 0
    21ba:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    21be:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    21c2:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    21c6:	20 91 dd 46 	lds	r18, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    21ca:	30 91 de 46 	lds	r19, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    21ce:	40 91 df 46 	lds	r20, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    21d2:	50 91 e0 46 	lds	r21, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    21d6:	09 2e       	mov	r0, r25
    21d8:	00 0c       	add	r0, r0
    21da:	aa 0b       	sbc	r26, r26
    21dc:	bb 0b       	sbc	r27, r27
    21de:	79 01       	movw	r14, r18
    21e0:	8a 01       	movw	r16, r20
    21e2:	e8 1a       	sub	r14, r24
    21e4:	f9 0a       	sbc	r15, r25
    21e6:	0a 0b       	sbc	r16, r26
    21e8:	1b 0b       	sbc	r17, r27
    21ea:	d8 01       	movw	r26, r16
    21ec:	c7 01       	movw	r24, r14
    21ee:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    21f2:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    21f6:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    21fa:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    21fe:	81 e0       	ldi	r24, 0x01	; 1
    2200:	89 8b       	std	Y+17, r24	; 0x11
    2202:	ce 01       	movw	r24, r28
    2204:	41 96       	adiw	r24, 0x11	; 17
    2206:	40 e0       	ldi	r20, 0x00	; 0
    2208:	50 e0       	ldi	r21, 0x00	; 0
    220a:	bc 01       	movw	r22, r24
    220c:	89 ee       	ldi	r24, 0xE9	; 233
    220e:	96 e4       	ldi	r25, 0x46	; 70
    2210:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    2214:	8e ef       	ldi	r24, 0xFE	; 254
    2216:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    221a:	60 e0       	ldi	r22, 0x00	; 0
    221c:	82 e3       	ldi	r24, 0x32	; 50
    221e:	97 e4       	ldi	r25, 0x47	; 71
    2220:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    2224:	19 82       	std	Y+1, r1	; 0x01
    2226:	1a 82       	std	Y+2, r1	; 0x02
    2228:	1b 82       	std	Y+3, r1	; 0x03
    222a:	1c 82       	std	Y+4, r1	; 0x04
    222c:	80 e0       	ldi	r24, 0x00	; 0
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    2234:	dc 01       	movw	r26, r24
    2236:	cb 01       	movw	r24, r22
    2238:	8d 83       	std	Y+5, r24	; 0x05
    223a:	9e 83       	std	Y+6, r25	; 0x06
    223c:	af 83       	std	Y+7, r26	; 0x07
    223e:	b8 87       	std	Y+8, r27	; 0x08
    2240:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    2244:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    2248:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    224c:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    2250:	61 e0       	ldi	r22, 0x01	; 1
    2252:	2d 81       	ldd	r18, Y+5	; 0x05
    2254:	3e 81       	ldd	r19, Y+6	; 0x06
    2256:	4f 81       	ldd	r20, Y+7	; 0x07
    2258:	58 85       	ldd	r21, Y+8	; 0x08
    225a:	28 17       	cp	r18, r24
    225c:	39 07       	cpc	r19, r25
    225e:	4a 07       	cpc	r20, r26
    2260:	5b 07       	cpc	r21, r27
    2262:	08 f0       	brcs	.+2      	; 0x2266 <_Z17handle_1sec_tasksv+0x410>
    2264:	60 e0       	ldi	r22, 0x00	; 0
    2266:	66 23       	and	r22, r22
    2268:	b1 f0       	breq	.+44     	; 0x2296 <_Z17handle_1sec_tasksv+0x440>
    226a:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    226e:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    2272:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    2276:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    227a:	2d 81       	ldd	r18, Y+5	; 0x05
    227c:	3e 81       	ldd	r19, Y+6	; 0x06
    227e:	4f 81       	ldd	r20, Y+7	; 0x07
    2280:	58 85       	ldd	r21, Y+8	; 0x08
    2282:	bc 01       	movw	r22, r24
    2284:	cd 01       	movw	r24, r26
    2286:	0e 94 8d 6c 	call	0xd91a	; 0xd91a <_Z7timeDifmm>
    228a:	dc 01       	movw	r26, r24
    228c:	cb 01       	movw	r24, r22
    228e:	89 83       	std	Y+1, r24	; 0x01
    2290:	9a 83       	std	Y+2, r25	; 0x02
    2292:	ab 83       	std	Y+3, r26	; 0x03
    2294:	bc 83       	std	Y+4, r27	; 0x04
    2296:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    229a:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    229e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    22a2:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    22a6:	82 0f       	add	r24, r18
    22a8:	93 1f       	adc	r25, r19
    22aa:	0f 96       	adiw	r24, 0x0f	; 15
    22ac:	9c 01       	movw	r18, r24
    22ae:	99 0f       	add	r25, r25
    22b0:	44 0b       	sbc	r20, r20
    22b2:	55 0b       	sbc	r21, r21
    22b4:	61 e0       	ldi	r22, 0x01	; 1
    22b6:	89 81       	ldd	r24, Y+1	; 0x01
    22b8:	9a 81       	ldd	r25, Y+2	; 0x02
    22ba:	ab 81       	ldd	r26, Y+3	; 0x03
    22bc:	bc 81       	ldd	r27, Y+4	; 0x04
    22be:	28 17       	cp	r18, r24
    22c0:	39 07       	cpc	r19, r25
    22c2:	4a 07       	cpc	r20, r26
    22c4:	5b 07       	cpc	r21, r27
    22c6:	0c f0       	brlt	.+2      	; 0x22ca <_Z17handle_1sec_tasksv+0x474>
    22c8:	60 e0       	ldi	r22, 0x00	; 0
    22ca:	66 23       	and	r22, r22
    22cc:	09 f4       	brne	.+2      	; 0x22d0 <_Z17handle_1sec_tasksv+0x47a>
    22ce:	73 c1       	rjmp	.+742    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    22d0:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    22d4:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    22d8:	40 97       	sbiw	r24, 0x10	; 16
    22da:	34 f0       	brlt	.+12     	; 0x22e8 <_Z17handle_1sec_tasksv+0x492>
    22dc:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    22e0:	88 23       	and	r24, r24
    22e2:	11 f4       	brne	.+4      	; 0x22e8 <_Z17handle_1sec_tasksv+0x492>
    22e4:	81 e0       	ldi	r24, 0x01	; 1
    22e6:	01 c0       	rjmp	.+2      	; 0x22ea <_Z17handle_1sec_tasksv+0x494>
    22e8:	80 e0       	ldi	r24, 0x00	; 0
    22ea:	88 23       	and	r24, r24
    22ec:	09 f4       	brne	.+2      	; 0x22f0 <_Z17handle_1sec_tasksv+0x49a>
    22ee:	63 c1       	rjmp	.+710    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    22f0:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    22f4:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    22f8:	0a 97       	sbiw	r24, 0x0a	; 10
    22fa:	09 2e       	mov	r0, r25
    22fc:	00 0c       	add	r0, r0
    22fe:	aa 0b       	sbc	r26, r26
    2300:	bb 0b       	sbc	r27, r27
    2302:	89 87       	std	Y+9, r24	; 0x09
    2304:	9a 87       	std	Y+10, r25	; 0x0a
    2306:	ab 87       	std	Y+11, r26	; 0x0b
    2308:	bc 87       	std	Y+12, r27	; 0x0c
    230a:	2d 81       	ldd	r18, Y+5	; 0x05
    230c:	3e 81       	ldd	r19, Y+6	; 0x06
    230e:	4f 81       	ldd	r20, Y+7	; 0x07
    2310:	58 85       	ldd	r21, Y+8	; 0x08
    2312:	89 85       	ldd	r24, Y+9	; 0x09
    2314:	9a 85       	ldd	r25, Y+10	; 0x0a
    2316:	ab 85       	ldd	r26, Y+11	; 0x0b
    2318:	bc 85       	ldd	r27, Y+12	; 0x0c
    231a:	82 0f       	add	r24, r18
    231c:	93 1f       	adc	r25, r19
    231e:	a4 1f       	adc	r26, r20
    2320:	b5 1f       	adc	r27, r21
    2322:	80 93 25 47 	sts	0x4725, r24	; 0x804725 <_ZL17g_time_to_wake_up>
    2326:	90 93 26 47 	sts	0x4726, r25	; 0x804726 <_ZL17g_time_to_wake_up+0x1>
    232a:	a0 93 27 47 	sts	0x4727, r26	; 0x804727 <_ZL17g_time_to_wake_up+0x2>
    232e:	b0 93 28 47 	sts	0x4728, r27	; 0x804728 <_ZL17g_time_to_wake_up+0x3>
    2332:	82 e0       	ldi	r24, 0x02	; 2
    2334:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    2338:	81 e0       	ldi	r24, 0x01	; 1
    233a:	80 93 23 47 	sts	0x4723, r24	; 0x804723 <_ZL17g_go_to_sleep_now>
    233e:	1d 86       	std	Y+13, r1	; 0x0d
    2340:	1e 86       	std	Y+14, r1	; 0x0e
    2342:	20 91 e1 46 	lds	r18, 0x46E1	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    2346:	30 91 e2 46 	lds	r19, 0x46E2	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    234a:	89 85       	ldd	r24, Y+9	; 0x09
    234c:	9a 85       	ldd	r25, Y+10	; 0x0a
    234e:	89 01       	movw	r16, r18
    2350:	08 1b       	sub	r16, r24
    2352:	19 0b       	sbc	r17, r25
    2354:	c8 01       	movw	r24, r16
    2356:	8f 87       	std	Y+15, r24	; 0x0f
    2358:	98 8b       	std	Y+16, r25	; 0x10
    235a:	2d 85       	ldd	r18, Y+13	; 0x0d
    235c:	3e 85       	ldd	r19, Y+14	; 0x0e
    235e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2360:	98 89       	ldd	r25, Y+16	; 0x10
    2362:	28 17       	cp	r18, r24
    2364:	39 07       	cpc	r19, r25
    2366:	1c f4       	brge	.+6      	; 0x236e <_Z17handle_1sec_tasksv+0x518>
    2368:	8f 85       	ldd	r24, Y+15	; 0x0f
    236a:	98 89       	ldd	r25, Y+16	; 0x10
    236c:	02 c0       	rjmp	.+4      	; 0x2372 <_Z17handle_1sec_tasksv+0x51c>
    236e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2370:	9e 85       	ldd	r25, Y+14	; 0x0e
    2372:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    2376:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    237a:	1d c1       	rjmp	.+570    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    237c:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2380:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2384:	09 2e       	mov	r0, r25
    2386:	00 0c       	add	r0, r0
    2388:	aa 0b       	sbc	r26, r26
    238a:	bb 0b       	sbc	r27, r27
    238c:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    2390:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    2394:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    2398:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    239c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    23a0:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    23a4:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    23a8:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    23ac:	04 c1       	rjmp	.+520    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    23ae:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    23b2:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    23b6:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    23ba:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    23be:	88 27       	eor	r24, r24
    23c0:	b7 fd       	sbrc	r27, 7
    23c2:	83 95       	inc	r24
    23c4:	99 27       	eor	r25, r25
    23c6:	aa 27       	eor	r26, r26
    23c8:	bb 27       	eor	r27, r27
    23ca:	88 23       	and	r24, r24
    23cc:	09 f4       	brne	.+2      	; 0x23d0 <_Z17handle_1sec_tasksv+0x57a>
    23ce:	f3 c0       	rjmp	.+486    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    23d0:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    23d4:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    23d8:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    23dc:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    23e0:	01 96       	adiw	r24, 0x01	; 1
    23e2:	a1 1d       	adc	r26, r1
    23e4:	b1 1d       	adc	r27, r1
    23e6:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    23ea:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    23ee:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    23f2:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    23f6:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    23fa:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    23fe:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    2402:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    2406:	21 e0       	ldi	r18, 0x01	; 1
    2408:	89 2b       	or	r24, r25
    240a:	8a 2b       	or	r24, r26
    240c:	8b 2b       	or	r24, r27
    240e:	09 f0       	breq	.+2      	; 0x2412 <_Z17handle_1sec_tasksv+0x5bc>
    2410:	20 e0       	ldi	r18, 0x00	; 0
    2412:	22 23       	and	r18, r18
    2414:	09 f4       	brne	.+2      	; 0x2418 <_Z17handle_1sec_tasksv+0x5c2>
    2416:	cf c0       	rjmp	.+414    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    2418:	8d ef       	ldi	r24, 0xFD	; 253
    241a:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    241e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2422:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2426:	09 2e       	mov	r0, r25
    2428:	00 0c       	add	r0, r0
    242a:	aa 0b       	sbc	r26, r26
    242c:	bb 0b       	sbc	r27, r27
    242e:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    2432:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    2436:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    243a:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    243e:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2442:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    2446:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    244a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    244e:	81 e0       	ldi	r24, 0x01	; 1
    2450:	8a 8b       	std	Y+18, r24	; 0x12
    2452:	ce 01       	movw	r24, r28
    2454:	42 96       	adiw	r24, 0x12	; 18
    2456:	40 e0       	ldi	r20, 0x00	; 0
    2458:	50 e0       	ldi	r21, 0x00	; 0
    245a:	bc 01       	movw	r22, r24
    245c:	89 ee       	ldi	r24, 0xE9	; 233
    245e:	96 e4       	ldi	r25, 0x46	; 70
    2460:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    2464:	a8 c0       	rjmp	.+336    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    2466:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    246a:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    246e:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    2472:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    2476:	21 e0       	ldi	r18, 0x01	; 1
    2478:	89 2b       	or	r24, r25
    247a:	8a 2b       	or	r24, r26
    247c:	8b 2b       	or	r24, r27
    247e:	09 f4       	brne	.+2      	; 0x2482 <_Z17handle_1sec_tasksv+0x62c>
    2480:	20 e0       	ldi	r18, 0x00	; 0
    2482:	22 23       	and	r18, r18
    2484:	09 f4       	brne	.+2      	; 0x2488 <_Z17handle_1sec_tasksv+0x632>
    2486:	97 c0       	rjmp	.+302    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    2488:	80 e0       	ldi	r24, 0x00	; 0
    248a:	90 e0       	ldi	r25, 0x00	; 0
    248c:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    2490:	dc 01       	movw	r26, r24
    2492:	cb 01       	movw	r24, r22
    2494:	8d 83       	std	Y+5, r24	; 0x05
    2496:	9e 83       	std	Y+6, r25	; 0x06
    2498:	af 83       	std	Y+7, r26	; 0x07
    249a:	b8 87       	std	Y+8, r27	; 0x08
    249c:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    24a0:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    24a4:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    24a8:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    24ac:	61 e0       	ldi	r22, 0x01	; 1
    24ae:	2d 81       	ldd	r18, Y+5	; 0x05
    24b0:	3e 81       	ldd	r19, Y+6	; 0x06
    24b2:	4f 81       	ldd	r20, Y+7	; 0x07
    24b4:	58 85       	ldd	r21, Y+8	; 0x08
    24b6:	28 17       	cp	r18, r24
    24b8:	39 07       	cpc	r19, r25
    24ba:	4a 07       	cpc	r20, r26
    24bc:	5b 07       	cpc	r21, r27
    24be:	08 f4       	brcc	.+2      	; 0x24c2 <_Z17handle_1sec_tasksv+0x66c>
    24c0:	60 e0       	ldi	r22, 0x00	; 0
    24c2:	66 23       	and	r22, r22
    24c4:	09 f4       	brne	.+2      	; 0x24c8 <_Z17handle_1sec_tasksv+0x672>
    24c6:	77 c0       	rjmp	.+238    	; 0x25b6 <_Z17handle_1sec_tasksv+0x760>
    24c8:	80 91 15 47 	lds	r24, 0x4715	; 0x804715 <g_intra_cycle_delay_time>
    24cc:	90 91 16 47 	lds	r25, 0x4716	; 0x804716 <g_intra_cycle_delay_time+0x1>
    24d0:	21 e0       	ldi	r18, 0x01	; 1
    24d2:	89 2b       	or	r24, r25
    24d4:	09 f4       	brne	.+2      	; 0x24d8 <_Z17handle_1sec_tasksv+0x682>
    24d6:	20 e0       	ldi	r18, 0x00	; 0
    24d8:	22 23       	and	r18, r18
    24da:	71 f1       	breq	.+92     	; 0x2538 <_Z17handle_1sec_tasksv+0x6e2>
    24dc:	8e ef       	ldi	r24, 0xFE	; 254
    24de:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    24e2:	80 91 15 47 	lds	r24, 0x4715	; 0x804715 <g_intra_cycle_delay_time>
    24e6:	90 91 16 47 	lds	r25, 0x4716	; 0x804716 <g_intra_cycle_delay_time+0x1>
    24ea:	91 95       	neg	r25
    24ec:	81 95       	neg	r24
    24ee:	91 09       	sbc	r25, r1
    24f0:	09 2e       	mov	r0, r25
    24f2:	00 0c       	add	r0, r0
    24f4:	aa 0b       	sbc	r26, r26
    24f6:	bb 0b       	sbc	r27, r27
    24f8:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    24fc:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    2500:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    2504:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    2508:	20 91 15 47 	lds	r18, 0x4715	; 0x804715 <g_intra_cycle_delay_time>
    250c:	30 91 16 47 	lds	r19, 0x4716	; 0x804716 <g_intra_cycle_delay_time+0x1>
    2510:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2514:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2518:	82 0f       	add	r24, r18
    251a:	93 1f       	adc	r25, r19
    251c:	9c 01       	movw	r18, r24
    251e:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <g_time_needed_for_ID>
    2522:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <g_time_needed_for_ID+0x1>
    2526:	a9 01       	movw	r20, r18
    2528:	48 1b       	sub	r20, r24
    252a:	59 0b       	sbc	r21, r25
    252c:	ca 01       	movw	r24, r20
    252e:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    2532:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    2536:	37 c0       	rjmp	.+110    	; 0x25a6 <_Z17handle_1sec_tasksv+0x750>
    2538:	8d ef       	ldi	r24, 0xFD	; 253
    253a:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    253e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2542:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2546:	09 2e       	mov	r0, r25
    2548:	00 0c       	add	r0, r0
    254a:	aa 0b       	sbc	r26, r26
    254c:	bb 0b       	sbc	r27, r27
    254e:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    2552:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    2556:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    255a:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    255e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2562:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2566:	9c 01       	movw	r18, r24
    2568:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <g_time_needed_for_ID>
    256c:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <g_time_needed_for_ID+0x1>
    2570:	79 01       	movw	r14, r18
    2572:	e8 1a       	sub	r14, r24
    2574:	f9 0a       	sbc	r15, r25
    2576:	c7 01       	movw	r24, r14
    2578:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    257c:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    2580:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2584:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    2588:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    258c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2590:	81 e0       	ldi	r24, 0x01	; 1
    2592:	8b 8b       	std	Y+19, r24	; 0x13
    2594:	ce 01       	movw	r24, r28
    2596:	43 96       	adiw	r24, 0x13	; 19
    2598:	40 e0       	ldi	r20, 0x00	; 0
    259a:	50 e0       	ldi	r21, 0x00	; 0
    259c:	bc 01       	movw	r22, r24
    259e:	89 ee       	ldi	r24, 0xE9	; 233
    25a0:	96 e4       	ldi	r25, 0x46	; 70
    25a2:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    25a6:	81 e0       	ldi	r24, 0x01	; 1
    25a8:	80 93 20 47 	sts	0x4720, r24	; 0x804720 <g_event_commenced>
    25ac:	61 e0       	ldi	r22, 0x01	; 1
    25ae:	82 e3       	ldi	r24, 0x32	; 50
    25b0:	97 e4       	ldi	r25, 0x47	; 71
    25b2:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    25b6:	80 91 e7 46 	lds	r24, 0x46E7	; 0x8046e7 <_ZL16g_hardware_error>
    25ba:	90 91 e8 46 	lds	r25, 0x46E8	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    25be:	80 e0       	ldi	r24, 0x00	; 0
    25c0:	88 23       	and	r24, r24
    25c2:	09 f4       	brne	.+2      	; 0x25c6 <_Z17handle_1sec_tasksv+0x770>
    25c4:	6f c0       	rjmp	.+222    	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    25c6:	90 91 e4 46 	lds	r25, 0x46E4	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    25ca:	81 e0       	ldi	r24, 0x01	; 1
    25cc:	99 23       	and	r25, r25
    25ce:	09 f4       	brne	.+2      	; 0x25d2 <_Z17handle_1sec_tasksv+0x77c>
    25d0:	80 e0       	ldi	r24, 0x00	; 0
    25d2:	88 23       	and	r24, r24
    25d4:	c1 f0       	breq	.+48     	; 0x2606 <_Z17handle_1sec_tasksv+0x7b0>
    25d6:	80 91 e4 46 	lds	r24, 0x46E4	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    25da:	81 50       	subi	r24, 0x01	; 1
    25dc:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    25e0:	90 91 e4 46 	lds	r25, 0x46E4	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    25e4:	81 e0       	ldi	r24, 0x01	; 1
    25e6:	99 23       	and	r25, r25
    25e8:	09 f0       	breq	.+2      	; 0x25ec <_Z17handle_1sec_tasksv+0x796>
    25ea:	80 e0       	ldi	r24, 0x00	; 0
    25ec:	88 23       	and	r24, r24
    25ee:	09 f4       	brne	.+2      	; 0x25f2 <_Z17handle_1sec_tasksv+0x79c>
    25f0:	59 c0       	rjmp	.+178    	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    25f2:	81 e0       	ldi	r24, 0x01	; 1
    25f4:	0e 94 62 46 	call	0x8cc4	; 0x8cc4 <_Z10wifi_powerb>
    25f8:	80 e0       	ldi	r24, 0x00	; 0
    25fa:	0e 94 79 46 	call	0x8cf2	; 0x8cf2 <_Z10wifi_resetb>
    25fe:	88 e7       	ldi	r24, 0x78	; 120
    2600:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2604:	4f c0       	rjmp	.+158    	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    2606:	80 91 e5 46 	lds	r24, 0x46E5	; 0x8046e5 <_ZL20g_shutting_down_wifi>
    260a:	88 23       	and	r24, r24
    260c:	61 f4       	brne	.+24     	; 0x2626 <_Z17handle_1sec_tasksv+0x7d0>
    260e:	90 91 21 47 	lds	r25, 0x4721	; 0x804721 <g_check_for_next_event>
    2612:	81 e0       	ldi	r24, 0x01	; 1
    2614:	89 27       	eor	r24, r25
    2616:	88 23       	and	r24, r24
    2618:	41 f0       	breq	.+16     	; 0x262a <_Z17handle_1sec_tasksv+0x7d4>
    261a:	90 91 22 47 	lds	r25, 0x4722	; 0x804722 <g_waiting_for_next_event>
    261e:	81 e0       	ldi	r24, 0x01	; 1
    2620:	89 27       	eor	r24, r25
    2622:	88 23       	and	r24, r24
    2624:	11 f0       	breq	.+4      	; 0x262a <_Z17handle_1sec_tasksv+0x7d4>
    2626:	81 e0       	ldi	r24, 0x01	; 1
    2628:	01 c0       	rjmp	.+2      	; 0x262c <_Z17handle_1sec_tasksv+0x7d6>
    262a:	80 e0       	ldi	r24, 0x00	; 0
    262c:	88 23       	and	r24, r24
    262e:	99 f1       	breq	.+102    	; 0x2696 <_Z17handle_1sec_tasksv+0x840>
    2630:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2634:	81 e0       	ldi	r24, 0x01	; 1
    2636:	99 23       	and	r25, r25
    2638:	09 f4       	brne	.+2      	; 0x263c <_Z17handle_1sec_tasksv+0x7e6>
    263a:	80 e0       	ldi	r24, 0x00	; 0
    263c:	88 23       	and	r24, r24
    263e:	59 f1       	breq	.+86     	; 0x2696 <_Z17handle_1sec_tasksv+0x840>
    2640:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2644:	81 50       	subi	r24, 0x01	; 1
    2646:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    264a:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    264e:	88 23       	and	r24, r24
    2650:	41 f4       	brne	.+16     	; 0x2662 <_Z17handle_1sec_tasksv+0x80c>
    2652:	90 91 47 47 	lds	r25, 0x4747	; 0x804747 <g_enable_manual_transmissions>
    2656:	81 e0       	ldi	r24, 0x01	; 1
    2658:	89 27       	eor	r24, r25
    265a:	88 23       	and	r24, r24
    265c:	11 f0       	breq	.+4      	; 0x2662 <_Z17handle_1sec_tasksv+0x80c>
    265e:	81 e0       	ldi	r24, 0x01	; 1
    2660:	01 c0       	rjmp	.+2      	; 0x2664 <_Z17handle_1sec_tasksv+0x80e>
    2662:	80 e0       	ldi	r24, 0x00	; 0
    2664:	88 23       	and	r24, r24
    2666:	b9 f0       	breq	.+46     	; 0x2696 <_Z17handle_1sec_tasksv+0x840>
    2668:	10 92 e6 46 	sts	0x46E6, r1	; 0x8046e6 <_ZL12g_wifi_ready>
    266c:	81 e0       	ldi	r24, 0x01	; 1
    266e:	0e 94 79 46 	call	0x8cf2	; 0x8cf2 <_Z10wifi_resetb>
    2672:	80 e0       	ldi	r24, 0x00	; 0
    2674:	0e 94 62 46 	call	0x8cc4	; 0x8cc4 <_Z10wifi_powerb>
    2678:	10 92 e5 46 	sts	0x46E5, r1	; 0x8046e5 <_ZL20g_shutting_down_wifi>
    267c:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    2680:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <_ZL11g_sleepType>
    2684:	81 e0       	ldi	r24, 0x01	; 1
    2686:	99 23       	and	r25, r25
    2688:	09 f4       	brne	.+2      	; 0x268c <_Z17handle_1sec_tasksv+0x836>
    268a:	80 e0       	ldi	r24, 0x00	; 0
    268c:	88 23       	and	r24, r24
    268e:	19 f0       	breq	.+6      	; 0x2696 <_Z17handle_1sec_tasksv+0x840>
    2690:	81 e0       	ldi	r24, 0x01	; 1
    2692:	80 93 23 47 	sts	0x4723, r24	; 0x804723 <_ZL17g_go_to_sleep_now>
    2696:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    269a:	88 23       	and	r24, r24
    269c:	19 f0       	breq	.+6      	; 0x26a4 <_Z17handle_1sec_tasksv+0x84e>
    269e:	81 e0       	ldi	r24, 0x01	; 1
    26a0:	80 93 e3 46 	sts	0x46E3, r24	; 0x8046e3 <_ZL16g_report_seconds>
    26a4:	00 00       	nop
    26a6:	63 96       	adiw	r28, 0x13	; 19
    26a8:	cd bf       	out	0x3d, r28	; 61
    26aa:	de bf       	out	0x3e, r29	; 62
    26ac:	df 91       	pop	r29
    26ae:	cf 91       	pop	r28
    26b0:	1f 91       	pop	r17
    26b2:	0f 91       	pop	r16
    26b4:	ff 90       	pop	r15
    26b6:	ef 90       	pop	r14
    26b8:	08 95       	ret

000026ba <__vector_12>:
    26ba:	1f 92       	push	r1
    26bc:	0f 92       	push	r0
    26be:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    26c2:	0f 92       	push	r0
    26c4:	11 24       	eor	r1, r1
    26c6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    26ca:	0f 92       	push	r0
    26cc:	2f 93       	push	r18
    26ce:	3f 93       	push	r19
    26d0:	4f 93       	push	r20
    26d2:	5f 93       	push	r21
    26d4:	6f 93       	push	r22
    26d6:	7f 93       	push	r23
    26d8:	8f 93       	push	r24
    26da:	9f 93       	push	r25
    26dc:	af 93       	push	r26
    26de:	bf 93       	push	r27
    26e0:	ef 93       	push	r30
    26e2:	ff 93       	push	r31
    26e4:	cf 93       	push	r28
    26e6:	df 93       	push	r29
    26e8:	cd b7       	in	r28, 0x3d	; 61
    26ea:	de b7       	in	r29, 0x3e	; 62
    26ec:	28 97       	sbiw	r28, 0x08	; 8
    26ee:	cd bf       	out	0x3d, r28	; 61
    26f0:	de bf       	out	0x3e, r29	; 62
    26f2:	80 e0       	ldi	r24, 0x00	; 0
    26f4:	9b e0       	ldi	r25, 0x0B	; 11
    26f6:	fc 01       	movw	r30, r24
    26f8:	86 81       	ldd	r24, Z+6	; 0x06
    26fa:	88 2f       	mov	r24, r24
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	81 70       	andi	r24, 0x01	; 1
    2700:	99 27       	eor	r25, r25
    2702:	21 e0       	ldi	r18, 0x01	; 1
    2704:	89 2b       	or	r24, r25
    2706:	09 f4       	brne	.+2      	; 0x270a <__vector_12+0x50>
    2708:	20 e0       	ldi	r18, 0x00	; 0
    270a:	22 23       	and	r18, r18
    270c:	09 f4       	brne	.+2      	; 0x2710 <__vector_12+0x56>
    270e:	70 c2       	rjmp	.+1248   	; 0x2bf0 <__vector_12+0x536>
    2710:	80 91 d8 46 	lds	r24, 0x46D8	; 0x8046d8 <_ZL21g_util_tick_countdown>
    2714:	90 91 d9 46 	lds	r25, 0x46D9	; 0x8046d9 <_ZL21g_util_tick_countdown+0x1>
    2718:	21 e0       	ldi	r18, 0x01	; 1
    271a:	89 2b       	or	r24, r25
    271c:	09 f4       	brne	.+2      	; 0x2720 <__vector_12+0x66>
    271e:	20 e0       	ldi	r18, 0x00	; 0
    2720:	22 23       	and	r18, r18
    2722:	49 f0       	breq	.+18     	; 0x2736 <__vector_12+0x7c>
    2724:	80 91 d8 46 	lds	r24, 0x46D8	; 0x8046d8 <_ZL21g_util_tick_countdown>
    2728:	90 91 d9 46 	lds	r25, 0x46D9	; 0x8046d9 <_ZL21g_util_tick_countdown+0x1>
    272c:	01 97       	sbiw	r24, 0x01	; 1
    272e:	80 93 d8 46 	sts	0x46D8, r24	; 0x8046d8 <_ZL21g_util_tick_countdown>
    2732:	90 93 d9 46 	sts	0x46D9, r25	; 0x8046d9 <_ZL21g_util_tick_countdown+0x1>
    2736:	83 e0       	ldi	r24, 0x03	; 3
    2738:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <PORTD_get_pin_level>
    273c:	98 2f       	mov	r25, r24
    273e:	81 e0       	ldi	r24, 0x01	; 1
    2740:	89 27       	eor	r24, r25
    2742:	88 23       	and	r24, r24
    2744:	a1 f0       	breq	.+40     	; 0x276e <__vector_12+0xb4>
    2746:	80 91 2d 47 	lds	r24, 0x472D	; 0x80472d <g_switch_closed_count>
    274a:	90 91 2e 47 	lds	r25, 0x472E	; 0x80472e <g_switch_closed_count+0x1>
    274e:	21 e0       	ldi	r18, 0x01	; 1
    2750:	88 3e       	cpi	r24, 0xE8	; 232
    2752:	93 40       	sbci	r25, 0x03	; 3
    2754:	08 f0       	brcs	.+2      	; 0x2758 <__vector_12+0x9e>
    2756:	20 e0       	ldi	r18, 0x00	; 0
    2758:	22 23       	and	r18, r18
    275a:	49 f0       	breq	.+18     	; 0x276e <__vector_12+0xb4>
    275c:	80 91 2d 47 	lds	r24, 0x472D	; 0x80472d <g_switch_closed_count>
    2760:	90 91 2e 47 	lds	r25, 0x472E	; 0x80472e <g_switch_closed_count+0x1>
    2764:	01 96       	adiw	r24, 0x01	; 1
    2766:	80 93 2d 47 	sts	0x472D, r24	; 0x80472d <g_switch_closed_count>
    276a:	90 93 2e 47 	sts	0x472E, r25	; 0x80472e <g_switch_closed_count+0x1>
    276e:	0e 94 16 28 	call	0x502c	; 0x502c <_Z19updateAntennaStatusv>
    2772:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <g_event_enabled>
    2776:	88 23       	and	r24, r24
    2778:	31 f0       	breq	.+12     	; 0x2786 <__vector_12+0xcc>
    277a:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <g_event_commenced>
    277e:	88 23       	and	r24, r24
    2780:	11 f0       	breq	.+4      	; 0x2786 <__vector_12+0xcc>
    2782:	81 e0       	ldi	r24, 0x01	; 1
    2784:	01 c0       	rjmp	.+2      	; 0x2788 <__vector_12+0xce>
    2786:	80 e0       	ldi	r24, 0x00	; 0
    2788:	88 23       	and	r24, r24
    278a:	09 f4       	brne	.+2      	; 0x278e <__vector_12+0xd4>
    278c:	aa c0       	rjmp	.+340    	; 0x28e2 <__vector_12+0x228>
    278e:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    2792:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    2796:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    279a:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    279e:	21 e0       	ldi	r18, 0x01	; 1
    27a0:	18 16       	cp	r1, r24
    27a2:	19 06       	cpc	r1, r25
    27a4:	1a 06       	cpc	r1, r26
    27a6:	1b 06       	cpc	r1, r27
    27a8:	0c f0       	brlt	.+2      	; 0x27ac <__vector_12+0xf2>
    27aa:	20 e0       	ldi	r18, 0x00	; 0
    27ac:	22 23       	and	r18, r18
    27ae:	09 f4       	brne	.+2      	; 0x27b2 <__vector_12+0xf8>
    27b0:	71 c0       	rjmp	.+226    	; 0x2894 <__vector_12+0x1da>
    27b2:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZZ11__vector_12E7codeInc>
    27b6:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    27ba:	89 2b       	or	r24, r25
    27bc:	09 f4       	brne	.+2      	; 0x27c0 <__vector_12+0x106>
    27be:	56 c0       	rjmp	.+172    	; 0x286c <__vector_12+0x1b2>
    27c0:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZZ11__vector_12E7codeInc>
    27c4:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    27c8:	01 97       	sbiw	r24, 0x01	; 1
    27ca:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZZ11__vector_12E7codeInc>
    27ce:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    27d2:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZZ11__vector_12E7codeInc>
    27d6:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    27da:	89 2b       	or	r24, r25
    27dc:	09 f0       	breq	.+2      	; 0x27e0 <__vector_12+0x126>
    27de:	42 c1       	rjmp	.+644    	; 0x2a64 <__vector_12+0x3aa>
    27e0:	9e 01       	movw	r18, r28
    27e2:	29 5f       	subi	r18, 0xF9	; 249
    27e4:	3f 4f       	sbci	r19, 0xFF	; 255
    27e6:	ce 01       	movw	r24, r28
    27e8:	06 96       	adiw	r24, 0x06	; 6
    27ea:	a9 01       	movw	r20, r18
    27ec:	bc 01       	movw	r22, r24
    27ee:	80 e0       	ldi	r24, 0x00	; 0
    27f0:	90 e0       	ldi	r25, 0x00	; 0
    27f2:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    27f6:	80 93 4a 47 	sts	0x474A, r24	; 0x80474a <_ZZ11__vector_12E3key>
    27fa:	9e 81       	ldd	r25, Y+6	; 0x06
    27fc:	81 e0       	ldi	r24, 0x01	; 1
    27fe:	89 27       	eor	r24, r25
    2800:	88 23       	and	r24, r24
    2802:	31 f1       	breq	.+76     	; 0x2850 <__vector_12+0x196>
    2804:	8f 81       	ldd	r24, Y+7	; 0x07
    2806:	88 23       	and	r24, r24
    2808:	19 f1       	breq	.+70     	; 0x2850 <__vector_12+0x196>
    280a:	8d ef       	ldi	r24, 0xFD	; 253
    280c:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    2810:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2814:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    2818:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    281c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2820:	81 e0       	ldi	r24, 0x01	; 1
    2822:	8e 83       	std	Y+6, r24	; 0x06
    2824:	ce 01       	movw	r24, r28
    2826:	06 96       	adiw	r24, 0x06	; 6
    2828:	40 e0       	ldi	r20, 0x00	; 0
    282a:	50 e0       	ldi	r21, 0x00	; 0
    282c:	bc 01       	movw	r22, r24
    282e:	89 ee       	ldi	r24, 0xE9	; 233
    2830:	96 e4       	ldi	r25, 0x46	; 70
    2832:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    2836:	9e 01       	movw	r18, r28
    2838:	29 5f       	subi	r18, 0xF9	; 249
    283a:	3f 4f       	sbci	r19, 0xFF	; 255
    283c:	ce 01       	movw	r24, r28
    283e:	06 96       	adiw	r24, 0x06	; 6
    2840:	a9 01       	movw	r20, r18
    2842:	bc 01       	movw	r22, r24
    2844:	80 e0       	ldi	r24, 0x00	; 0
    2846:	90 e0       	ldi	r25, 0x00	; 0
    2848:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    284c:	80 93 4a 47 	sts	0x474A, r24	; 0x80474a <_ZZ11__vector_12E3key>
    2850:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    2854:	88 23       	and	r24, r24
    2856:	09 f4       	brne	.+2      	; 0x285a <__vector_12+0x1a0>
    2858:	05 c1       	rjmp	.+522    	; 0x2a64 <__vector_12+0x3aa>
    285a:	81 e0       	ldi	r24, 0x01	; 1
    285c:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    2860:	61 e0       	ldi	r22, 0x01	; 1
    2862:	82 e3       	ldi	r24, 0x32	; 50
    2864:	97 e4       	ldi	r25, 0x47	; 71
    2866:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    286a:	fc c0       	rjmp	.+504    	; 0x2a64 <__vector_12+0x3aa>
    286c:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    2870:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    2874:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    2878:	68 2f       	mov	r22, r24
    287a:	82 e3       	ldi	r24, 0x32	; 50
    287c:	97 e4       	ldi	r25, 0x47	; 71
    287e:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    2882:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2886:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    288a:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZZ11__vector_12E7codeInc>
    288e:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    2892:	e8 c0       	rjmp	.+464    	; 0x2a64 <__vector_12+0x3aa>
    2894:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    2898:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    289c:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    28a0:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    28a4:	21 e0       	ldi	r18, 0x01	; 1
    28a6:	89 2b       	or	r24, r25
    28a8:	8a 2b       	or	r24, r26
    28aa:	8b 2b       	or	r24, r27
    28ac:	09 f0       	breq	.+2      	; 0x28b0 <__vector_12+0x1f6>
    28ae:	20 e0       	ldi	r18, 0x00	; 0
    28b0:	22 23       	and	r18, r18
    28b2:	09 f4       	brne	.+2      	; 0x28b6 <__vector_12+0x1fc>
    28b4:	d7 c0       	rjmp	.+430    	; 0x2a64 <__vector_12+0x3aa>
    28b6:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    28ba:	88 23       	and	r24, r24
    28bc:	09 f4       	brne	.+2      	; 0x28c0 <__vector_12+0x206>
    28be:	d2 c0       	rjmp	.+420    	; 0x2a64 <__vector_12+0x3aa>
    28c0:	10 92 4a 47 	sts	0x474A, r1	; 0x80474a <_ZZ11__vector_12E3key>
    28c4:	80 e0       	ldi	r24, 0x00	; 0
    28c6:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    28ca:	60 e0       	ldi	r22, 0x00	; 0
    28cc:	82 e3       	ldi	r24, 0x32	; 50
    28ce:	97 e4       	ldi	r25, 0x47	; 71
    28d0:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    28d4:	80 e0       	ldi	r24, 0x00	; 0
    28d6:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    28da:	8e ef       	ldi	r24, 0xFE	; 254
    28dc:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    28e0:	c1 c0       	rjmp	.+386    	; 0x2a64 <__vector_12+0x3aa>
    28e2:	80 91 47 47 	lds	r24, 0x4747	; 0x804747 <g_enable_manual_transmissions>
    28e6:	88 23       	and	r24, r24
    28e8:	09 f4       	brne	.+2      	; 0x28ec <__vector_12+0x232>
    28ea:	bc c0       	rjmp	.+376    	; 0x2a64 <__vector_12+0x3aa>
    28ec:	83 e3       	ldi	r24, 0x33	; 51
    28ee:	97 e4       	ldi	r25, 0x47	; 71
    28f0:	0e 94 8e 3b 	call	0x771c	; 0x771c <_ZNK18CircularStringBuff5emptyEv>
    28f4:	89 83       	std	Y+1, r24	; 0x01
    28f6:	1e 82       	std	Y+6, r1	; 0x06
    28f8:	89 81       	ldd	r24, Y+1	; 0x01
    28fa:	88 23       	and	r24, r24
    28fc:	89 f1       	breq	.+98     	; 0x2960 <__vector_12+0x2a6>
    28fe:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <_ZZ11__vector_12E12charFinished>
    2902:	88 23       	and	r24, r24
    2904:	69 f1       	breq	.+90     	; 0x2960 <__vector_12+0x2a6>
    2906:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <_ZZ11__vector_12E4idle>
    290a:	81 e0       	ldi	r24, 0x01	; 1
    290c:	89 27       	eor	r24, r25
    290e:	88 23       	and	r24, r24
    2910:	09 f4       	brne	.+2      	; 0x2914 <__vector_12+0x25a>
    2912:	a8 c0       	rjmp	.+336    	; 0x2a64 <__vector_12+0x3aa>
    2914:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    2918:	88 23       	and	r24, r24
    291a:	69 f0       	breq	.+26     	; 0x2936 <__vector_12+0x27c>
    291c:	10 92 4a 47 	sts	0x474A, r1	; 0x80474a <_ZZ11__vector_12E3key>
    2920:	80 e0       	ldi	r24, 0x00	; 0
    2922:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    2926:	60 e0       	ldi	r22, 0x00	; 0
    2928:	82 e3       	ldi	r24, 0x32	; 50
    292a:	97 e4       	ldi	r25, 0x47	; 71
    292c:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    2930:	80 e0       	ldi	r24, 0x00	; 0
    2932:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    2936:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    293a:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    293e:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZZ11__vector_12E7codeInc>
    2942:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    2946:	ce 01       	movw	r24, r28
    2948:	06 96       	adiw	r24, 0x06	; 6
    294a:	40 e0       	ldi	r20, 0x00	; 0
    294c:	50 e0       	ldi	r21, 0x00	; 0
    294e:	bc 01       	movw	r22, r24
    2950:	87 e5       	ldi	r24, 0x57	; 87
    2952:	90 e4       	ldi	r25, 0x40	; 64
    2954:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	80 93 19 40 	sts	0x4019, r24	; 0x804019 <_ZZ11__vector_12E4idle>
    295e:	82 c0       	rjmp	.+260    	; 0x2a64 <__vector_12+0x3aa>
    2960:	10 92 19 40 	sts	0x4019, r1	; 0x804019 <_ZZ11__vector_12E4idle>
    2964:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZZ11__vector_12E7codeInc>
    2968:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    296c:	89 2b       	or	r24, r25
    296e:	09 f4       	brne	.+2      	; 0x2972 <__vector_12+0x2b8>
    2970:	66 c0       	rjmp	.+204    	; 0x2a3e <__vector_12+0x384>
    2972:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZZ11__vector_12E7codeInc>
    2976:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    297a:	01 97       	sbiw	r24, 0x01	; 1
    297c:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZZ11__vector_12E7codeInc>
    2980:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    2984:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZZ11__vector_12E7codeInc>
    2988:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    298c:	89 2b       	or	r24, r25
    298e:	09 f0       	breq	.+2      	; 0x2992 <__vector_12+0x2d8>
    2990:	69 c0       	rjmp	.+210    	; 0x2a64 <__vector_12+0x3aa>
    2992:	ce 01       	movw	r24, r28
    2994:	06 96       	adiw	r24, 0x06	; 6
    2996:	48 e1       	ldi	r20, 0x18	; 24
    2998:	50 e4       	ldi	r21, 0x40	; 64
    299a:	bc 01       	movw	r22, r24
    299c:	80 e0       	ldi	r24, 0x00	; 0
    299e:	90 e0       	ldi	r25, 0x00	; 0
    29a0:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    29a4:	80 93 4a 47 	sts	0x474A, r24	; 0x80474a <_ZZ11__vector_12E3key>
    29a8:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <_ZZ11__vector_12E12charFinished>
    29ac:	88 23       	and	r24, r24
    29ae:	69 f1       	breq	.+90     	; 0x2a0a <__vector_12+0x350>
    29b0:	83 e3       	ldi	r24, 0x33	; 51
    29b2:	97 e4       	ldi	r25, 0x47	; 71
    29b4:	0e 94 8e 3b 	call	0x771c	; 0x771c <_ZNK18CircularStringBuff5emptyEv>
    29b8:	98 2f       	mov	r25, r24
    29ba:	81 e0       	ldi	r24, 0x01	; 1
    29bc:	89 27       	eor	r24, r25
    29be:	88 23       	and	r24, r24
    29c0:	21 f1       	breq	.+72     	; 0x2a0a <__vector_12+0x350>
    29c2:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    29c6:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    29ca:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    29ce:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    29d2:	83 e3       	ldi	r24, 0x33	; 51
    29d4:	97 e4       	ldi	r25, 0x47	; 71
    29d6:	0e 94 71 3c 	call	0x78e2	; 0x78e2 <_ZN18CircularStringBuff3getEv>
    29da:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZZ11__vector_12E2cc>
    29de:	10 92 4c 47 	sts	0x474C, r1	; 0x80474c <_ZZ11__vector_12E2cc+0x1>
    29e2:	ce 01       	movw	r24, r28
    29e4:	06 96       	adiw	r24, 0x06	; 6
    29e6:	40 e0       	ldi	r20, 0x00	; 0
    29e8:	50 e0       	ldi	r21, 0x00	; 0
    29ea:	bc 01       	movw	r22, r24
    29ec:	8b e4       	ldi	r24, 0x4B	; 75
    29ee:	97 e4       	ldi	r25, 0x47	; 71
    29f0:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    29f4:	ce 01       	movw	r24, r28
    29f6:	06 96       	adiw	r24, 0x06	; 6
    29f8:	48 e1       	ldi	r20, 0x18	; 24
    29fa:	50 e4       	ldi	r21, 0x40	; 64
    29fc:	bc 01       	movw	r22, r24
    29fe:	80 e0       	ldi	r24, 0x00	; 0
    2a00:	90 e0       	ldi	r25, 0x00	; 0
    2a02:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    2a06:	80 93 4a 47 	sts	0x474A, r24	; 0x80474a <_ZZ11__vector_12E3key>
    2a0a:	90 91 18 40 	lds	r25, 0x4018	; 0x804018 <_ZZ11__vector_12E12charFinished>
    2a0e:	81 e0       	ldi	r24, 0x01	; 1
    2a10:	89 27       	eor	r24, r25
    2a12:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    2a16:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    2a1a:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    2a1e:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    2a22:	68 2f       	mov	r22, r24
    2a24:	82 e3       	ldi	r24, 0x32	; 50
    2a26:	97 e4       	ldi	r25, 0x47	; 71
    2a28:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    2a2c:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2a30:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2a34:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZZ11__vector_12E7codeInc>
    2a38:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    2a3c:	13 c0       	rjmp	.+38     	; 0x2a64 <__vector_12+0x3aa>
    2a3e:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    2a42:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    2a46:	80 91 4a 47 	lds	r24, 0x474A	; 0x80474a <_ZZ11__vector_12E3key>
    2a4a:	68 2f       	mov	r22, r24
    2a4c:	82 e3       	ldi	r24, 0x32	; 50
    2a4e:	97 e4       	ldi	r25, 0x47	; 71
    2a50:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    2a54:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2a58:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2a5c:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZZ11__vector_12E7codeInc>
    2a60:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZZ11__vector_12E7codeInc+0x1>
    2a64:	90 91 4d 47 	lds	r25, 0x474D	; 0x80474d <_ZZ11__vector_12E19conversionInProcess>
    2a68:	81 e0       	ldi	r24, 0x01	; 1
    2a6a:	89 27       	eor	r24, r25
    2a6c:	88 23       	and	r24, r24
    2a6e:	09 f4       	brne	.+2      	; 0x2a72 <__vector_12+0x3b8>
    2a70:	6a c0       	rjmp	.+212    	; 0x2b46 <__vector_12+0x48c>
    2a72:	8f ef       	ldi	r24, 0xFF	; 255
    2a74:	80 93 4e 47 	sts	0x474E, r24	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2a78:	18 86       	std	Y+8, r1	; 0x08
    2a7a:	98 85       	ldd	r25, Y+8	; 0x08
    2a7c:	81 e0       	ldi	r24, 0x01	; 1
    2a7e:	99 23       	and	r25, r25
    2a80:	09 f0       	breq	.+2      	; 0x2a84 <__vector_12+0x3ca>
    2a82:	80 e0       	ldi	r24, 0x00	; 0
    2a84:	88 23       	and	r24, r24
    2a86:	d9 f1       	breq	.+118    	; 0x2afe <__vector_12+0x444>
    2a88:	88 85       	ldd	r24, Y+8	; 0x08
    2a8a:	88 2f       	mov	r24, r24
    2a8c:	90 e0       	ldi	r25, 0x00	; 0
    2a8e:	88 0f       	add	r24, r24
    2a90:	99 1f       	adc	r25, r25
    2a92:	8b 5e       	subi	r24, 0xEB	; 235
    2a94:	9f 4b       	sbci	r25, 0xBF	; 191
    2a96:	fc 01       	movw	r30, r24
    2a98:	80 81       	ld	r24, Z
    2a9a:	91 81       	ldd	r25, Z+1	; 0x01
    2a9c:	21 e0       	ldi	r18, 0x01	; 1
    2a9e:	89 2b       	or	r24, r25
    2aa0:	09 f4       	brne	.+2      	; 0x2aa4 <__vector_12+0x3ea>
    2aa2:	20 e0       	ldi	r18, 0x00	; 0
    2aa4:	22 23       	and	r18, r18
    2aa6:	a1 f0       	breq	.+40     	; 0x2ad0 <__vector_12+0x416>
    2aa8:	88 85       	ldd	r24, Y+8	; 0x08
    2aaa:	88 2f       	mov	r24, r24
    2aac:	90 e0       	ldi	r25, 0x00	; 0
    2aae:	9c 01       	movw	r18, r24
    2ab0:	22 0f       	add	r18, r18
    2ab2:	33 1f       	adc	r19, r19
    2ab4:	2b 5e       	subi	r18, 0xEB	; 235
    2ab6:	3f 4b       	sbci	r19, 0xBF	; 191
    2ab8:	f9 01       	movw	r30, r18
    2aba:	20 81       	ld	r18, Z
    2abc:	31 81       	ldd	r19, Z+1	; 0x01
    2abe:	21 50       	subi	r18, 0x01	; 1
    2ac0:	31 09       	sbc	r19, r1
    2ac2:	88 0f       	add	r24, r24
    2ac4:	99 1f       	adc	r25, r25
    2ac6:	8b 5e       	subi	r24, 0xEB	; 235
    2ac8:	9f 4b       	sbci	r25, 0xBF	; 191
    2aca:	fc 01       	movw	r30, r24
    2acc:	20 83       	st	Z, r18
    2ace:	31 83       	std	Z+1, r19	; 0x01
    2ad0:	88 85       	ldd	r24, Y+8	; 0x08
    2ad2:	88 2f       	mov	r24, r24
    2ad4:	90 e0       	ldi	r25, 0x00	; 0
    2ad6:	88 0f       	add	r24, r24
    2ad8:	99 1f       	adc	r25, r25
    2ada:	8b 5e       	subi	r24, 0xEB	; 235
    2adc:	9f 4b       	sbci	r25, 0xBF	; 191
    2ade:	fc 01       	movw	r30, r24
    2ae0:	80 81       	ld	r24, Z
    2ae2:	91 81       	ldd	r25, Z+1	; 0x01
    2ae4:	21 e0       	ldi	r18, 0x01	; 1
    2ae6:	89 2b       	or	r24, r25
    2ae8:	09 f0       	breq	.+2      	; 0x2aec <__vector_12+0x432>
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	22 23       	and	r18, r18
    2aee:	19 f0       	breq	.+6      	; 0x2af6 <__vector_12+0x43c>
    2af0:	88 85       	ldd	r24, Y+8	; 0x08
    2af2:	80 93 4e 47 	sts	0x474E, r24	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2af6:	88 85       	ldd	r24, Y+8	; 0x08
    2af8:	8f 5f       	subi	r24, 0xFF	; 255
    2afa:	88 87       	std	Y+8, r24	; 0x08
    2afc:	be cf       	rjmp	.-132    	; 0x2a7a <__vector_12+0x3c0>
    2afe:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2b02:	88 23       	and	r24, r24
    2b04:	0c f4       	brge	.+2      	; 0x2b08 <__vector_12+0x44e>
    2b06:	74 c0       	rjmp	.+232    	; 0x2bf0 <__vector_12+0x536>
    2b08:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2b0c:	08 2e       	mov	r0, r24
    2b0e:	00 0c       	add	r0, r0
    2b10:	99 0b       	sbc	r25, r25
    2b12:	20 e6       	ldi	r18, 0x60	; 96
    2b14:	39 e0       	ldi	r19, 0x09	; 9
    2b16:	88 0f       	add	r24, r24
    2b18:	99 1f       	adc	r25, r25
    2b1a:	8b 5e       	subi	r24, 0xEB	; 235
    2b1c:	9f 4b       	sbci	r25, 0xBF	; 191
    2b1e:	fc 01       	movw	r30, r24
    2b20:	20 83       	st	Z, r18
    2b22:	31 83       	std	Z+1, r19	; 0x01
    2b24:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2b28:	08 2e       	mov	r0, r24
    2b2a:	00 0c       	add	r0, r0
    2b2c:	99 0b       	sbc	r25, r25
    2b2e:	8c 5e       	subi	r24, 0xEC	; 236
    2b30:	9f 4b       	sbci	r25, 0xBF	; 191
    2b32:	fc 01       	movw	r30, r24
    2b34:	80 81       	ld	r24, Z
    2b36:	0e 94 5e 36 	call	0x6cbc	; 0x6cbc <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2b3a:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <_Z20ADC0_startConversionv>
    2b3e:	81 e0       	ldi	r24, 0x01	; 1
    2b40:	80 93 4d 47 	sts	0x474D, r24	; 0x80474d <_ZZ11__vector_12E19conversionInProcess>
    2b44:	55 c0       	rjmp	.+170    	; 0x2bf0 <__vector_12+0x536>
    2b46:	0e 94 d5 36 	call	0x6daa	; 0x6daa <_Z19ADC0_conversionDonev>
    2b4a:	88 23       	and	r24, r24
    2b4c:	09 f4       	brne	.+2      	; 0x2b50 <__vector_12+0x496>
    2b4e:	50 c0       	rjmp	.+160    	; 0x2bf0 <__vector_12+0x536>
    2b50:	0e 94 e9 36 	call	0x6dd2	; 0x6dd2 <_Z9ADC0_readv>
    2b54:	8a 83       	std	Y+2, r24	; 0x02
    2b56:	9b 83       	std	Y+3, r25	; 0x03
    2b58:	8a 81       	ldd	r24, Y+2	; 0x02
    2b5a:	9b 81       	ldd	r25, Y+3	; 0x03
    2b5c:	0b 97       	sbiw	r24, 0x0b	; 11
    2b5e:	c0 f1       	brcs	.+112    	; 0x2bd0 <__vector_12+0x516>
    2b60:	8a 81       	ldd	r24, Y+2	; 0x02
    2b62:	9b 81       	ldd	r25, Y+3	; 0x03
    2b64:	8a 3f       	cpi	r24, 0xFA	; 250
    2b66:	9f 40       	sbci	r25, 0x0F	; 15
    2b68:	98 f5       	brcc	.+102    	; 0x2bd0 <__vector_12+0x516>
    2b6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b6c:	9b 81       	ldd	r25, Y+3	; 0x03
    2b6e:	80 93 4f 47 	sts	0x474F, r24	; 0x80474f <_ZZ11__vector_12E20holdConversionResult>
    2b72:	90 93 50 47 	sts	0x4750, r25	; 0x804750 <_ZZ11__vector_12E20holdConversionResult+0x1>
    2b76:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2b7a:	08 2e       	mov	r0, r24
    2b7c:	00 0c       	add	r0, r0
    2b7e:	99 0b       	sbc	r25, r25
    2b80:	88 0f       	add	r24, r24
    2b82:	99 1f       	adc	r25, r25
    2b84:	85 5d       	subi	r24, 0xD5	; 213
    2b86:	98 4b       	sbci	r25, 0xB8	; 184
    2b88:	fc 01       	movw	r30, r24
    2b8a:	80 81       	ld	r24, Z
    2b8c:	91 81       	ldd	r25, Z+1	; 0x01
    2b8e:	8c 83       	std	Y+4, r24	; 0x04
    2b90:	9d 83       	std	Y+5, r25	; 0x05
    2b92:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2b96:	08 2e       	mov	r0, r24
    2b98:	00 0c       	add	r0, r0
    2b9a:	99 0b       	sbc	r25, r25
    2b9c:	86 5d       	subi	r24, 0xD6	; 214
    2b9e:	98 4b       	sbci	r25, 0xB8	; 184
    2ba0:	21 e0       	ldi	r18, 0x01	; 1
    2ba2:	fc 01       	movw	r30, r24
    2ba4:	20 83       	st	Z, r18
    2ba6:	80 91 4f 47 	lds	r24, 0x474F	; 0x80474f <_ZZ11__vector_12E20holdConversionResult>
    2baa:	90 91 50 47 	lds	r25, 0x4750	; 0x804750 <_ZZ11__vector_12E20holdConversionResult+0x1>
    2bae:	8c 83       	std	Y+4, r24	; 0x04
    2bb0:	9d 83       	std	Y+5, r25	; 0x05
    2bb2:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2bb6:	08 2e       	mov	r0, r24
    2bb8:	00 0c       	add	r0, r0
    2bba:	99 0b       	sbc	r25, r25
    2bbc:	88 0f       	add	r24, r24
    2bbe:	99 1f       	adc	r25, r25
    2bc0:	85 5d       	subi	r24, 0xD5	; 213
    2bc2:	98 4b       	sbci	r25, 0xB8	; 184
    2bc4:	2c 81       	ldd	r18, Y+4	; 0x04
    2bc6:	3d 81       	ldd	r19, Y+5	; 0x05
    2bc8:	fc 01       	movw	r30, r24
    2bca:	20 83       	st	Z, r18
    2bcc:	31 83       	std	Z+1, r19	; 0x01
    2bce:	0e c0       	rjmp	.+28     	; 0x2bec <__vector_12+0x532>
    2bd0:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZZ11__vector_12E24indexConversionInProcess>
    2bd4:	08 2e       	mov	r0, r24
    2bd6:	00 0c       	add	r0, r0
    2bd8:	99 0b       	sbc	r25, r25
    2bda:	88 0f       	add	r24, r24
    2bdc:	99 1f       	adc	r25, r25
    2bde:	85 5d       	subi	r24, 0xD5	; 213
    2be0:	98 4b       	sbci	r25, 0xB8	; 184
    2be2:	fc 01       	movw	r30, r24
    2be4:	80 81       	ld	r24, Z
    2be6:	91 81       	ldd	r25, Z+1	; 0x01
    2be8:	8a 83       	std	Y+2, r24	; 0x02
    2bea:	9b 83       	std	Y+3, r25	; 0x03
    2bec:	10 92 4d 47 	sts	0x474D, r1	; 0x80474d <_ZZ11__vector_12E19conversionInProcess>
    2bf0:	80 e0       	ldi	r24, 0x00	; 0
    2bf2:	9b e0       	ldi	r25, 0x0B	; 11
    2bf4:	23 e0       	ldi	r18, 0x03	; 3
    2bf6:	fc 01       	movw	r30, r24
    2bf8:	26 83       	std	Z+6, r18	; 0x06
    2bfa:	00 00       	nop
    2bfc:	28 96       	adiw	r28, 0x08	; 8
    2bfe:	cd bf       	out	0x3d, r28	; 61
    2c00:	de bf       	out	0x3e, r29	; 62
    2c02:	df 91       	pop	r29
    2c04:	cf 91       	pop	r28
    2c06:	ff 91       	pop	r31
    2c08:	ef 91       	pop	r30
    2c0a:	bf 91       	pop	r27
    2c0c:	af 91       	pop	r26
    2c0e:	9f 91       	pop	r25
    2c10:	8f 91       	pop	r24
    2c12:	7f 91       	pop	r23
    2c14:	6f 91       	pop	r22
    2c16:	5f 91       	pop	r21
    2c18:	4f 91       	pop	r20
    2c1a:	3f 91       	pop	r19
    2c1c:	2f 91       	pop	r18
    2c1e:	0f 90       	pop	r0
    2c20:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2c24:	0f 90       	pop	r0
    2c26:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2c2a:	0f 90       	pop	r0
    2c2c:	1f 90       	pop	r1
    2c2e:	18 95       	reti

00002c30 <__vector_22>:
    2c30:	1f 92       	push	r1
    2c32:	0f 92       	push	r0
    2c34:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2c38:	0f 92       	push	r0
    2c3a:	11 24       	eor	r1, r1
    2c3c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2c40:	0f 92       	push	r0
    2c42:	2f 93       	push	r18
    2c44:	3f 93       	push	r19
    2c46:	4f 93       	push	r20
    2c48:	5f 93       	push	r21
    2c4a:	6f 93       	push	r22
    2c4c:	7f 93       	push	r23
    2c4e:	8f 93       	push	r24
    2c50:	9f 93       	push	r25
    2c52:	af 93       	push	r26
    2c54:	bf 93       	push	r27
    2c56:	ef 93       	push	r30
    2c58:	ff 93       	push	r31
    2c5a:	cf 93       	push	r28
    2c5c:	df 93       	push	r29
    2c5e:	cd b7       	in	r28, 0x3d	; 61
    2c60:	de b7       	in	r29, 0x3e	; 62
    2c62:	80 e6       	ldi	r24, 0x60	; 96
    2c64:	94 e0       	ldi	r25, 0x04	; 4
    2c66:	fc 01       	movw	r30, r24
    2c68:	81 85       	ldd	r24, Z+9	; 0x09
    2c6a:	88 2f       	mov	r24, r24
    2c6c:	90 e0       	ldi	r25, 0x00	; 0
    2c6e:	88 70       	andi	r24, 0x08	; 8
    2c70:	99 27       	eor	r25, r25
    2c72:	21 e0       	ldi	r18, 0x01	; 1
    2c74:	89 2b       	or	r24, r25
    2c76:	09 f4       	brne	.+2      	; 0x2c7a <__vector_22+0x4a>
    2c78:	20 e0       	ldi	r18, 0x00	; 0
    2c7a:	22 23       	and	r18, r18
    2c7c:	09 f4       	brne	.+2      	; 0x2c80 <__vector_22+0x50>
    2c7e:	63 c0       	rjmp	.+198    	; 0x2d46 <__vector_22+0x116>
    2c80:	80 91 24 47 	lds	r24, 0x4724	; 0x804724 <_ZL10g_sleeping>
    2c84:	88 23       	and	r24, r24
    2c86:	71 f0       	breq	.+28     	; 0x2ca4 <__vector_22+0x74>
    2c88:	10 92 23 47 	sts	0x4723, r1	; 0x804723 <_ZL17g_go_to_sleep_now>
    2c8c:	10 92 24 47 	sts	0x4724, r1	; 0x804724 <_ZL10g_sleeping>
    2c90:	82 e3       	ldi	r24, 0x32	; 50
    2c92:	97 e4       	ldi	r25, 0x47	; 71
    2c94:	0e 94 25 4b 	call	0x964a	; 0x964a <_ZN4leds6resumeEv>
    2c98:	83 e0       	ldi	r24, 0x03	; 3
    2c9a:	80 93 29 47 	sts	0x4729, r24	; 0x804729 <_ZL12g_awakenedBy>
    2c9e:	10 92 22 47 	sts	0x4722, r1	; 0x804722 <g_waiting_for_next_event>
    2ca2:	4d c0       	rjmp	.+154    	; 0x2d3e <__vector_22+0x10e>
    2ca4:	80 91 2d 47 	lds	r24, 0x472D	; 0x80472d <g_switch_closed_count>
    2ca8:	90 91 2e 47 	lds	r25, 0x472E	; 0x80472e <g_switch_closed_count+0x1>
    2cac:	21 e0       	ldi	r18, 0x01	; 1
    2cae:	88 3e       	cpi	r24, 0xE8	; 232
    2cb0:	93 40       	sbci	r25, 0x03	; 3
    2cb2:	08 f4       	brcc	.+2      	; 0x2cb6 <__vector_22+0x86>
    2cb4:	20 e0       	ldi	r18, 0x00	; 0
    2cb6:	22 23       	and	r18, r18
    2cb8:	21 f0       	breq	.+8      	; 0x2cc2 <__vector_22+0x92>
    2cba:	81 e0       	ldi	r24, 0x01	; 1
    2cbc:	80 93 2f 47 	sts	0x472F, r24	; 0x80472f <g_long_button_press>
    2cc0:	3e c0       	rjmp	.+124    	; 0x2d3e <__vector_22+0x10e>
    2cc2:	80 91 2d 47 	lds	r24, 0x472D	; 0x80472d <g_switch_closed_count>
    2cc6:	90 91 2e 47 	lds	r25, 0x472E	; 0x80472e <g_switch_closed_count+0x1>
    2cca:	21 e0       	ldi	r18, 0x01	; 1
    2ccc:	0b 97       	sbiw	r24, 0x0b	; 11
    2cce:	08 f4       	brcc	.+2      	; 0x2cd2 <__vector_22+0xa2>
    2cd0:	20 e0       	ldi	r18, 0x00	; 0
    2cd2:	22 23       	and	r18, r18
    2cd4:	a1 f1       	breq	.+104    	; 0x2d3e <__vector_22+0x10e>
    2cd6:	10 92 e7 46 	sts	0x46E7, r1	; 0x8046e7 <_ZL16g_hardware_error>
    2cda:	10 92 e8 46 	sts	0x46E8, r1	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2cde:	82 e3       	ldi	r24, 0x32	; 50
    2ce0:	97 e4       	ldi	r25, 0x47	; 71
    2ce2:	0e 94 d1 4a 	call	0x95a2	; 0x95a2 <_ZN4leds6activeEv>
    2ce6:	98 2f       	mov	r25, r24
    2ce8:	81 e0       	ldi	r24, 0x01	; 1
    2cea:	89 27       	eor	r24, r25
    2cec:	88 23       	and	r24, r24
    2cee:	29 f0       	breq	.+10     	; 0x2cfa <__vector_22+0xca>
    2cf0:	82 e3       	ldi	r24, 0x32	; 50
    2cf2:	97 e4       	ldi	r25, 0x47	; 71
    2cf4:	0e 94 25 4b 	call	0x964a	; 0x964a <_ZN4leds6resumeEv>
    2cf8:	22 c0       	rjmp	.+68     	; 0x2d3e <__vector_22+0x10e>
    2cfa:	80 91 e7 46 	lds	r24, 0x46E7	; 0x8046e7 <_ZL16g_hardware_error>
    2cfe:	90 91 e8 46 	lds	r25, 0x46E8	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2d02:	81 e0       	ldi	r24, 0x01	; 1
    2d04:	88 23       	and	r24, r24
    2d06:	d9 f4       	brne	.+54     	; 0x2d3e <__vector_22+0x10e>
    2d08:	0e 94 a4 46 	call	0x8d48	; 0x8d48 <_Z11wifiEnabledv>
    2d0c:	88 23       	and	r24, r24
    2d0e:	a1 f0       	breq	.+40     	; 0x2d38 <__vector_22+0x108>
    2d10:	88 e0       	ldi	r24, 0x08	; 8
    2d12:	e9 e5       	ldi	r30, 0x59	; 89
    2d14:	f0 e4       	ldi	r31, 0x40	; 64
    2d16:	a4 ea       	ldi	r26, 0xA4	; 164
    2d18:	b6 e4       	ldi	r27, 0x46	; 70
    2d1a:	01 90       	ld	r0, Z+
    2d1c:	0d 92       	st	X+, r0
    2d1e:	8a 95       	dec	r24
    2d20:	e1 f7       	brne	.-8      	; 0x2d1a <__vector_22+0xea>
    2d22:	44 ea       	ldi	r20, 0xA4	; 164
    2d24:	56 e4       	ldi	r21, 0x46	; 70
    2d26:	61 e6       	ldi	r22, 0x61	; 97
    2d28:	70 e4       	ldi	r23, 0x40	; 64
    2d2a:	81 e0       	ldi	r24, 0x01	; 1
    2d2c:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2d30:	85 e0       	ldi	r24, 0x05	; 5
    2d32:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2d36:	03 c0       	rjmp	.+6      	; 0x2d3e <__vector_22+0x10e>
    2d38:	82 e0       	ldi	r24, 0x02	; 2
    2d3a:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    2d3e:	10 92 2d 47 	sts	0x472D, r1	; 0x80472d <g_switch_closed_count>
    2d42:	10 92 2e 47 	sts	0x472E, r1	; 0x80472e <g_switch_closed_count+0x1>
    2d46:	80 e6       	ldi	r24, 0x60	; 96
    2d48:	94 e0       	ldi	r25, 0x04	; 4
    2d4a:	2f ef       	ldi	r18, 0xFF	; 255
    2d4c:	fc 01       	movw	r30, r24
    2d4e:	21 87       	std	Z+9, r18	; 0x09
    2d50:	00 00       	nop
    2d52:	df 91       	pop	r29
    2d54:	cf 91       	pop	r28
    2d56:	ff 91       	pop	r31
    2d58:	ef 91       	pop	r30
    2d5a:	bf 91       	pop	r27
    2d5c:	af 91       	pop	r26
    2d5e:	9f 91       	pop	r25
    2d60:	8f 91       	pop	r24
    2d62:	7f 91       	pop	r23
    2d64:	6f 91       	pop	r22
    2d66:	5f 91       	pop	r21
    2d68:	4f 91       	pop	r20
    2d6a:	3f 91       	pop	r19
    2d6c:	2f 91       	pop	r18
    2d6e:	0f 90       	pop	r0
    2d70:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2d74:	0f 90       	pop	r0
    2d76:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2d7a:	0f 90       	pop	r0
    2d7c:	1f 90       	pop	r1
    2d7e:	18 95       	reti

00002d80 <_Z12powerDown3V3v>:
    2d80:	cf 93       	push	r28
    2d82:	df 93       	push	r29
    2d84:	cd b7       	in	r28, 0x3d	; 61
    2d86:	de b7       	in	r29, 0x3e	; 62
    2d88:	80 e0       	ldi	r24, 0x00	; 0
    2d8a:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    2d8e:	60 e0       	ldi	r22, 0x00	; 0
    2d90:	82 e0       	ldi	r24, 0x02	; 2
    2d92:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <PORTA_set_pin_level>
    2d96:	00 00       	nop
    2d98:	df 91       	pop	r29
    2d9a:	cf 91       	pop	r28
    2d9c:	08 95       	ret

00002d9e <_Z10powerUp3V3v>:
    2d9e:	cf 93       	push	r28
    2da0:	df 93       	push	r29
    2da2:	cd b7       	in	r28, 0x3d	; 61
    2da4:	de b7       	in	r29, 0x3e	; 62
    2da6:	80 e0       	ldi	r24, 0x00	; 0
    2da8:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    2dac:	00 00       	nop
    2dae:	df 91       	pop	r29
    2db0:	cf 91       	pop	r28
    2db2:	08 95       	ret

00002db4 <main>:
    2db4:	cf 93       	push	r28
    2db6:	df 93       	push	r29
    2db8:	cd b7       	in	r28, 0x3d	; 61
    2dba:	de b7       	in	r29, 0x3e	; 62
    2dbc:	28 97       	sbiw	r28, 0x08	; 8
    2dbe:	cd bf       	out	0x3d, r28	; 61
    2dc0:	de bf       	out	0x3e, r29	; 62
    2dc2:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <atmel_start_init>
    2dc6:	60 e0       	ldi	r22, 0x00	; 0
    2dc8:	82 e3       	ldi	r24, 0x32	; 50
    2dca:	97 e4       	ldi	r25, 0x47	; 71
    2dcc:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    2dd0:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <_Z10powerUp3V3v>
    2dd4:	8c e3       	ldi	r24, 0x3C	; 60
    2dd6:	97 e4       	ldi	r25, 0x47	; 71
    2dd8:	0e 94 ed 43 	call	0x87da	; 0x87da <_ZN13EepromManager20initializeEEPROMVarsEv>
    2ddc:	8c e3       	ldi	r24, 0x3C	; 60
    2dde:	97 e4       	ldi	r25, 0x47	; 71
    2de0:	0e 94 a1 41 	call	0x8342	; 0x8342 <_ZN13EepromManager11readNonVolsEv>
    2de4:	81 e0       	ldi	r24, 0x01	; 1
    2de6:	0e 94 79 46 	call	0x8cf2	; 0x8cf2 <_Z10wifi_resetb>
    2dea:	81 e0       	ldi	r24, 0x01	; 1
    2dec:	0e 94 62 46 	call	0x8cc4	; 0x8cc4 <_Z10wifi_powerb>
    2df0:	80 e0       	ldi	r24, 0x00	; 0
    2df2:	90 e0       	ldi	r25, 0x00	; 0
    2df4:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    2df8:	dc 01       	movw	r26, r24
    2dfa:	cb 01       	movw	r24, r22
    2dfc:	89 83       	std	Y+1, r24	; 0x01
    2dfe:	9a 83       	std	Y+2, r25	; 0x02
    2e00:	ab 83       	std	Y+3, r26	; 0x03
    2e02:	bc 83       	std	Y+4, r27	; 0x04
    2e04:	60 ed       	ldi	r22, 0xD0	; 208
    2e06:	77 e0       	ldi	r23, 0x07	; 7
    2e08:	80 e0       	ldi	r24, 0x00	; 0
    2e0a:	90 e0       	ldi	r25, 0x00	; 0
    2e0c:	0e 94 63 65 	call	0xcac6	; 0xcac6 <util_delay_ms>
    2e10:	88 23       	and	r24, r24
    2e12:	89 f0       	breq	.+34     	; 0x2e36 <main+0x82>
    2e14:	80 e0       	ldi	r24, 0x00	; 0
    2e16:	90 e0       	ldi	r25, 0x00	; 0
    2e18:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    2e1c:	9b 01       	movw	r18, r22
    2e1e:	ac 01       	movw	r20, r24
    2e20:	89 81       	ldd	r24, Y+1	; 0x01
    2e22:	9a 81       	ldd	r25, Y+2	; 0x02
    2e24:	ab 81       	ldd	r26, Y+3	; 0x03
    2e26:	bc 81       	ldd	r27, Y+4	; 0x04
    2e28:	28 17       	cp	r18, r24
    2e2a:	39 07       	cpc	r19, r25
    2e2c:	4a 07       	cpc	r20, r26
    2e2e:	5b 07       	cpc	r21, r27
    2e30:	11 f4       	brne	.+4      	; 0x2e36 <main+0x82>
    2e32:	81 e0       	ldi	r24, 0x01	; 1
    2e34:	01 c0       	rjmp	.+2      	; 0x2e38 <main+0x84>
    2e36:	80 e0       	ldi	r24, 0x00	; 0
    2e38:	88 23       	and	r24, r24
    2e3a:	09 f0       	breq	.+2      	; 0x2e3e <main+0x8a>
    2e3c:	e3 cf       	rjmp	.-58     	; 0x2e04 <main+0x50>
    2e3e:	80 e0       	ldi	r24, 0x00	; 0
    2e40:	90 e0       	ldi	r25, 0x00	; 0
    2e42:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    2e46:	9b 01       	movw	r18, r22
    2e48:	ac 01       	movw	r20, r24
    2e4a:	61 e0       	ldi	r22, 0x01	; 1
    2e4c:	89 81       	ldd	r24, Y+1	; 0x01
    2e4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e50:	ab 81       	ldd	r26, Y+3	; 0x03
    2e52:	bc 81       	ldd	r27, Y+4	; 0x04
    2e54:	28 17       	cp	r18, r24
    2e56:	39 07       	cpc	r19, r25
    2e58:	4a 07       	cpc	r20, r26
    2e5a:	5b 07       	cpc	r21, r27
    2e5c:	09 f0       	breq	.+2      	; 0x2e60 <main+0xac>
    2e5e:	60 e0       	ldi	r22, 0x00	; 0
    2e60:	66 23       	and	r22, r22
    2e62:	59 f0       	breq	.+22     	; 0x2e7a <main+0xc6>
    2e64:	80 91 e7 46 	lds	r24, 0x46E7	; 0x8046e7 <_ZL16g_hardware_error>
    2e68:	90 91 e8 46 	lds	r25, 0x46E8	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2e6c:	81 60       	ori	r24, 0x01	; 1
    2e6e:	80 93 e7 46 	sts	0x46E7, r24	; 0x8046e7 <_ZL16g_hardware_error>
    2e72:	90 93 e8 46 	sts	0x46E8, r25	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2e76:	0e 94 1e 55 	call	0xaa3c	; 0xaa3c <RTC_init_backup>
    2e7a:	0e 94 90 46 	call	0x8d20	; 0x8d20 <_Z11wifiPresentv>
    2e7e:	88 23       	and	r24, r24
    2e80:	39 f0       	breq	.+14     	; 0x2e90 <main+0xdc>
    2e82:	80 e0       	ldi	r24, 0x00	; 0
    2e84:	0e 94 62 46 	call	0x8cc4	; 0x8cc4 <_Z10wifi_powerb>
    2e88:	83 e0       	ldi	r24, 0x03	; 3
    2e8a:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    2e8e:	13 c0       	rjmp	.+38     	; 0x2eb6 <main+0x102>
    2e90:	80 e0       	ldi	r24, 0x00	; 0
    2e92:	0e 94 62 46 	call	0x8cc4	; 0x8cc4 <_Z10wifi_powerb>
    2e96:	81 e0       	ldi	r24, 0x01	; 1
    2e98:	0e 94 79 46 	call	0x8cf2	; 0x8cf2 <_Z10wifi_resetb>
    2e9c:	10 92 e4 46 	sts	0x46E4, r1	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    2ea0:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2ea4:	80 91 e7 46 	lds	r24, 0x46E7	; 0x8046e7 <_ZL16g_hardware_error>
    2ea8:	90 91 e8 46 	lds	r25, 0x46E8	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2eac:	84 60       	ori	r24, 0x04	; 4
    2eae:	80 93 e7 46 	sts	0x46E7, r24	; 0x8046e7 <_ZL16g_hardware_error>
    2eb2:	90 93 e8 46 	sts	0x46E8, r25	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2eb6:	0e 94 56 69 	call	0xd2ac	; 0xd2ac <_Z16init_transmitterv>
    2eba:	98 2f       	mov	r25, r24
    2ebc:	81 e0       	ldi	r24, 0x01	; 1
    2ebe:	99 23       	and	r25, r25
    2ec0:	09 f4       	brne	.+2      	; 0x2ec4 <main+0x110>
    2ec2:	80 e0       	ldi	r24, 0x00	; 0
    2ec4:	88 23       	and	r24, r24
    2ec6:	81 f0       	breq	.+32     	; 0x2ee8 <main+0x134>
    2ec8:	0e 94 ab 68 	call	0xd156	; 0xd156 <_Z15txIsInitializedv>
    2ecc:	98 2f       	mov	r25, r24
    2ece:	81 e0       	ldi	r24, 0x01	; 1
    2ed0:	89 27       	eor	r24, r25
    2ed2:	88 23       	and	r24, r24
    2ed4:	49 f0       	breq	.+18     	; 0x2ee8 <main+0x134>
    2ed6:	80 91 e7 46 	lds	r24, 0x46E7	; 0x8046e7 <_ZL16g_hardware_error>
    2eda:	90 91 e8 46 	lds	r25, 0x46E8	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2ede:	82 60       	ori	r24, 0x02	; 2
    2ee0:	80 93 e7 46 	sts	0x46E7, r24	; 0x8046e7 <_ZL16g_hardware_error>
    2ee4:	90 93 e8 46 	sts	0x46E8, r25	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2ee8:	0e 94 64 28 	call	0x50c8	; 0x50c8 <_Z12eventEnabledv>
    2eec:	80 93 db 46 	sts	0x46DB, r24	; 0x8046db <_ZL13g_start_event>
    2ef0:	80 91 e7 46 	lds	r24, 0x46E7	; 0x8046e7 <_ZL16g_hardware_error>
    2ef4:	90 91 e8 46 	lds	r25, 0x46E8	; 0x8046e8 <_ZL16g_hardware_error+0x1>
    2ef8:	83 70       	andi	r24, 0x03	; 3
    2efa:	99 27       	eor	r25, r25
    2efc:	21 e0       	ldi	r18, 0x01	; 1
    2efe:	89 2b       	or	r24, r25
    2f00:	09 f4       	brne	.+2      	; 0x2f04 <main+0x150>
    2f02:	20 e0       	ldi	r18, 0x00	; 0
    2f04:	22 23       	and	r18, r18
    2f06:	31 f0       	breq	.+12     	; 0x2f14 <main+0x160>
    2f08:	6d e0       	ldi	r22, 0x0D	; 13
    2f0a:	82 e3       	ldi	r24, 0x32	; 50
    2f0c:	97 e4       	ldi	r25, 0x47	; 71
    2f0e:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    2f12:	0f c0       	rjmp	.+30     	; 0x2f32 <main+0x17e>
    2f14:	80 91 db 46 	lds	r24, 0x46DB	; 0x8046db <_ZL13g_start_event>
    2f18:	88 23       	and	r24, r24
    2f1a:	31 f0       	breq	.+12     	; 0x2f28 <main+0x174>
    2f1c:	64 e0       	ldi	r22, 0x04	; 4
    2f1e:	82 e3       	ldi	r24, 0x32	; 50
    2f20:	97 e4       	ldi	r25, 0x47	; 71
    2f22:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    2f26:	05 c0       	rjmp	.+10     	; 0x2f32 <main+0x17e>
    2f28:	67 e0       	ldi	r22, 0x07	; 7
    2f2a:	82 e3       	ldi	r24, 0x32	; 50
    2f2c:	97 e4       	ldi	r25, 0x47	; 71
    2f2e:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    2f32:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <_Z17handleLinkBusMsgsv>
    2f36:	0e 94 7b 19 	call	0x32f6	; 0x32f6 <_Z19handleSerialBusMsgsv>
    2f3a:	80 91 2d 47 	lds	r24, 0x472D	; 0x80472d <g_switch_closed_count>
    2f3e:	90 91 2e 47 	lds	r25, 0x472E	; 0x80472e <g_switch_closed_count+0x1>
    2f42:	21 e0       	ldi	r18, 0x01	; 1
    2f44:	88 3e       	cpi	r24, 0xE8	; 232
    2f46:	93 40       	sbci	r25, 0x03	; 3
    2f48:	08 f4       	brcc	.+2      	; 0x2f4c <main+0x198>
    2f4a:	20 e0       	ldi	r18, 0x00	; 0
    2f4c:	22 23       	and	r18, r18
    2f4e:	29 f0       	breq	.+10     	; 0x2f5a <main+0x1a6>
    2f50:	67 e0       	ldi	r22, 0x07	; 7
    2f52:	82 e3       	ldi	r24, 0x32	; 50
    2f54:	97 e4       	ldi	r25, 0x47	; 71
    2f56:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    2f5a:	80 91 2f 47 	lds	r24, 0x472F	; 0x80472f <g_long_button_press>
    2f5e:	88 23       	and	r24, r24
    2f60:	61 f0       	breq	.+24     	; 0x2f7a <main+0x1c6>
    2f62:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <g_event_enabled>
    2f66:	88 23       	and	r24, r24
    2f68:	19 f0       	breq	.+6      	; 0x2f70 <main+0x1bc>
    2f6a:	0e 94 de 2b 	call	0x57bc	; 0x57bc <_Z12suspendEventv>
    2f6e:	03 c0       	rjmp	.+6      	; 0x2f76 <main+0x1c2>
    2f70:	81 e0       	ldi	r24, 0x01	; 1
    2f72:	80 93 21 47 	sts	0x4721, r24	; 0x804721 <g_check_for_next_event>
    2f76:	10 92 2f 47 	sts	0x472F, r1	; 0x80472f <g_long_button_press>
    2f7a:	80 91 db 46 	lds	r24, 0x46DB	; 0x8046db <_ZL13g_start_event>
    2f7e:	88 23       	and	r24, r24
    2f80:	e1 f1       	breq	.+120    	; 0x2ffa <main+0x246>
    2f82:	10 92 db 46 	sts	0x46DB, r1	; 0x8046db <_ZL13g_start_event>
    2f86:	1f 82       	std	Y+7, r1	; 0x07
    2f88:	ce 01       	movw	r24, r28
    2f8a:	07 96       	adiw	r24, 0x07	; 7
    2f8c:	0e 94 78 29 	call	0x52f0	; 0x52f0 <_Z11launchEventP2SC>
    2f90:	80 93 d6 46 	sts	0x46D6, r24	; 0x8046d6 <_ZL17g_last_error_code>
    2f94:	61 e0       	ldi	r22, 0x01	; 1
    2f96:	82 e3       	ldi	r24, 0x32	; 50
    2f98:	97 e4       	ldi	r25, 0x47	; 71
    2f9a:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    2f9e:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <g_event_enabled>
    2fa2:	88 23       	and	r24, r24
    2fa4:	31 f0       	breq	.+12     	; 0x2fb2 <main+0x1fe>
    2fa6:	65 e0       	ldi	r22, 0x05	; 5
    2fa8:	82 e3       	ldi	r24, 0x32	; 50
    2faa:	97 e4       	ldi	r25, 0x47	; 71
    2fac:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    2fb0:	05 c0       	rjmp	.+10     	; 0x2fbc <main+0x208>
    2fb2:	68 e0       	ldi	r22, 0x08	; 8
    2fb4:	82 e3       	ldi	r24, 0x32	; 50
    2fb6:	97 e4       	ldi	r25, 0x47	; 71
    2fb8:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    2fbc:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2fc0:	81 e0       	ldi	r24, 0x01	; 1
    2fc2:	99 23       	and	r25, r25
    2fc4:	09 f4       	brne	.+2      	; 0x2fc8 <main+0x214>
    2fc6:	80 e0       	ldi	r24, 0x00	; 0
    2fc8:	88 23       	and	r24, r24
    2fca:	b9 f0       	breq	.+46     	; 0x2ffa <main+0x246>
    2fcc:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2fd0:	88 87       	std	Y+8, r24	; 0x08
    2fd2:	8a e0       	ldi	r24, 0x0A	; 10
    2fd4:	90 e0       	ldi	r25, 0x00	; 0
    2fd6:	8d 83       	std	Y+5, r24	; 0x05
    2fd8:	9e 83       	std	Y+6, r25	; 0x06
    2fda:	88 85       	ldd	r24, Y+8	; 0x08
    2fdc:	28 2f       	mov	r18, r24
    2fde:	30 e0       	ldi	r19, 0x00	; 0
    2fe0:	8d 81       	ldd	r24, Y+5	; 0x05
    2fe2:	9e 81       	ldd	r25, Y+6	; 0x06
    2fe4:	28 17       	cp	r18, r24
    2fe6:	39 07       	cpc	r19, r25
    2fe8:	24 f0       	brlt	.+8      	; 0x2ff2 <main+0x23e>
    2fea:	88 85       	ldd	r24, Y+8	; 0x08
    2fec:	88 2f       	mov	r24, r24
    2fee:	90 e0       	ldi	r25, 0x00	; 0
    2ff0:	02 c0       	rjmp	.+4      	; 0x2ff6 <main+0x242>
    2ff2:	8d 81       	ldd	r24, Y+5	; 0x05
    2ff4:	9e 81       	ldd	r25, Y+6	; 0x06
    2ff6:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2ffa:	80 91 dc 46 	lds	r24, 0x46DC	; 0x8046dc <_ZL11g_end_event>
    2ffe:	88 23       	and	r24, r24
    3000:	21 f0       	breq	.+8      	; 0x300a <main+0x256>
    3002:	10 92 dc 46 	sts	0x46DC, r1	; 0x8046dc <_ZL11g_end_event>
    3006:	0e 94 de 2b 	call	0x57bc	; 0x57bc <_Z12suspendEventv>
    300a:	80 91 e3 46 	lds	r24, 0x46E3	; 0x8046e3 <_ZL16g_report_seconds>
    300e:	88 23       	and	r24, r24
    3010:	59 f1       	breq	.+86     	; 0x3068 <main+0x2b4>
    3012:	10 92 e3 46 	sts	0x46E3, r1	; 0x8046e3 <_ZL16g_report_seconds>
    3016:	80 e0       	ldi	r24, 0x00	; 0
    3018:	90 e0       	ldi	r25, 0x00	; 0
    301a:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    301e:	dc 01       	movw	r26, r24
    3020:	cb 01       	movw	r24, r22
    3022:	2b 2f       	mov	r18, r27
    3024:	2f 93       	push	r18
    3026:	2a 2f       	mov	r18, r26
    3028:	2f 93       	push	r18
    302a:	29 2f       	mov	r18, r25
    302c:	2f 93       	push	r18
    302e:	8f 93       	push	r24
    3030:	85 e6       	ldi	r24, 0x65	; 101
    3032:	90 e4       	ldi	r25, 0x40	; 64
    3034:	89 2f       	mov	r24, r25
    3036:	8f 93       	push	r24
    3038:	85 e6       	ldi	r24, 0x65	; 101
    303a:	90 e4       	ldi	r25, 0x40	; 64
    303c:	8f 93       	push	r24
    303e:	84 ea       	ldi	r24, 0xA4	; 164
    3040:	96 e4       	ldi	r25, 0x46	; 70
    3042:	89 2f       	mov	r24, r25
    3044:	8f 93       	push	r24
    3046:	84 ea       	ldi	r24, 0xA4	; 164
    3048:	96 e4       	ldi	r25, 0x46	; 70
    304a:	8f 93       	push	r24
    304c:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3050:	8d b7       	in	r24, 0x3d	; 61
    3052:	9e b7       	in	r25, 0x3e	; 62
    3054:	08 96       	adiw	r24, 0x08	; 8
    3056:	cd bf       	out	0x3d, r28	; 61
    3058:	de bf       	out	0x3e, r29	; 62
    305a:	44 ea       	ldi	r20, 0xA4	; 164
    305c:	56 e4       	ldi	r21, 0x46	; 70
    305e:	69 e6       	ldi	r22, 0x69	; 105
    3060:	70 e4       	ldi	r23, 0x40	; 64
    3062:	83 e0       	ldi	r24, 0x03	; 3
    3064:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3068:	90 91 d6 46 	lds	r25, 0x46D6	; 0x8046d6 <_ZL17g_last_error_code>
    306c:	81 e0       	ldi	r24, 0x01	; 1
    306e:	99 23       	and	r25, r25
    3070:	09 f4       	brne	.+2      	; 0x3074 <main+0x2c0>
    3072:	80 e0       	ldi	r24, 0x00	; 0
    3074:	88 23       	and	r24, r24
    3076:	31 f1       	breq	.+76     	; 0x30c4 <main+0x310>
    3078:	80 91 d6 46 	lds	r24, 0x46D6	; 0x8046d6 <_ZL17g_last_error_code>
    307c:	88 2f       	mov	r24, r24
    307e:	90 e0       	ldi	r25, 0x00	; 0
    3080:	29 2f       	mov	r18, r25
    3082:	2f 93       	push	r18
    3084:	8f 93       	push	r24
    3086:	8d e6       	ldi	r24, 0x6D	; 109
    3088:	90 e4       	ldi	r25, 0x40	; 64
    308a:	89 2f       	mov	r24, r25
    308c:	8f 93       	push	r24
    308e:	8d e6       	ldi	r24, 0x6D	; 109
    3090:	90 e4       	ldi	r25, 0x40	; 64
    3092:	8f 93       	push	r24
    3094:	84 ea       	ldi	r24, 0xA4	; 164
    3096:	96 e4       	ldi	r25, 0x46	; 70
    3098:	89 2f       	mov	r24, r25
    309a:	8f 93       	push	r24
    309c:	84 ea       	ldi	r24, 0xA4	; 164
    309e:	96 e4       	ldi	r25, 0x46	; 70
    30a0:	8f 93       	push	r24
    30a2:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    30a6:	0f 90       	pop	r0
    30a8:	0f 90       	pop	r0
    30aa:	0f 90       	pop	r0
    30ac:	0f 90       	pop	r0
    30ae:	0f 90       	pop	r0
    30b0:	0f 90       	pop	r0
    30b2:	44 ea       	ldi	r20, 0xA4	; 164
    30b4:	56 e4       	ldi	r21, 0x46	; 70
    30b6:	60 e7       	ldi	r22, 0x70	; 112
    30b8:	70 e4       	ldi	r23, 0x40	; 64
    30ba:	83 e0       	ldi	r24, 0x03	; 3
    30bc:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    30c0:	10 92 d6 46 	sts	0x46D6, r1	; 0x8046d6 <_ZL17g_last_error_code>
    30c4:	90 91 d7 46 	lds	r25, 0x46D7	; 0x8046d7 <_ZL18g_last_status_code>
    30c8:	81 e0       	ldi	r24, 0x01	; 1
    30ca:	99 23       	and	r25, r25
    30cc:	09 f4       	brne	.+2      	; 0x30d0 <main+0x31c>
    30ce:	80 e0       	ldi	r24, 0x00	; 0
    30d0:	88 23       	and	r24, r24
    30d2:	31 f1       	breq	.+76     	; 0x3120 <main+0x36c>
    30d4:	80 91 d7 46 	lds	r24, 0x46D7	; 0x8046d7 <_ZL18g_last_status_code>
    30d8:	88 2f       	mov	r24, r24
    30da:	90 e0       	ldi	r25, 0x00	; 0
    30dc:	29 2f       	mov	r18, r25
    30de:	2f 93       	push	r18
    30e0:	8f 93       	push	r24
    30e2:	8d e6       	ldi	r24, 0x6D	; 109
    30e4:	90 e4       	ldi	r25, 0x40	; 64
    30e6:	89 2f       	mov	r24, r25
    30e8:	8f 93       	push	r24
    30ea:	8d e6       	ldi	r24, 0x6D	; 109
    30ec:	90 e4       	ldi	r25, 0x40	; 64
    30ee:	8f 93       	push	r24
    30f0:	84 ea       	ldi	r24, 0xA4	; 164
    30f2:	96 e4       	ldi	r25, 0x46	; 70
    30f4:	89 2f       	mov	r24, r25
    30f6:	8f 93       	push	r24
    30f8:	84 ea       	ldi	r24, 0xA4	; 164
    30fa:	96 e4       	ldi	r25, 0x46	; 70
    30fc:	8f 93       	push	r24
    30fe:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3102:	0f 90       	pop	r0
    3104:	0f 90       	pop	r0
    3106:	0f 90       	pop	r0
    3108:	0f 90       	pop	r0
    310a:	0f 90       	pop	r0
    310c:	0f 90       	pop	r0
    310e:	44 ea       	ldi	r20, 0xA4	; 164
    3110:	56 e4       	ldi	r21, 0x46	; 70
    3112:	63 e7       	ldi	r22, 0x73	; 115
    3114:	70 e4       	ldi	r23, 0x40	; 64
    3116:	83 e0       	ldi	r24, 0x03	; 3
    3118:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    311c:	10 92 d7 46 	sts	0x46D7, r1	; 0x8046d7 <_ZL18g_last_status_code>
    3120:	80 91 21 47 	lds	r24, 0x4721	; 0x804721 <g_check_for_next_event>
    3124:	88 23       	and	r24, r24
    3126:	09 f4       	brne	.+2      	; 0x312a <main+0x376>
    3128:	41 c0       	rjmp	.+130    	; 0x31ac <main+0x3f8>
    312a:	80 91 e6 46 	lds	r24, 0x46E6	; 0x8046e6 <_ZL12g_wifi_ready>
    312e:	88 23       	and	r24, r24
    3130:	69 f1       	breq	.+90     	; 0x318c <main+0x3d8>
    3132:	10 92 21 47 	sts	0x4721, r1	; 0x804721 <g_check_for_next_event>
    3136:	81 e0       	ldi	r24, 0x01	; 1
    3138:	80 93 22 47 	sts	0x4722, r24	; 0x804722 <g_waiting_for_next_event>
    313c:	80 91 d7 46 	lds	r24, 0x46D7	; 0x8046d7 <_ZL18g_last_status_code>
    3140:	88 2f       	mov	r24, r24
    3142:	90 e0       	ldi	r25, 0x00	; 0
    3144:	29 2f       	mov	r18, r25
    3146:	2f 93       	push	r18
    3148:	8f 93       	push	r24
    314a:	8d e6       	ldi	r24, 0x6D	; 109
    314c:	90 e4       	ldi	r25, 0x40	; 64
    314e:	89 2f       	mov	r24, r25
    3150:	8f 93       	push	r24
    3152:	8d e6       	ldi	r24, 0x6D	; 109
    3154:	90 e4       	ldi	r25, 0x40	; 64
    3156:	8f 93       	push	r24
    3158:	84 ea       	ldi	r24, 0xA4	; 164
    315a:	96 e4       	ldi	r25, 0x46	; 70
    315c:	89 2f       	mov	r24, r25
    315e:	8f 93       	push	r24
    3160:	84 ea       	ldi	r24, 0xA4	; 164
    3162:	96 e4       	ldi	r25, 0x46	; 70
    3164:	8f 93       	push	r24
    3166:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    316a:	0f 90       	pop	r0
    316c:	0f 90       	pop	r0
    316e:	0f 90       	pop	r0
    3170:	0f 90       	pop	r0
    3172:	0f 90       	pop	r0
    3174:	0f 90       	pop	r0
    3176:	46 e7       	ldi	r20, 0x76	; 118
    3178:	50 e4       	ldi	r21, 0x40	; 64
    317a:	61 e6       	ldi	r22, 0x61	; 97
    317c:	70 e4       	ldi	r23, 0x40	; 64
    317e:	83 e0       	ldi	r24, 0x03	; 3
    3180:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3184:	83 e0       	ldi	r24, 0x03	; 3
    3186:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    318a:	10 c0       	rjmp	.+32     	; 0x31ac <main+0x3f8>
    318c:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3190:	88 23       	and	r24, r24
    3192:	31 f4       	brne	.+12     	; 0x31a0 <main+0x3ec>
    3194:	80 91 e4 46 	lds	r24, 0x46E4	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    3198:	88 23       	and	r24, r24
    319a:	11 f4       	brne	.+4      	; 0x31a0 <main+0x3ec>
    319c:	81 e0       	ldi	r24, 0x01	; 1
    319e:	01 c0       	rjmp	.+2      	; 0x31a2 <main+0x3ee>
    31a0:	80 e0       	ldi	r24, 0x00	; 0
    31a2:	88 23       	and	r24, r24
    31a4:	19 f0       	breq	.+6      	; 0x31ac <main+0x3f8>
    31a6:	81 e0       	ldi	r24, 0x01	; 1
    31a8:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    31ac:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    31b0:	88 23       	and	r24, r24
    31b2:	89 f0       	breq	.+34     	; 0x31d6 <main+0x422>
    31b4:	10 92 06 40 	sts	0x4006, r1	; 0x804006 <_ZL28g_antenna_connection_changed>
    31b8:	90 91 da 46 	lds	r25, 0x46DA	; 0x8046da <g_antenna_connect_state>
    31bc:	81 e0       	ldi	r24, 0x01	; 1
    31be:	91 30       	cpi	r25, 0x01	; 1
    31c0:	09 f0       	breq	.+2      	; 0x31c4 <main+0x410>
    31c2:	80 e0       	ldi	r24, 0x00	; 0
    31c4:	88 23       	and	r24, r24
    31c6:	21 f0       	breq	.+8      	; 0x31d0 <main+0x41c>
    31c8:	81 e0       	ldi	r24, 0x01	; 1
    31ca:	0e 94 13 68 	call	0xd026	; 0xd026 <_Z15inhibitRFOutputb>
    31ce:	03 c0       	rjmp	.+6      	; 0x31d6 <main+0x422>
    31d0:	80 e0       	ldi	r24, 0x00	; 0
    31d2:	0e 94 13 68 	call	0xd026	; 0xd026 <_Z15inhibitRFOutputb>
    31d6:	80 91 23 47 	lds	r24, 0x4723	; 0x804723 <_ZL17g_go_to_sleep_now>
    31da:	88 23       	and	r24, r24
    31dc:	09 f4       	brne	.+2      	; 0x31e0 <main+0x42c>
    31de:	a9 ce       	rjmp	.-686    	; 0x2f32 <main+0x17e>
    31e0:	60 e0       	ldi	r22, 0x00	; 0
    31e2:	82 e3       	ldi	r24, 0x32	; 50
    31e4:	97 e4       	ldi	r25, 0x47	; 71
    31e6:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    31ea:	0e 94 25 50 	call	0xa04a	; 0xa04a <_Z15linkbus_disablev>
    31ee:	0e 94 42 69 	call	0xd284	; 0xd284 <_Z20shutdown_transmitterv>
    31f2:	81 e0       	ldi	r24, 0x01	; 1
    31f4:	0e 94 79 46 	call	0x8cf2	; 0x8cf2 <_Z10wifi_resetb>
    31f8:	80 e0       	ldi	r24, 0x00	; 0
    31fa:	0e 94 62 46 	call	0x8cc4	; 0x8cc4 <_Z10wifi_powerb>
    31fe:	0e 94 c0 16 	call	0x2d80	; 0x2d80 <_Z12powerDown3V3v>
    3202:	10 92 22 47 	sts	0x4722, r1	; 0x804722 <g_waiting_for_next_event>
    3206:	82 e0       	ldi	r24, 0x02	; 2
    3208:	0e 94 f7 64 	call	0xc9ee	; 0xc9ee <SLPCTRL_set_sleep_mode>
    320c:	81 e0       	ldi	r24, 0x01	; 1
    320e:	80 93 24 47 	sts	0x4724, r24	; 0x804724 <_ZL10g_sleeping>
    3212:	80 91 23 47 	lds	r24, 0x4723	; 0x804723 <_ZL17g_go_to_sleep_now>
    3216:	88 23       	and	r24, r24
    3218:	b1 f0       	breq	.+44     	; 0x3246 <main+0x492>
    321a:	f8 94       	cli
    321c:	80 e5       	ldi	r24, 0x50	; 80
    321e:	90 e0       	ldi	r25, 0x00	; 0
    3220:	20 e5       	ldi	r18, 0x50	; 80
    3222:	30 e0       	ldi	r19, 0x00	; 0
    3224:	f9 01       	movw	r30, r18
    3226:	20 81       	ld	r18, Z
    3228:	21 60       	ori	r18, 0x01	; 1
    322a:	fc 01       	movw	r30, r24
    322c:	20 83       	st	Z, r18
    322e:	78 94       	sei
    3230:	88 95       	sleep
    3232:	80 e5       	ldi	r24, 0x50	; 80
    3234:	90 e0       	ldi	r25, 0x00	; 0
    3236:	20 e5       	ldi	r18, 0x50	; 80
    3238:	30 e0       	ldi	r19, 0x00	; 0
    323a:	f9 01       	movw	r30, r18
    323c:	20 81       	ld	r18, Z
    323e:	2e 7f       	andi	r18, 0xFE	; 254
    3240:	fc 01       	movw	r30, r24
    3242:	20 83       	st	Z, r18
    3244:	e6 cf       	rjmp	.-52     	; 0x3212 <main+0x45e>
    3246:	10 92 24 47 	sts	0x4724, r1	; 0x804724 <_ZL10g_sleeping>
    324a:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <atmel_start_init>
    324e:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <_Z10powerUp3V3v>
    3252:	0e 94 56 69 	call	0xd2ac	; 0xd2ac <_Z16init_transmitterv>
    3256:	80 91 29 47 	lds	r24, 0x4729	; 0x804729 <_ZL12g_awakenedBy>
    325a:	83 30       	cpi	r24, 0x03	; 3
    325c:	41 f0       	breq	.+16     	; 0x326e <main+0x4ba>
    325e:	80 91 29 47 	lds	r24, 0x4729	; 0x804729 <_ZL12g_awakenedBy>
    3262:	82 30       	cpi	r24, 0x02	; 2
    3264:	21 f0       	breq	.+8      	; 0x326e <main+0x4ba>
    3266:	80 91 29 47 	lds	r24, 0x4729	; 0x804729 <_ZL12g_awakenedBy>
    326a:	88 23       	and	r24, r24
    326c:	11 f4       	brne	.+4      	; 0x3272 <main+0x4be>
    326e:	81 e0       	ldi	r24, 0x01	; 1
    3270:	01 c0       	rjmp	.+2      	; 0x3274 <main+0x4c0>
    3272:	80 e0       	ldi	r24, 0x00	; 0
    3274:	88 23       	and	r24, r24
    3276:	f1 f0       	breq	.+60     	; 0x32b4 <main+0x500>
    3278:	82 e3       	ldi	r24, 0x32	; 50
    327a:	97 e4       	ldi	r25, 0x47	; 71
    327c:	0e 94 bd 4a 	call	0x957a	; 0x957a <_ZN4leds5resetEv>
    3280:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <g_event_enabled>
    3284:	88 23       	and	r24, r24
    3286:	31 f0       	breq	.+12     	; 0x3294 <main+0x4e0>
    3288:	65 e0       	ldi	r22, 0x05	; 5
    328a:	82 e3       	ldi	r24, 0x32	; 50
    328c:	97 e4       	ldi	r25, 0x47	; 71
    328e:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    3292:	05 c0       	rjmp	.+10     	; 0x329e <main+0x4ea>
    3294:	68 e0       	ldi	r22, 0x08	; 8
    3296:	82 e3       	ldi	r24, 0x32	; 50
    3298:	97 e4       	ldi	r25, 0x47	; 71
    329a:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    329e:	61 e0       	ldi	r22, 0x01	; 1
    32a0:	82 e3       	ldi	r24, 0x32	; 50
    32a2:	97 e4       	ldi	r25, 0x47	; 71
    32a4:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    32a8:	0e 94 5a 50 	call	0xa0b4	; 0xa0b4 <_Z14linkbus_enablev>
    32ac:	82 e0       	ldi	r24, 0x02	; 2
    32ae:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    32b2:	1d c0       	rjmp	.+58     	; 0x32ee <main+0x53a>
    32b4:	90 91 29 47 	lds	r25, 0x4729	; 0x804729 <_ZL12g_awakenedBy>
    32b8:	81 e0       	ldi	r24, 0x01	; 1
    32ba:	91 30       	cpi	r25, 0x01	; 1
    32bc:	09 f0       	breq	.+2      	; 0x32c0 <main+0x50c>
    32be:	80 e0       	ldi	r24, 0x00	; 0
    32c0:	88 23       	and	r24, r24
    32c2:	a9 f0       	breq	.+42     	; 0x32ee <main+0x53a>
    32c4:	90 91 1f 47 	lds	r25, 0x471F	; 0x80471f <g_event_enabled>
    32c8:	81 e0       	ldi	r24, 0x01	; 1
    32ca:	89 27       	eor	r24, r25
    32cc:	88 23       	and	r24, r24
    32ce:	79 f0       	breq	.+30     	; 0x32ee <main+0x53a>
    32d0:	0e 94 64 28 	call	0x50c8	; 0x50c8 <_Z12eventEnabledv>
    32d4:	80 93 db 46 	sts	0x46DB, r24	; 0x8046db <_ZL13g_start_event>
    32d8:	90 91 db 46 	lds	r25, 0x46DB	; 0x8046db <_ZL13g_start_event>
    32dc:	81 e0       	ldi	r24, 0x01	; 1
    32de:	89 27       	eor	r24, r25
    32e0:	88 23       	and	r24, r24
    32e2:	29 f0       	breq	.+10     	; 0x32ee <main+0x53a>
    32e4:	0e 94 5a 50 	call	0xa0b4	; 0xa0b4 <_Z14linkbus_enablev>
    32e8:	82 e0       	ldi	r24, 0x02	; 2
    32ea:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    32ee:	8d ee       	ldi	r24, 0xED	; 237
    32f0:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    32f4:	1e ce       	rjmp	.-964    	; 0x2f32 <main+0x17e>

000032f6 <_Z19handleSerialBusMsgsv>:
    32f6:	ef 92       	push	r14
    32f8:	ff 92       	push	r15
    32fa:	0f 93       	push	r16
    32fc:	1f 93       	push	r17
    32fe:	cf 93       	push	r28
    3300:	df 93       	push	r29
    3302:	cd b7       	in	r28, 0x3d	; 61
    3304:	de b7       	in	r29, 0x3e	; 62
    3306:	c5 59       	subi	r28, 0x95	; 149
    3308:	d1 09       	sbc	r29, r1
    330a:	cd bf       	out	0x3d, r28	; 61
    330c:	de bf       	out	0x3e, r29	; 62
    330e:	0e 94 37 58 	call	0xb06e	; 0xb06e <nextFullSBRxBuffer>
    3312:	8e 83       	std	Y+6, r24	; 0x06
    3314:	9f 83       	std	Y+7, r25	; 0x07
    3316:	21 e0       	ldi	r18, 0x01	; 1
    3318:	8e 81       	ldd	r24, Y+6	; 0x06
    331a:	9f 81       	ldd	r25, Y+7	; 0x07
    331c:	89 2b       	or	r24, r25
    331e:	09 f4       	brne	.+2      	; 0x3322 <_Z19handleSerialBusMsgsv+0x2c>
    3320:	20 e0       	ldi	r18, 0x00	; 0
    3322:	22 23       	and	r18, r18
    3324:	09 f4       	brne	.+2      	; 0x3328 <_Z19handleSerialBusMsgsv+0x32>
    3326:	ba c6       	rjmp	.+3444   	; 0x409c <__DATA_REGION_LENGTH__+0x9c>
    3328:	8e 81       	ldd	r24, Y+6	; 0x06
    332a:	9f 81       	ldd	r25, Y+7	; 0x07
    332c:	fc 01       	movw	r30, r24
    332e:	81 81       	ldd	r24, Z+1	; 0x01
    3330:	92 81       	ldd	r25, Z+2	; 0x02
    3332:	88 87       	std	Y+8, r24	; 0x08
    3334:	99 87       	std	Y+9, r25	; 0x09
    3336:	88 85       	ldd	r24, Y+8	; 0x08
    3338:	99 85       	ldd	r25, Y+9	; 0x09
    333a:	8a 3e       	cpi	r24, 0xEA	; 234
    333c:	f2 e2       	ldi	r31, 0x22	; 34
    333e:	9f 07       	cpc	r25, r31
    3340:	09 f4       	brne	.+2      	; 0x3344 <_Z19handleSerialBusMsgsv+0x4e>
    3342:	a4 c3       	rjmp	.+1864   	; 0x3a8c <_Z19handleSerialBusMsgsv+0x796>
    3344:	8b 3e       	cpi	r24, 0xEB	; 235
    3346:	22 e2       	ldi	r18, 0x22	; 34
    3348:	92 07       	cpc	r25, r18
    334a:	b8 f4       	brcc	.+46     	; 0x337a <_Z19handleSerialBusMsgsv+0x84>
    334c:	8f 36       	cpi	r24, 0x6F	; 111
    334e:	ed e1       	ldi	r30, 0x1D	; 29
    3350:	9e 07       	cpc	r25, r30
    3352:	09 f4       	brne	.+2      	; 0x3356 <_Z19handleSerialBusMsgsv+0x60>
    3354:	ed c3       	rjmp	.+2010   	; 0x3b30 <_Z19handleSerialBusMsgsv+0x83a>
    3356:	80 37       	cpi	r24, 0x70	; 112
    3358:	fd e1       	ldi	r31, 0x1D	; 29
    335a:	9f 07       	cpc	r25, r31
    335c:	28 f4       	brcc	.+10     	; 0x3368 <_Z19handleSerialBusMsgsv+0x72>
    335e:	8e 31       	cpi	r24, 0x1E	; 30
    3360:	93 40       	sbci	r25, 0x03	; 3
    3362:	09 f4       	brne	.+2      	; 0x3366 <_Z19handleSerialBusMsgsv+0x70>
    3364:	81 c2       	rjmp	.+1282   	; 0x3868 <_Z19handleSerialBusMsgsv+0x572>
    3366:	88 c6       	rjmp	.+3344   	; 0x4078 <__DATA_REGION_LENGTH__+0x78>
    3368:	86 3c       	cpi	r24, 0xC6	; 198
    336a:	ee e1       	ldi	r30, 0x1E	; 30
    336c:	9e 07       	cpc	r25, r30
    336e:	e9 f0       	breq	.+58     	; 0x33aa <_Z19handleSerialBusMsgsv+0xb4>
    3370:	81 3d       	cpi	r24, 0xD1	; 209
    3372:	9e 41       	sbci	r25, 0x1E	; 30
    3374:	09 f4       	brne	.+2      	; 0x3378 <_Z19handleSerialBusMsgsv+0x82>
    3376:	a9 c1       	rjmp	.+850    	; 0x36ca <_Z19handleSerialBusMsgsv+0x3d4>
    3378:	7f c6       	rjmp	.+3326   	; 0x4078 <__DATA_REGION_LENGTH__+0x78>
    337a:	82 37       	cpi	r24, 0x72	; 114
    337c:	23 e2       	ldi	r18, 0x23	; 35
    337e:	92 07       	cpc	r25, r18
    3380:	09 f4       	brne	.+2      	; 0x3384 <_Z19handleSerialBusMsgsv+0x8e>
    3382:	00 c3       	rjmp	.+1536   	; 0x3984 <_Z19handleSerialBusMsgsv+0x68e>
    3384:	83 37       	cpi	r24, 0x73	; 115
    3386:	e3 e2       	ldi	r30, 0x23	; 35
    3388:	9e 07       	cpc	r25, r30
    338a:	28 f4       	brcc	.+10     	; 0x3396 <_Z19handleSerialBusMsgsv+0xa0>
    338c:	88 3f       	cpi	r24, 0xF8	; 248
    338e:	92 42       	sbci	r25, 0x22	; 34
    3390:	09 f4       	brne	.+2      	; 0x3394 <_Z19handleSerialBusMsgsv+0x9e>
    3392:	38 c1       	rjmp	.+624    	; 0x3604 <_Z19handleSerialBusMsgsv+0x30e>
    3394:	71 c6       	rjmp	.+3298   	; 0x4078 <__DATA_REGION_LENGTH__+0x78>
    3396:	84 33       	cpi	r24, 0x34	; 52
    3398:	24 e2       	ldi	r18, 0x24	; 36
    339a:	92 07       	cpc	r25, r18
    339c:	09 f4       	brne	.+2      	; 0x33a0 <_Z19handleSerialBusMsgsv+0xaa>
    339e:	29 c2       	rjmp	.+1106   	; 0x37f2 <_Z19handleSerialBusMsgsv+0x4fc>
    33a0:	85 3c       	cpi	r24, 0xC5	; 197
    33a2:	94 42       	sbci	r25, 0x24	; 36
    33a4:	09 f4       	brne	.+2      	; 0x33a8 <_Z19handleSerialBusMsgsv+0xb2>
    33a6:	54 c6       	rjmp	.+3240   	; 0x4050 <__DATA_REGION_LENGTH__+0x50>
    33a8:	67 c6       	rjmp	.+3278   	; 0x4078 <__DATA_REGION_LENGTH__+0x78>
    33aa:	8e 81       	ldd	r24, Y+6	; 0x06
    33ac:	9f 81       	ldd	r25, Y+7	; 0x07
    33ae:	fc 01       	movw	r30, r24
    33b0:	83 81       	ldd	r24, Z+3	; 0x03
    33b2:	88 2f       	mov	r24, r24
    33b4:	90 e0       	ldi	r25, 0x00	; 0
    33b6:	89 83       	std	Y+1, r24	; 0x01
    33b8:	9a 83       	std	Y+2, r25	; 0x02
    33ba:	89 81       	ldd	r24, Y+1	; 0x01
    33bc:	9a 81       	ldd	r25, Y+2	; 0x02
    33be:	89 2b       	or	r24, r25
    33c0:	09 f4       	brne	.+2      	; 0x33c4 <_Z19handleSerialBusMsgsv+0xce>
    33c2:	d0 c0       	rjmp	.+416    	; 0x3564 <_Z19handleSerialBusMsgsv+0x26e>
    33c4:	89 81       	ldd	r24, Y+1	; 0x01
    33c6:	9a 81       	ldd	r25, Y+2	; 0x02
    33c8:	82 34       	cpi	r24, 0x42	; 66
    33ca:	91 05       	cpc	r25, r1
    33cc:	19 f4       	brne	.+6      	; 0x33d4 <_Z19handleSerialBusMsgsv+0xde>
    33ce:	19 82       	std	Y+1, r1	; 0x01
    33d0:	1a 82       	std	Y+2, r1	; 0x02
    33d2:	ac c0       	rjmp	.+344    	; 0x352c <_Z19handleSerialBusMsgsv+0x236>
    33d4:	89 81       	ldd	r24, Y+1	; 0x01
    33d6:	9a 81       	ldd	r25, Y+2	; 0x02
    33d8:	86 34       	cpi	r24, 0x46	; 70
    33da:	91 05       	cpc	r25, r1
    33dc:	29 f4       	brne	.+10     	; 0x33e8 <_Z19handleSerialBusMsgsv+0xf2>
    33de:	86 e0       	ldi	r24, 0x06	; 6
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	89 83       	std	Y+1, r24	; 0x01
    33e4:	9a 83       	std	Y+2, r25	; 0x02
    33e6:	a2 c0       	rjmp	.+324    	; 0x352c <_Z19handleSerialBusMsgsv+0x236>
    33e8:	89 81       	ldd	r24, Y+1	; 0x01
    33ea:	9a 81       	ldd	r25, Y+2	; 0x02
    33ec:	83 34       	cpi	r24, 0x43	; 67
    33ee:	91 05       	cpc	r25, r1
    33f0:	b9 f5       	brne	.+110    	; 0x3460 <_Z19handleSerialBusMsgsv+0x16a>
    33f2:	8e 81       	ldd	r24, Y+6	; 0x06
    33f4:	9f 81       	ldd	r25, Y+7	; 0x07
    33f6:	fc 01       	movw	r30, r24
    33f8:	87 89       	ldd	r24, Z+23	; 0x17
    33fa:	8b 83       	std	Y+3, r24	; 0x03
    33fc:	8e 81       	ldd	r24, Y+6	; 0x06
    33fe:	9f 81       	ldd	r25, Y+7	; 0x07
    3400:	fc 01       	movw	r30, r24
    3402:	10 8e       	std	Z+24, r1	; 0x18
    3404:	8b 81       	ldd	r24, Y+3	; 0x03
    3406:	82 34       	cpi	r24, 0x42	; 66
    3408:	11 f4       	brne	.+4      	; 0x340e <_Z19handleSerialBusMsgsv+0x118>
    340a:	80 e3       	ldi	r24, 0x30	; 48
    340c:	8b 83       	std	Y+3, r24	; 0x03
    340e:	8b 81       	ldd	r24, Y+3	; 0x03
    3410:	88 2f       	mov	r24, r24
    3412:	90 e0       	ldi	r25, 0x00	; 0
    3414:	c0 97       	sbiw	r24, 0x30	; 48
    3416:	0a 97       	sbiw	r24, 0x0a	; 10
    3418:	08 f0       	brcs	.+2      	; 0x341c <_Z19handleSerialBusMsgsv+0x126>
    341a:	88 c0       	rjmp	.+272    	; 0x352c <_Z19handleSerialBusMsgsv+0x236>
    341c:	8e 81       	ldd	r24, Y+6	; 0x06
    341e:	9f 81       	ldd	r25, Y+7	; 0x07
    3420:	47 96       	adiw	r24, 0x17	; 23
    3422:	0e 94 b5 74 	call	0xe96a	; 0xe96a <atoi>
    3426:	8a 87       	std	Y+10, r24	; 0x0a
    3428:	9b 87       	std	Y+11, r25	; 0x0b
    342a:	1c 86       	std	Y+12, r1	; 0x0c
    342c:	85 e0       	ldi	r24, 0x05	; 5
    342e:	8d 87       	std	Y+13, r24	; 0x0d
    3430:	8d 85       	ldd	r24, Y+13	; 0x0d
    3432:	28 2f       	mov	r18, r24
    3434:	30 e0       	ldi	r19, 0x00	; 0
    3436:	8a 85       	ldd	r24, Y+10	; 0x0a
    3438:	9b 85       	ldd	r25, Y+11	; 0x0b
    343a:	28 17       	cp	r18, r24
    343c:	39 07       	cpc	r19, r25
    343e:	24 f4       	brge	.+8      	; 0x3448 <_Z19handleSerialBusMsgsv+0x152>
    3440:	8d 85       	ldd	r24, Y+13	; 0x0d
    3442:	88 2f       	mov	r24, r24
    3444:	90 e0       	ldi	r25, 0x00	; 0
    3446:	09 c0       	rjmp	.+18     	; 0x345a <_Z19handleSerialBusMsgsv+0x164>
    3448:	8c 85       	ldd	r24, Y+12	; 0x0c
    344a:	88 2f       	mov	r24, r24
    344c:	90 e0       	ldi	r25, 0x00	; 0
    344e:	2a 85       	ldd	r18, Y+10	; 0x0a
    3450:	3b 85       	ldd	r19, Y+11	; 0x0b
    3452:	82 17       	cp	r24, r18
    3454:	93 07       	cpc	r25, r19
    3456:	0c f4       	brge	.+2      	; 0x345a <_Z19handleSerialBusMsgsv+0x164>
    3458:	c9 01       	movw	r24, r18
    345a:	89 83       	std	Y+1, r24	; 0x01
    345c:	9a 83       	std	Y+2, r25	; 0x02
    345e:	66 c0       	rjmp	.+204    	; 0x352c <_Z19handleSerialBusMsgsv+0x236>
    3460:	89 81       	ldd	r24, Y+1	; 0x01
    3462:	9a 81       	ldd	r25, Y+2	; 0x02
    3464:	83 35       	cpi	r24, 0x53	; 83
    3466:	91 05       	cpc	r25, r1
    3468:	09 f0       	breq	.+2      	; 0x346c <_Z19handleSerialBusMsgsv+0x176>
    346a:	59 c0       	rjmp	.+178    	; 0x351e <_Z19handleSerialBusMsgsv+0x228>
    346c:	1c 82       	std	Y+4, r1	; 0x04
    346e:	8e 81       	ldd	r24, Y+6	; 0x06
    3470:	9f 81       	ldd	r25, Y+7	; 0x07
    3472:	fc 01       	movw	r30, r24
    3474:	87 89       	ldd	r24, Z+23	; 0x17
    3476:	8e 87       	std	Y+14, r24	; 0x0e
    3478:	8e 81       	ldd	r24, Y+6	; 0x06
    347a:	9f 81       	ldd	r25, Y+7	; 0x07
    347c:	fc 01       	movw	r30, r24
    347e:	80 8d       	ldd	r24, Z+24	; 0x18
    3480:	8f 87       	std	Y+15, r24	; 0x0f
    3482:	8e 81       	ldd	r24, Y+6	; 0x06
    3484:	9f 81       	ldd	r25, Y+7	; 0x07
    3486:	fc 01       	movw	r30, r24
    3488:	11 8e       	std	Z+25, r1	; 0x19
    348a:	8e 85       	ldd	r24, Y+14	; 0x0e
    348c:	82 34       	cpi	r24, 0x42	; 66
    348e:	11 f4       	brne	.+4      	; 0x3494 <_Z19handleSerialBusMsgsv+0x19e>
    3490:	1c 82       	std	Y+4, r1	; 0x04
    3492:	36 c0       	rjmp	.+108    	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    3494:	8e 85       	ldd	r24, Y+14	; 0x0e
    3496:	86 34       	cpi	r24, 0x46	; 70
    3498:	51 f4       	brne	.+20     	; 0x34ae <_Z19handleSerialBusMsgsv+0x1b8>
    349a:	8f 85       	ldd	r24, Y+15	; 0x0f
    349c:	81 33       	cpi	r24, 0x31	; 49
    349e:	80 f1       	brcs	.+96     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    34a2:	86 33       	cpi	r24, 0x36	; 54
    34a4:	68 f5       	brcc	.+90     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    34a8:	84 52       	subi	r24, 0x24	; 36
    34aa:	8c 83       	std	Y+4, r24	; 0x04
    34ac:	29 c0       	rjmp	.+82     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34ae:	8e 85       	ldd	r24, Y+14	; 0x0e
    34b0:	83 35       	cpi	r24, 0x53	; 83
    34b2:	69 f4       	brne	.+26     	; 0x34ce <_Z19handleSerialBusMsgsv+0x1d8>
    34b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    34b6:	81 33       	cpi	r24, 0x31	; 49
    34b8:	38 f0       	brcs	.+14     	; 0x34c8 <_Z19handleSerialBusMsgsv+0x1d2>
    34ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    34bc:	86 33       	cpi	r24, 0x36	; 54
    34be:	20 f4       	brcc	.+8      	; 0x34c8 <_Z19handleSerialBusMsgsv+0x1d2>
    34c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    34c2:	89 52       	subi	r24, 0x29	; 41
    34c4:	8c 83       	std	Y+4, r24	; 0x04
    34c6:	1c c0       	rjmp	.+56     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34c8:	87 e0       	ldi	r24, 0x07	; 7
    34ca:	8c 83       	std	Y+4, r24	; 0x04
    34cc:	19 c0       	rjmp	.+50     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34ce:	8f 85       	ldd	r24, Y+15	; 0x0f
    34d0:	86 34       	cpi	r24, 0x46	; 70
    34d2:	51 f4       	brne	.+20     	; 0x34e8 <_Z19handleSerialBusMsgsv+0x1f2>
    34d4:	8e 85       	ldd	r24, Y+14	; 0x0e
    34d6:	81 33       	cpi	r24, 0x31	; 49
    34d8:	98 f0       	brcs	.+38     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34da:	8e 85       	ldd	r24, Y+14	; 0x0e
    34dc:	86 33       	cpi	r24, 0x36	; 54
    34de:	80 f4       	brcc	.+32     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34e0:	8e 85       	ldd	r24, Y+14	; 0x0e
    34e2:	84 52       	subi	r24, 0x24	; 36
    34e4:	8c 83       	std	Y+4, r24	; 0x04
    34e6:	0c c0       	rjmp	.+24     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    34ea:	83 35       	cpi	r24, 0x53	; 83
    34ec:	49 f4       	brne	.+18     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34ee:	8e 85       	ldd	r24, Y+14	; 0x0e
    34f0:	81 33       	cpi	r24, 0x31	; 49
    34f2:	30 f0       	brcs	.+12     	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34f4:	8e 85       	ldd	r24, Y+14	; 0x0e
    34f6:	86 33       	cpi	r24, 0x36	; 54
    34f8:	18 f4       	brcc	.+6      	; 0x3500 <_Z19handleSerialBusMsgsv+0x20a>
    34fa:	8e 85       	ldd	r24, Y+14	; 0x0e
    34fc:	89 52       	subi	r24, 0x29	; 41
    34fe:	8c 83       	std	Y+4, r24	; 0x04
    3500:	8c 81       	ldd	r24, Y+4	; 0x04
    3502:	87 30       	cpi	r24, 0x07	; 7
    3504:	48 f0       	brcs	.+18     	; 0x3518 <_Z19handleSerialBusMsgsv+0x222>
    3506:	8c 81       	ldd	r24, Y+4	; 0x04
    3508:	82 31       	cpi	r24, 0x12	; 18
    350a:	30 f4       	brcc	.+12     	; 0x3518 <_Z19handleSerialBusMsgsv+0x222>
    350c:	8c 81       	ldd	r24, Y+4	; 0x04
    350e:	88 2f       	mov	r24, r24
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	89 83       	std	Y+1, r24	; 0x01
    3514:	9a 83       	std	Y+2, r25	; 0x02
    3516:	0a c0       	rjmp	.+20     	; 0x352c <_Z19handleSerialBusMsgsv+0x236>
    3518:	19 82       	std	Y+1, r1	; 0x01
    351a:	1a 82       	std	Y+2, r1	; 0x02
    351c:	07 c0       	rjmp	.+14     	; 0x352c <_Z19handleSerialBusMsgsv+0x236>
    351e:	8e 81       	ldd	r24, Y+6	; 0x06
    3520:	9f 81       	ldd	r25, Y+7	; 0x07
    3522:	03 96       	adiw	r24, 0x03	; 3
    3524:	0e 94 b5 74 	call	0xe96a	; 0xe96a <atoi>
    3528:	89 83       	std	Y+1, r24	; 0x01
    352a:	9a 83       	std	Y+2, r25	; 0x02
    352c:	89 81       	ldd	r24, Y+1	; 0x01
    352e:	9a 81       	ldd	r25, Y+2	; 0x02
    3530:	99 23       	and	r25, r25
    3532:	c4 f0       	brlt	.+48     	; 0x3564 <_Z19handleSerialBusMsgsv+0x26e>
    3534:	89 81       	ldd	r24, Y+1	; 0x01
    3536:	9a 81       	ldd	r25, Y+2	; 0x02
    3538:	42 97       	sbiw	r24, 0x12	; 18
    353a:	a4 f4       	brge	.+40     	; 0x3564 <_Z19handleSerialBusMsgsv+0x26e>
    353c:	89 81       	ldd	r24, Y+1	; 0x01
    353e:	8a a7       	std	Y+42, r24	; 0x2a
    3540:	ce 01       	movw	r24, r28
    3542:	8a 96       	adiw	r24, 0x2a	; 42
    3544:	ac 01       	movw	r20, r24
    3546:	6e e3       	ldi	r22, 0x3E	; 62
    3548:	8c e3       	ldi	r24, 0x3C	; 60
    354a:	97 e4       	ldi	r25, 0x47	; 71
    354c:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3550:	9a a5       	ldd	r25, Y+42	; 0x2a
    3552:	80 91 17 40 	lds	r24, 0x4017	; 0x804017 <g_fox>
    3556:	98 17       	cp	r25, r24
    3558:	29 f0       	breq	.+10     	; 0x3564 <_Z19handleSerialBusMsgsv+0x26e>
    355a:	ce 01       	movw	r24, r28
    355c:	8a 96       	adiw	r24, 0x2a	; 42
    355e:	60 e0       	ldi	r22, 0x00	; 0
    3560:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    3564:	80 91 17 40 	lds	r24, 0x4017	; 0x804017 <g_fox>
    3568:	68 2f       	mov	r22, r24
    356a:	84 ea       	ldi	r24, 0xA4	; 164
    356c:	96 e4       	ldi	r25, 0x46	; 70
    356e:	0e 94 4e 6f 	call	0xde9c	; 0xde9c <_Z8fox2TextPc5Fox_t>
    3572:	98 2f       	mov	r25, r24
    3574:	81 e0       	ldi	r24, 0x01	; 1
    3576:	89 27       	eor	r24, r25
    3578:	88 23       	and	r24, r24
    357a:	11 f1       	breq	.+68     	; 0x35c0 <_Z19handleSerialBusMsgsv+0x2ca>
    357c:	ce 01       	movw	r24, r28
    357e:	8b 96       	adiw	r24, 0x2b	; 43
    3580:	64 ea       	ldi	r22, 0xA4	; 164
    3582:	76 e4       	ldi	r23, 0x46	; 70
    3584:	0e 94 28 75 	call	0xea50	; 0xea50 <strcpy>
    3588:	ce 01       	movw	r24, r28
    358a:	8b 96       	adiw	r24, 0x2b	; 43
    358c:	29 2f       	mov	r18, r25
    358e:	2f 93       	push	r18
    3590:	8f 93       	push	r24
    3592:	88 e7       	ldi	r24, 0x78	; 120
    3594:	90 e4       	ldi	r25, 0x40	; 64
    3596:	89 2f       	mov	r24, r25
    3598:	8f 93       	push	r24
    359a:	88 e7       	ldi	r24, 0x78	; 120
    359c:	90 e4       	ldi	r25, 0x40	; 64
    359e:	8f 93       	push	r24
    35a0:	84 ea       	ldi	r24, 0xA4	; 164
    35a2:	96 e4       	ldi	r25, 0x46	; 70
    35a4:	89 2f       	mov	r24, r25
    35a6:	8f 93       	push	r24
    35a8:	84 ea       	ldi	r24, 0xA4	; 164
    35aa:	96 e4       	ldi	r25, 0x46	; 70
    35ac:	8f 93       	push	r24
    35ae:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    35b2:	0f 90       	pop	r0
    35b4:	0f 90       	pop	r0
    35b6:	0f 90       	pop	r0
    35b8:	0f 90       	pop	r0
    35ba:	0f 90       	pop	r0
    35bc:	0f 90       	pop	r0
    35be:	1d c0       	rjmp	.+58     	; 0x35fa <_Z19handleSerialBusMsgsv+0x304>
    35c0:	80 91 17 40 	lds	r24, 0x4017	; 0x804017 <g_fox>
    35c4:	88 2f       	mov	r24, r24
    35c6:	90 e0       	ldi	r25, 0x00	; 0
    35c8:	29 2f       	mov	r18, r25
    35ca:	2f 93       	push	r18
    35cc:	8f 93       	push	r24
    35ce:	80 e8       	ldi	r24, 0x80	; 128
    35d0:	90 e4       	ldi	r25, 0x40	; 64
    35d2:	89 2f       	mov	r24, r25
    35d4:	8f 93       	push	r24
    35d6:	80 e8       	ldi	r24, 0x80	; 128
    35d8:	90 e4       	ldi	r25, 0x40	; 64
    35da:	8f 93       	push	r24
    35dc:	84 ea       	ldi	r24, 0xA4	; 164
    35de:	96 e4       	ldi	r25, 0x46	; 70
    35e0:	89 2f       	mov	r24, r25
    35e2:	8f 93       	push	r24
    35e4:	84 ea       	ldi	r24, 0xA4	; 164
    35e6:	96 e4       	ldi	r25, 0x46	; 70
    35e8:	8f 93       	push	r24
    35ea:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    35ee:	0f 90       	pop	r0
    35f0:	0f 90       	pop	r0
    35f2:	0f 90       	pop	r0
    35f4:	0f 90       	pop	r0
    35f6:	0f 90       	pop	r0
    35f8:	0f 90       	pop	r0
    35fa:	84 ea       	ldi	r24, 0xA4	; 164
    35fc:	96 e4       	ldi	r25, 0x46	; 70
    35fe:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3602:	44 c5       	rjmp	.+2696   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    3604:	8e 81       	ldd	r24, Y+6	; 0x06
    3606:	9f 81       	ldd	r25, Y+7	; 0x07
    3608:	fc 01       	movw	r30, r24
    360a:	83 81       	ldd	r24, Z+3	; 0x03
    360c:	88 23       	and	r24, r24
    360e:	e9 f1       	breq	.+122    	; 0x368a <_Z19handleSerialBusMsgsv+0x394>
    3610:	8e 81       	ldd	r24, Y+6	; 0x06
    3612:	9f 81       	ldd	r25, Y+7	; 0x07
    3614:	03 96       	adiw	r24, 0x03	; 3
    3616:	0e 94 b5 74 	call	0xe96a	; 0xe96a <atoi>
    361a:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    361e:	90 93 52 47 	sts	0x4752, r25	; 0x804752 <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    3622:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    3626:	90 91 52 47 	lds	r25, 0x4752	; 0x804752 <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    362a:	89 38       	cpi	r24, 0x89	; 137
    362c:	93 41       	sbci	r25, 0x13	; 19
    362e:	68 f4       	brcc	.+26     	; 0x364a <_Z19handleSerialBusMsgsv+0x354>
    3630:	60 e0       	ldi	r22, 0x00	; 0
    3632:	70 e0       	ldi	r23, 0x00	; 0
    3634:	81 e5       	ldi	r24, 0x51	; 81
    3636:	97 e4       	ldi	r25, 0x47	; 71
    3638:	0e 94 b4 68 	call	0xd168	; 0xd168 <_Z15txSetParametersPjPb>
    363c:	88 8b       	std	Y+16, r24	; 0x10
    363e:	88 89       	ldd	r24, Y+16	; 0x10
    3640:	88 23       	and	r24, r24
    3642:	19 f0       	breq	.+6      	; 0x364a <_Z19handleSerialBusMsgsv+0x354>
    3644:	88 89       	ldd	r24, Y+16	; 0x10
    3646:	80 93 d6 46 	sts	0x46D6, r24	; 0x8046d6 <_ZL17g_last_error_code>
    364a:	0e 94 a0 68 	call	0xd140	; 0xd140 <_Z12txGetPowerMwv>
    364e:	29 2f       	mov	r18, r25
    3650:	2f 93       	push	r18
    3652:	8f 93       	push	r24
    3654:	88 e8       	ldi	r24, 0x88	; 136
    3656:	90 e4       	ldi	r25, 0x40	; 64
    3658:	89 2f       	mov	r24, r25
    365a:	8f 93       	push	r24
    365c:	88 e8       	ldi	r24, 0x88	; 136
    365e:	90 e4       	ldi	r25, 0x40	; 64
    3660:	8f 93       	push	r24
    3662:	84 ea       	ldi	r24, 0xA4	; 164
    3664:	96 e4       	ldi	r25, 0x46	; 70
    3666:	89 2f       	mov	r24, r25
    3668:	8f 93       	push	r24
    366a:	84 ea       	ldi	r24, 0xA4	; 164
    366c:	96 e4       	ldi	r25, 0x46	; 70
    366e:	8f 93       	push	r24
    3670:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3674:	0f 90       	pop	r0
    3676:	0f 90       	pop	r0
    3678:	0f 90       	pop	r0
    367a:	0f 90       	pop	r0
    367c:	0f 90       	pop	r0
    367e:	0f 90       	pop	r0
    3680:	84 ea       	ldi	r24, 0xA4	; 164
    3682:	96 e4       	ldi	r25, 0x46	; 70
    3684:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3688:	01 c5       	rjmp	.+2562   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    368a:	0e 94 a0 68 	call	0xd140	; 0xd140 <_Z12txGetPowerMwv>
    368e:	29 2f       	mov	r18, r25
    3690:	2f 93       	push	r18
    3692:	8f 93       	push	r24
    3694:	88 e8       	ldi	r24, 0x88	; 136
    3696:	90 e4       	ldi	r25, 0x40	; 64
    3698:	89 2f       	mov	r24, r25
    369a:	8f 93       	push	r24
    369c:	88 e8       	ldi	r24, 0x88	; 136
    369e:	90 e4       	ldi	r25, 0x40	; 64
    36a0:	8f 93       	push	r24
    36a2:	84 ea       	ldi	r24, 0xA4	; 164
    36a4:	96 e4       	ldi	r25, 0x46	; 70
    36a6:	89 2f       	mov	r24, r25
    36a8:	8f 93       	push	r24
    36aa:	84 ea       	ldi	r24, 0xA4	; 164
    36ac:	96 e4       	ldi	r25, 0x46	; 70
    36ae:	8f 93       	push	r24
    36b0:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    36b4:	0f 90       	pop	r0
    36b6:	0f 90       	pop	r0
    36b8:	0f 90       	pop	r0
    36ba:	0f 90       	pop	r0
    36bc:	0f 90       	pop	r0
    36be:	0f 90       	pop	r0
    36c0:	84 ea       	ldi	r24, 0xA4	; 164
    36c2:	96 e4       	ldi	r25, 0x46	; 70
    36c4:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    36c8:	e1 c4       	rjmp	.+2498   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    36ca:	19 8a       	std	Y+17, r1	; 0x11
    36cc:	1a 8a       	std	Y+18, r1	; 0x12
    36ce:	1b 8a       	std	Y+19, r1	; 0x13
    36d0:	1c 8a       	std	Y+20, r1	; 0x14
    36d2:	8e 81       	ldd	r24, Y+6	; 0x06
    36d4:	9f 81       	ldd	r25, Y+7	; 0x07
    36d6:	fc 01       	movw	r30, r24
    36d8:	83 81       	ldd	r24, Z+3	; 0x03
    36da:	88 23       	and	r24, r24
    36dc:	49 f1       	breq	.+82     	; 0x3730 <_Z19handleSerialBusMsgsv+0x43a>
    36de:	8e 81       	ldd	r24, Y+6	; 0x06
    36e0:	9f 81       	ldd	r25, Y+7	; 0x07
    36e2:	03 96       	adiw	r24, 0x03	; 3
    36e4:	9e 01       	movw	r18, r28
    36e6:	2c 5b       	subi	r18, 0xBC	; 188
    36e8:	3f 4f       	sbci	r19, 0xFF	; 255
    36ea:	b9 01       	movw	r22, r18
    36ec:	0e 94 89 6d 	call	0xdb12	; 0xdb12 <_Z12frequencyValPcPm>
    36f0:	ce 01       	movw	r24, r28
    36f2:	8c 5b       	subi	r24, 0xBC	; 188
    36f4:	9f 4f       	sbci	r25, 0xFF	; 255
    36f6:	61 e0       	ldi	r22, 0x01	; 1
    36f8:	0e 94 40 67 	call	0xce80	; 0xce80 <_Z14txSetFrequencyPmb>
    36fc:	98 2f       	mov	r25, r24
    36fe:	81 e0       	ldi	r24, 0x01	; 1
    3700:	89 27       	eor	r24, r25
    3702:	88 23       	and	r24, r24
    3704:	89 f0       	breq	.+34     	; 0x3728 <_Z19handleSerialBusMsgsv+0x432>
    3706:	ce 01       	movw	r24, r28
    3708:	8c 5b       	subi	r24, 0xBC	; 188
    370a:	9f 4f       	sbci	r25, 0xFF	; 255
    370c:	fc 01       	movw	r30, r24
    370e:	80 81       	ld	r24, Z
    3710:	91 81       	ldd	r25, Z+1	; 0x01
    3712:	a2 81       	ldd	r26, Z+2	; 0x02
    3714:	b3 81       	ldd	r27, Z+3	; 0x03
    3716:	89 8b       	std	Y+17, r24	; 0x11
    3718:	9a 8b       	std	Y+18, r25	; 0x12
    371a:	ab 8b       	std	Y+19, r26	; 0x13
    371c:	bc 8b       	std	Y+20, r27	; 0x14
    371e:	8c e3       	ldi	r24, 0x3C	; 60
    3720:	97 e4       	ldi	r25, 0x47	; 71
    3722:	0e 94 f1 3f 	call	0x7fe2	; 0x7fe2 <_ZN13EepromManager13saveAllEEPROMEv>
    3726:	04 c0       	rjmp	.+8      	; 0x3730 <_Z19handleSerialBusMsgsv+0x43a>
    3728:	83 e9       	ldi	r24, 0x93	; 147
    372a:	90 e4       	ldi	r25, 0x40	; 64
    372c:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3730:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z14txGetFrequencyv>
    3734:	dc 01       	movw	r26, r24
    3736:	cb 01       	movw	r24, r22
    3738:	89 8b       	std	Y+17, r24	; 0x11
    373a:	9a 8b       	std	Y+18, r25	; 0x12
    373c:	ab 8b       	std	Y+19, r26	; 0x13
    373e:	bc 8b       	std	Y+20, r27	; 0x14
    3740:	89 89       	ldd	r24, Y+17	; 0x11
    3742:	9a 89       	ldd	r25, Y+18	; 0x12
    3744:	ab 89       	ldd	r26, Y+19	; 0x13
    3746:	bc 89       	ldd	r27, Y+20	; 0x14
    3748:	89 2b       	or	r24, r25
    374a:	8a 2b       	or	r24, r26
    374c:	8b 2b       	or	r24, r27
    374e:	09 f4       	brne	.+2      	; 0x3752 <_Z19handleSerialBusMsgsv+0x45c>
    3750:	98 c4       	rjmp	.+2352   	; 0x4082 <__DATA_REGION_LENGTH__+0x82>
    3752:	89 89       	ldd	r24, Y+17	; 0x11
    3754:	9a 89       	ldd	r25, Y+18	; 0x12
    3756:	ab 89       	ldd	r26, Y+19	; 0x13
    3758:	bc 89       	ldd	r27, Y+20	; 0x14
    375a:	9e 01       	movw	r18, r28
    375c:	28 5b       	subi	r18, 0xB8	; 184
    375e:	3f 4f       	sbci	r19, 0xFF	; 255
    3760:	ac 01       	movw	r20, r24
    3762:	bd 01       	movw	r22, r26
    3764:	c9 01       	movw	r24, r18
    3766:	0e 94 0d 6d 	call	0xda1a	; 0xda1a <_Z15frequencyStringPcm>
    376a:	98 2f       	mov	r25, r24
    376c:	81 e0       	ldi	r24, 0x01	; 1
    376e:	89 27       	eor	r24, r25
    3770:	88 23       	and	r24, r24
    3772:	e9 f0       	breq	.+58     	; 0x37ae <_Z19handleSerialBusMsgsv+0x4b8>
    3774:	ce 01       	movw	r24, r28
    3776:	88 5b       	subi	r24, 0xB8	; 184
    3778:	9f 4f       	sbci	r25, 0xFF	; 255
    377a:	29 2f       	mov	r18, r25
    377c:	2f 93       	push	r18
    377e:	8f 93       	push	r24
    3780:	8e eb       	ldi	r24, 0xBE	; 190
    3782:	90 e4       	ldi	r25, 0x40	; 64
    3784:	89 2f       	mov	r24, r25
    3786:	8f 93       	push	r24
    3788:	8e eb       	ldi	r24, 0xBE	; 190
    378a:	90 e4       	ldi	r25, 0x40	; 64
    378c:	8f 93       	push	r24
    378e:	84 ea       	ldi	r24, 0xA4	; 164
    3790:	96 e4       	ldi	r25, 0x46	; 70
    3792:	89 2f       	mov	r24, r25
    3794:	8f 93       	push	r24
    3796:	84 ea       	ldi	r24, 0xA4	; 164
    3798:	96 e4       	ldi	r25, 0x46	; 70
    379a:	8f 93       	push	r24
    379c:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    37a0:	0f 90       	pop	r0
    37a2:	0f 90       	pop	r0
    37a4:	0f 90       	pop	r0
    37a6:	0f 90       	pop	r0
    37a8:	0f 90       	pop	r0
    37aa:	0f 90       	pop	r0
    37ac:	1d c0       	rjmp	.+58     	; 0x37e8 <_Z19handleSerialBusMsgsv+0x4f2>
    37ae:	8c 89       	ldd	r24, Y+20	; 0x14
    37b0:	8f 93       	push	r24
    37b2:	8b 89       	ldd	r24, Y+19	; 0x13
    37b4:	8f 93       	push	r24
    37b6:	8a 89       	ldd	r24, Y+18	; 0x12
    37b8:	8f 93       	push	r24
    37ba:	89 89       	ldd	r24, Y+17	; 0x11
    37bc:	8f 93       	push	r24
    37be:	86 ec       	ldi	r24, 0xC6	; 198
    37c0:	90 e4       	ldi	r25, 0x40	; 64
    37c2:	89 2f       	mov	r24, r25
    37c4:	8f 93       	push	r24
    37c6:	86 ec       	ldi	r24, 0xC6	; 198
    37c8:	90 e4       	ldi	r25, 0x40	; 64
    37ca:	8f 93       	push	r24
    37cc:	84 ea       	ldi	r24, 0xA4	; 164
    37ce:	96 e4       	ldi	r25, 0x46	; 70
    37d0:	89 2f       	mov	r24, r25
    37d2:	8f 93       	push	r24
    37d4:	84 ea       	ldi	r24, 0xA4	; 164
    37d6:	96 e4       	ldi	r25, 0x46	; 70
    37d8:	8f 93       	push	r24
    37da:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    37de:	8d b7       	in	r24, 0x3d	; 61
    37e0:	9e b7       	in	r25, 0x3e	; 62
    37e2:	08 96       	adiw	r24, 0x08	; 8
    37e4:	cd bf       	out	0x3d, r28	; 61
    37e6:	de bf       	out	0x3e, r29	; 62
    37e8:	84 ea       	ldi	r24, 0xA4	; 164
    37ea:	96 e4       	ldi	r25, 0x46	; 70
    37ec:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    37f0:	48 c4       	rjmp	.+2192   	; 0x4082 <__DATA_REGION_LENGTH__+0x82>
    37f2:	8e 81       	ldd	r24, Y+6	; 0x06
    37f4:	9f 81       	ldd	r25, Y+7	; 0x07
    37f6:	fc 01       	movw	r30, r24
    37f8:	83 81       	ldd	r24, Z+3	; 0x03
    37fa:	88 23       	and	r24, r24
    37fc:	81 f1       	breq	.+96     	; 0x385e <_Z19handleSerialBusMsgsv+0x568>
    37fe:	8e 81       	ldd	r24, Y+6	; 0x06
    3800:	9f 81       	ldd	r25, Y+7	; 0x07
    3802:	fc 01       	movw	r30, r24
    3804:	83 81       	ldd	r24, Z+3	; 0x03
    3806:	80 33       	cpi	r24, 0x30	; 48
    3808:	21 f4       	brne	.+8      	; 0x3812 <_Z19handleSerialBusMsgsv+0x51c>
    380a:	82 e0       	ldi	r24, 0x02	; 2
    380c:	0e 94 70 2c 	call	0x58e0	; 0x58e0 <_Z12stopEventNow19EventActionSource_t>
    3810:	3d c4       	rjmp	.+2170   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    3812:	8e 81       	ldd	r24, Y+6	; 0x06
    3814:	9f 81       	ldd	r25, Y+7	; 0x07
    3816:	fc 01       	movw	r30, r24
    3818:	83 81       	ldd	r24, Z+3	; 0x03
    381a:	81 33       	cpi	r24, 0x31	; 49
    381c:	21 f4       	brne	.+8      	; 0x3826 <_Z19handleSerialBusMsgsv+0x530>
    381e:	82 e0       	ldi	r24, 0x02	; 2
    3820:	0e 94 0e 2c 	call	0x581c	; 0x581c <_Z13startEventNow19EventActionSource_t>
    3824:	33 c4       	rjmp	.+2150   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    3826:	8e 81       	ldd	r24, Y+6	; 0x06
    3828:	9f 81       	ldd	r25, Y+7	; 0x07
    382a:	fc 01       	movw	r30, r24
    382c:	83 81       	ldd	r24, Z+3	; 0x03
    382e:	82 33       	cpi	r24, 0x32	; 50
    3830:	29 f4       	brne	.+10     	; 0x383c <_Z19handleSerialBusMsgsv+0x546>
    3832:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    3836:	0e 94 9e 2c 	call	0x593c	; 0x593c <_Z18startEventUsingRTCv>
    383a:	28 c4       	rjmp	.+2128   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    383c:	8e 81       	ldd	r24, Y+6	; 0x06
    383e:	9f 81       	ldd	r25, Y+7	; 0x07
    3840:	fc 01       	movw	r30, r24
    3842:	83 81       	ldd	r24, Z+3	; 0x03
    3844:	83 33       	cpi	r24, 0x33	; 51
    3846:	31 f4       	brne	.+12     	; 0x3854 <_Z19handleSerialBusMsgsv+0x55e>
    3848:	62 e0       	ldi	r22, 0x02	; 2
    384a:	80 e0       	ldi	r24, 0x00	; 0
    384c:	90 e0       	ldi	r25, 0x00	; 0
    384e:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    3852:	1c c4       	rjmp	.+2104   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    3854:	8f ec       	ldi	r24, 0xCF	; 207
    3856:	90 e4       	ldi	r25, 0x40	; 64
    3858:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    385c:	17 c4       	rjmp	.+2094   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    385e:	8f ec       	ldi	r24, 0xCF	; 207
    3860:	90 e4       	ldi	r25, 0x40	; 64
    3862:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3866:	12 c4       	rjmp	.+2084   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    3868:	8e 81       	ldd	r24, Y+6	; 0x06
    386a:	9f 81       	ldd	r25, Y+7	; 0x07
    386c:	fc 01       	movw	r30, r24
    386e:	83 81       	ldd	r24, Z+3	; 0x03
    3870:	88 23       	and	r24, r24
    3872:	09 f4       	brne	.+2      	; 0x3876 <_Z19handleSerialBusMsgsv+0x580>
    3874:	41 c0       	rjmp	.+130    	; 0x38f8 <_Z19handleSerialBusMsgsv+0x602>
    3876:	80 e2       	ldi	r24, 0x20	; 32
    3878:	90 e0       	ldi	r25, 0x00	; 0
    387a:	80 93 a4 46 	sts	0x46A4, r24	; 0x8046a4 <_ZL9g_tempStr>
    387e:	90 93 a5 46 	sts	0x46A5, r25	; 0x8046a5 <_ZL9g_tempStr+0x1>
    3882:	8e 81       	ldd	r24, Y+6	; 0x06
    3884:	9f 81       	ldd	r25, Y+7	; 0x07
    3886:	03 96       	adiw	r24, 0x03	; 3
    3888:	bc 01       	movw	r22, r24
    388a:	84 ea       	ldi	r24, 0xA4	; 164
    388c:	96 e4       	ldi	r25, 0x46	; 70
    388e:	0e 94 09 75 	call	0xea12	; 0xea12 <strcat>
    3892:	8e 81       	ldd	r24, Y+6	; 0x06
    3894:	9f 81       	ldd	r25, Y+7	; 0x07
    3896:	fc 01       	movw	r30, r24
    3898:	87 89       	ldd	r24, Z+23	; 0x17
    389a:	88 23       	and	r24, r24
    389c:	d1 f0       	breq	.+52     	; 0x38d2 <_Z19handleSerialBusMsgsv+0x5dc>
    389e:	84 ea       	ldi	r24, 0xA4	; 164
    38a0:	96 e4       	ldi	r25, 0x46	; 70
    38a2:	9c 01       	movw	r18, r24
    38a4:	f9 01       	movw	r30, r18
    38a6:	01 90       	ld	r0, Z+
    38a8:	00 20       	and	r0, r0
    38aa:	e9 f7       	brne	.-6      	; 0x38a6 <_Z19handleSerialBusMsgsv+0x5b0>
    38ac:	cf 01       	movw	r24, r30
    38ae:	01 97       	sbiw	r24, 0x01	; 1
    38b0:	82 1b       	sub	r24, r18
    38b2:	93 0b       	sbc	r25, r19
    38b4:	8c 55       	subi	r24, 0x5C	; 92
    38b6:	99 4b       	sbci	r25, 0xB9	; 185
    38b8:	20 e2       	ldi	r18, 0x20	; 32
    38ba:	30 e0       	ldi	r19, 0x00	; 0
    38bc:	fc 01       	movw	r30, r24
    38be:	20 83       	st	Z, r18
    38c0:	31 83       	std	Z+1, r19	; 0x01
    38c2:	8e 81       	ldd	r24, Y+6	; 0x06
    38c4:	9f 81       	ldd	r25, Y+7	; 0x07
    38c6:	47 96       	adiw	r24, 0x17	; 23
    38c8:	bc 01       	movw	r22, r24
    38ca:	84 ea       	ldi	r24, 0xA4	; 164
    38cc:	96 e4       	ldi	r25, 0x46	; 70
    38ce:	0e 94 09 75 	call	0xea12	; 0xea12 <strcat>
    38d2:	84 ea       	ldi	r24, 0xA4	; 164
    38d4:	96 e4       	ldi	r25, 0x46	; 70
    38d6:	0e 94 2f 75 	call	0xea5e	; 0xea5e <strlen>
    38da:	45 97       	sbiw	r24, 0x15	; 21
    38dc:	68 f4       	brcc	.+26     	; 0x38f8 <_Z19handleSerialBusMsgsv+0x602>
    38de:	64 ea       	ldi	r22, 0xA4	; 164
    38e0:	76 e4       	ldi	r23, 0x46	; 70
    38e2:	8e ef       	ldi	r24, 0xFE	; 254
    38e4:	96 e4       	ldi	r25, 0x46	; 70
    38e6:	0e 94 28 75 	call	0xea50	; 0xea50 <strcpy>
    38ea:	44 ea       	ldi	r20, 0xA4	; 164
    38ec:	56 e4       	ldi	r21, 0x46	; 70
    38ee:	6a e0       	ldi	r22, 0x0A	; 10
    38f0:	8c e3       	ldi	r24, 0x3C	; 60
    38f2:	97 e4       	ldi	r25, 0x47	; 71
    38f4:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    38f8:	80 91 fe 46 	lds	r24, 0x46FE	; 0x8046fe <g_messages_text+0x15>
    38fc:	88 23       	and	r24, r24
    38fe:	01 f1       	breq	.+64     	; 0x3940 <_Z19handleSerialBusMsgsv+0x64a>
    3900:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3904:	88 2f       	mov	r24, r24
    3906:	90 e0       	ldi	r25, 0x00	; 0
    3908:	bc 01       	movw	r22, r24
    390a:	8e ef       	ldi	r24, 0xFE	; 254
    390c:	96 e4       	ldi	r25, 0x46	; 70
    390e:	0e 94 ca 52 	call	0xa594	; 0xa594 <_Z26timeRequiredToSendStrAtWPMPcj>
    3912:	88 5a       	subi	r24, 0xA8	; 168
    3914:	9d 4f       	sbci	r25, 0xFD	; 253
    3916:	96 95       	lsr	r25
    3918:	87 95       	ror	r24
    391a:	96 95       	lsr	r25
    391c:	87 95       	ror	r24
    391e:	96 95       	lsr	r25
    3920:	87 95       	ror	r24
    3922:	9c 01       	movw	r18, r24
    3924:	a5 ec       	ldi	r26, 0xC5	; 197
    3926:	b0 e2       	ldi	r27, 0x20	; 32
    3928:	0e 94 56 73 	call	0xe6ac	; 0xe6ac <__umulhisi3>
    392c:	92 95       	swap	r25
    392e:	82 95       	swap	r24
    3930:	8f 70       	andi	r24, 0x0F	; 15
    3932:	89 27       	eor	r24, r25
    3934:	9f 70       	andi	r25, 0x0F	; 15
    3936:	89 27       	eor	r24, r25
    3938:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <g_time_needed_for_ID>
    393c:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <g_time_needed_for_ID+0x1>
    3940:	8e ef       	ldi	r24, 0xFE	; 254
    3942:	96 e4       	ldi	r25, 0x46	; 70
    3944:	89 2f       	mov	r24, r25
    3946:	8f 93       	push	r24
    3948:	8e ef       	ldi	r24, 0xFE	; 254
    394a:	96 e4       	ldi	r25, 0x46	; 70
    394c:	8f 93       	push	r24
    394e:	84 ed       	ldi	r24, 0xD4	; 212
    3950:	90 e4       	ldi	r25, 0x40	; 64
    3952:	89 2f       	mov	r24, r25
    3954:	8f 93       	push	r24
    3956:	84 ed       	ldi	r24, 0xD4	; 212
    3958:	90 e4       	ldi	r25, 0x40	; 64
    395a:	8f 93       	push	r24
    395c:	84 ea       	ldi	r24, 0xA4	; 164
    395e:	96 e4       	ldi	r25, 0x46	; 70
    3960:	89 2f       	mov	r24, r25
    3962:	8f 93       	push	r24
    3964:	84 ea       	ldi	r24, 0xA4	; 164
    3966:	96 e4       	ldi	r25, 0x46	; 70
    3968:	8f 93       	push	r24
    396a:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    396e:	0f 90       	pop	r0
    3970:	0f 90       	pop	r0
    3972:	0f 90       	pop	r0
    3974:	0f 90       	pop	r0
    3976:	0f 90       	pop	r0
    3978:	0f 90       	pop	r0
    397a:	84 ea       	ldi	r24, 0xA4	; 164
    397c:	96 e4       	ldi	r25, 0x46	; 70
    397e:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3982:	84 c3       	rjmp	.+1800   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    3984:	8e 81       	ldd	r24, Y+6	; 0x06
    3986:	9f 81       	ldd	r25, Y+7	; 0x07
    3988:	fc 01       	movw	r30, r24
    398a:	83 81       	ldd	r24, Z+3	; 0x03
    398c:	83 35       	cpi	r24, 0x53	; 83
    398e:	09 f0       	breq	.+2      	; 0x3992 <_Z19handleSerialBusMsgsv+0x69c>
    3990:	6f c0       	rjmp	.+222    	; 0x3a70 <_Z19handleSerialBusMsgsv+0x77a>
    3992:	8e 81       	ldd	r24, Y+6	; 0x06
    3994:	9f 81       	ldd	r25, Y+7	; 0x07
    3996:	fc 01       	movw	r30, r24
    3998:	87 89       	ldd	r24, Z+23	; 0x17
    399a:	8d 8b       	std	Y+21, r24	; 0x15
    399c:	8d 89       	ldd	r24, Y+21	; 0x15
    399e:	88 23       	and	r24, r24
    39a0:	09 f4       	brne	.+2      	; 0x39a4 <_Z19handleSerialBusMsgsv+0x6ae>
    39a2:	48 c0       	rjmp	.+144    	; 0x3a34 <_Z19handleSerialBusMsgsv+0x73e>
    39a4:	8e 81       	ldd	r24, Y+6	; 0x06
    39a6:	9f 81       	ldd	r25, Y+7	; 0x07
    39a8:	47 96       	adiw	r24, 0x17	; 23
    39aa:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    39ae:	dc 01       	movw	r26, r24
    39b0:	cb 01       	movw	r24, r22
    39b2:	8e 8b       	std	Y+22, r24	; 0x16
    39b4:	8e 89       	ldd	r24, Y+22	; 0x16
    39b6:	8f 8b       	std	Y+23, r24	; 0x17
    39b8:	85 e0       	ldi	r24, 0x05	; 5
    39ba:	88 8f       	std	Y+24, r24	; 0x18
    39bc:	84 e1       	ldi	r24, 0x14	; 20
    39be:	89 8f       	std	Y+25, r24	; 0x19
    39c0:	9f 89       	ldd	r25, Y+23	; 0x17
    39c2:	89 8d       	ldd	r24, Y+25	; 0x19
    39c4:	89 17       	cp	r24, r25
    39c6:	40 f0       	brcs	.+16     	; 0x39d8 <_Z19handleSerialBusMsgsv+0x6e2>
    39c8:	9f 89       	ldd	r25, Y+23	; 0x17
    39ca:	88 8d       	ldd	r24, Y+24	; 0x18
    39cc:	98 17       	cp	r25, r24
    39ce:	10 f4       	brcc	.+4      	; 0x39d4 <_Z19handleSerialBusMsgsv+0x6de>
    39d0:	88 8d       	ldd	r24, Y+24	; 0x18
    39d2:	03 c0       	rjmp	.+6      	; 0x39da <_Z19handleSerialBusMsgsv+0x6e4>
    39d4:	8f 89       	ldd	r24, Y+23	; 0x17
    39d6:	01 c0       	rjmp	.+2      	; 0x39da <_Z19handleSerialBusMsgsv+0x6e4>
    39d8:	89 8d       	ldd	r24, Y+25	; 0x19
    39da:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    39de:	4b e0       	ldi	r20, 0x0B	; 11
    39e0:	50 e4       	ldi	r21, 0x40	; 64
    39e2:	6d e3       	ldi	r22, 0x3D	; 61
    39e4:	8c e3       	ldi	r24, 0x3C	; 60
    39e6:	97 e4       	ldi	r25, 0x47	; 71
    39e8:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    39ec:	80 91 fe 46 	lds	r24, 0x46FE	; 0x8046fe <g_messages_text+0x15>
    39f0:	88 23       	and	r24, r24
    39f2:	01 f1       	breq	.+64     	; 0x3a34 <_Z19handleSerialBusMsgsv+0x73e>
    39f4:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    39f8:	88 2f       	mov	r24, r24
    39fa:	90 e0       	ldi	r25, 0x00	; 0
    39fc:	bc 01       	movw	r22, r24
    39fe:	8e ef       	ldi	r24, 0xFE	; 254
    3a00:	96 e4       	ldi	r25, 0x46	; 70
    3a02:	0e 94 ca 52 	call	0xa594	; 0xa594 <_Z26timeRequiredToSendStrAtWPMPcj>
    3a06:	88 5a       	subi	r24, 0xA8	; 168
    3a08:	9d 4f       	sbci	r25, 0xFD	; 253
    3a0a:	96 95       	lsr	r25
    3a0c:	87 95       	ror	r24
    3a0e:	96 95       	lsr	r25
    3a10:	87 95       	ror	r24
    3a12:	96 95       	lsr	r25
    3a14:	87 95       	ror	r24
    3a16:	9c 01       	movw	r18, r24
    3a18:	a5 ec       	ldi	r26, 0xC5	; 197
    3a1a:	b0 e2       	ldi	r27, 0x20	; 32
    3a1c:	0e 94 56 73 	call	0xe6ac	; 0xe6ac <__umulhisi3>
    3a20:	92 95       	swap	r25
    3a22:	82 95       	swap	r24
    3a24:	8f 70       	andi	r24, 0x0F	; 15
    3a26:	89 27       	eor	r24, r25
    3a28:	9f 70       	andi	r25, 0x0F	; 15
    3a2a:	89 27       	eor	r24, r25
    3a2c:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <g_time_needed_for_ID>
    3a30:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <g_time_needed_for_ID+0x1>
    3a34:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3a38:	88 2f       	mov	r24, r24
    3a3a:	90 e0       	ldi	r25, 0x00	; 0
    3a3c:	29 2f       	mov	r18, r25
    3a3e:	2f 93       	push	r18
    3a40:	8f 93       	push	r24
    3a42:	8b ed       	ldi	r24, 0xDB	; 219
    3a44:	90 e4       	ldi	r25, 0x40	; 64
    3a46:	89 2f       	mov	r24, r25
    3a48:	8f 93       	push	r24
    3a4a:	8b ed       	ldi	r24, 0xDB	; 219
    3a4c:	90 e4       	ldi	r25, 0x40	; 64
    3a4e:	8f 93       	push	r24
    3a50:	84 ea       	ldi	r24, 0xA4	; 164
    3a52:	96 e4       	ldi	r25, 0x46	; 70
    3a54:	89 2f       	mov	r24, r25
    3a56:	8f 93       	push	r24
    3a58:	84 ea       	ldi	r24, 0xA4	; 164
    3a5a:	96 e4       	ldi	r25, 0x46	; 70
    3a5c:	8f 93       	push	r24
    3a5e:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3a62:	0f 90       	pop	r0
    3a64:	0f 90       	pop	r0
    3a66:	0f 90       	pop	r0
    3a68:	0f 90       	pop	r0
    3a6a:	0f 90       	pop	r0
    3a6c:	0f 90       	pop	r0
    3a6e:	09 c0       	rjmp	.+18     	; 0x3a82 <_Z19handleSerialBusMsgsv+0x78c>
    3a70:	85 e0       	ldi	r24, 0x05	; 5
    3a72:	ef ec       	ldi	r30, 0xCF	; 207
    3a74:	f0 e4       	ldi	r31, 0x40	; 64
    3a76:	a4 ea       	ldi	r26, 0xA4	; 164
    3a78:	b6 e4       	ldi	r27, 0x46	; 70
    3a7a:	01 90       	ld	r0, Z+
    3a7c:	0d 92       	st	X+, r0
    3a7e:	8a 95       	dec	r24
    3a80:	e1 f7       	brne	.-8      	; 0x3a7a <_Z19handleSerialBusMsgsv+0x784>
    3a82:	84 ea       	ldi	r24, 0xA4	; 164
    3a84:	96 e4       	ldi	r25, 0x46	; 70
    3a86:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3a8a:	00 c3       	rjmp	.+1536   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    3a8c:	8e 81       	ldd	r24, Y+6	; 0x06
    3a8e:	9f 81       	ldd	r25, Y+7	; 0x07
    3a90:	fc 01       	movw	r30, r24
    3a92:	83 81       	ldd	r24, Z+3	; 0x03
    3a94:	88 23       	and	r24, r24
    3a96:	51 f1       	breq	.+84     	; 0x3aec <_Z19handleSerialBusMsgsv+0x7f6>
    3a98:	8e 81       	ldd	r24, Y+6	; 0x06
    3a9a:	9f 81       	ldd	r25, Y+7	; 0x07
    3a9c:	03 96       	adiw	r24, 0x03	; 3
    3a9e:	48 e0       	ldi	r20, 0x08	; 8
    3aa0:	50 e0       	ldi	r21, 0x00	; 0
    3aa2:	bc 01       	movw	r22, r24
    3aa4:	84 ea       	ldi	r24, 0xA4	; 164
    3aa6:	96 e4       	ldi	r25, 0x46	; 70
    3aa8:	0e 94 38 75 	call	0xea70	; 0xea70 <strncpy>
    3aac:	10 92 ac 46 	sts	0x46AC, r1	; 0x8046ac <_ZL9g_tempStr+0x8>
    3ab0:	84 ea       	ldi	r24, 0xA4	; 164
    3ab2:	96 e4       	ldi	r25, 0x46	; 70
    3ab4:	0e 94 e6 6c 	call	0xd9cc	; 0xd9cc <_Z11only_digitsPc>
    3ab8:	88 23       	and	r24, r24
    3aba:	41 f0       	breq	.+16     	; 0x3acc <_Z19handleSerialBusMsgsv+0x7d6>
    3abc:	84 ea       	ldi	r24, 0xA4	; 164
    3abe:	96 e4       	ldi	r25, 0x46	; 70
    3ac0:	0e 94 2f 75 	call	0xea5e	; 0xea5e <strlen>
    3ac4:	04 97       	sbiw	r24, 0x04	; 4
    3ac6:	10 f0       	brcs	.+4      	; 0x3acc <_Z19handleSerialBusMsgsv+0x7d6>
    3ac8:	81 e0       	ldi	r24, 0x01	; 1
    3aca:	01 c0       	rjmp	.+2      	; 0x3ace <_Z19handleSerialBusMsgsv+0x7d8>
    3acc:	80 e0       	ldi	r24, 0x00	; 0
    3ace:	88 23       	and	r24, r24
    3ad0:	69 f0       	breq	.+26     	; 0x3aec <_Z19handleSerialBusMsgsv+0x7f6>
    3ad2:	64 ea       	ldi	r22, 0xA4	; 164
    3ad4:	76 e4       	ldi	r23, 0x46	; 70
    3ad6:	8e e3       	ldi	r24, 0x3E	; 62
    3ad8:	97 e4       	ldi	r25, 0x47	; 71
    3ada:	0e 94 28 75 	call	0xea50	; 0xea50 <strcpy>
    3ade:	4e e3       	ldi	r20, 0x3E	; 62
    3ae0:	57 e4       	ldi	r21, 0x47	; 71
    3ae2:	64 e3       	ldi	r22, 0x34	; 52
    3ae4:	8c e3       	ldi	r24, 0x3C	; 60
    3ae6:	97 e4       	ldi	r25, 0x47	; 71
    3ae8:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3aec:	8e e3       	ldi	r24, 0x3E	; 62
    3aee:	97 e4       	ldi	r25, 0x47	; 71
    3af0:	89 2f       	mov	r24, r25
    3af2:	8f 93       	push	r24
    3af4:	8e e3       	ldi	r24, 0x3E	; 62
    3af6:	97 e4       	ldi	r25, 0x47	; 71
    3af8:	8f 93       	push	r24
    3afa:	8d ee       	ldi	r24, 0xED	; 237
    3afc:	90 e4       	ldi	r25, 0x40	; 64
    3afe:	89 2f       	mov	r24, r25
    3b00:	8f 93       	push	r24
    3b02:	8d ee       	ldi	r24, 0xED	; 237
    3b04:	90 e4       	ldi	r25, 0x40	; 64
    3b06:	8f 93       	push	r24
    3b08:	84 ea       	ldi	r24, 0xA4	; 164
    3b0a:	96 e4       	ldi	r25, 0x46	; 70
    3b0c:	89 2f       	mov	r24, r25
    3b0e:	8f 93       	push	r24
    3b10:	84 ea       	ldi	r24, 0xA4	; 164
    3b12:	96 e4       	ldi	r25, 0x46	; 70
    3b14:	8f 93       	push	r24
    3b16:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3b1a:	0f 90       	pop	r0
    3b1c:	0f 90       	pop	r0
    3b1e:	0f 90       	pop	r0
    3b20:	0f 90       	pop	r0
    3b22:	0f 90       	pop	r0
    3b24:	0f 90       	pop	r0
    3b26:	84 ea       	ldi	r24, 0xA4	; 164
    3b28:	96 e4       	ldi	r25, 0x46	; 70
    3b2a:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3b2e:	ae c2       	rjmp	.+1372   	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    3b30:	1d 82       	std	Y+5, r1	; 0x05
    3b32:	80 e0       	ldi	r24, 0x00	; 0
    3b34:	90 e0       	ldi	r25, 0x00	; 0
    3b36:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    3b3a:	dc 01       	movw	r26, r24
    3b3c:	cb 01       	movw	r24, r22
    3b3e:	8a 8f       	std	Y+26, r24	; 0x1a
    3b40:	9b 8f       	std	Y+27, r25	; 0x1b
    3b42:	ac 8f       	std	Y+28, r26	; 0x1c
    3b44:	bd 8f       	std	Y+29, r27	; 0x1d
    3b46:	8e 81       	ldd	r24, Y+6	; 0x06
    3b48:	9f 81       	ldd	r25, Y+7	; 0x07
    3b4a:	fc 01       	movw	r30, r24
    3b4c:	83 81       	ldd	r24, Z+3	; 0x03
    3b4e:	88 23       	and	r24, r24
    3b50:	39 f0       	breq	.+14     	; 0x3b60 <_Z19handleSerialBusMsgsv+0x86a>
    3b52:	8e 81       	ldd	r24, Y+6	; 0x06
    3b54:	9f 81       	ldd	r25, Y+7	; 0x07
    3b56:	fc 01       	movw	r30, r24
    3b58:	83 81       	ldd	r24, Z+3	; 0x03
    3b5a:	84 35       	cpi	r24, 0x54	; 84
    3b5c:	09 f0       	breq	.+2      	; 0x3b60 <_Z19handleSerialBusMsgsv+0x86a>
    3b5e:	0f c1       	rjmp	.+542    	; 0x3d7e <_Z19handleSerialBusMsgsv+0xa88>
    3b60:	8e 81       	ldd	r24, Y+6	; 0x06
    3b62:	9f 81       	ldd	r25, Y+7	; 0x07
    3b64:	fc 01       	movw	r30, r24
    3b66:	87 89       	ldd	r24, Z+23	; 0x17
    3b68:	88 23       	and	r24, r24
    3b6a:	69 f0       	breq	.+26     	; 0x3b86 <_Z19handleSerialBusMsgsv+0x890>
    3b6c:	8e 81       	ldd	r24, Y+6	; 0x06
    3b6e:	9f 81       	ldd	r25, Y+7	; 0x07
    3b70:	47 96       	adiw	r24, 0x17	; 23
    3b72:	4c e0       	ldi	r20, 0x0C	; 12
    3b74:	50 e0       	ldi	r21, 0x00	; 0
    3b76:	bc 01       	movw	r22, r24
    3b78:	84 ea       	ldi	r24, 0xA4	; 164
    3b7a:	96 e4       	ldi	r25, 0x46	; 70
    3b7c:	0e 94 38 75 	call	0xea70	; 0xea70 <strncpy>
    3b80:	10 92 b0 46 	sts	0x46B0, r1	; 0x8046b0 <_ZL9g_tempStr+0xc>
    3b84:	f9 c0       	rjmp	.+498    	; 0x3d78 <_Z19handleSerialBusMsgsv+0xa82>
    3b86:	1e a2       	std	Y+38, r1	; 0x26
    3b88:	8e a1       	ldd	r24, Y+38	; 0x26
    3b8a:	88 23       	and	r24, r24
    3b8c:	51 f0       	breq	.+20     	; 0x3ba2 <_Z19handleSerialBusMsgsv+0x8ac>
    3b8e:	88 e2       	ldi	r24, 0x28	; 40
    3b90:	e5 ef       	ldi	r30, 0xF5	; 245
    3b92:	f0 e4       	ldi	r31, 0x40	; 64
    3b94:	a4 ea       	ldi	r26, 0xA4	; 164
    3b96:	b6 e4       	ldi	r27, 0x46	; 70
    3b98:	01 90       	ld	r0, Z+
    3b9a:	0d 92       	st	X+, r0
    3b9c:	8a 95       	dec	r24
    3b9e:	e1 f7       	brne	.-8      	; 0x3b98 <_Z19handleSerialBusMsgsv+0x8a2>
    3ba0:	eb c0       	rjmp	.+470    	; 0x3d78 <_Z19handleSerialBusMsgsv+0xa82>
    3ba2:	ae 01       	movw	r20, r28
    3ba4:	4c 59       	subi	r20, 0x9C	; 156
    3ba6:	5f 4f       	sbci	r21, 0xFF	; 255
    3ba8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3baa:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3bac:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3bae:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3bb0:	22 e3       	ldi	r18, 0x32	; 50
    3bb2:	30 e0       	ldi	r19, 0x00	; 0
    3bb4:	bc 01       	movw	r22, r24
    3bb6:	cd 01       	movw	r24, r26
    3bb8:	0e 94 03 35 	call	0x6a06	; 0x6a06 <_Z24convertEpochToTimeStringmPcj>
    3bbc:	29 2f       	mov	r18, r25
    3bbe:	2f 93       	push	r18
    3bc0:	8f 93       	push	r24
    3bc2:	8d e1       	ldi	r24, 0x1D	; 29
    3bc4:	91 e4       	ldi	r25, 0x41	; 65
    3bc6:	89 2f       	mov	r24, r25
    3bc8:	8f 93       	push	r24
    3bca:	8d e1       	ldi	r24, 0x1D	; 29
    3bcc:	91 e4       	ldi	r25, 0x41	; 65
    3bce:	8f 93       	push	r24
    3bd0:	84 ea       	ldi	r24, 0xA4	; 164
    3bd2:	96 e4       	ldi	r25, 0x46	; 70
    3bd4:	89 2f       	mov	r24, r25
    3bd6:	8f 93       	push	r24
    3bd8:	84 ea       	ldi	r24, 0xA4	; 164
    3bda:	96 e4       	ldi	r25, 0x46	; 70
    3bdc:	8f 93       	push	r24
    3bde:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3be2:	0f 90       	pop	r0
    3be4:	0f 90       	pop	r0
    3be6:	0f 90       	pop	r0
    3be8:	0f 90       	pop	r0
    3bea:	0f 90       	pop	r0
    3bec:	0f 90       	pop	r0
    3bee:	84 ea       	ldi	r24, 0xA4	; 164
    3bf0:	96 e4       	ldi	r25, 0x46	; 70
    3bf2:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3bf6:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    3bfa:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    3bfe:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    3c02:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    3c06:	ae 01       	movw	r20, r28
    3c08:	4c 59       	subi	r20, 0x9C	; 156
    3c0a:	5f 4f       	sbci	r21, 0xFF	; 255
    3c0c:	22 e3       	ldi	r18, 0x32	; 50
    3c0e:	30 e0       	ldi	r19, 0x00	; 0
    3c10:	bc 01       	movw	r22, r24
    3c12:	cd 01       	movw	r24, r26
    3c14:	0e 94 03 35 	call	0x6a06	; 0x6a06 <_Z24convertEpochToTimeStringmPcj>
    3c18:	29 2f       	mov	r18, r25
    3c1a:	2f 93       	push	r18
    3c1c:	8f 93       	push	r24
    3c1e:	89 e2       	ldi	r24, 0x29	; 41
    3c20:	91 e4       	ldi	r25, 0x41	; 65
    3c22:	89 2f       	mov	r24, r25
    3c24:	8f 93       	push	r24
    3c26:	89 e2       	ldi	r24, 0x29	; 41
    3c28:	91 e4       	ldi	r25, 0x41	; 65
    3c2a:	8f 93       	push	r24
    3c2c:	84 ea       	ldi	r24, 0xA4	; 164
    3c2e:	96 e4       	ldi	r25, 0x46	; 70
    3c30:	89 2f       	mov	r24, r25
    3c32:	8f 93       	push	r24
    3c34:	84 ea       	ldi	r24, 0xA4	; 164
    3c36:	96 e4       	ldi	r25, 0x46	; 70
    3c38:	8f 93       	push	r24
    3c3a:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3c3e:	0f 90       	pop	r0
    3c40:	0f 90       	pop	r0
    3c42:	0f 90       	pop	r0
    3c44:	0f 90       	pop	r0
    3c46:	0f 90       	pop	r0
    3c48:	0f 90       	pop	r0
    3c4a:	84 ea       	ldi	r24, 0xA4	; 164
    3c4c:	96 e4       	ldi	r25, 0x46	; 70
    3c4e:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3c52:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    3c56:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    3c5a:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    3c5e:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    3c62:	ae 01       	movw	r20, r28
    3c64:	4c 59       	subi	r20, 0x9C	; 156
    3c66:	5f 4f       	sbci	r21, 0xFF	; 255
    3c68:	22 e3       	ldi	r18, 0x32	; 50
    3c6a:	30 e0       	ldi	r19, 0x00	; 0
    3c6c:	bc 01       	movw	r22, r24
    3c6e:	cd 01       	movw	r24, r26
    3c70:	0e 94 03 35 	call	0x6a06	; 0x6a06 <_Z24convertEpochToTimeStringmPcj>
    3c74:	29 2f       	mov	r18, r25
    3c76:	2f 93       	push	r18
    3c78:	8f 93       	push	r24
    3c7a:	85 e3       	ldi	r24, 0x35	; 53
    3c7c:	91 e4       	ldi	r25, 0x41	; 65
    3c7e:	89 2f       	mov	r24, r25
    3c80:	8f 93       	push	r24
    3c82:	85 e3       	ldi	r24, 0x35	; 53
    3c84:	91 e4       	ldi	r25, 0x41	; 65
    3c86:	8f 93       	push	r24
    3c88:	84 ea       	ldi	r24, 0xA4	; 164
    3c8a:	96 e4       	ldi	r25, 0x46	; 70
    3c8c:	89 2f       	mov	r24, r25
    3c8e:	8f 93       	push	r24
    3c90:	84 ea       	ldi	r24, 0xA4	; 164
    3c92:	96 e4       	ldi	r25, 0x46	; 70
    3c94:	8f 93       	push	r24
    3c96:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3c9a:	0f 90       	pop	r0
    3c9c:	0f 90       	pop	r0
    3c9e:	0f 90       	pop	r0
    3ca0:	0f 90       	pop	r0
    3ca2:	0f 90       	pop	r0
    3ca4:	0f 90       	pop	r0
    3ca6:	84 ea       	ldi	r24, 0xA4	; 164
    3ca8:	96 e4       	ldi	r25, 0x46	; 70
    3caa:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    3cae:	0e 94 c1 32 	call	0x6582	; 0x6582 <_Z23clockConfigurationCheckv>
    3cb2:	8f a3       	std	Y+39, r24	; 0x27
    3cb4:	8f a1       	ldd	r24, Y+39	; 0x27
    3cb6:	81 30       	cpi	r24, 0x01	; 1
    3cb8:	31 f0       	breq	.+12     	; 0x3cc6 <_Z19handleSerialBusMsgsv+0x9d0>
    3cba:	8f a1       	ldd	r24, Y+39	; 0x27
    3cbc:	85 30       	cpi	r24, 0x05	; 5
    3cbe:	19 f0       	breq	.+6      	; 0x3cc6 <_Z19handleSerialBusMsgsv+0x9d0>
    3cc0:	0e 94 5b 33 	call	0x66b6	; 0x66b6 <_Z18reportConfigErrorsv>
    3cc4:	59 c0       	rjmp	.+178    	; 0x3d78 <_Z19handleSerialBusMsgsv+0xa82>
    3cc6:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    3cca:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    3cce:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    3cd2:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    3cd6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3cd8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3cda:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3cdc:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3cde:	0f 2e       	mov	r0, r31
    3ce0:	f1 e4       	ldi	r31, 0x41	; 65
    3ce2:	ef 2e       	mov	r14, r31
    3ce4:	f1 e4       	ldi	r31, 0x41	; 65
    3ce6:	ff 2e       	mov	r15, r31
    3ce8:	f0 2d       	mov	r31, r0
    3cea:	0e e4       	ldi	r16, 0x4E	; 78
    3cec:	11 e4       	ldi	r17, 0x41	; 65
    3cee:	bc 01       	movw	r22, r24
    3cf0:	cd 01       	movw	r24, r26
    3cf2:	0e 94 1f 31 	call	0x623e	; 0x623e <_Z14reportTimeTillmmPKcS0_>
    3cf6:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    3cfa:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    3cfe:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    3d02:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    3d06:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    3d0a:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    3d0e:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    3d12:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    3d16:	e1 2c       	mov	r14, r1
    3d18:	f1 2c       	mov	r15, r1
    3d1a:	0a e5       	ldi	r16, 0x5A	; 90
    3d1c:	11 e4       	ldi	r17, 0x41	; 65
    3d1e:	bc 01       	movw	r22, r24
    3d20:	cd 01       	movw	r24, r26
    3d22:	0e 94 1f 31 	call	0x623e	; 0x623e <_Z14reportTimeTillmmPKcS0_>
    3d26:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    3d2a:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    3d2e:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    3d32:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    3d36:	61 e0       	ldi	r22, 0x01	; 1
    3d38:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3d3a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3d3c:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3d3e:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3d40:	28 17       	cp	r18, r24
    3d42:	39 07       	cpc	r19, r25
    3d44:	4a 07       	cpc	r20, r26
    3d46:	5b 07       	cpc	r21, r27
    3d48:	08 f0       	brcs	.+2      	; 0x3d4c <_Z19handleSerialBusMsgsv+0xa56>
    3d4a:	60 e0       	ldi	r22, 0x00	; 0
    3d4c:	66 23       	and	r22, r22
    3d4e:	a1 f0       	breq	.+40     	; 0x3d78 <_Z19handleSerialBusMsgsv+0xa82>
    3d50:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    3d54:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    3d58:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    3d5c:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    3d60:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3d62:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3d64:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3d66:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3d68:	e1 2c       	mov	r14, r1
    3d6a:	f1 2c       	mov	r15, r1
    3d6c:	02 e6       	ldi	r16, 0x62	; 98
    3d6e:	11 e4       	ldi	r17, 0x41	; 65
    3d70:	bc 01       	movw	r22, r24
    3d72:	cd 01       	movw	r24, r26
    3d74:	0e 94 1f 31 	call	0x623e	; 0x623e <_Z14reportTimeTillmmPKcS0_>
    3d78:	81 e0       	ldi	r24, 0x01	; 1
    3d7a:	8d 83       	std	Y+5, r24	; 0x05
    3d7c:	61 c1       	rjmp	.+706    	; 0x4040 <__DATA_REGION_LENGTH__+0x40>
    3d7e:	8e 81       	ldd	r24, Y+6	; 0x06
    3d80:	9f 81       	ldd	r25, Y+7	; 0x07
    3d82:	fc 01       	movw	r30, r24
    3d84:	83 81       	ldd	r24, Z+3	; 0x03
    3d86:	83 35       	cpi	r24, 0x53	; 83
    3d88:	09 f0       	breq	.+2      	; 0x3d8c <_Z19handleSerialBusMsgsv+0xa96>
    3d8a:	d8 c0       	rjmp	.+432    	; 0x3f3c <_Z19handleSerialBusMsgsv+0xc46>
    3d8c:	8e 81       	ldd	r24, Y+6	; 0x06
    3d8e:	9f 81       	ldd	r25, Y+7	; 0x07
    3d90:	47 96       	adiw	r24, 0x17	; 23
    3d92:	bc 01       	movw	r22, r24
    3d94:	84 ea       	ldi	r24, 0xA4	; 164
    3d96:	96 e4       	ldi	r25, 0x46	; 70
    3d98:	0e 94 28 75 	call	0xea50	; 0xea50 <strcpy>
    3d9c:	80 91 3d 47 	lds	r24, 0x473D	; 0x80473d <g_utc_offset>
    3da0:	81 95       	neg	r24
    3da2:	48 2f       	mov	r20, r24
    3da4:	67 e1       	ldi	r22, 0x17	; 23
    3da6:	77 e4       	ldi	r23, 0x47	; 71
    3da8:	84 ea       	ldi	r24, 0xA4	; 164
    3daa:	96 e4       	ldi	r25, 0x46	; 70
    3dac:	0e 94 e9 2f 	call	0x5fd2	; 0x5fd2 <_Z18validateTimeStringPcPma>
    3db0:	dc 01       	movw	r26, r24
    3db2:	cb 01       	movw	r24, r22
    3db4:	8e 8f       	std	Y+30, r24	; 0x1e
    3db6:	9f 8f       	std	Y+31, r25	; 0x1f
    3db8:	a8 a3       	std	Y+32, r26	; 0x20
    3dba:	b9 a3       	std	Y+33, r27	; 0x21
    3dbc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3dbe:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3dc0:	a8 a1       	ldd	r26, Y+32	; 0x20
    3dc2:	b9 a1       	ldd	r27, Y+33	; 0x21
    3dc4:	89 2b       	or	r24, r25
    3dc6:	8a 2b       	or	r24, r26
    3dc8:	8b 2b       	or	r24, r27
    3dca:	09 f4       	brne	.+2      	; 0x3dce <_Z19handleSerialBusMsgsv+0xad8>
    3dcc:	8a c0       	rjmp	.+276    	; 0x3ee2 <_Z19handleSerialBusMsgsv+0xbec>
    3dce:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3dd0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3dd2:	a8 a1       	ldd	r26, Y+32	; 0x20
    3dd4:	b9 a1       	ldd	r27, Y+33	; 0x21
    3dd6:	80 93 17 47 	sts	0x4717, r24	; 0x804717 <g_event_start_epoch>
    3dda:	90 93 18 47 	sts	0x4718, r25	; 0x804718 <g_event_start_epoch+0x1>
    3dde:	a0 93 19 47 	sts	0x4719, r26	; 0x804719 <g_event_start_epoch+0x2>
    3de2:	b0 93 1a 47 	sts	0x471A, r27	; 0x80471a <g_event_start_epoch+0x3>
    3de6:	47 e1       	ldi	r20, 0x17	; 23
    3de8:	57 e4       	ldi	r21, 0x47	; 71
    3dea:	62 e0       	ldi	r22, 0x02	; 2
    3dec:	8c e3       	ldi	r24, 0x3C	; 60
    3dee:	97 e4       	ldi	r25, 0x47	; 71
    3df0:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3df4:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    3df8:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    3dfc:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    3e00:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    3e04:	9e 01       	movw	r18, r28
    3e06:	24 5a       	subi	r18, 0xA4	; 164
    3e08:	3f 4f       	sbci	r19, 0xFF	; 255
    3e0a:	f9 01       	movw	r30, r18
    3e0c:	80 83       	st	Z, r24
    3e0e:	91 83       	std	Z+1, r25	; 0x01
    3e10:	a2 83       	std	Z+2, r26	; 0x02
    3e12:	b3 83       	std	Z+3, r27	; 0x03
    3e14:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    3e18:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    3e1c:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    3e20:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    3e24:	80 58       	subi	r24, 0x80	; 128
    3e26:	9e 4a       	sbci	r25, 0xAE	; 174
    3e28:	ae 4f       	sbci	r26, 0xFE	; 254
    3e2a:	bf 4f       	sbci	r27, 0xFF	; 255
    3e2c:	9e 01       	movw	r18, r28
    3e2e:	20 5a       	subi	r18, 0xA0	; 160
    3e30:	3f 4f       	sbci	r19, 0xFF	; 255
    3e32:	f9 01       	movw	r30, r18
    3e34:	80 83       	st	Z, r24
    3e36:	91 83       	std	Z+1, r25	; 0x01
    3e38:	a2 83       	std	Z+2, r26	; 0x02
    3e3a:	b3 83       	std	Z+3, r27	; 0x03
    3e3c:	ce 01       	movw	r24, r28
    3e3e:	84 5a       	subi	r24, 0xA4	; 164
    3e40:	9f 4f       	sbci	r25, 0xFF	; 255
    3e42:	fc 01       	movw	r30, r24
    3e44:	20 81       	ld	r18, Z
    3e46:	31 81       	ldd	r19, Z+1	; 0x01
    3e48:	42 81       	ldd	r20, Z+2	; 0x02
    3e4a:	53 81       	ldd	r21, Z+3	; 0x03
    3e4c:	ce 01       	movw	r24, r28
    3e4e:	80 5a       	subi	r24, 0xA0	; 160
    3e50:	9f 4f       	sbci	r25, 0xFF	; 255
    3e52:	fc 01       	movw	r30, r24
    3e54:	80 81       	ld	r24, Z
    3e56:	91 81       	ldd	r25, Z+1	; 0x01
    3e58:	a2 81       	ldd	r26, Z+2	; 0x02
    3e5a:	b3 81       	ldd	r27, Z+3	; 0x03
    3e5c:	28 17       	cp	r18, r24
    3e5e:	39 07       	cpc	r19, r25
    3e60:	4a 07       	cpc	r20, r26
    3e62:	5b 07       	cpc	r21, r27
    3e64:	48 f4       	brcc	.+18     	; 0x3e78 <_Z19handleSerialBusMsgsv+0xb82>
    3e66:	ce 01       	movw	r24, r28
    3e68:	80 5a       	subi	r24, 0xA0	; 160
    3e6a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e6c:	fc 01       	movw	r30, r24
    3e6e:	80 81       	ld	r24, Z
    3e70:	91 81       	ldd	r25, Z+1	; 0x01
    3e72:	a2 81       	ldd	r26, Z+2	; 0x02
    3e74:	b3 81       	ldd	r27, Z+3	; 0x03
    3e76:	08 c0       	rjmp	.+16     	; 0x3e88 <_Z19handleSerialBusMsgsv+0xb92>
    3e78:	ce 01       	movw	r24, r28
    3e7a:	84 5a       	subi	r24, 0xA4	; 164
    3e7c:	9f 4f       	sbci	r25, 0xFF	; 255
    3e7e:	fc 01       	movw	r30, r24
    3e80:	80 81       	ld	r24, Z
    3e82:	91 81       	ldd	r25, Z+1	; 0x01
    3e84:	a2 81       	ldd	r26, Z+2	; 0x02
    3e86:	b3 81       	ldd	r27, Z+3	; 0x03
    3e88:	80 93 1b 47 	sts	0x471B, r24	; 0x80471b <g_event_finish_epoch>
    3e8c:	90 93 1c 47 	sts	0x471C, r25	; 0x80471c <g_event_finish_epoch+0x1>
    3e90:	a0 93 1d 47 	sts	0x471D, r26	; 0x80471d <g_event_finish_epoch+0x2>
    3e94:	b0 93 1e 47 	sts	0x471E, r27	; 0x80471e <g_event_finish_epoch+0x3>
    3e98:	4b e1       	ldi	r20, 0x1B	; 27
    3e9a:	57 e4       	ldi	r21, 0x47	; 71
    3e9c:	66 e0       	ldi	r22, 0x06	; 6
    3e9e:	8c e3       	ldi	r24, 0x3C	; 60
    3ea0:	97 e4       	ldi	r25, 0x47	; 71
    3ea2:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3ea6:	63 e0       	ldi	r22, 0x03	; 3
    3ea8:	80 e0       	ldi	r24, 0x00	; 0
    3eaa:	90 e0       	ldi	r25, 0x00	; 0
    3eac:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    3eb0:	80 e0       	ldi	r24, 0x00	; 0
    3eb2:	90 e0       	ldi	r25, 0x00	; 0
    3eb4:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    3eb8:	9b 01       	movw	r18, r22
    3eba:	ac 01       	movw	r20, r24
    3ebc:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    3ec0:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    3ec4:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    3ec8:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    3ecc:	61 e0       	ldi	r22, 0x01	; 1
    3ece:	28 17       	cp	r18, r24
    3ed0:	39 07       	cpc	r19, r25
    3ed2:	4a 07       	cpc	r20, r26
    3ed4:	5b 07       	cpc	r21, r27
    3ed6:	08 f0       	brcs	.+2      	; 0x3eda <_Z19handleSerialBusMsgsv+0xbe4>
    3ed8:	60 e0       	ldi	r22, 0x00	; 0
    3eda:	66 23       	and	r22, r22
    3edc:	11 f0       	breq	.+4      	; 0x3ee2 <_Z19handleSerialBusMsgsv+0xbec>
    3ede:	0e 94 9e 2c 	call	0x593c	; 0x593c <_Z18startEventUsingRTCv>
    3ee2:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    3ee6:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    3eea:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    3eee:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    3ef2:	ae 01       	movw	r20, r28
    3ef4:	4c 59       	subi	r20, 0x9C	; 156
    3ef6:	5f 4f       	sbci	r21, 0xFF	; 255
    3ef8:	22 e3       	ldi	r18, 0x32	; 50
    3efa:	30 e0       	ldi	r19, 0x00	; 0
    3efc:	bc 01       	movw	r22, r24
    3efe:	cd 01       	movw	r24, r26
    3f00:	0e 94 03 35 	call	0x6a06	; 0x6a06 <_Z24convertEpochToTimeStringmPcj>
    3f04:	29 2f       	mov	r18, r25
    3f06:	2f 93       	push	r18
    3f08:	8f 93       	push	r24
    3f0a:	83 e7       	ldi	r24, 0x73	; 115
    3f0c:	91 e4       	ldi	r25, 0x41	; 65
    3f0e:	89 2f       	mov	r24, r25
    3f10:	8f 93       	push	r24
    3f12:	83 e7       	ldi	r24, 0x73	; 115
    3f14:	91 e4       	ldi	r25, 0x41	; 65
    3f16:	8f 93       	push	r24
    3f18:	84 ea       	ldi	r24, 0xA4	; 164
    3f1a:	96 e4       	ldi	r25, 0x46	; 70
    3f1c:	89 2f       	mov	r24, r25
    3f1e:	8f 93       	push	r24
    3f20:	84 ea       	ldi	r24, 0xA4	; 164
    3f22:	96 e4       	ldi	r25, 0x46	; 70
    3f24:	8f 93       	push	r24
    3f26:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    3f2a:	0f 90       	pop	r0
    3f2c:	0f 90       	pop	r0
    3f2e:	0f 90       	pop	r0
    3f30:	0f 90       	pop	r0
    3f32:	0f 90       	pop	r0
    3f34:	0f 90       	pop	r0
    3f36:	81 e0       	ldi	r24, 0x01	; 1
    3f38:	8d 83       	std	Y+5, r24	; 0x05
    3f3a:	82 c0       	rjmp	.+260    	; 0x4040 <__DATA_REGION_LENGTH__+0x40>
    3f3c:	8e 81       	ldd	r24, Y+6	; 0x06
    3f3e:	9f 81       	ldd	r25, Y+7	; 0x07
    3f40:	fc 01       	movw	r30, r24
    3f42:	83 81       	ldd	r24, Z+3	; 0x03
    3f44:	86 34       	cpi	r24, 0x46	; 70
    3f46:	09 f0       	breq	.+2      	; 0x3f4a <_Z19handleSerialBusMsgsv+0xc54>
    3f48:	7b c0       	rjmp	.+246    	; 0x4040 <__DATA_REGION_LENGTH__+0x40>
    3f4a:	8e 81       	ldd	r24, Y+6	; 0x06
    3f4c:	9f 81       	ldd	r25, Y+7	; 0x07
    3f4e:	47 96       	adiw	r24, 0x17	; 23
    3f50:	bc 01       	movw	r22, r24
    3f52:	84 ea       	ldi	r24, 0xA4	; 164
    3f54:	96 e4       	ldi	r25, 0x46	; 70
    3f56:	0e 94 28 75 	call	0xea50	; 0xea50 <strcpy>
    3f5a:	80 91 3d 47 	lds	r24, 0x473D	; 0x80473d <g_utc_offset>
    3f5e:	81 95       	neg	r24
    3f60:	48 2f       	mov	r20, r24
    3f62:	6b e1       	ldi	r22, 0x1B	; 27
    3f64:	77 e4       	ldi	r23, 0x47	; 71
    3f66:	84 ea       	ldi	r24, 0xA4	; 164
    3f68:	96 e4       	ldi	r25, 0x46	; 70
    3f6a:	0e 94 e9 2f 	call	0x5fd2	; 0x5fd2 <_Z18validateTimeStringPcPma>
    3f6e:	dc 01       	movw	r26, r24
    3f70:	cb 01       	movw	r24, r22
    3f72:	8a a3       	std	Y+34, r24	; 0x22
    3f74:	9b a3       	std	Y+35, r25	; 0x23
    3f76:	ac a3       	std	Y+36, r26	; 0x24
    3f78:	bd a3       	std	Y+37, r27	; 0x25
    3f7a:	8a a1       	ldd	r24, Y+34	; 0x22
    3f7c:	9b a1       	ldd	r25, Y+35	; 0x23
    3f7e:	ac a1       	ldd	r26, Y+36	; 0x24
    3f80:	bd a1       	ldd	r27, Y+37	; 0x25
    3f82:	89 2b       	or	r24, r25
    3f84:	8a 2b       	or	r24, r26
    3f86:	8b 2b       	or	r24, r27
    3f88:	79 f1       	breq	.+94     	; 0x3fe8 <_Z19handleSerialBusMsgsv+0xcf2>
    3f8a:	8a a1       	ldd	r24, Y+34	; 0x22
    3f8c:	9b a1       	ldd	r25, Y+35	; 0x23
    3f8e:	ac a1       	ldd	r26, Y+36	; 0x24
    3f90:	bd a1       	ldd	r27, Y+37	; 0x25
    3f92:	80 93 1b 47 	sts	0x471B, r24	; 0x80471b <g_event_finish_epoch>
    3f96:	90 93 1c 47 	sts	0x471C, r25	; 0x80471c <g_event_finish_epoch+0x1>
    3f9a:	a0 93 1d 47 	sts	0x471D, r26	; 0x80471d <g_event_finish_epoch+0x2>
    3f9e:	b0 93 1e 47 	sts	0x471E, r27	; 0x80471e <g_event_finish_epoch+0x3>
    3fa2:	4b e1       	ldi	r20, 0x1B	; 27
    3fa4:	57 e4       	ldi	r21, 0x47	; 71
    3fa6:	66 e0       	ldi	r22, 0x06	; 6
    3fa8:	8c e3       	ldi	r24, 0x3C	; 60
    3faa:	97 e4       	ldi	r25, 0x47	; 71
    3fac:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3fb0:	63 e0       	ldi	r22, 0x03	; 3
    3fb2:	80 e0       	ldi	r24, 0x00	; 0
    3fb4:	90 e0       	ldi	r25, 0x00	; 0
    3fb6:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    3fba:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    3fbe:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    3fc2:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    3fc6:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    3fca:	61 e0       	ldi	r22, 0x01	; 1
    3fcc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3fce:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3fd0:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3fd2:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3fd4:	82 17       	cp	r24, r18
    3fd6:	93 07       	cpc	r25, r19
    3fd8:	a4 07       	cpc	r26, r20
    3fda:	b5 07       	cpc	r27, r21
    3fdc:	08 f0       	brcs	.+2      	; 0x3fe0 <_Z19handleSerialBusMsgsv+0xcea>
    3fde:	60 e0       	ldi	r22, 0x00	; 0
    3fe0:	66 23       	and	r22, r22
    3fe2:	11 f0       	breq	.+4      	; 0x3fe8 <_Z19handleSerialBusMsgsv+0xcf2>
    3fe4:	0e 94 9e 2c 	call	0x593c	; 0x593c <_Z18startEventUsingRTCv>
    3fe8:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    3fec:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    3ff0:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    3ff4:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    3ff8:	ae 01       	movw	r20, r28
    3ffa:	4c 59       	subi	r20, 0x9C	; 156
    3ffc:	5f 4f       	sbci	r21, 0xFF	; 255
    3ffe:	22 e3       	ldi	r18, 0x32	; 50
    4000:	30 e0       	ldi	r19, 0x00	; 0
    4002:	bc 01       	movw	r22, r24
    4004:	cd 01       	movw	r24, r26
    4006:	0e 94 03 35 	call	0x6a06	; 0x6a06 <_Z24convertEpochToTimeStringmPcj>
    400a:	29 2f       	mov	r18, r25
    400c:	2f 93       	push	r18
    400e:	8f 93       	push	r24
    4010:	85 e3       	ldi	r24, 0x35	; 53
    4012:	91 e4       	ldi	r25, 0x41	; 65
    4014:	89 2f       	mov	r24, r25
    4016:	8f 93       	push	r24
    4018:	85 e3       	ldi	r24, 0x35	; 53
    401a:	91 e4       	ldi	r25, 0x41	; 65
    401c:	8f 93       	push	r24
    401e:	84 ea       	ldi	r24, 0xA4	; 164
    4020:	96 e4       	ldi	r25, 0x46	; 70
    4022:	89 2f       	mov	r24, r25
    4024:	8f 93       	push	r24
    4026:	84 ea       	ldi	r24, 0xA4	; 164
    4028:	96 e4       	ldi	r25, 0x46	; 70
    402a:	8f 93       	push	r24
    402c:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    4030:	0f 90       	pop	r0
    4032:	0f 90       	pop	r0
    4034:	0f 90       	pop	r0
    4036:	0f 90       	pop	r0
    4038:	0f 90       	pop	r0
    403a:	0f 90       	pop	r0
    403c:	81 e0       	ldi	r24, 0x01	; 1
    403e:	8d 83       	std	Y+5, r24	; 0x05
    4040:	8d 81       	ldd	r24, Y+5	; 0x05
    4042:	88 23       	and	r24, r24
    4044:	01 f1       	breq	.+64     	; 0x4086 <__DATA_REGION_LENGTH__+0x86>
    4046:	84 ea       	ldi	r24, 0xA4	; 164
    4048:	96 e4       	ldi	r25, 0x46	; 70
    404a:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    404e:	1b c0       	rjmp	.+54     	; 0x4086 <__DATA_REGION_LENGTH__+0x86>
    4050:	8e 81       	ldd	r24, Y+6	; 0x06
    4052:	9f 81       	ldd	r25, Y+7	; 0x07
    4054:	fc 01       	movw	r30, r24
    4056:	83 81       	ldd	r24, Z+3	; 0x03
    4058:	83 34       	cpi	r24, 0x43	; 67
    405a:	b9 f4       	brne	.+46     	; 0x408a <__DATA_REGION_LENGTH__+0x8a>
    405c:	8e 81       	ldd	r24, Y+6	; 0x06
    405e:	9f 81       	ldd	r25, Y+7	; 0x07
    4060:	fc 01       	movw	r30, r24
    4062:	87 89       	ldd	r24, Z+23	; 0x17
    4064:	88 23       	and	r24, r24
    4066:	89 f0       	breq	.+34     	; 0x408a <__DATA_REGION_LENGTH__+0x8a>
    4068:	8e 81       	ldd	r24, Y+6	; 0x06
    406a:	9f 81       	ldd	r25, Y+7	; 0x07
    406c:	47 96       	adiw	r24, 0x17	; 23
    406e:	0e 94 b5 74 	call	0xe96a	; 0xe96a <atoi>
    4072:	88 a7       	std	Y+40, r24	; 0x28
    4074:	99 a7       	std	Y+41, r25	; 0x29
    4076:	09 c0       	rjmp	.+18     	; 0x408a <__DATA_REGION_LENGTH__+0x8a>
    4078:	8e e7       	ldi	r24, 0x7E	; 126
    407a:	91 e4       	ldi	r25, 0x41	; 65
    407c:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    4080:	05 c0       	rjmp	.+10     	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    4082:	00 00       	nop
    4084:	03 c0       	rjmp	.+6      	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    4086:	00 00       	nop
    4088:	01 c0       	rjmp	.+2      	; 0x408c <__DATA_REGION_LENGTH__+0x8c>
    408a:	00 00       	nop
    408c:	8e 81       	ldd	r24, Y+6	; 0x06
    408e:	9f 81       	ldd	r25, Y+7	; 0x07
    4090:	fc 01       	movw	r30, r24
    4092:	11 82       	std	Z+1, r1	; 0x01
    4094:	12 82       	std	Z+2, r1	; 0x02
    4096:	0e 94 cb 59 	call	0xb396	; 0xb396 <sb_send_NewPrompt>
    409a:	39 c9       	rjmp	.-3470   	; 0x330e <_Z19handleSerialBusMsgsv+0x18>
    409c:	00 00       	nop
    409e:	cb 56       	subi	r28, 0x6B	; 107
    40a0:	df 4f       	sbci	r29, 0xFF	; 255
    40a2:	cd bf       	out	0x3d, r28	; 61
    40a4:	de bf       	out	0x3e, r29	; 62
    40a6:	df 91       	pop	r29
    40a8:	cf 91       	pop	r28
    40aa:	1f 91       	pop	r17
    40ac:	0f 91       	pop	r16
    40ae:	ff 90       	pop	r15
    40b0:	ef 90       	pop	r14
    40b2:	08 95       	ret

000040b4 <_Z17handleLinkBusMsgsv>:
    40b4:	0f 93       	push	r16
    40b6:	1f 93       	push	r17
    40b8:	cf 93       	push	r28
    40ba:	df 93       	push	r29
    40bc:	cd b7       	in	r28, 0x3d	; 61
    40be:	de b7       	in	r29, 0x3e	; 62
    40c0:	e6 97       	sbiw	r28, 0x36	; 54
    40c2:	cd bf       	out	0x3d, r28	; 61
    40c4:	de bf       	out	0x3e, r29	; 62
    40c6:	81 e0       	ldi	r24, 0x01	; 1
    40c8:	89 83       	std	Y+1, r24	; 0x01
    40ca:	0e 94 fe 4e 	call	0x9dfc	; 0x9dfc <_Z18nextFullLBRxBufferv>
    40ce:	8c 87       	std	Y+12, r24	; 0x0c
    40d0:	9d 87       	std	Y+13, r25	; 0x0d
    40d2:	21 e0       	ldi	r18, 0x01	; 1
    40d4:	8c 85       	ldd	r24, Y+12	; 0x0c
    40d6:	9d 85       	ldd	r25, Y+13	; 0x0d
    40d8:	89 2b       	or	r24, r25
    40da:	09 f4       	brne	.+2      	; 0x40de <_Z17handleLinkBusMsgsv+0x2a>
    40dc:	20 e0       	ldi	r18, 0x00	; 0
    40de:	22 23       	and	r18, r18
    40e0:	09 f4       	brne	.+2      	; 0x40e4 <_Z17handleLinkBusMsgsv+0x30>
    40e2:	9b c7       	rjmp	.+3894   	; 0x501a <_Z17handleLinkBusMsgsv+0xf66>
    40e4:	8c 85       	ldd	r24, Y+12	; 0x0c
    40e6:	9d 85       	ldd	r25, Y+13	; 0x0d
    40e8:	fc 01       	movw	r30, r24
    40ea:	81 81       	ldd	r24, Z+1	; 0x01
    40ec:	92 81       	ldd	r25, Z+2	; 0x02
    40ee:	8e 87       	std	Y+14, r24	; 0x0e
    40f0:	9f 87       	std	Y+15, r25	; 0x0f
    40f2:	8e 85       	ldd	r24, Y+14	; 0x0e
    40f4:	9f 85       	ldd	r25, Y+15	; 0x0f
    40f6:	81 3d       	cpi	r24, 0xD1	; 209
    40f8:	fe e1       	ldi	r31, 0x1E	; 30
    40fa:	9f 07       	cpc	r25, r31
    40fc:	09 f4       	brne	.+2      	; 0x4100 <_Z17handleLinkBusMsgsv+0x4c>
    40fe:	73 c6       	rjmp	.+3302   	; 0x4de6 <_Z17handleLinkBusMsgsv+0xd32>
    4100:	82 3d       	cpi	r24, 0xD2	; 210
    4102:	2e e1       	ldi	r18, 0x1E	; 30
    4104:	92 07       	cpc	r25, r18
    4106:	08 f0       	brcs	.+2      	; 0x410a <_Z17handleLinkBusMsgsv+0x56>
    4108:	3d c0       	rjmp	.+122    	; 0x4184 <_Z17handleLinkBusMsgsv+0xd0>
    410a:	84 38       	cpi	r24, 0x84	; 132
    410c:	e3 e0       	ldi	r30, 0x03	; 3
    410e:	9e 07       	cpc	r25, r30
    4110:	09 f4       	brne	.+2      	; 0x4114 <_Z17handleLinkBusMsgsv+0x60>
    4112:	05 c3       	rjmp	.+1546   	; 0x471e <_Z17handleLinkBusMsgsv+0x66a>
    4114:	85 38       	cpi	r24, 0x85	; 133
    4116:	f3 e0       	ldi	r31, 0x03	; 3
    4118:	9f 07       	cpc	r25, r31
    411a:	d0 f4       	brcc	.+52     	; 0x4150 <_Z17handleLinkBusMsgsv+0x9c>
    411c:	85 31       	cpi	r24, 0x15	; 21
    411e:	23 e0       	ldi	r18, 0x03	; 3
    4120:	92 07       	cpc	r25, r18
    4122:	09 f4       	brne	.+2      	; 0x4126 <_Z17handleLinkBusMsgsv+0x72>
    4124:	1c c2       	rjmp	.+1080   	; 0x455e <_Z17handleLinkBusMsgsv+0x4aa>
    4126:	86 31       	cpi	r24, 0x16	; 22
    4128:	e3 e0       	ldi	r30, 0x03	; 3
    412a:	9e 07       	cpc	r25, r30
    412c:	30 f4       	brcc	.+12     	; 0x413a <_Z17handleLinkBusMsgsv+0x86>
    412e:	84 35       	cpi	r24, 0x54	; 84
    4130:	91 05       	cpc	r25, r1
    4132:	09 f4       	brne	.+2      	; 0x4136 <_Z17handleLinkBusMsgsv+0x82>
    4134:	4b c5       	rjmp	.+2710   	; 0x4bcc <_Z17handleLinkBusMsgsv+0xb18>
    4136:	0c 94 e3 27 	jmp	0x4fc6	; 0x4fc6 <_Z17handleLinkBusMsgsv+0xf12>
    413a:	8e 31       	cpi	r24, 0x1E	; 30
    413c:	f3 e0       	ldi	r31, 0x03	; 3
    413e:	9f 07       	cpc	r25, r31
    4140:	09 f4       	brne	.+2      	; 0x4144 <_Z17handleLinkBusMsgsv+0x90>
    4142:	d2 c3       	rjmp	.+1956   	; 0x48e8 <_Z17handleLinkBusMsgsv+0x834>
    4144:	81 36       	cpi	r24, 0x61	; 97
    4146:	93 40       	sbci	r25, 0x03	; 3
    4148:	09 f4       	brne	.+2      	; 0x414c <_Z17handleLinkBusMsgsv+0x98>
    414a:	23 c6       	rjmp	.+3142   	; 0x4d92 <_Z17handleLinkBusMsgsv+0xcde>
    414c:	0c 94 e3 27 	jmp	0x4fc6	; 0x4fc6 <_Z17handleLinkBusMsgsv+0xf12>
    4150:	86 3a       	cpi	r24, 0xA6	; 166
    4152:	ec e1       	ldi	r30, 0x1C	; 28
    4154:	9e 07       	cpc	r25, r30
    4156:	09 f4       	brne	.+2      	; 0x415a <_Z17handleLinkBusMsgsv+0xa6>
    4158:	c3 c6       	rjmp	.+3462   	; 0x4ee0 <_Z17handleLinkBusMsgsv+0xe2c>
    415a:	87 3a       	cpi	r24, 0xA7	; 167
    415c:	fc e1       	ldi	r31, 0x1C	; 28
    415e:	9f 07       	cpc	r25, r31
    4160:	30 f4       	brcc	.+12     	; 0x416e <_Z17handleLinkBusMsgsv+0xba>
    4162:	8f 3a       	cpi	r24, 0xAF	; 175
    4164:	93 40       	sbci	r25, 0x03	; 3
    4166:	09 f4       	brne	.+2      	; 0x416a <_Z17handleLinkBusMsgsv+0xb6>
    4168:	46 c0       	rjmp	.+140    	; 0x41f6 <_Z17handleLinkBusMsgsv+0x142>
    416a:	0c 94 e3 27 	jmp	0x4fc6	; 0x4fc6 <_Z17handleLinkBusMsgsv+0xf12>
    416e:	88 31       	cpi	r24, 0x18	; 24
    4170:	ed e1       	ldi	r30, 0x1D	; 29
    4172:	9e 07       	cpc	r25, r30
    4174:	09 f4       	brne	.+2      	; 0x4178 <_Z17handleLinkBusMsgsv+0xc4>
    4176:	2d c7       	rjmp	.+3674   	; 0x4fd2 <_Z17handleLinkBusMsgsv+0xf1e>
    4178:	82 38       	cpi	r24, 0x82	; 130
    417a:	9e 41       	sbci	r25, 0x1E	; 30
    417c:	09 f4       	brne	.+2      	; 0x4180 <_Z17handleLinkBusMsgsv+0xcc>
    417e:	08 c1       	rjmp	.+528    	; 0x4390 <_Z17handleLinkBusMsgsv+0x2dc>
    4180:	0c 94 e3 27 	jmp	0x4fc6	; 0x4fc6 <_Z17handleLinkBusMsgsv+0xf12>
    4184:	8a 39       	cpi	r24, 0x9A	; 154
    4186:	23 e2       	ldi	r18, 0x23	; 35
    4188:	92 07       	cpc	r25, r18
    418a:	09 f4       	brne	.+2      	; 0x418e <_Z17handleLinkBusMsgsv+0xda>
    418c:	fd c0       	rjmp	.+506    	; 0x4388 <_Z17handleLinkBusMsgsv+0x2d4>
    418e:	8b 39       	cpi	r24, 0x9B	; 155
    4190:	e3 e2       	ldi	r30, 0x23	; 35
    4192:	9e 07       	cpc	r25, r30
    4194:	c0 f4       	brcc	.+48     	; 0x41c6 <_Z17handleLinkBusMsgsv+0x112>
    4196:	8e 36       	cpi	r24, 0x6E	; 110
    4198:	f1 e2       	ldi	r31, 0x21	; 33
    419a:	9f 07       	cpc	r25, r31
    419c:	09 f4       	brne	.+2      	; 0x41a0 <_Z17handleLinkBusMsgsv+0xec>
    419e:	19 c7       	rjmp	.+3634   	; 0x4fd2 <_Z17handleLinkBusMsgsv+0xf1e>
    41a0:	8f 36       	cpi	r24, 0x6F	; 111
    41a2:	21 e2       	ldi	r18, 0x21	; 33
    41a4:	92 07       	cpc	r25, r18
    41a6:	28 f4       	brcc	.+10     	; 0x41b2 <_Z17handleLinkBusMsgsv+0xfe>
    41a8:	87 35       	cpi	r24, 0x57	; 87
    41aa:	90 42       	sbci	r25, 0x20	; 32
    41ac:	09 f4       	brne	.+2      	; 0x41b0 <_Z17handleLinkBusMsgsv+0xfc>
    41ae:	46 c0       	rjmp	.+140    	; 0x423c <_Z17handleLinkBusMsgsv+0x188>
    41b0:	0a c7       	rjmp	.+3604   	; 0x4fc6 <_Z17handleLinkBusMsgsv+0xf12>
    41b2:	8d 3a       	cpi	r24, 0xAD	; 173
    41b4:	f2 e2       	ldi	r31, 0x22	; 34
    41b6:	9f 07       	cpc	r25, r31
    41b8:	09 f4       	brne	.+2      	; 0x41bc <_Z17handleLinkBusMsgsv+0x108>
    41ba:	57 c1       	rjmp	.+686    	; 0x446a <_Z17handleLinkBusMsgsv+0x3b6>
    41bc:	81 3c       	cpi	r24, 0xC1	; 193
    41be:	92 42       	sbci	r25, 0x22	; 34
    41c0:	09 f4       	brne	.+2      	; 0x41c4 <_Z17handleLinkBusMsgsv+0x110>
    41c2:	c8 c1       	rjmp	.+912    	; 0x4554 <_Z17handleLinkBusMsgsv+0x4a0>
    41c4:	00 c7       	rjmp	.+3584   	; 0x4fc6 <_Z17handleLinkBusMsgsv+0xf12>
    41c6:	80 3d       	cpi	r24, 0xD0	; 208
    41c8:	e3 e2       	ldi	r30, 0x23	; 35
    41ca:	9e 07       	cpc	r25, r30
    41cc:	09 f4       	brne	.+2      	; 0x41d0 <_Z17handleLinkBusMsgsv+0x11c>
    41ce:	15 c4       	rjmp	.+2090   	; 0x49fa <_Z17handleLinkBusMsgsv+0x946>
    41d0:	81 3d       	cpi	r24, 0xD1	; 209
    41d2:	f3 e2       	ldi	r31, 0x23	; 35
    41d4:	9f 07       	cpc	r25, r31
    41d6:	28 f4       	brcc	.+10     	; 0x41e2 <_Z17handleLinkBusMsgsv+0x12e>
    41d8:	8f 3c       	cpi	r24, 0xCF	; 207
    41da:	93 42       	sbci	r25, 0x23	; 35
    41dc:	09 f4       	brne	.+2      	; 0x41e0 <_Z17handleLinkBusMsgsv+0x12c>
    41de:	d6 c6       	rjmp	.+3500   	; 0x4f8c <_Z17handleLinkBusMsgsv+0xed8>
    41e0:	f2 c6       	rjmp	.+3556   	; 0x4fc6 <_Z17handleLinkBusMsgsv+0xf12>
    41e2:	87 3f       	cpi	r24, 0xF7	; 247
    41e4:	e3 e2       	ldi	r30, 0x23	; 35
    41e6:	9e 07       	cpc	r25, r30
    41e8:	09 f4       	brne	.+2      	; 0x41ec <_Z17handleLinkBusMsgsv+0x138>
    41ea:	2d c3       	rjmp	.+1626   	; 0x4846 <_Z17handleLinkBusMsgsv+0x792>
    41ec:	8c 39       	cpi	r24, 0x9C	; 156
    41ee:	94 42       	sbci	r25, 0x24	; 36
    41f0:	09 f4       	brne	.+2      	; 0x41f4 <_Z17handleLinkBusMsgsv+0x140>
    41f2:	e1 c6       	rjmp	.+3522   	; 0x4fb6 <_Z17handleLinkBusMsgsv+0xf02>
    41f4:	e8 c6       	rjmp	.+3536   	; 0x4fc6 <_Z17handleLinkBusMsgsv+0xf12>
    41f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    41f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    41fa:	fc 01       	movw	r30, r24
    41fc:	83 81       	ldd	r24, Z+3	; 0x03
    41fe:	88 23       	and	r24, r24
    4200:	09 f4       	brne	.+2      	; 0x4204 <_Z17handleLinkBusMsgsv+0x150>
    4202:	e9 c6       	rjmp	.+3538   	; 0x4fd6 <_Z17handleLinkBusMsgsv+0xf22>
    4204:	8c 85       	ldd	r24, Y+12	; 0x0c
    4206:	9d 85       	ldd	r25, Y+13	; 0x0d
    4208:	03 96       	adiw	r24, 0x03	; 3
    420a:	0e 94 b5 74 	call	0xe96a	; 0xe96a <atoi>
    420e:	21 e0       	ldi	r18, 0x01	; 1
    4210:	89 2b       	or	r24, r25
    4212:	09 f4       	brne	.+2      	; 0x4216 <_Z17handleLinkBusMsgsv+0x162>
    4214:	20 e0       	ldi	r18, 0x00	; 0
    4216:	28 8b       	std	Y+16, r18	; 0x10
    4218:	0e 94 de 2b 	call	0x57bc	; 0x57bc <_Z12suspendEventv>
    421c:	0e 94 25 50 	call	0xa04a	; 0xa04a <_Z15linkbus_disablev>
    4220:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4224:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <_ZL11g_sleepType>
    4228:	98 89       	ldd	r25, Y+16	; 0x10
    422a:	81 e0       	ldi	r24, 0x01	; 1
    422c:	89 27       	eor	r24, r25
    422e:	88 23       	and	r24, r24
    4230:	09 f4       	brne	.+2      	; 0x4234 <_Z17handleLinkBusMsgsv+0x180>
    4232:	d1 c6       	rjmp	.+3490   	; 0x4fd6 <_Z17handleLinkBusMsgsv+0xf22>
    4234:	80 e0       	ldi	r24, 0x00	; 0
    4236:	0e 94 62 46 	call	0x8cc4	; 0x8cc4 <_Z10wifi_powerb>
    423a:	cd c6       	rjmp	.+3482   	; 0x4fd6 <_Z17handleLinkBusMsgsv+0xf22>
    423c:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    4240:	81 e0       	ldi	r24, 0x01	; 1
    4242:	80 93 47 47 	sts	0x4747, r24	; 0x804747 <g_enable_manual_transmissions>
    4246:	8c 85       	ldd	r24, Y+12	; 0x0c
    4248:	9d 85       	ldd	r25, Y+13	; 0x0d
    424a:	fc 01       	movw	r30, r24
    424c:	83 81       	ldd	r24, Z+3	; 0x03
    424e:	88 23       	and	r24, r24
    4250:	09 f4       	brne	.+2      	; 0x4254 <_Z17handleLinkBusMsgsv+0x1a0>
    4252:	c3 c6       	rjmp	.+3462   	; 0x4fda <_Z17handleLinkBusMsgsv+0xf26>
    4254:	8c 85       	ldd	r24, Y+12	; 0x0c
    4256:	9d 85       	ldd	r25, Y+13	; 0x0d
    4258:	03 96       	adiw	r24, 0x03	; 3
    425a:	89 8b       	std	Y+17, r24	; 0x11
    425c:	9a 8b       	std	Y+18, r25	; 0x12
    425e:	89 89       	ldd	r24, Y+17	; 0x11
    4260:	9a 89       	ldd	r25, Y+18	; 0x12
    4262:	0e 94 2f 75 	call	0xea5e	; 0xea5e <strlen>
    4266:	8b 8b       	std	Y+19, r24	; 0x13
    4268:	9c 8b       	std	Y+20, r25	; 0x14
    426a:	80 91 47 47 	lds	r24, 0x4747	; 0x804747 <g_enable_manual_transmissions>
    426e:	8d 8b       	std	Y+21, r24	; 0x15
    4270:	8b 89       	ldd	r24, Y+19	; 0x13
    4272:	9c 89       	ldd	r25, Y+20	; 0x14
    4274:	02 97       	sbiw	r24, 0x02	; 2
    4276:	b9 f4       	brne	.+46     	; 0x42a6 <_Z17handleLinkBusMsgsv+0x1f2>
    4278:	89 89       	ldd	r24, Y+17	; 0x11
    427a:	9a 89       	ldd	r25, Y+18	; 0x12
    427c:	fc 01       	movw	r30, r24
    427e:	80 81       	ld	r24, Z
    4280:	8c 35       	cpi	r24, 0x5C	; 92
    4282:	89 f4       	brne	.+34     	; 0x42a6 <_Z17handleLinkBusMsgsv+0x1f2>
    4284:	89 89       	ldd	r24, Y+17	; 0x11
    4286:	9a 89       	ldd	r25, Y+18	; 0x12
    4288:	01 96       	adiw	r24, 0x01	; 1
    428a:	fc 01       	movw	r30, r24
    428c:	80 81       	ld	r24, Z
    428e:	82 34       	cpi	r24, 0x42	; 66
    4290:	51 f4       	brne	.+20     	; 0x42a6 <_Z17handleLinkBusMsgsv+0x1f2>
    4292:	10 92 47 47 	sts	0x4747, r1	; 0x804747 <g_enable_manual_transmissions>
    4296:	83 e3       	ldi	r24, 0x33	; 51
    4298:	97 e4       	ldi	r25, 0x47	; 71
    429a:	0e 94 26 3c 	call	0x784c	; 0x784c <_ZN18CircularStringBuff3popEv>
    429e:	8d 89       	ldd	r24, Y+21	; 0x15
    42a0:	80 93 47 47 	sts	0x4747, r24	; 0x804747 <g_enable_manual_transmissions>
    42a4:	9a c6       	rjmp	.+3380   	; 0x4fda <_Z17handleLinkBusMsgsv+0xf26>
    42a6:	8b 89       	ldd	r24, Y+19	; 0x13
    42a8:	9c 89       	ldd	r25, Y+20	; 0x14
    42aa:	02 97       	sbiw	r24, 0x02	; 2
    42ac:	ac f1       	brlt	.+106    	; 0x4318 <_Z17handleLinkBusMsgsv+0x264>
    42ae:	1a 82       	std	Y+2, r1	; 0x02
    42b0:	1b 82       	std	Y+3, r1	; 0x03
    42b2:	10 92 47 47 	sts	0x4747, r1	; 0x804747 <g_enable_manual_transmissions>
    42b6:	83 e3       	ldi	r24, 0x33	; 51
    42b8:	97 e4       	ldi	r25, 0x47	; 71
    42ba:	0e 94 b2 3b 	call	0x7764	; 0x7764 <_ZNK18CircularStringBuff4fullEv>
    42be:	98 2f       	mov	r25, r24
    42c0:	81 e0       	ldi	r24, 0x01	; 1
    42c2:	89 27       	eor	r24, r25
    42c4:	88 23       	and	r24, r24
    42c6:	69 f0       	breq	.+26     	; 0x42e2 <_Z17handleLinkBusMsgsv+0x22e>
    42c8:	2a 81       	ldd	r18, Y+2	; 0x02
    42ca:	3b 81       	ldd	r19, Y+3	; 0x03
    42cc:	8b 89       	ldd	r24, Y+19	; 0x13
    42ce:	9c 89       	ldd	r25, Y+20	; 0x14
    42d0:	28 17       	cp	r18, r24
    42d2:	39 07       	cpc	r19, r25
    42d4:	34 f4       	brge	.+12     	; 0x42e2 <_Z17handleLinkBusMsgsv+0x22e>
    42d6:	8a 81       	ldd	r24, Y+2	; 0x02
    42d8:	9b 81       	ldd	r25, Y+3	; 0x03
    42da:	45 97       	sbiw	r24, 0x15	; 21
    42dc:	14 f4       	brge	.+4      	; 0x42e2 <_Z17handleLinkBusMsgsv+0x22e>
    42de:	81 e0       	ldi	r24, 0x01	; 1
    42e0:	01 c0       	rjmp	.+2      	; 0x42e4 <_Z17handleLinkBusMsgsv+0x230>
    42e2:	80 e0       	ldi	r24, 0x00	; 0
    42e4:	88 23       	and	r24, r24
    42e6:	a1 f0       	breq	.+40     	; 0x4310 <_Z17handleLinkBusMsgsv+0x25c>
    42e8:	8a 81       	ldd	r24, Y+2	; 0x02
    42ea:	9b 81       	ldd	r25, Y+3	; 0x03
    42ec:	9c 01       	movw	r18, r24
    42ee:	2f 5f       	subi	r18, 0xFF	; 255
    42f0:	3f 4f       	sbci	r19, 0xFF	; 255
    42f2:	2a 83       	std	Y+2, r18	; 0x02
    42f4:	3b 83       	std	Y+3, r19	; 0x03
    42f6:	2c 85       	ldd	r18, Y+12	; 0x0c
    42f8:	3d 85       	ldd	r19, Y+13	; 0x0d
    42fa:	82 0f       	add	r24, r18
    42fc:	93 1f       	adc	r25, r19
    42fe:	03 96       	adiw	r24, 0x03	; 3
    4300:	fc 01       	movw	r30, r24
    4302:	80 81       	ld	r24, Z
    4304:	68 2f       	mov	r22, r24
    4306:	83 e3       	ldi	r24, 0x33	; 51
    4308:	97 e4       	ldi	r25, 0x47	; 71
    430a:	0e 94 c2 3b 	call	0x7784	; 0x7784 <_ZN18CircularStringBuff3putEc>
    430e:	d3 cf       	rjmp	.-90     	; 0x42b6 <_Z17handleLinkBusMsgsv+0x202>
    4310:	8d 89       	ldd	r24, Y+21	; 0x15
    4312:	80 93 47 47 	sts	0x4747, r24	; 0x804747 <g_enable_manual_transmissions>
    4316:	61 c6       	rjmp	.+3266   	; 0x4fda <_Z17handleLinkBusMsgsv+0xf26>
    4318:	8c 85       	ldd	r24, Y+12	; 0x0c
    431a:	9d 85       	ldd	r25, Y+13	; 0x0d
    431c:	fc 01       	movw	r30, r24
    431e:	83 81       	ldd	r24, Z+3	; 0x03
    4320:	8e 8b       	std	Y+22, r24	; 0x16
    4322:	8e 89       	ldd	r24, Y+22	; 0x16
    4324:	8b 35       	cpi	r24, 0x5B	; 91
    4326:	61 f4       	brne	.+24     	; 0x4340 <_Z17handleLinkBusMsgsv+0x28c>
    4328:	81 e0       	ldi	r24, 0x01	; 1
    432a:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    432e:	67 e0       	ldi	r22, 0x07	; 7
    4330:	82 e3       	ldi	r24, 0x32	; 50
    4332:	97 e4       	ldi	r25, 0x47	; 71
    4334:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    4338:	81 e0       	ldi	r24, 0x01	; 1
    433a:	0e 94 bc 67 	call	0xcf78	; 0xcf78 <_Z9txKeyDownb>
    433e:	4d c6       	rjmp	.+3226   	; 0x4fda <_Z17handleLinkBusMsgsv+0xf26>
    4340:	8e 89       	ldd	r24, Y+22	; 0x16
    4342:	8d 35       	cpi	r24, 0x5D	; 93
    4344:	61 f4       	brne	.+24     	; 0x435e <_Z17handleLinkBusMsgsv+0x2aa>
    4346:	80 e0       	ldi	r24, 0x00	; 0
    4348:	0e 94 bc 67 	call	0xcf78	; 0xcf78 <_Z9txKeyDownb>
    434c:	80 e0       	ldi	r24, 0x00	; 0
    434e:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    4352:	61 e0       	ldi	r22, 0x01	; 1
    4354:	82 e3       	ldi	r24, 0x32	; 50
    4356:	97 e4       	ldi	r25, 0x47	; 71
    4358:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    435c:	3e c6       	rjmp	.+3196   	; 0x4fda <_Z17handleLinkBusMsgsv+0xf26>
    435e:	8e 89       	ldd	r24, Y+22	; 0x16
    4360:	8e 35       	cpi	r24, 0x5E	; 94
    4362:	39 f4       	brne	.+14     	; 0x4372 <_Z17handleLinkBusMsgsv+0x2be>
    4364:	0e 94 de 2b 	call	0x57bc	; 0x57bc <_Z12suspendEventv>
    4368:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    436c:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <_ZL11g_sleepType>
    4370:	34 c6       	rjmp	.+3176   	; 0x4fda <_Z17handleLinkBusMsgsv+0xf26>
    4372:	10 92 47 47 	sts	0x4747, r1	; 0x804747 <g_enable_manual_transmissions>
    4376:	6e 89       	ldd	r22, Y+22	; 0x16
    4378:	83 e3       	ldi	r24, 0x33	; 51
    437a:	97 e4       	ldi	r25, 0x47	; 71
    437c:	0e 94 c2 3b 	call	0x7784	; 0x7784 <_ZN18CircularStringBuff3putEc>
    4380:	8d 89       	ldd	r24, Y+21	; 0x15
    4382:	80 93 47 47 	sts	0x4747, r24	; 0x804747 <g_enable_manual_transmissions>
    4386:	29 c6       	rjmp	.+3154   	; 0x4fda <_Z17handleLinkBusMsgsv+0xf26>
    4388:	82 e0       	ldi	r24, 0x02	; 2
    438a:	0e 94 13 29 	call	0x5226	; 0x5226 <_Z8wdt_init7WDReset>
    438e:	ff cf       	rjmp	.-2      	; 0x438e <_Z17handleLinkBusMsgsv+0x2da>
    4390:	8c 85       	ldd	r24, Y+12	; 0x0c
    4392:	9d 85       	ldd	r25, Y+13	; 0x0d
    4394:	fc 01       	movw	r30, r24
    4396:	83 81       	ldd	r24, Z+3	; 0x03
    4398:	8f 8b       	std	Y+23, r24	; 0x17
    439a:	81 e0       	ldi	r24, 0x01	; 1
    439c:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    43a0:	8f 89       	ldd	r24, Y+23	; 0x17
    43a2:	8a 35       	cpi	r24, 0x5A	; 90
    43a4:	21 f4       	brne	.+8      	; 0x43ae <_Z17handleLinkBusMsgsv+0x2fa>
    43a6:	88 e7       	ldi	r24, 0x78	; 120
    43a8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    43ac:	18 c6       	rjmp	.+3120   	; 0x4fde <_Z17handleLinkBusMsgsv+0xf2a>
    43ae:	8f 89       	ldd	r24, Y+23	; 0x17
    43b0:	80 33       	cpi	r24, 0x30	; 48
    43b2:	c9 f5       	brne	.+114    	; 0x4426 <_Z17handleLinkBusMsgsv+0x372>
    43b4:	81 e0       	ldi	r24, 0x01	; 1
    43b6:	80 93 e6 46 	sts	0x46E6, r24	; 0x8046e6 <_ZL12g_wifi_ready>
    43ba:	80 e0       	ldi	r24, 0x00	; 0
    43bc:	90 e0       	ldi	r25, 0x00	; 0
    43be:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    43c2:	dc 01       	movw	r26, r24
    43c4:	cb 01       	movw	r24, r22
    43c6:	2b 2f       	mov	r18, r27
    43c8:	2f 93       	push	r18
    43ca:	2a 2f       	mov	r18, r26
    43cc:	2f 93       	push	r18
    43ce:	29 2f       	mov	r18, r25
    43d0:	2f 93       	push	r18
    43d2:	8f 93       	push	r24
    43d4:	85 e6       	ldi	r24, 0x65	; 101
    43d6:	90 e4       	ldi	r25, 0x40	; 64
    43d8:	89 2f       	mov	r24, r25
    43da:	8f 93       	push	r24
    43dc:	85 e6       	ldi	r24, 0x65	; 101
    43de:	90 e4       	ldi	r25, 0x40	; 64
    43e0:	8f 93       	push	r24
    43e2:	84 ea       	ldi	r24, 0xA4	; 164
    43e4:	96 e4       	ldi	r25, 0x46	; 70
    43e6:	89 2f       	mov	r24, r25
    43e8:	8f 93       	push	r24
    43ea:	84 ea       	ldi	r24, 0xA4	; 164
    43ec:	96 e4       	ldi	r25, 0x46	; 70
    43ee:	8f 93       	push	r24
    43f0:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    43f4:	8d b7       	in	r24, 0x3d	; 61
    43f6:	9e b7       	in	r25, 0x3e	; 62
    43f8:	08 96       	adiw	r24, 0x08	; 8
    43fa:	cd bf       	out	0x3d, r28	; 61
    43fc:	de bf       	out	0x3e, r29	; 62
    43fe:	44 ea       	ldi	r20, 0xA4	; 164
    4400:	56 e4       	ldi	r21, 0x46	; 70
    4402:	69 e6       	ldi	r22, 0x69	; 105
    4404:	70 e4       	ldi	r23, 0x40	; 64
    4406:	83 e0       	ldi	r24, 0x03	; 3
    4408:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    440c:	80 91 22 47 	lds	r24, 0x4722	; 0x804722 <g_waiting_for_next_event>
    4410:	88 23       	and	r24, r24
    4412:	09 f4       	brne	.+2      	; 0x4416 <_Z17handleLinkBusMsgsv+0x362>
    4414:	e4 c5       	rjmp	.+3016   	; 0x4fde <_Z17handleLinkBusMsgsv+0xf2a>
    4416:	46 e7       	ldi	r20, 0x76	; 118
    4418:	50 e4       	ldi	r21, 0x40	; 64
    441a:	61 e6       	ldi	r22, 0x61	; 97
    441c:	70 e4       	ldi	r23, 0x40	; 64
    441e:	83 e0       	ldi	r24, 0x03	; 3
    4420:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4424:	dc c5       	rjmp	.+3000   	; 0x4fde <_Z17handleLinkBusMsgsv+0xf2a>
    4426:	8f 89       	ldd	r24, Y+23	; 0x17
    4428:	82 33       	cpi	r24, 0x32	; 50
    442a:	71 f4       	brne	.+28     	; 0x4448 <_Z17handleLinkBusMsgsv+0x394>
    442c:	81 e0       	ldi	r24, 0x01	; 1
    442e:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    4432:	90 91 1f 47 	lds	r25, 0x471F	; 0x80471f <g_event_enabled>
    4436:	81 e0       	ldi	r24, 0x01	; 1
    4438:	89 27       	eor	r24, r25
    443a:	88 23       	and	r24, r24
    443c:	09 f4       	brne	.+2      	; 0x4440 <_Z17handleLinkBusMsgsv+0x38c>
    443e:	cf c5       	rjmp	.+2974   	; 0x4fde <_Z17handleLinkBusMsgsv+0xf2a>
    4440:	81 e0       	ldi	r24, 0x01	; 1
    4442:	80 93 db 46 	sts	0x46DB, r24	; 0x8046db <_ZL13g_start_event>
    4446:	cb c5       	rjmp	.+2966   	; 0x4fde <_Z17handleLinkBusMsgsv+0xf2a>
    4448:	8f 89       	ldd	r24, Y+23	; 0x17
    444a:	83 33       	cpi	r24, 0x33	; 51
    444c:	09 f0       	breq	.+2      	; 0x4450 <_Z17handleLinkBusMsgsv+0x39c>
    444e:	c7 c5       	rjmp	.+2958   	; 0x4fde <_Z17handleLinkBusMsgsv+0xf2a>
    4450:	10 92 e4 46 	sts	0x46E4, r1	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    4454:	81 e0       	ldi	r24, 0x01	; 1
    4456:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    445a:	10 92 22 47 	sts	0x4722, r1	; 0x804722 <g_waiting_for_next_event>
    445e:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    4462:	81 e0       	ldi	r24, 0x01	; 1
    4464:	80 93 e5 46 	sts	0x46E5, r24	; 0x8046e5 <_ZL20g_shutting_down_wifi>
    4468:	ba c5       	rjmp	.+2932   	; 0x4fde <_Z17handleLinkBusMsgsv+0xf2a>
    446a:	8c 85       	ldd	r24, Y+12	; 0x0c
    446c:	9d 85       	ldd	r25, Y+13	; 0x0d
    446e:	fc 01       	movw	r30, r24
    4470:	83 81       	ldd	r24, Z+3	; 0x03
    4472:	88 23       	and	r24, r24
    4474:	09 f4       	brne	.+2      	; 0x4478 <_Z17handleLinkBusMsgsv+0x3c4>
    4476:	b5 c5       	rjmp	.+2922   	; 0x4fe2 <_Z17handleLinkBusMsgsv+0xf2e>
    4478:	8c 85       	ldd	r24, Y+12	; 0x0c
    447a:	9d 85       	ldd	r25, Y+13	; 0x0d
    447c:	fc 01       	movw	r30, r24
    447e:	83 81       	ldd	r24, Z+3	; 0x03
    4480:	8d 34       	cpi	r24, 0x4D	; 77
    4482:	81 f4       	brne	.+32     	; 0x44a4 <_Z17handleLinkBusMsgsv+0x3f0>
    4484:	8c 85       	ldd	r24, Y+12	; 0x0c
    4486:	9d 85       	ldd	r25, Y+13	; 0x0d
    4488:	fc 01       	movw	r30, r24
    448a:	80 8d       	ldd	r24, Z+24	; 0x18
    448c:	88 23       	and	r24, r24
    448e:	51 f0       	breq	.+20     	; 0x44a4 <_Z17handleLinkBusMsgsv+0x3f0>
    4490:	8c 85       	ldd	r24, Y+12	; 0x0c
    4492:	9d 85       	ldd	r25, Y+13	; 0x0d
    4494:	48 96       	adiw	r24, 0x18	; 24
    4496:	0e 94 b5 74 	call	0xe96a	; 0xe96a <atoi>
    449a:	80 93 53 47 	sts	0x4753, r24	; 0x804753 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    449e:	90 93 54 47 	sts	0x4754, r25	; 0x804754 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    44a2:	09 c0       	rjmp	.+18     	; 0x44b6 <_Z17handleLinkBusMsgsv+0x402>
    44a4:	8c 85       	ldd	r24, Y+12	; 0x0c
    44a6:	9d 85       	ldd	r25, Y+13	; 0x0d
    44a8:	03 96       	adiw	r24, 0x03	; 3
    44aa:	0e 94 b5 74 	call	0xe96a	; 0xe96a <atoi>
    44ae:	80 93 53 47 	sts	0x4753, r24	; 0x804753 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    44b2:	90 93 54 47 	sts	0x4754, r25	; 0x804754 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    44b6:	0e 94 a0 68 	call	0xd140	; 0xd140 <_Z12txGetPowerMwv>
    44ba:	9c 01       	movw	r18, r24
    44bc:	80 91 53 47 	lds	r24, 0x4753	; 0x804753 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    44c0:	90 91 54 47 	lds	r25, 0x4754	; 0x804754 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    44c4:	41 e0       	ldi	r20, 0x01	; 1
    44c6:	28 17       	cp	r18, r24
    44c8:	39 07       	cpc	r19, r25
    44ca:	09 f4       	brne	.+2      	; 0x44ce <_Z17handleLinkBusMsgsv+0x41a>
    44cc:	40 e0       	ldi	r20, 0x00	; 0
    44ce:	44 23       	and	r20, r20
    44d0:	b9 f1       	breq	.+110    	; 0x4540 <_Z17handleLinkBusMsgsv+0x48c>
    44d2:	60 e0       	ldi	r22, 0x00	; 0
    44d4:	70 e0       	ldi	r23, 0x00	; 0
    44d6:	83 e5       	ldi	r24, 0x53	; 83
    44d8:	97 e4       	ldi	r25, 0x47	; 71
    44da:	0e 94 b4 68 	call	0xd168	; 0xd168 <_Z15txSetParametersPjPb>
    44de:	88 8f       	std	Y+24, r24	; 0x18
    44e0:	88 8d       	ldd	r24, Y+24	; 0x18
    44e2:	88 23       	and	r24, r24
    44e4:	21 f0       	breq	.+8      	; 0x44ee <_Z17handleLinkBusMsgsv+0x43a>
    44e6:	88 8d       	ldd	r24, Y+24	; 0x18
    44e8:	80 93 d6 46 	sts	0x46D6, r24	; 0x8046d6 <_ZL17g_last_error_code>
    44ec:	05 c0       	rjmp	.+10     	; 0x44f8 <_Z17handleLinkBusMsgsv+0x444>
    44ee:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    44f2:	8f 5f       	subi	r24, 0xFF	; 255
    44f4:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    44f8:	80 91 53 47 	lds	r24, 0x4753	; 0x804753 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    44fc:	90 91 54 47 	lds	r25, 0x4754	; 0x804754 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4500:	29 2f       	mov	r18, r25
    4502:	2f 93       	push	r18
    4504:	8f 93       	push	r24
    4506:	85 ec       	ldi	r24, 0xC5	; 197
    4508:	92 e4       	ldi	r25, 0x42	; 66
    450a:	89 2f       	mov	r24, r25
    450c:	8f 93       	push	r24
    450e:	85 ec       	ldi	r24, 0xC5	; 197
    4510:	92 e4       	ldi	r25, 0x42	; 66
    4512:	8f 93       	push	r24
    4514:	84 ea       	ldi	r24, 0xA4	; 164
    4516:	96 e4       	ldi	r25, 0x46	; 70
    4518:	89 2f       	mov	r24, r25
    451a:	8f 93       	push	r24
    451c:	84 ea       	ldi	r24, 0xA4	; 164
    451e:	96 e4       	ldi	r25, 0x46	; 70
    4520:	8f 93       	push	r24
    4522:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    4526:	0f 90       	pop	r0
    4528:	0f 90       	pop	r0
    452a:	0f 90       	pop	r0
    452c:	0f 90       	pop	r0
    452e:	0f 90       	pop	r0
    4530:	0f 90       	pop	r0
    4532:	44 ea       	ldi	r20, 0xA4	; 164
    4534:	56 e4       	ldi	r21, 0x46	; 70
    4536:	6a ec       	ldi	r22, 0xCA	; 202
    4538:	72 e4       	ldi	r23, 0x42	; 66
    453a:	83 e0       	ldi	r24, 0x03	; 3
    453c:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4540:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4544:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4548:	80 64       	ori	r24, 0x40	; 64
    454a:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    454e:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4552:	47 c5       	rjmp	.+2702   	; 0x4fe2 <_Z17handleLinkBusMsgsv+0xf2e>
    4554:	8c e3       	ldi	r24, 0x3C	; 60
    4556:	97 e4       	ldi	r25, 0x47	; 71
    4558:	0e 94 f1 3f 	call	0x7fe2	; 0x7fe2 <_ZN13EepromManager13saveAllEEPROMEv>
    455c:	51 c5       	rjmp	.+2722   	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    455e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4560:	9d 85       	ldd	r25, Y+13	; 0x0d
    4562:	fc 01       	movw	r30, r24
    4564:	83 81       	ldd	r24, Z+3	; 0x03
    4566:	89 8f       	std	Y+25, r24	; 0x19
    4568:	89 8d       	ldd	r24, Y+25	; 0x19
    456a:	81 33       	cpi	r24, 0x31	; 49
    456c:	21 f0       	breq	.+8      	; 0x4576 <_Z17handleLinkBusMsgsv+0x4c2>
    456e:	89 8d       	ldd	r24, Y+25	; 0x19
    4570:	82 33       	cpi	r24, 0x32	; 50
    4572:	09 f0       	breq	.+2      	; 0x4576 <_Z17handleLinkBusMsgsv+0x4c2>
    4574:	c2 c0       	rjmp	.+388    	; 0x46fa <_Z17handleLinkBusMsgsv+0x646>
    4576:	80 91 da 46 	lds	r24, 0x46DA	; 0x8046da <g_antenna_connect_state>
    457a:	82 30       	cpi	r24, 0x02	; 2
    457c:	41 f0       	breq	.+16     	; 0x458e <_Z17handleLinkBusMsgsv+0x4da>
    457e:	90 91 36 40 	lds	r25, 0x4036	; 0x804036 <g_tx_power_is_zero>
    4582:	81 e0       	ldi	r24, 0x01	; 1
    4584:	89 27       	eor	r24, r25
    4586:	88 23       	and	r24, r24
    4588:	11 f0       	breq	.+4      	; 0x458e <_Z17handleLinkBusMsgsv+0x4da>
    458a:	81 e0       	ldi	r24, 0x01	; 1
    458c:	01 c0       	rjmp	.+2      	; 0x4590 <_Z17handleLinkBusMsgsv+0x4dc>
    458e:	80 e0       	ldi	r24, 0x00	; 0
    4590:	88 23       	and	r24, r24
    4592:	21 f0       	breq	.+8      	; 0x459c <_Z17handleLinkBusMsgsv+0x4e8>
    4594:	87 ef       	ldi	r24, 0xF7	; 247
    4596:	80 93 d6 46 	sts	0x46D6, r24	; 0x8046d6 <_ZL17g_last_error_code>
    459a:	bf c0       	rjmp	.+382    	; 0x471a <_Z17handleLinkBusMsgsv+0x666>
    459c:	89 8d       	ldd	r24, Y+25	; 0x19
    459e:	81 33       	cpi	r24, 0x31	; 49
    45a0:	09 f0       	breq	.+2      	; 0x45a4 <_Z17handleLinkBusMsgsv+0x4f0>
    45a2:	64 c0       	rjmp	.+200    	; 0x466c <_Z17handleLinkBusMsgsv+0x5b8>
    45a4:	80 91 da 46 	lds	r24, 0x46DA	; 0x8046da <g_antenna_connect_state>
    45a8:	82 30       	cpi	r24, 0x02	; 2
    45aa:	21 f0       	breq	.+8      	; 0x45b4 <_Z17handleLinkBusMsgsv+0x500>
    45ac:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_tx_power_is_zero>
    45b0:	88 23       	and	r24, r24
    45b2:	11 f0       	breq	.+4      	; 0x45b8 <_Z17handleLinkBusMsgsv+0x504>
    45b4:	81 e0       	ldi	r24, 0x01	; 1
    45b6:	01 c0       	rjmp	.+2      	; 0x45ba <_Z17handleLinkBusMsgsv+0x506>
    45b8:	80 e0       	ldi	r24, 0x00	; 0
    45ba:	88 23       	and	r24, r24
    45bc:	09 f4       	brne	.+2      	; 0x45c0 <_Z17handleLinkBusMsgsv+0x50c>
    45be:	52 c0       	rjmp	.+164    	; 0x4664 <_Z17handleLinkBusMsgsv+0x5b0>
    45c0:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    45c4:	81 e0       	ldi	r24, 0x01	; 1
    45c6:	89 ab       	std	Y+49, r24	; 0x31
    45c8:	ce 01       	movw	r24, r28
    45ca:	c1 96       	adiw	r24, 0x31	; 49
    45cc:	40 e0       	ldi	r20, 0x00	; 0
    45ce:	50 e0       	ldi	r21, 0x00	; 0
    45d0:	bc 01       	movw	r22, r24
    45d2:	89 ee       	ldi	r24, 0xE9	; 233
    45d4:	96 e4       	ldi	r25, 0x46	; 70
    45d6:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    45da:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    45de:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    45e2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    45e6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    45ea:	81 e0       	ldi	r24, 0x01	; 1
    45ec:	90 e0       	ldi	r25, 0x00	; 0
    45ee:	a0 e0       	ldi	r26, 0x00	; 0
    45f0:	b0 e0       	ldi	r27, 0x00	; 0
    45f2:	80 93 17 47 	sts	0x4717, r24	; 0x804717 <g_event_start_epoch>
    45f6:	90 93 18 47 	sts	0x4718, r25	; 0x804718 <g_event_start_epoch+0x1>
    45fa:	a0 93 19 47 	sts	0x4719, r26	; 0x804719 <g_event_start_epoch+0x2>
    45fe:	b0 93 1a 47 	sts	0x471A, r27	; 0x80471a <g_event_start_epoch+0x3>
    4602:	8f ef       	ldi	r24, 0xFF	; 255
    4604:	9f ef       	ldi	r25, 0xFF	; 255
    4606:	dc 01       	movw	r26, r24
    4608:	80 93 1b 47 	sts	0x471B, r24	; 0x80471b <g_event_finish_epoch>
    460c:	90 93 1c 47 	sts	0x471C, r25	; 0x80471c <g_event_finish_epoch+0x1>
    4610:	a0 93 1d 47 	sts	0x471D, r26	; 0x80471d <g_event_finish_epoch+0x2>
    4614:	b0 93 1e 47 	sts	0x471E, r27	; 0x80471e <g_event_finish_epoch+0x3>
    4618:	8f e0       	ldi	r24, 0x0F	; 15
    461a:	97 e2       	ldi	r25, 0x27	; 39
    461c:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4620:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4624:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    4628:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    462c:	8f e0       	ldi	r24, 0x0F	; 15
    462e:	97 e2       	ldi	r25, 0x27	; 39
    4630:	a0 e0       	ldi	r26, 0x00	; 0
    4632:	b0 e0       	ldi	r27, 0x00	; 0
    4634:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    4638:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    463c:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    4640:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    4644:	8f ef       	ldi	r24, 0xFF	; 255
    4646:	9f ef       	ldi	r25, 0xFF	; 255
    4648:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    464c:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    4650:	81 e0       	ldi	r24, 0x01	; 1
    4652:	80 93 20 47 	sts	0x4720, r24	; 0x804720 <g_event_commenced>
    4656:	81 e0       	ldi	r24, 0x01	; 1
    4658:	80 93 1f 47 	sts	0x471F, r24	; 0x80471f <g_event_enabled>
    465c:	8d ef       	ldi	r24, 0xFD	; 253
    465e:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    4662:	5b c0       	rjmp	.+182    	; 0x471a <_Z17handleLinkBusMsgsv+0x666>
    4664:	87 ef       	ldi	r24, 0xF7	; 247
    4666:	80 93 d6 46 	sts	0x46D6, r24	; 0x8046d6 <_ZL17g_last_error_code>
    466a:	57 c0       	rjmp	.+174    	; 0x471a <_Z17handleLinkBusMsgsv+0x666>
    466c:	89 8d       	ldd	r24, Y+25	; 0x19
    466e:	82 33       	cpi	r24, 0x32	; 50
    4670:	09 f0       	breq	.+2      	; 0x4674 <_Z17handleLinkBusMsgsv+0x5c0>
    4672:	53 c0       	rjmp	.+166    	; 0x471a <_Z17handleLinkBusMsgsv+0x666>
    4674:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4678:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    467c:	8f 3f       	cpi	r24, 0xFF	; 255
    467e:	9f 40       	sbci	r25, 0x0F	; 15
    4680:	21 f0       	breq	.+8      	; 0x468a <_Z17handleLinkBusMsgsv+0x5d6>
    4682:	8d ec       	ldi	r24, 0xCD	; 205
    4684:	80 93 d6 46 	sts	0x46D6, r24	; 0x8046d6 <_ZL17g_last_error_code>
    4688:	48 c0       	rjmp	.+144    	; 0x471a <_Z17handleLinkBusMsgsv+0x666>
    468a:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    468e:	88 23       	and	r24, r24
    4690:	51 f0       	breq	.+20     	; 0x46a6 <_Z17handleLinkBusMsgsv+0x5f2>
    4692:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <g_event_enabled>
    4696:	88 23       	and	r24, r24
    4698:	11 f0       	breq	.+4      	; 0x469e <_Z17handleLinkBusMsgsv+0x5ea>
    469a:	0e 94 de 2b 	call	0x57bc	; 0x57bc <_Z12suspendEventv>
    469e:	8c e3       	ldi	r24, 0x3C	; 60
    46a0:	97 e4       	ldi	r25, 0x47	; 71
    46a2:	0e 94 f1 3f 	call	0x7fe2	; 0x7fe2 <_ZN13EepromManager13saveAllEEPROMEv>
    46a6:	90 91 1f 47 	lds	r25, 0x471F	; 0x80471f <g_event_enabled>
    46aa:	81 e0       	ldi	r24, 0x01	; 1
    46ac:	89 27       	eor	r24, r25
    46ae:	88 23       	and	r24, r24
    46b0:	d1 f0       	breq	.+52     	; 0x46e6 <_Z17handleLinkBusMsgsv+0x632>
    46b2:	1a aa       	std	Y+50, r1	; 0x32
    46b4:	ce 01       	movw	r24, r28
    46b6:	c2 96       	adiw	r24, 0x32	; 50
    46b8:	0e 94 78 29 	call	0x52f0	; 0x52f0 <_Z11launchEventP2SC>
    46bc:	80 93 d6 46 	sts	0x46D6, r24	; 0x8046d6 <_ZL17g_last_error_code>
    46c0:	82 e0       	ldi	r24, 0x02	; 2
    46c2:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    46c6:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <g_event_enabled>
    46ca:	88 23       	and	r24, r24
    46cc:	31 f0       	breq	.+12     	; 0x46da <_Z17handleLinkBusMsgsv+0x626>
    46ce:	65 e0       	ldi	r22, 0x05	; 5
    46d0:	82 e3       	ldi	r24, 0x32	; 50
    46d2:	97 e4       	ldi	r25, 0x47	; 71
    46d4:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    46d8:	09 c0       	rjmp	.+18     	; 0x46ec <_Z17handleLinkBusMsgsv+0x638>
    46da:	68 e0       	ldi	r22, 0x08	; 8
    46dc:	82 e3       	ldi	r24, 0x32	; 50
    46de:	97 e4       	ldi	r25, 0x47	; 71
    46e0:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    46e4:	03 c0       	rjmp	.+6      	; 0x46ec <_Z17handleLinkBusMsgsv+0x638>
    46e6:	8c e3       	ldi	r24, 0x3C	; 60
    46e8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    46ec:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    46f0:	10 92 30 47 	sts	0x4730, r1	; 0x804730 <g_Event_Configuration_Check>
    46f4:	10 92 31 47 	sts	0x4731, r1	; 0x804731 <g_Event_Configuration_Check+0x1>
    46f8:	10 c0       	rjmp	.+32     	; 0x471a <_Z17handleLinkBusMsgsv+0x666>
    46fa:	89 8d       	ldd	r24, Y+25	; 0x19
    46fc:	80 33       	cpi	r24, 0x30	; 48
    46fe:	09 f0       	breq	.+2      	; 0x4702 <_Z17handleLinkBusMsgsv+0x64e>
    4700:	72 c4       	rjmp	.+2276   	; 0x4fe6 <_Z17handleLinkBusMsgsv+0xf32>
    4702:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4706:	10 92 30 47 	sts	0x4730, r1	; 0x804730 <g_Event_Configuration_Check>
    470a:	10 92 31 47 	sts	0x4731, r1	; 0x804731 <g_Event_Configuration_Check+0x1>
    470e:	8c ee       	ldi	r24, 0xEC	; 236
    4710:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    4714:	10 92 47 47 	sts	0x4747, r1	; 0x804747 <g_enable_manual_transmissions>
    4718:	66 c4       	rjmp	.+2252   	; 0x4fe6 <_Z17handleLinkBusMsgsv+0xf32>
    471a:	00 00       	nop
    471c:	64 c4       	rjmp	.+2248   	; 0x4fe6 <_Z17handleLinkBusMsgsv+0xf32>
    471e:	1c 82       	std	Y+4, r1	; 0x04
    4720:	1d 82       	std	Y+5, r1	; 0x05
    4722:	1e 82       	std	Y+6, r1	; 0x06
    4724:	1f 82       	std	Y+7, r1	; 0x07
    4726:	8c 85       	ldd	r24, Y+12	; 0x0c
    4728:	9d 85       	ldd	r25, Y+13	; 0x0d
    472a:	fc 01       	movw	r30, r24
    472c:	83 81       	ldd	r24, Z+3	; 0x03
    472e:	83 35       	cpi	r24, 0x53	; 83
    4730:	09 f0       	breq	.+2      	; 0x4734 <_Z17handleLinkBusMsgsv+0x680>
    4732:	41 c0       	rjmp	.+130    	; 0x47b6 <_Z17handleLinkBusMsgsv+0x702>
    4734:	8c 85       	ldd	r24, Y+12	; 0x0c
    4736:	9d 85       	ldd	r25, Y+13	; 0x0d
    4738:	fc 01       	movw	r30, r24
    473a:	80 8d       	ldd	r24, Z+24	; 0x18
    473c:	88 23       	and	r24, r24
    473e:	59 f0       	breq	.+22     	; 0x4756 <_Z17handleLinkBusMsgsv+0x6a2>
    4740:	8c 85       	ldd	r24, Y+12	; 0x0c
    4742:	9d 85       	ldd	r25, Y+13	; 0x0d
    4744:	48 96       	adiw	r24, 0x18	; 24
    4746:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    474a:	dc 01       	movw	r26, r24
    474c:	cb 01       	movw	r24, r22
    474e:	8c 83       	std	Y+4, r24	; 0x04
    4750:	9d 83       	std	Y+5, r25	; 0x05
    4752:	ae 83       	std	Y+6, r26	; 0x06
    4754:	bf 83       	std	Y+7, r27	; 0x07
    4756:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    475a:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    475e:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    4762:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    4766:	61 e0       	ldi	r22, 0x01	; 1
    4768:	2c 81       	ldd	r18, Y+4	; 0x04
    476a:	3d 81       	ldd	r19, Y+5	; 0x05
    476c:	4e 81       	ldd	r20, Y+6	; 0x06
    476e:	5f 81       	ldd	r21, Y+7	; 0x07
    4770:	28 17       	cp	r18, r24
    4772:	39 07       	cpc	r19, r25
    4774:	4a 07       	cpc	r20, r26
    4776:	5b 07       	cpc	r21, r27
    4778:	09 f4       	brne	.+2      	; 0x477c <_Z17handleLinkBusMsgsv+0x6c8>
    477a:	60 e0       	ldi	r22, 0x00	; 0
    477c:	66 23       	and	r22, r22
    477e:	89 f0       	breq	.+34     	; 0x47a2 <_Z17handleLinkBusMsgsv+0x6ee>
    4780:	8c 81       	ldd	r24, Y+4	; 0x04
    4782:	9d 81       	ldd	r25, Y+5	; 0x05
    4784:	ae 81       	ldd	r26, Y+6	; 0x06
    4786:	bf 81       	ldd	r27, Y+7	; 0x07
    4788:	80 93 17 47 	sts	0x4717, r24	; 0x804717 <g_event_start_epoch>
    478c:	90 93 18 47 	sts	0x4718, r25	; 0x804718 <g_event_start_epoch+0x1>
    4790:	a0 93 19 47 	sts	0x4719, r26	; 0x804719 <g_event_start_epoch+0x2>
    4794:	b0 93 1a 47 	sts	0x471A, r27	; 0x80471a <g_event_start_epoch+0x3>
    4798:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    479c:	8f 5f       	subi	r24, 0xFF	; 255
    479e:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    47a2:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    47a6:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    47aa:	98 60       	ori	r25, 0x08	; 8
    47ac:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    47b0:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    47b4:	1a c4       	rjmp	.+2100   	; 0x4fea <_Z17handleLinkBusMsgsv+0xf36>
    47b6:	8c 85       	ldd	r24, Y+12	; 0x0c
    47b8:	9d 85       	ldd	r25, Y+13	; 0x0d
    47ba:	fc 01       	movw	r30, r24
    47bc:	83 81       	ldd	r24, Z+3	; 0x03
    47be:	86 34       	cpi	r24, 0x46	; 70
    47c0:	09 f0       	breq	.+2      	; 0x47c4 <_Z17handleLinkBusMsgsv+0x710>
    47c2:	13 c4       	rjmp	.+2086   	; 0x4fea <_Z17handleLinkBusMsgsv+0xf36>
    47c4:	8c 85       	ldd	r24, Y+12	; 0x0c
    47c6:	9d 85       	ldd	r25, Y+13	; 0x0d
    47c8:	fc 01       	movw	r30, r24
    47ca:	80 8d       	ldd	r24, Z+24	; 0x18
    47cc:	88 23       	and	r24, r24
    47ce:	59 f0       	breq	.+22     	; 0x47e6 <_Z17handleLinkBusMsgsv+0x732>
    47d0:	8c 85       	ldd	r24, Y+12	; 0x0c
    47d2:	9d 85       	ldd	r25, Y+13	; 0x0d
    47d4:	48 96       	adiw	r24, 0x18	; 24
    47d6:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    47da:	dc 01       	movw	r26, r24
    47dc:	cb 01       	movw	r24, r22
    47de:	8c 83       	std	Y+4, r24	; 0x04
    47e0:	9d 83       	std	Y+5, r25	; 0x05
    47e2:	ae 83       	std	Y+6, r26	; 0x06
    47e4:	bf 83       	std	Y+7, r27	; 0x07
    47e6:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    47ea:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    47ee:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    47f2:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    47f6:	61 e0       	ldi	r22, 0x01	; 1
    47f8:	2c 81       	ldd	r18, Y+4	; 0x04
    47fa:	3d 81       	ldd	r19, Y+5	; 0x05
    47fc:	4e 81       	ldd	r20, Y+6	; 0x06
    47fe:	5f 81       	ldd	r21, Y+7	; 0x07
    4800:	28 17       	cp	r18, r24
    4802:	39 07       	cpc	r19, r25
    4804:	4a 07       	cpc	r20, r26
    4806:	5b 07       	cpc	r21, r27
    4808:	09 f4       	brne	.+2      	; 0x480c <_Z17handleLinkBusMsgsv+0x758>
    480a:	60 e0       	ldi	r22, 0x00	; 0
    480c:	66 23       	and	r22, r22
    480e:	89 f0       	breq	.+34     	; 0x4832 <_Z17handleLinkBusMsgsv+0x77e>
    4810:	8c 81       	ldd	r24, Y+4	; 0x04
    4812:	9d 81       	ldd	r25, Y+5	; 0x05
    4814:	ae 81       	ldd	r26, Y+6	; 0x06
    4816:	bf 81       	ldd	r27, Y+7	; 0x07
    4818:	80 93 1b 47 	sts	0x471B, r24	; 0x80471b <g_event_finish_epoch>
    481c:	90 93 1c 47 	sts	0x471C, r25	; 0x80471c <g_event_finish_epoch+0x1>
    4820:	a0 93 1d 47 	sts	0x471D, r26	; 0x80471d <g_event_finish_epoch+0x2>
    4824:	b0 93 1e 47 	sts	0x471E, r27	; 0x80471e <g_event_finish_epoch+0x3>
    4828:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    482c:	8f 5f       	subi	r24, 0xFF	; 255
    482e:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4832:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4836:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    483a:	81 60       	ori	r24, 0x01	; 1
    483c:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4840:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4844:	d2 c3       	rjmp	.+1956   	; 0x4fea <_Z17handleLinkBusMsgsv+0xf36>
    4846:	81 e0       	ldi	r24, 0x01	; 1
    4848:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    484c:	8c 85       	ldd	r24, Y+12	; 0x0c
    484e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4850:	fc 01       	movw	r30, r24
    4852:	80 81       	ld	r24, Z
    4854:	81 30       	cpi	r24, 0x01	; 1
    4856:	d9 f5       	brne	.+118    	; 0x48ce <_Z17handleLinkBusMsgsv+0x81a>
    4858:	8c 85       	ldd	r24, Y+12	; 0x0c
    485a:	9d 85       	ldd	r25, Y+13	; 0x0d
    485c:	fc 01       	movw	r30, r24
    485e:	83 81       	ldd	r24, Z+3	; 0x03
    4860:	88 23       	and	r24, r24
    4862:	59 f0       	breq	.+22     	; 0x487a <_Z17handleLinkBusMsgsv+0x7c6>
    4864:	8c 85       	ldd	r24, Y+12	; 0x0c
    4866:	9d 85       	ldd	r25, Y+13	; 0x0d
    4868:	03 96       	adiw	r24, 0x03	; 3
    486a:	44 e1       	ldi	r20, 0x14	; 20
    486c:	50 e0       	ldi	r21, 0x00	; 0
    486e:	bc 01       	movw	r22, r24
    4870:	84 ea       	ldi	r24, 0xA4	; 164
    4872:	96 e4       	ldi	r25, 0x46	; 70
    4874:	0e 94 38 75 	call	0xea70	; 0xea70 <strncpy>
    4878:	c3 c3       	rjmp	.+1926   	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    487a:	80 e0       	ldi	r24, 0x00	; 0
    487c:	90 e0       	ldi	r25, 0x00	; 0
    487e:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    4882:	dc 01       	movw	r26, r24
    4884:	cb 01       	movw	r24, r22
    4886:	2b 2f       	mov	r18, r27
    4888:	2f 93       	push	r18
    488a:	2a 2f       	mov	r18, r26
    488c:	2f 93       	push	r18
    488e:	29 2f       	mov	r18, r25
    4890:	2f 93       	push	r18
    4892:	8f 93       	push	r24
    4894:	85 e6       	ldi	r24, 0x65	; 101
    4896:	90 e4       	ldi	r25, 0x40	; 64
    4898:	89 2f       	mov	r24, r25
    489a:	8f 93       	push	r24
    489c:	85 e6       	ldi	r24, 0x65	; 101
    489e:	90 e4       	ldi	r25, 0x40	; 64
    48a0:	8f 93       	push	r24
    48a2:	84 ea       	ldi	r24, 0xA4	; 164
    48a4:	96 e4       	ldi	r25, 0x46	; 70
    48a6:	89 2f       	mov	r24, r25
    48a8:	8f 93       	push	r24
    48aa:	84 ea       	ldi	r24, 0xA4	; 164
    48ac:	96 e4       	ldi	r25, 0x46	; 70
    48ae:	8f 93       	push	r24
    48b0:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    48b4:	8d b7       	in	r24, 0x3d	; 61
    48b6:	9e b7       	in	r25, 0x3e	; 62
    48b8:	08 96       	adiw	r24, 0x08	; 8
    48ba:	cd bf       	out	0x3d, r28	; 61
    48bc:	de bf       	out	0x3e, r29	; 62
    48be:	44 ea       	ldi	r20, 0xA4	; 164
    48c0:	56 e4       	ldi	r21, 0x46	; 70
    48c2:	69 e6       	ldi	r22, 0x69	; 105
    48c4:	70 e4       	ldi	r23, 0x40	; 64
    48c6:	83 e0       	ldi	r24, 0x03	; 3
    48c8:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    48cc:	99 c3       	rjmp	.+1842   	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    48ce:	1a 8e       	std	Y+26, r1	; 0x1a
    48d0:	1b 8e       	std	Y+27, r1	; 0x1b
    48d2:	1c 8e       	std	Y+28, r1	; 0x1c
    48d4:	1d 8e       	std	Y+29, r1	; 0x1d
    48d6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    48d8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    48da:	ac 8d       	ldd	r26, Y+28	; 0x1c
    48dc:	bd 8d       	ldd	r27, Y+29	; 0x1d
    48de:	bc 01       	movw	r22, r24
    48e0:	cd 01       	movw	r24, r26
    48e2:	0e 94 dd 02 	call	0x5ba	; 0x5ba <set_system_time>
    48e6:	8c c3       	rjmp	.+1816   	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    48e8:	8c 85       	ldd	r24, Y+12	; 0x0c
    48ea:	9d 85       	ldd	r25, Y+13	; 0x0d
    48ec:	fc 01       	movw	r30, r24
    48ee:	80 81       	ld	r24, Z
    48f0:	81 30       	cpi	r24, 0x01	; 1
    48f2:	09 f0       	breq	.+2      	; 0x48f6 <_Z17handleLinkBusMsgsv+0x842>
    48f4:	5a c0       	rjmp	.+180    	; 0x49aa <_Z17handleLinkBusMsgsv+0x8f6>
    48f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    48f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    48fa:	fc 01       	movw	r30, r24
    48fc:	83 81       	ldd	r24, Z+3	; 0x03
    48fe:	88 23       	and	r24, r24
    4900:	d9 f1       	breq	.+118    	; 0x4978 <_Z17handleLinkBusMsgsv+0x8c4>
    4902:	8c 85       	ldd	r24, Y+12	; 0x0c
    4904:	9d 85       	ldd	r25, Y+13	; 0x0d
    4906:	03 96       	adiw	r24, 0x03	; 3
    4908:	bc 01       	movw	r22, r24
    490a:	8e ef       	ldi	r24, 0xFE	; 254
    490c:	96 e4       	ldi	r25, 0x46	; 70
    490e:	0e 94 1f 75 	call	0xea3e	; 0xea3e <strcmp>
    4912:	89 2b       	or	r24, r25
    4914:	09 f4       	brne	.+2      	; 0x4918 <_Z17handleLinkBusMsgsv+0x864>
    4916:	3f c0       	rjmp	.+126    	; 0x4996 <_Z17handleLinkBusMsgsv+0x8e2>
    4918:	8c 85       	ldd	r24, Y+12	; 0x0c
    491a:	9d 85       	ldd	r25, Y+13	; 0x0d
    491c:	03 96       	adiw	r24, 0x03	; 3
    491e:	44 e1       	ldi	r20, 0x14	; 20
    4920:	50 e0       	ldi	r21, 0x00	; 0
    4922:	bc 01       	movw	r22, r24
    4924:	8e ef       	ldi	r24, 0xFE	; 254
    4926:	96 e4       	ldi	r25, 0x46	; 70
    4928:	0e 94 38 75 	call	0xea70	; 0xea70 <strncpy>
    492c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4930:	88 2f       	mov	r24, r24
    4932:	90 e0       	ldi	r25, 0x00	; 0
    4934:	bc 01       	movw	r22, r24
    4936:	8e ef       	ldi	r24, 0xFE	; 254
    4938:	96 e4       	ldi	r25, 0x46	; 70
    493a:	0e 94 ca 52 	call	0xa594	; 0xa594 <_Z26timeRequiredToSendStrAtWPMPcj>
    493e:	8c 50       	subi	r24, 0x0C	; 12
    4940:	9e 4f       	sbci	r25, 0xFE	; 254
    4942:	96 95       	lsr	r25
    4944:	87 95       	ror	r24
    4946:	96 95       	lsr	r25
    4948:	87 95       	ror	r24
    494a:	96 95       	lsr	r25
    494c:	87 95       	ror	r24
    494e:	9c 01       	movw	r18, r24
    4950:	a5 ec       	ldi	r26, 0xC5	; 197
    4952:	b0 e2       	ldi	r27, 0x20	; 32
    4954:	0e 94 56 73 	call	0xe6ac	; 0xe6ac <__umulhisi3>
    4958:	92 95       	swap	r25
    495a:	82 95       	swap	r24
    495c:	8f 70       	andi	r24, 0x0F	; 15
    495e:	89 27       	eor	r24, r25
    4960:	9f 70       	andi	r25, 0x0F	; 15
    4962:	89 27       	eor	r24, r25
    4964:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <g_time_needed_for_ID>
    4968:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <g_time_needed_for_ID+0x1>
    496c:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4970:	8f 5f       	subi	r24, 0xFF	; 255
    4972:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4976:	0f c0       	rjmp	.+30     	; 0x4996 <_Z17handleLinkBusMsgsv+0x8e2>
    4978:	80 91 fe 46 	lds	r24, 0x46FE	; 0x8046fe <g_messages_text+0x15>
    497c:	88 23       	and	r24, r24
    497e:	59 f0       	breq	.+22     	; 0x4996 <_Z17handleLinkBusMsgsv+0x8e2>
    4980:	10 92 fe 46 	sts	0x46FE, r1	; 0x8046fe <g_messages_text+0x15>
    4984:	10 92 13 47 	sts	0x4713, r1	; 0x804713 <g_time_needed_for_ID>
    4988:	10 92 14 47 	sts	0x4714, r1	; 0x804714 <g_time_needed_for_ID+0x1>
    498c:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4990:	8f 5f       	subi	r24, 0xFF	; 255
    4992:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4996:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    499a:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    499e:	91 60       	ori	r25, 0x01	; 1
    49a0:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    49a4:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    49a8:	22 c3       	rjmp	.+1604   	; 0x4fee <_Z17handleLinkBusMsgsv+0xf3a>
    49aa:	80 91 fe 46 	lds	r24, 0x46FE	; 0x8046fe <g_messages_text+0x15>
    49ae:	88 23       	and	r24, r24
    49b0:	09 f4       	brne	.+2      	; 0x49b4 <_Z17handleLinkBusMsgsv+0x900>
    49b2:	1d c3       	rjmp	.+1594   	; 0x4fee <_Z17handleLinkBusMsgsv+0xf3a>
    49b4:	8e ef       	ldi	r24, 0xFE	; 254
    49b6:	96 e4       	ldi	r25, 0x46	; 70
    49b8:	89 2f       	mov	r24, r25
    49ba:	8f 93       	push	r24
    49bc:	8e ef       	ldi	r24, 0xFE	; 254
    49be:	96 e4       	ldi	r25, 0x46	; 70
    49c0:	8f 93       	push	r24
    49c2:	8e ec       	ldi	r24, 0xCE	; 206
    49c4:	92 e4       	ldi	r25, 0x42	; 66
    49c6:	89 2f       	mov	r24, r25
    49c8:	8f 93       	push	r24
    49ca:	8e ec       	ldi	r24, 0xCE	; 206
    49cc:	92 e4       	ldi	r25, 0x42	; 66
    49ce:	8f 93       	push	r24
    49d0:	84 ea       	ldi	r24, 0xA4	; 164
    49d2:	96 e4       	ldi	r25, 0x46	; 70
    49d4:	89 2f       	mov	r24, r25
    49d6:	8f 93       	push	r24
    49d8:	84 ea       	ldi	r24, 0xA4	; 164
    49da:	96 e4       	ldi	r25, 0x46	; 70
    49dc:	8f 93       	push	r24
    49de:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    49e2:	0f 90       	pop	r0
    49e4:	0f 90       	pop	r0
    49e6:	0f 90       	pop	r0
    49e8:	0f 90       	pop	r0
    49ea:	0f 90       	pop	r0
    49ec:	0f 90       	pop	r0
    49ee:	84 ea       	ldi	r24, 0xA4	; 164
    49f0:	96 e4       	ldi	r25, 0x46	; 70
    49f2:	0e 94 8c 50 	call	0xa118	; 0xa118 <_Z12lb_send_textPc>
    49f6:	19 82       	std	Y+1, r1	; 0x01
    49f8:	fa c2       	rjmp	.+1524   	; 0x4fee <_Z17handleLinkBusMsgsv+0xf3a>
    49fa:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    49fe:	8e 8f       	std	Y+30, r24	; 0x1e
    4a00:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a02:	9d 85       	ldd	r25, Y+13	; 0x0d
    4a04:	fc 01       	movw	r30, r24
    4a06:	83 81       	ldd	r24, Z+3	; 0x03
    4a08:	89 34       	cpi	r24, 0x49	; 73
    4a0a:	09 f0       	breq	.+2      	; 0x4a0e <_Z17handleLinkBusMsgsv+0x95a>
    4a0c:	7a c0       	rjmp	.+244    	; 0x4b02 <_Z17handleLinkBusMsgsv+0xa4e>
    4a0e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a10:	9d 85       	ldd	r25, Y+13	; 0x0d
    4a12:	fc 01       	movw	r30, r24
    4a14:	80 8d       	ldd	r24, Z+24	; 0x18
    4a16:	88 23       	and	r24, r24
    4a18:	09 f4       	brne	.+2      	; 0x4a1c <_Z17handleLinkBusMsgsv+0x968>
    4a1a:	eb c2       	rjmp	.+1494   	; 0x4ff2 <_Z17handleLinkBusMsgsv+0xf3e>
    4a1c:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a1e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4a20:	48 96       	adiw	r24, 0x18	; 24
    4a22:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    4a26:	dc 01       	movw	r26, r24
    4a28:	cb 01       	movw	r24, r22
    4a2a:	8f 8f       	std	Y+31, r24	; 0x1f
    4a2c:	98 a3       	std	Y+32, r25	; 0x20
    4a2e:	a9 a3       	std	Y+33, r26	; 0x21
    4a30:	ba a3       	std	Y+34, r27	; 0x22
    4a32:	85 e0       	ldi	r24, 0x05	; 5
    4a34:	8b a3       	std	Y+35, r24	; 0x23
    4a36:	84 e1       	ldi	r24, 0x14	; 20
    4a38:	8c a3       	std	Y+36, r24	; 0x24
    4a3a:	8c a1       	ldd	r24, Y+36	; 0x24
    4a3c:	28 2f       	mov	r18, r24
    4a3e:	30 e0       	ldi	r19, 0x00	; 0
    4a40:	40 e0       	ldi	r20, 0x00	; 0
    4a42:	50 e0       	ldi	r21, 0x00	; 0
    4a44:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4a46:	98 a1       	ldd	r25, Y+32	; 0x20
    4a48:	a9 a1       	ldd	r26, Y+33	; 0x21
    4a4a:	ba a1       	ldd	r27, Y+34	; 0x22
    4a4c:	28 17       	cp	r18, r24
    4a4e:	39 07       	cpc	r19, r25
    4a50:	4a 07       	cpc	r20, r26
    4a52:	5b 07       	cpc	r21, r27
    4a54:	34 f4       	brge	.+12     	; 0x4a62 <_Z17handleLinkBusMsgsv+0x9ae>
    4a56:	8c a1       	ldd	r24, Y+36	; 0x24
    4a58:	88 2f       	mov	r24, r24
    4a5a:	90 e0       	ldi	r25, 0x00	; 0
    4a5c:	a0 e0       	ldi	r26, 0x00	; 0
    4a5e:	b0 e0       	ldi	r27, 0x00	; 0
    4a60:	10 c0       	rjmp	.+32     	; 0x4a82 <_Z17handleLinkBusMsgsv+0x9ce>
    4a62:	8b a1       	ldd	r24, Y+35	; 0x23
    4a64:	88 2f       	mov	r24, r24
    4a66:	90 e0       	ldi	r25, 0x00	; 0
    4a68:	a0 e0       	ldi	r26, 0x00	; 0
    4a6a:	b0 e0       	ldi	r27, 0x00	; 0
    4a6c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4a6e:	38 a1       	ldd	r19, Y+32	; 0x20
    4a70:	49 a1       	ldd	r20, Y+33	; 0x21
    4a72:	5a a1       	ldd	r21, Y+34	; 0x22
    4a74:	82 17       	cp	r24, r18
    4a76:	93 07       	cpc	r25, r19
    4a78:	a4 07       	cpc	r26, r20
    4a7a:	b5 07       	cpc	r27, r21
    4a7c:	14 f4       	brge	.+4      	; 0x4a82 <_Z17handleLinkBusMsgsv+0x9ce>
    4a7e:	da 01       	movw	r26, r20
    4a80:	c9 01       	movw	r24, r18
    4a82:	8e 8f       	std	Y+30, r24	; 0x1e
    4a84:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    4a88:	81 e0       	ldi	r24, 0x01	; 1
    4a8a:	2e 8d       	ldd	r18, Y+30	; 0x1e
    4a8c:	29 17       	cp	r18, r25
    4a8e:	09 f4       	brne	.+2      	; 0x4a92 <_Z17handleLinkBusMsgsv+0x9de>
    4a90:	80 e0       	ldi	r24, 0x00	; 0
    4a92:	88 23       	and	r24, r24
    4a94:	61 f1       	breq	.+88     	; 0x4aee <_Z17handleLinkBusMsgsv+0xa3a>
    4a96:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4a98:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    4a9c:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4aa0:	8f 5f       	subi	r24, 0xFF	; 255
    4aa2:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4aa6:	80 91 fe 46 	lds	r24, 0x46FE	; 0x8046fe <g_messages_text+0x15>
    4aaa:	88 23       	and	r24, r24
    4aac:	01 f1       	breq	.+64     	; 0x4aee <_Z17handleLinkBusMsgsv+0xa3a>
    4aae:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4ab2:	88 2f       	mov	r24, r24
    4ab4:	90 e0       	ldi	r25, 0x00	; 0
    4ab6:	bc 01       	movw	r22, r24
    4ab8:	8e ef       	ldi	r24, 0xFE	; 254
    4aba:	96 e4       	ldi	r25, 0x46	; 70
    4abc:	0e 94 ca 52 	call	0xa594	; 0xa594 <_Z26timeRequiredToSendStrAtWPMPcj>
    4ac0:	8c 50       	subi	r24, 0x0C	; 12
    4ac2:	9e 4f       	sbci	r25, 0xFE	; 254
    4ac4:	96 95       	lsr	r25
    4ac6:	87 95       	ror	r24
    4ac8:	96 95       	lsr	r25
    4aca:	87 95       	ror	r24
    4acc:	96 95       	lsr	r25
    4ace:	87 95       	ror	r24
    4ad0:	9c 01       	movw	r18, r24
    4ad2:	a5 ec       	ldi	r26, 0xC5	; 197
    4ad4:	b0 e2       	ldi	r27, 0x20	; 32
    4ad6:	0e 94 56 73 	call	0xe6ac	; 0xe6ac <__umulhisi3>
    4ada:	92 95       	swap	r25
    4adc:	82 95       	swap	r24
    4ade:	8f 70       	andi	r24, 0x0F	; 15
    4ae0:	89 27       	eor	r24, r25
    4ae2:	9f 70       	andi	r25, 0x0F	; 15
    4ae4:	89 27       	eor	r24, r25
    4ae6:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <g_time_needed_for_ID>
    4aea:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <g_time_needed_for_ID+0x1>
    4aee:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4af2:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4af6:	92 60       	ori	r25, 0x02	; 2
    4af8:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4afc:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4b00:	78 c2       	rjmp	.+1264   	; 0x4ff2 <_Z17handleLinkBusMsgsv+0xf3e>
    4b02:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b04:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b06:	fc 01       	movw	r30, r24
    4b08:	83 81       	ldd	r24, Z+3	; 0x03
    4b0a:	80 35       	cpi	r24, 0x50	; 80
    4b0c:	09 f0       	breq	.+2      	; 0x4b10 <_Z17handleLinkBusMsgsv+0xa5c>
    4b0e:	71 c2       	rjmp	.+1250   	; 0x4ff2 <_Z17handleLinkBusMsgsv+0xf3e>
    4b10:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b12:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b14:	fc 01       	movw	r30, r24
    4b16:	80 8d       	ldd	r24, Z+24	; 0x18
    4b18:	88 23       	and	r24, r24
    4b1a:	09 f4       	brne	.+2      	; 0x4b1e <_Z17handleLinkBusMsgsv+0xa6a>
    4b1c:	6a c2       	rjmp	.+1236   	; 0x4ff2 <_Z17handleLinkBusMsgsv+0xf3e>
    4b1e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b20:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b22:	48 96       	adiw	r24, 0x18	; 24
    4b24:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    4b28:	dc 01       	movw	r26, r24
    4b2a:	cb 01       	movw	r24, r22
    4b2c:	8d a3       	std	Y+37, r24	; 0x25
    4b2e:	9e a3       	std	Y+38, r25	; 0x26
    4b30:	af a3       	std	Y+39, r26	; 0x27
    4b32:	b8 a7       	std	Y+40, r27	; 0x28
    4b34:	85 e0       	ldi	r24, 0x05	; 5
    4b36:	89 a7       	std	Y+41, r24	; 0x29
    4b38:	84 e1       	ldi	r24, 0x14	; 20
    4b3a:	8a a7       	std	Y+42, r24	; 0x2a
    4b3c:	8a a5       	ldd	r24, Y+42	; 0x2a
    4b3e:	28 2f       	mov	r18, r24
    4b40:	30 e0       	ldi	r19, 0x00	; 0
    4b42:	40 e0       	ldi	r20, 0x00	; 0
    4b44:	50 e0       	ldi	r21, 0x00	; 0
    4b46:	8d a1       	ldd	r24, Y+37	; 0x25
    4b48:	9e a1       	ldd	r25, Y+38	; 0x26
    4b4a:	af a1       	ldd	r26, Y+39	; 0x27
    4b4c:	b8 a5       	ldd	r27, Y+40	; 0x28
    4b4e:	28 17       	cp	r18, r24
    4b50:	39 07       	cpc	r19, r25
    4b52:	4a 07       	cpc	r20, r26
    4b54:	5b 07       	cpc	r21, r27
    4b56:	34 f4       	brge	.+12     	; 0x4b64 <_Z17handleLinkBusMsgsv+0xab0>
    4b58:	8a a5       	ldd	r24, Y+42	; 0x2a
    4b5a:	88 2f       	mov	r24, r24
    4b5c:	90 e0       	ldi	r25, 0x00	; 0
    4b5e:	a0 e0       	ldi	r26, 0x00	; 0
    4b60:	b0 e0       	ldi	r27, 0x00	; 0
    4b62:	10 c0       	rjmp	.+32     	; 0x4b84 <_Z17handleLinkBusMsgsv+0xad0>
    4b64:	89 a5       	ldd	r24, Y+41	; 0x29
    4b66:	88 2f       	mov	r24, r24
    4b68:	90 e0       	ldi	r25, 0x00	; 0
    4b6a:	a0 e0       	ldi	r26, 0x00	; 0
    4b6c:	b0 e0       	ldi	r27, 0x00	; 0
    4b6e:	2d a1       	ldd	r18, Y+37	; 0x25
    4b70:	3e a1       	ldd	r19, Y+38	; 0x26
    4b72:	4f a1       	ldd	r20, Y+39	; 0x27
    4b74:	58 a5       	ldd	r21, Y+40	; 0x28
    4b76:	82 17       	cp	r24, r18
    4b78:	93 07       	cpc	r25, r19
    4b7a:	a4 07       	cpc	r26, r20
    4b7c:	b5 07       	cpc	r27, r21
    4b7e:	14 f4       	brge	.+4      	; 0x4b84 <_Z17handleLinkBusMsgsv+0xad0>
    4b80:	da 01       	movw	r26, r20
    4b82:	c9 01       	movw	r24, r18
    4b84:	8e 8f       	std	Y+30, r24	; 0x1e
    4b86:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    4b8a:	81 e0       	ldi	r24, 0x01	; 1
    4b8c:	2e 8d       	ldd	r18, Y+30	; 0x1e
    4b8e:	29 17       	cp	r18, r25
    4b90:	09 f4       	brne	.+2      	; 0x4b94 <_Z17handleLinkBusMsgsv+0xae0>
    4b92:	80 e0       	ldi	r24, 0x00	; 0
    4b94:	88 23       	and	r24, r24
    4b96:	81 f0       	breq	.+32     	; 0x4bb8 <_Z17handleLinkBusMsgsv+0xb04>
    4b98:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4b9a:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4b9e:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ba2:	8f 5f       	subi	r24, 0xFF	; 255
    4ba4:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ba8:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4bac:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    4bb0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4bb4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4bb8:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4bbc:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4bc0:	94 60       	ori	r25, 0x04	; 4
    4bc2:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4bc6:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4bca:	13 c2       	rjmp	.+1062   	; 0x4ff2 <_Z17handleLinkBusMsgsv+0xf3e>
    4bcc:	1b a6       	std	Y+43, r1	; 0x2b
    4bce:	1c a6       	std	Y+44, r1	; 0x2c
    4bd0:	8c 85       	ldd	r24, Y+12	; 0x0c
    4bd2:	9d 85       	ldd	r25, Y+13	; 0x0d
    4bd4:	fc 01       	movw	r30, r24
    4bd6:	83 81       	ldd	r24, Z+3	; 0x03
    4bd8:	80 33       	cpi	r24, 0x30	; 48
    4bda:	91 f5       	brne	.+100    	; 0x4c40 <_Z17handleLinkBusMsgsv+0xb8c>
    4bdc:	8c 85       	ldd	r24, Y+12	; 0x0c
    4bde:	9d 85       	ldd	r25, Y+13	; 0x0d
    4be0:	fc 01       	movw	r30, r24
    4be2:	80 8d       	ldd	r24, Z+24	; 0x18
    4be4:	88 23       	and	r24, r24
    4be6:	09 f4       	brne	.+2      	; 0x4bea <_Z17handleLinkBusMsgsv+0xb36>
    4be8:	06 c2       	rjmp	.+1036   	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4bea:	8c 85       	ldd	r24, Y+12	; 0x0c
    4bec:	9d 85       	ldd	r25, Y+13	; 0x0d
    4bee:	48 96       	adiw	r24, 0x18	; 24
    4bf0:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    4bf4:	dc 01       	movw	r26, r24
    4bf6:	cb 01       	movw	r24, r22
    4bf8:	8b a7       	std	Y+43, r24	; 0x2b
    4bfa:	9c a7       	std	Y+44, r25	; 0x2c
    4bfc:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    4c00:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    4c04:	41 e0       	ldi	r20, 0x01	; 1
    4c06:	2b a5       	ldd	r18, Y+43	; 0x2b
    4c08:	3c a5       	ldd	r19, Y+44	; 0x2c
    4c0a:	28 17       	cp	r18, r24
    4c0c:	39 07       	cpc	r19, r25
    4c0e:	09 f4       	brne	.+2      	; 0x4c12 <_Z17handleLinkBusMsgsv+0xb5e>
    4c10:	40 e0       	ldi	r20, 0x00	; 0
    4c12:	44 23       	and	r20, r20
    4c14:	59 f0       	breq	.+22     	; 0x4c2c <_Z17handleLinkBusMsgsv+0xb78>
    4c16:	8b a5       	ldd	r24, Y+43	; 0x2b
    4c18:	9c a5       	ldd	r25, Y+44	; 0x2c
    4c1a:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4c1e:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    4c22:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c26:	8f 5f       	subi	r24, 0xFF	; 255
    4c28:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c2c:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4c30:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4c34:	84 60       	ori	r24, 0x04	; 4
    4c36:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4c3a:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4c3e:	db c1       	rjmp	.+950    	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4c40:	8c 85       	ldd	r24, Y+12	; 0x0c
    4c42:	9d 85       	ldd	r25, Y+13	; 0x0d
    4c44:	fc 01       	movw	r30, r24
    4c46:	83 81       	ldd	r24, Z+3	; 0x03
    4c48:	81 33       	cpi	r24, 0x31	; 49
    4c4a:	91 f5       	brne	.+100    	; 0x4cb0 <_Z17handleLinkBusMsgsv+0xbfc>
    4c4c:	8c 85       	ldd	r24, Y+12	; 0x0c
    4c4e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4c50:	fc 01       	movw	r30, r24
    4c52:	80 8d       	ldd	r24, Z+24	; 0x18
    4c54:	88 23       	and	r24, r24
    4c56:	09 f4       	brne	.+2      	; 0x4c5a <_Z17handleLinkBusMsgsv+0xba6>
    4c58:	ce c1       	rjmp	.+924    	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4c5a:	8c 85       	ldd	r24, Y+12	; 0x0c
    4c5c:	9d 85       	ldd	r25, Y+13	; 0x0d
    4c5e:	48 96       	adiw	r24, 0x18	; 24
    4c60:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    4c64:	dc 01       	movw	r26, r24
    4c66:	cb 01       	movw	r24, r22
    4c68:	8b a7       	std	Y+43, r24	; 0x2b
    4c6a:	9c a7       	std	Y+44, r25	; 0x2c
    4c6c:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    4c70:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    4c74:	41 e0       	ldi	r20, 0x01	; 1
    4c76:	2b a5       	ldd	r18, Y+43	; 0x2b
    4c78:	3c a5       	ldd	r19, Y+44	; 0x2c
    4c7a:	28 17       	cp	r18, r24
    4c7c:	39 07       	cpc	r19, r25
    4c7e:	09 f4       	brne	.+2      	; 0x4c82 <_Z17handleLinkBusMsgsv+0xbce>
    4c80:	40 e0       	ldi	r20, 0x00	; 0
    4c82:	44 23       	and	r20, r20
    4c84:	59 f0       	breq	.+22     	; 0x4c9c <_Z17handleLinkBusMsgsv+0xbe8>
    4c86:	8b a5       	ldd	r24, Y+43	; 0x2b
    4c88:	9c a5       	ldd	r25, Y+44	; 0x2c
    4c8a:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4c8e:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4c92:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c96:	8f 5f       	subi	r24, 0xFF	; 255
    4c98:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c9c:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4ca0:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4ca4:	88 60       	ori	r24, 0x08	; 8
    4ca6:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4caa:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4cae:	a3 c1       	rjmp	.+838    	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4cb0:	8c 85       	ldd	r24, Y+12	; 0x0c
    4cb2:	9d 85       	ldd	r25, Y+13	; 0x0d
    4cb4:	fc 01       	movw	r30, r24
    4cb6:	83 81       	ldd	r24, Z+3	; 0x03
    4cb8:	89 34       	cpi	r24, 0x49	; 73
    4cba:	91 f5       	brne	.+100    	; 0x4d20 <_Z17handleLinkBusMsgsv+0xc6c>
    4cbc:	8c 85       	ldd	r24, Y+12	; 0x0c
    4cbe:	9d 85       	ldd	r25, Y+13	; 0x0d
    4cc0:	fc 01       	movw	r30, r24
    4cc2:	80 8d       	ldd	r24, Z+24	; 0x18
    4cc4:	88 23       	and	r24, r24
    4cc6:	09 f4       	brne	.+2      	; 0x4cca <_Z17handleLinkBusMsgsv+0xc16>
    4cc8:	96 c1       	rjmp	.+812    	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4cca:	8c 85       	ldd	r24, Y+12	; 0x0c
    4ccc:	9d 85       	ldd	r25, Y+13	; 0x0d
    4cce:	48 96       	adiw	r24, 0x18	; 24
    4cd0:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    4cd4:	dc 01       	movw	r26, r24
    4cd6:	cb 01       	movw	r24, r22
    4cd8:	8b a7       	std	Y+43, r24	; 0x2b
    4cda:	9c a7       	std	Y+44, r25	; 0x2c
    4cdc:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    4ce0:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    4ce4:	41 e0       	ldi	r20, 0x01	; 1
    4ce6:	2b a5       	ldd	r18, Y+43	; 0x2b
    4ce8:	3c a5       	ldd	r19, Y+44	; 0x2c
    4cea:	28 17       	cp	r18, r24
    4cec:	39 07       	cpc	r19, r25
    4cee:	09 f4       	brne	.+2      	; 0x4cf2 <_Z17handleLinkBusMsgsv+0xc3e>
    4cf0:	40 e0       	ldi	r20, 0x00	; 0
    4cf2:	44 23       	and	r20, r20
    4cf4:	59 f0       	breq	.+22     	; 0x4d0c <_Z17handleLinkBusMsgsv+0xc58>
    4cf6:	8b a5       	ldd	r24, Y+43	; 0x2b
    4cf8:	9c a5       	ldd	r25, Y+44	; 0x2c
    4cfa:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    4cfe:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    4d02:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d06:	8f 5f       	subi	r24, 0xFF	; 255
    4d08:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d0c:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4d10:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4d14:	80 62       	ori	r24, 0x20	; 32
    4d16:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4d1a:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4d1e:	6b c1       	rjmp	.+726    	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4d20:	8c 85       	ldd	r24, Y+12	; 0x0c
    4d22:	9d 85       	ldd	r25, Y+13	; 0x0d
    4d24:	fc 01       	movw	r30, r24
    4d26:	83 81       	ldd	r24, Z+3	; 0x03
    4d28:	84 34       	cpi	r24, 0x44	; 68
    4d2a:	09 f0       	breq	.+2      	; 0x4d2e <_Z17handleLinkBusMsgsv+0xc7a>
    4d2c:	64 c1       	rjmp	.+712    	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4d2e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4d30:	9d 85       	ldd	r25, Y+13	; 0x0d
    4d32:	fc 01       	movw	r30, r24
    4d34:	80 8d       	ldd	r24, Z+24	; 0x18
    4d36:	88 23       	and	r24, r24
    4d38:	09 f4       	brne	.+2      	; 0x4d3c <_Z17handleLinkBusMsgsv+0xc88>
    4d3a:	5d c1       	rjmp	.+698    	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4d3c:	8c 85       	ldd	r24, Y+12	; 0x0c
    4d3e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4d40:	48 96       	adiw	r24, 0x18	; 24
    4d42:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    4d46:	dc 01       	movw	r26, r24
    4d48:	cb 01       	movw	r24, r22
    4d4a:	8b a7       	std	Y+43, r24	; 0x2b
    4d4c:	9c a7       	std	Y+44, r25	; 0x2c
    4d4e:	80 91 15 47 	lds	r24, 0x4715	; 0x804715 <g_intra_cycle_delay_time>
    4d52:	90 91 16 47 	lds	r25, 0x4716	; 0x804716 <g_intra_cycle_delay_time+0x1>
    4d56:	41 e0       	ldi	r20, 0x01	; 1
    4d58:	2b a5       	ldd	r18, Y+43	; 0x2b
    4d5a:	3c a5       	ldd	r19, Y+44	; 0x2c
    4d5c:	28 17       	cp	r18, r24
    4d5e:	39 07       	cpc	r19, r25
    4d60:	09 f4       	brne	.+2      	; 0x4d64 <_Z17handleLinkBusMsgsv+0xcb0>
    4d62:	40 e0       	ldi	r20, 0x00	; 0
    4d64:	44 23       	and	r20, r20
    4d66:	59 f0       	breq	.+22     	; 0x4d7e <_Z17handleLinkBusMsgsv+0xcca>
    4d68:	8b a5       	ldd	r24, Y+43	; 0x2b
    4d6a:	9c a5       	ldd	r25, Y+44	; 0x2c
    4d6c:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    4d70:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    4d74:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d78:	8f 5f       	subi	r24, 0xFF	; 255
    4d7a:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d7e:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4d82:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4d86:	80 61       	ori	r24, 0x10	; 16
    4d88:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4d8c:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4d90:	32 c1       	rjmp	.+612    	; 0x4ff6 <_Z17handleLinkBusMsgsv+0xf42>
    4d92:	8c 85       	ldd	r24, Y+12	; 0x0c
    4d94:	9d 85       	ldd	r25, Y+13	; 0x0d
    4d96:	fc 01       	movw	r30, r24
    4d98:	83 81       	ldd	r24, Z+3	; 0x03
    4d9a:	88 23       	and	r24, r24
    4d9c:	09 f4       	brne	.+2      	; 0x4da0 <_Z17handleLinkBusMsgsv+0xcec>
    4d9e:	2d c1       	rjmp	.+602    	; 0x4ffa <_Z17handleLinkBusMsgsv+0xf46>
    4da0:	8c 85       	ldd	r24, Y+12	; 0x0c
    4da2:	9d 85       	ldd	r25, Y+13	; 0x0d
    4da4:	03 96       	adiw	r24, 0x03	; 3
    4da6:	bc 01       	movw	r22, r24
    4da8:	89 ee       	ldi	r24, 0xE9	; 233
    4daa:	96 e4       	ldi	r25, 0x46	; 70
    4dac:	0e 94 1f 75 	call	0xea3e	; 0xea3e <strcmp>
    4db0:	89 2b       	or	r24, r25
    4db2:	79 f0       	breq	.+30     	; 0x4dd2 <_Z17handleLinkBusMsgsv+0xd1e>
    4db4:	8c 85       	ldd	r24, Y+12	; 0x0c
    4db6:	9d 85       	ldd	r25, Y+13	; 0x0d
    4db8:	03 96       	adiw	r24, 0x03	; 3
    4dba:	44 e1       	ldi	r20, 0x14	; 20
    4dbc:	50 e0       	ldi	r21, 0x00	; 0
    4dbe:	bc 01       	movw	r22, r24
    4dc0:	89 ee       	ldi	r24, 0xE9	; 233
    4dc2:	96 e4       	ldi	r25, 0x46	; 70
    4dc4:	0e 94 38 75 	call	0xea70	; 0xea70 <strncpy>
    4dc8:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4dcc:	8f 5f       	subi	r24, 0xFF	; 255
    4dce:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4dd2:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4dd6:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4dda:	82 60       	ori	r24, 0x02	; 2
    4ddc:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4de0:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4de4:	0a c1       	rjmp	.+532    	; 0x4ffa <_Z17handleLinkBusMsgsv+0xf46>
    4de6:	18 86       	std	Y+8, r1	; 0x08
    4de8:	19 86       	std	Y+9, r1	; 0x09
    4dea:	1a 86       	std	Y+10, r1	; 0x0a
    4dec:	1b 86       	std	Y+11, r1	; 0x0b
    4dee:	8c 85       	ldd	r24, Y+12	; 0x0c
    4df0:	9d 85       	ldd	r25, Y+13	; 0x0d
    4df2:	fc 01       	movw	r30, r24
    4df4:	83 81       	ldd	r24, Z+3	; 0x03
    4df6:	88 23       	and	r24, r24
    4df8:	e9 f1       	breq	.+122    	; 0x4e74 <_Z17handleLinkBusMsgsv+0xdc0>
    4dfa:	8c 85       	ldd	r24, Y+12	; 0x0c
    4dfc:	9d 85       	ldd	r25, Y+13	; 0x0d
    4dfe:	03 96       	adiw	r24, 0x03	; 3
    4e00:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    4e04:	dc 01       	movw	r26, r24
    4e06:	cb 01       	movw	r24, r22
    4e08:	8b ab       	std	Y+51, r24	; 0x33
    4e0a:	9c ab       	std	Y+52, r25	; 0x34
    4e0c:	ad ab       	std	Y+53, r26	; 0x35
    4e0e:	be ab       	std	Y+54, r27	; 0x36
    4e10:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z14txGetFrequencyv>
    4e14:	9b 01       	movw	r18, r22
    4e16:	ac 01       	movw	r20, r24
    4e18:	8b a9       	ldd	r24, Y+51	; 0x33
    4e1a:	9c a9       	ldd	r25, Y+52	; 0x34
    4e1c:	ad a9       	ldd	r26, Y+53	; 0x35
    4e1e:	be a9       	ldd	r27, Y+54	; 0x36
    4e20:	61 e0       	ldi	r22, 0x01	; 1
    4e22:	28 17       	cp	r18, r24
    4e24:	39 07       	cpc	r19, r25
    4e26:	4a 07       	cpc	r20, r26
    4e28:	5b 07       	cpc	r21, r27
    4e2a:	09 f4       	brne	.+2      	; 0x4e2e <_Z17handleLinkBusMsgsv+0xd7a>
    4e2c:	60 e0       	ldi	r22, 0x00	; 0
    4e2e:	66 23       	and	r22, r22
    4e30:	b9 f0       	breq	.+46     	; 0x4e60 <_Z17handleLinkBusMsgsv+0xdac>
    4e32:	ce 01       	movw	r24, r28
    4e34:	c3 96       	adiw	r24, 0x33	; 51
    4e36:	61 e0       	ldi	r22, 0x01	; 1
    4e38:	0e 94 40 67 	call	0xce80	; 0xce80 <_Z14txSetFrequencyPmb>
    4e3c:	98 2f       	mov	r25, r24
    4e3e:	81 e0       	ldi	r24, 0x01	; 1
    4e40:	89 27       	eor	r24, r25
    4e42:	88 23       	and	r24, r24
    4e44:	69 f0       	breq	.+26     	; 0x4e60 <_Z17handleLinkBusMsgsv+0xdac>
    4e46:	8b a9       	ldd	r24, Y+51	; 0x33
    4e48:	9c a9       	ldd	r25, Y+52	; 0x34
    4e4a:	ad a9       	ldd	r26, Y+53	; 0x35
    4e4c:	be a9       	ldd	r27, Y+54	; 0x36
    4e4e:	88 87       	std	Y+8, r24	; 0x08
    4e50:	99 87       	std	Y+9, r25	; 0x09
    4e52:	aa 87       	std	Y+10, r26	; 0x0a
    4e54:	bb 87       	std	Y+11, r27	; 0x0b
    4e56:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4e5a:	8f 5f       	subi	r24, 0xFF	; 255
    4e5c:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4e60:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <g_Event_Configuration_Check>
    4e64:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <g_Event_Configuration_Check+0x1>
    4e68:	80 68       	ori	r24, 0x80	; 128
    4e6a:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <g_Event_Configuration_Check>
    4e6e:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <g_Event_Configuration_Check+0x1>
    4e72:	08 c0       	rjmp	.+16     	; 0x4e84 <_Z17handleLinkBusMsgsv+0xdd0>
    4e74:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z14txGetFrequencyv>
    4e78:	dc 01       	movw	r26, r24
    4e7a:	cb 01       	movw	r24, r22
    4e7c:	88 87       	std	Y+8, r24	; 0x08
    4e7e:	99 87       	std	Y+9, r25	; 0x09
    4e80:	aa 87       	std	Y+10, r26	; 0x0a
    4e82:	bb 87       	std	Y+11, r27	; 0x0b
    4e84:	88 85       	ldd	r24, Y+8	; 0x08
    4e86:	99 85       	ldd	r25, Y+9	; 0x09
    4e88:	aa 85       	ldd	r26, Y+10	; 0x0a
    4e8a:	bb 85       	ldd	r27, Y+11	; 0x0b
    4e8c:	89 2b       	or	r24, r25
    4e8e:	8a 2b       	or	r24, r26
    4e90:	8b 2b       	or	r24, r27
    4e92:	09 f4       	brne	.+2      	; 0x4e96 <_Z17handleLinkBusMsgsv+0xde2>
    4e94:	b4 c0       	rjmp	.+360    	; 0x4ffe <_Z17handleLinkBusMsgsv+0xf4a>
    4e96:	8b 85       	ldd	r24, Y+11	; 0x0b
    4e98:	8f 93       	push	r24
    4e9a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e9c:	8f 93       	push	r24
    4e9e:	89 85       	ldd	r24, Y+9	; 0x09
    4ea0:	8f 93       	push	r24
    4ea2:	88 85       	ldd	r24, Y+8	; 0x08
    4ea4:	8f 93       	push	r24
    4ea6:	87 ed       	ldi	r24, 0xD7	; 215
    4ea8:	92 e4       	ldi	r25, 0x42	; 66
    4eaa:	89 2f       	mov	r24, r25
    4eac:	8f 93       	push	r24
    4eae:	87 ed       	ldi	r24, 0xD7	; 215
    4eb0:	92 e4       	ldi	r25, 0x42	; 66
    4eb2:	8f 93       	push	r24
    4eb4:	84 ea       	ldi	r24, 0xA4	; 164
    4eb6:	96 e4       	ldi	r25, 0x46	; 70
    4eb8:	89 2f       	mov	r24, r25
    4eba:	8f 93       	push	r24
    4ebc:	84 ea       	ldi	r24, 0xA4	; 164
    4ebe:	96 e4       	ldi	r25, 0x46	; 70
    4ec0:	8f 93       	push	r24
    4ec2:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    4ec6:	8d b7       	in	r24, 0x3d	; 61
    4ec8:	9e b7       	in	r25, 0x3e	; 62
    4eca:	08 96       	adiw	r24, 0x08	; 8
    4ecc:	cd bf       	out	0x3d, r28	; 61
    4ece:	de bf       	out	0x3e, r29	; 62
    4ed0:	44 ea       	ldi	r20, 0xA4	; 164
    4ed2:	56 e4       	ldi	r21, 0x46	; 70
    4ed4:	6c ed       	ldi	r22, 0xDC	; 220
    4ed6:	72 e4       	ldi	r23, 0x42	; 66
    4ed8:	83 e0       	ldi	r24, 0x03	; 3
    4eda:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4ede:	8f c0       	rjmp	.+286    	; 0x4ffe <_Z17handleLinkBusMsgsv+0xf4a>
    4ee0:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZL22g_lastConversionResult>
    4ee4:	90 91 2c 47 	lds	r25, 0x472C	; 0x80472c <_ZL22g_lastConversionResult+0x1>
    4ee8:	cc 01       	movw	r24, r24
    4eea:	a0 e0       	ldi	r26, 0x00	; 0
    4eec:	b0 e0       	ldi	r27, 0x00	; 0
    4eee:	bc 01       	movw	r22, r24
    4ef0:	cd 01       	movw	r24, r26
    4ef2:	0e 94 6f 71 	call	0xe2de	; 0xe2de <__floatunsisf>
    4ef6:	dc 01       	movw	r26, r24
    4ef8:	cb 01       	movw	r24, r22
    4efa:	8d a7       	std	Y+45, r24	; 0x2d
    4efc:	9e a7       	std	Y+46, r25	; 0x2e
    4efe:	af a7       	std	Y+47, r26	; 0x2f
    4f00:	b8 ab       	std	Y+48, r27	; 0x30
    4f02:	20 e0       	ldi	r18, 0x00	; 0
    4f04:	30 e0       	ldi	r19, 0x00	; 0
    4f06:	4c e2       	ldi	r20, 0x2C	; 44
    4f08:	53 e4       	ldi	r21, 0x43	; 67
    4f0a:	6d a5       	ldd	r22, Y+45	; 0x2d
    4f0c:	7e a5       	ldd	r23, Y+46	; 0x2e
    4f0e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4f10:	98 a9       	ldd	r25, Y+48	; 0x30
    4f12:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__mulsf3>
    4f16:	dc 01       	movw	r26, r24
    4f18:	cb 01       	movw	r24, r22
    4f1a:	8d a7       	std	Y+45, r24	; 0x2d
    4f1c:	9e a7       	std	Y+46, r25	; 0x2e
    4f1e:	af a7       	std	Y+47, r26	; 0x2f
    4f20:	b8 ab       	std	Y+48, r27	; 0x30
    4f22:	2f e6       	ldi	r18, 0x6F	; 111
    4f24:	32 e1       	ldi	r19, 0x12	; 18
    4f26:	43 e0       	ldi	r20, 0x03	; 3
    4f28:	5a e3       	ldi	r21, 0x3A	; 58
    4f2a:	6d a5       	ldd	r22, Y+45	; 0x2d
    4f2c:	7e a5       	ldd	r23, Y+46	; 0x2e
    4f2e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4f30:	98 a9       	ldd	r25, Y+48	; 0x30
    4f32:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__mulsf3>
    4f36:	dc 01       	movw	r26, r24
    4f38:	cb 01       	movw	r24, r22
    4f3a:	8d a7       	std	Y+45, r24	; 0x2d
    4f3c:	9e a7       	std	Y+46, r25	; 0x2e
    4f3e:	af a7       	std	Y+47, r26	; 0x2f
    4f40:	b8 ab       	std	Y+48, r27	; 0x30
    4f42:	20 e0       	ldi	r18, 0x00	; 0
    4f44:	30 e0       	ldi	r19, 0x00	; 0
    4f46:	40 e8       	ldi	r20, 0x80	; 128
    4f48:	5f e3       	ldi	r21, 0x3F	; 63
    4f4a:	6d a5       	ldd	r22, Y+45	; 0x2d
    4f4c:	7e a5       	ldd	r23, Y+46	; 0x2e
    4f4e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4f50:	98 a9       	ldd	r25, Y+48	; 0x30
    4f52:	0e 94 3f 70 	call	0xe07e	; 0xe07e <__addsf3>
    4f56:	dc 01       	movw	r26, r24
    4f58:	cb 01       	movw	r24, r22
    4f5a:	8d a7       	std	Y+45, r24	; 0x2d
    4f5c:	9e a7       	std	Y+46, r25	; 0x2e
    4f5e:	af a7       	std	Y+47, r26	; 0x2f
    4f60:	b8 ab       	std	Y+48, r27	; 0x30
    4f62:	8d a5       	ldd	r24, Y+45	; 0x2d
    4f64:	9e a5       	ldd	r25, Y+46	; 0x2e
    4f66:	af a5       	ldd	r26, Y+47	; 0x2f
    4f68:	b8 a9       	ldd	r27, Y+48	; 0x30
    4f6a:	04 ea       	ldi	r16, 0xA4	; 164
    4f6c:	16 e4       	ldi	r17, 0x46	; 70
    4f6e:	20 e0       	ldi	r18, 0x00	; 0
    4f70:	44 e0       	ldi	r20, 0x04	; 4
    4f72:	bc 01       	movw	r22, r24
    4f74:	cd 01       	movw	r24, r26
    4f76:	0e 94 70 73 	call	0xe6e0	; 0xe6e0 <dtostrf>
    4f7a:	10 92 a9 46 	sts	0x46A9, r1	; 0x8046a9 <_ZL9g_tempStr+0x5>
    4f7e:	60 ee       	ldi	r22, 0xE0	; 224
    4f80:	72 e4       	ldi	r23, 0x42	; 66
    4f82:	84 ea       	ldi	r24, 0xA4	; 164
    4f84:	96 e4       	ldi	r25, 0x46	; 70
    4f86:	0e 94 38 51 	call	0xa270	; 0xa270 <_Z16lb_broadcast_strPKcS0_>
    4f8a:	3a c0       	rjmp	.+116    	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4f8c:	0e 94 f5 36 	call	0x6dea	; 0x6dea <_Z12temperatureCv>
    4f90:	dc 01       	movw	r26, r24
    4f92:	cb 01       	movw	r24, r22
    4f94:	04 ea       	ldi	r16, 0xA4	; 164
    4f96:	16 e4       	ldi	r17, 0x46	; 70
    4f98:	21 e0       	ldi	r18, 0x01	; 1
    4f9a:	44 e0       	ldi	r20, 0x04	; 4
    4f9c:	bc 01       	movw	r22, r24
    4f9e:	cd 01       	movw	r24, r26
    4fa0:	0e 94 70 73 	call	0xe6e0	; 0xe6e0 <dtostrf>
    4fa4:	10 92 a9 46 	sts	0x46A9, r1	; 0x8046a9 <_ZL9g_tempStr+0x5>
    4fa8:	65 ee       	ldi	r22, 0xE5	; 229
    4faa:	72 e4       	ldi	r23, 0x42	; 66
    4fac:	84 ea       	ldi	r24, 0xA4	; 164
    4fae:	96 e4       	ldi	r25, 0x46	; 70
    4fb0:	0e 94 38 51 	call	0xa270	; 0xa270 <_Z16lb_broadcast_strPKcS0_>
    4fb4:	25 c0       	rjmp	.+74     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fb6:	4a ee       	ldi	r20, 0xEA	; 234
    4fb8:	52 e4       	ldi	r21, 0x42	; 66
    4fba:	6e ee       	ldi	r22, 0xEE	; 238
    4fbc:	72 e4       	ldi	r23, 0x42	; 66
    4fbe:	83 e0       	ldi	r24, 0x03	; 3
    4fc0:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4fc4:	1d c0       	rjmp	.+58     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fc6:	19 82       	std	Y+1, r1	; 0x01
    4fc8:	82 ef       	ldi	r24, 0xF2	; 242
    4fca:	92 e4       	ldi	r25, 0x42	; 66
    4fcc:	0e 94 8c 50 	call	0xa118	; 0xa118 <_Z12lb_send_textPc>
    4fd0:	17 c0       	rjmp	.+46     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fd2:	00 00       	nop
    4fd4:	15 c0       	rjmp	.+42     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fd6:	00 00       	nop
    4fd8:	13 c0       	rjmp	.+38     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fda:	00 00       	nop
    4fdc:	11 c0       	rjmp	.+34     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fde:	00 00       	nop
    4fe0:	0f c0       	rjmp	.+30     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fe2:	00 00       	nop
    4fe4:	0d c0       	rjmp	.+26     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fe6:	00 00       	nop
    4fe8:	0b c0       	rjmp	.+22     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fea:	00 00       	nop
    4fec:	09 c0       	rjmp	.+18     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4fee:	00 00       	nop
    4ff0:	07 c0       	rjmp	.+14     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4ff2:	00 00       	nop
    4ff4:	05 c0       	rjmp	.+10     	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4ff6:	00 00       	nop
    4ff8:	03 c0       	rjmp	.+6      	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4ffa:	00 00       	nop
    4ffc:	01 c0       	rjmp	.+2      	; 0x5000 <_Z17handleLinkBusMsgsv+0xf4c>
    4ffe:	00 00       	nop
    5000:	89 81       	ldd	r24, Y+1	; 0x01
    5002:	88 23       	and	r24, r24
    5004:	21 f0       	breq	.+8      	; 0x500e <_Z17handleLinkBusMsgsv+0xf5a>
    5006:	88 ef       	ldi	r24, 0xF8	; 248
    5008:	92 e4       	ldi	r25, 0x42	; 66
    500a:	0e 94 8c 50 	call	0xa118	; 0xa118 <_Z12lb_send_textPc>
    500e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5010:	9d 85       	ldd	r25, Y+13	; 0x0d
    5012:	fc 01       	movw	r30, r24
    5014:	11 82       	std	Z+1, r1	; 0x01
    5016:	12 82       	std	Z+2, r1	; 0x02
    5018:	58 c8       	rjmp	.-3920   	; 0x40ca <_Z17handleLinkBusMsgsv+0x16>
    501a:	00 00       	nop
    501c:	e6 96       	adiw	r28, 0x36	; 54
    501e:	cd bf       	out	0x3d, r28	; 61
    5020:	de bf       	out	0x3e, r29	; 62
    5022:	df 91       	pop	r29
    5024:	cf 91       	pop	r28
    5026:	1f 91       	pop	r17
    5028:	0f 91       	pop	r16
    502a:	08 95       	ret

0000502c <_Z19updateAntennaStatusv>:
    502c:	cf 93       	push	r28
    502e:	df 93       	push	r29
    5030:	1f 92       	push	r1
    5032:	cd b7       	in	r28, 0x3d	; 61
    5034:	de b7       	in	r29, 0x3e	; 62
    5036:	0e 94 d6 2b 	call	0x57ac	; 0x57ac <_Z18antennaIsConnectedv>
    503a:	89 83       	std	Y+1, r24	; 0x01
    503c:	99 81       	ldd	r25, Y+1	; 0x01
    503e:	81 e0       	ldi	r24, 0x01	; 1
    5040:	89 27       	eor	r24, r25
    5042:	88 23       	and	r24, r24
    5044:	91 f0       	breq	.+36     	; 0x506a <_Z19updateAntennaStatusv+0x3e>
    5046:	90 91 da 46 	lds	r25, 0x46DA	; 0x8046da <g_antenna_connect_state>
    504a:	81 e0       	ldi	r24, 0x01	; 1
    504c:	91 30       	cpi	r25, 0x01	; 1
    504e:	09 f4       	brne	.+2      	; 0x5052 <_Z19updateAntennaStatusv+0x26>
    5050:	80 e0       	ldi	r24, 0x00	; 0
    5052:	88 23       	and	r24, r24
    5054:	31 f0       	breq	.+12     	; 0x5062 <_Z19updateAntennaStatusv+0x36>
    5056:	81 e0       	ldi	r24, 0x01	; 1
    5058:	80 93 da 46 	sts	0x46DA, r24	; 0x8046da <g_antenna_connect_state>
    505c:	81 e0       	ldi	r24, 0x01	; 1
    505e:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    5062:	83 e0       	ldi	r24, 0x03	; 3
    5064:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5068:	27 c0       	rjmp	.+78     	; 0x50b8 <_Z19updateAntennaStatusv+0x8c>
    506a:	90 91 da 46 	lds	r25, 0x46DA	; 0x8046da <g_antenna_connect_state>
    506e:	81 e0       	ldi	r24, 0x01	; 1
    5070:	92 30       	cpi	r25, 0x02	; 2
    5072:	09 f4       	brne	.+2      	; 0x5076 <_Z19updateAntennaStatusv+0x4a>
    5074:	80 e0       	ldi	r24, 0x00	; 0
    5076:	88 23       	and	r24, r24
    5078:	f9 f0       	breq	.+62     	; 0x50b8 <_Z19updateAntennaStatusv+0x8c>
    507a:	80 91 56 47 	lds	r24, 0x4756	; 0x804756 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    507e:	99 81       	ldd	r25, Y+1	; 0x01
    5080:	98 17       	cp	r25, r24
    5082:	b9 f4       	brne	.+46     	; 0x50b2 <_Z19updateAntennaStatusv+0x86>
    5084:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5088:	88 23       	and	r24, r24
    508a:	b1 f0       	breq	.+44     	; 0x50b8 <_Z19updateAntennaStatusv+0x8c>
    508c:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5090:	81 50       	subi	r24, 0x01	; 1
    5092:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5096:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <_ZZ19updateAntennaStatusvE16antennaReadCount>
    509a:	88 23       	and	r24, r24
    509c:	69 f4       	brne	.+26     	; 0x50b8 <_Z19updateAntennaStatusv+0x8c>
    509e:	82 e0       	ldi	r24, 0x02	; 2
    50a0:	80 93 da 46 	sts	0x46DA, r24	; 0x8046da <g_antenna_connect_state>
    50a4:	81 e0       	ldi	r24, 0x01	; 1
    50a6:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    50aa:	83 e0       	ldi	r24, 0x03	; 3
    50ac:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <_ZZ19updateAntennaStatusvE16antennaReadCount>
    50b0:	03 c0       	rjmp	.+6      	; 0x50b8 <_Z19updateAntennaStatusv+0x8c>
    50b2:	83 e0       	ldi	r24, 0x03	; 3
    50b4:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <_ZZ19updateAntennaStatusvE16antennaReadCount>
    50b8:	89 81       	ldd	r24, Y+1	; 0x01
    50ba:	80 93 56 47 	sts	0x4756, r24	; 0x804756 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    50be:	00 00       	nop
    50c0:	0f 90       	pop	r0
    50c2:	df 91       	pop	r29
    50c4:	cf 91       	pop	r28
    50c6:	08 95       	ret

000050c8 <_Z12eventEnabledv>:
    50c8:	cf 93       	push	r28
    50ca:	df 93       	push	r29
    50cc:	cd b7       	in	r28, 0x3d	; 61
    50ce:	de b7       	in	r29, 0x3e	; 62
    50d0:	28 97       	sbiw	r28, 0x08	; 8
    50d2:	cd bf       	out	0x3d, r28	; 61
    50d4:	de bf       	out	0x3e, r29	; 62
    50d6:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    50da:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    50de:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    50e2:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    50e6:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    50ea:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    50ee:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    50f2:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    50f6:	bc 01       	movw	r22, r24
    50f8:	cd 01       	movw	r24, r26
    50fa:	0e 94 8d 6c 	call	0xd91a	; 0xd91a <_Z7timeDifmm>
    50fe:	dc 01       	movw	r26, r24
    5100:	cb 01       	movw	r24, r22
    5102:	89 83       	std	Y+1, r24	; 0x01
    5104:	9a 83       	std	Y+2, r25	; 0x02
    5106:	ab 83       	std	Y+3, r26	; 0x03
    5108:	bc 83       	std	Y+4, r27	; 0x04
    510a:	80 e0       	ldi	r24, 0x00	; 0
    510c:	90 e0       	ldi	r25, 0x00	; 0
    510e:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    5112:	dc 01       	movw	r26, r24
    5114:	cb 01       	movw	r24, r22
    5116:	8d 83       	std	Y+5, r24	; 0x05
    5118:	9e 83       	std	Y+6, r25	; 0x06
    511a:	af 83       	std	Y+7, r26	; 0x07
    511c:	b8 87       	std	Y+8, r27	; 0x08
    511e:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    5122:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    5126:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    512a:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    512e:	8d 81       	ldd	r24, Y+5	; 0x05
    5130:	9e 81       	ldd	r25, Y+6	; 0x06
    5132:	af 81       	ldd	r26, Y+7	; 0x07
    5134:	b8 85       	ldd	r27, Y+8	; 0x08
    5136:	bc 01       	movw	r22, r24
    5138:	cd 01       	movw	r24, r26
    513a:	0e 94 8d 6c 	call	0xd91a	; 0xd91a <_Z7timeDifmm>
    513e:	dc 01       	movw	r26, r24
    5140:	cb 01       	movw	r24, r22
    5142:	89 83       	std	Y+1, r24	; 0x01
    5144:	9a 83       	std	Y+2, r25	; 0x02
    5146:	ab 83       	std	Y+3, r26	; 0x03
    5148:	bc 83       	std	Y+4, r27	; 0x04
    514a:	10 92 23 47 	sts	0x4723, r1	; 0x804723 <_ZL17g_go_to_sleep_now>
    514e:	89 81       	ldd	r24, Y+1	; 0x01
    5150:	9a 81       	ldd	r25, Y+2	; 0x02
    5152:	ab 81       	ldd	r26, Y+3	; 0x03
    5154:	bc 81       	ldd	r27, Y+4	; 0x04
    5156:	bb 23       	and	r27, r27
    5158:	9c f0       	brlt	.+38     	; 0x5180 <_Z12eventEnabledv+0xb8>
    515a:	83 e0       	ldi	r24, 0x03	; 3
    515c:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    5160:	8f ef       	ldi	r24, 0xFF	; 255
    5162:	9f ef       	ldi	r25, 0xFF	; 255
    5164:	dc 01       	movw	r26, r24
    5166:	80 93 25 47 	sts	0x4725, r24	; 0x804725 <_ZL17g_time_to_wake_up>
    516a:	90 93 26 47 	sts	0x4726, r25	; 0x804726 <_ZL17g_time_to_wake_up+0x1>
    516e:	a0 93 27 47 	sts	0x4727, r26	; 0x804727 <_ZL17g_time_to_wake_up+0x2>
    5172:	b0 93 28 47 	sts	0x4728, r27	; 0x804728 <_ZL17g_time_to_wake_up+0x3>
    5176:	82 e0       	ldi	r24, 0x02	; 2
    5178:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    517c:	80 e0       	ldi	r24, 0x00	; 0
    517e:	4d c0       	rjmp	.+154    	; 0x521a <_Z12eventEnabledv+0x152>
    5180:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    5184:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    5188:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    518c:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    5190:	8d 81       	ldd	r24, Y+5	; 0x05
    5192:	9e 81       	ldd	r25, Y+6	; 0x06
    5194:	af 81       	ldd	r26, Y+7	; 0x07
    5196:	b8 85       	ldd	r27, Y+8	; 0x08
    5198:	bc 01       	movw	r22, r24
    519a:	cd 01       	movw	r24, r26
    519c:	0e 94 8d 6c 	call	0xd91a	; 0xd91a <_Z7timeDifmm>
    51a0:	dc 01       	movw	r26, r24
    51a2:	cb 01       	movw	r24, r22
    51a4:	89 83       	std	Y+1, r24	; 0x01
    51a6:	9a 83       	std	Y+2, r25	; 0x02
    51a8:	ab 83       	std	Y+3, r26	; 0x03
    51aa:	bc 83       	std	Y+4, r27	; 0x04
    51ac:	89 81       	ldd	r24, Y+1	; 0x01
    51ae:	9a 81       	ldd	r25, Y+2	; 0x02
    51b0:	ab 81       	ldd	r26, Y+3	; 0x03
    51b2:	bc 81       	ldd	r27, Y+4	; 0x04
    51b4:	82 3e       	cpi	r24, 0xE2	; 226
    51b6:	9f 4f       	sbci	r25, 0xFF	; 255
    51b8:	af 4f       	sbci	r26, 0xFF	; 255
    51ba:	bf 4f       	sbci	r27, 0xFF	; 255
    51bc:	bc f0       	brlt	.+46     	; 0x51ec <_Z12eventEnabledv+0x124>
    51be:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <_ZL11g_sleepType>
    51c2:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    51c6:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    51ca:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    51ce:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    51d2:	05 97       	sbiw	r24, 0x05	; 5
    51d4:	a1 09       	sbc	r26, r1
    51d6:	b1 09       	sbc	r27, r1
    51d8:	80 93 25 47 	sts	0x4725, r24	; 0x804725 <_ZL17g_time_to_wake_up>
    51dc:	90 93 26 47 	sts	0x4726, r25	; 0x804726 <_ZL17g_time_to_wake_up+0x1>
    51e0:	a0 93 27 47 	sts	0x4727, r26	; 0x804727 <_ZL17g_time_to_wake_up+0x2>
    51e4:	b0 93 28 47 	sts	0x4728, r27	; 0x804728 <_ZL17g_time_to_wake_up+0x3>
    51e8:	81 e0       	ldi	r24, 0x01	; 1
    51ea:	17 c0       	rjmp	.+46     	; 0x521a <_Z12eventEnabledv+0x152>
    51ec:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    51f0:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    51f4:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    51f8:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    51fc:	05 97       	sbiw	r24, 0x05	; 5
    51fe:	a1 09       	sbc	r26, r1
    5200:	b1 09       	sbc	r27, r1
    5202:	80 93 25 47 	sts	0x4725, r24	; 0x804725 <_ZL17g_time_to_wake_up>
    5206:	90 93 26 47 	sts	0x4726, r25	; 0x804726 <_ZL17g_time_to_wake_up+0x1>
    520a:	a0 93 27 47 	sts	0x4727, r26	; 0x804727 <_ZL17g_time_to_wake_up+0x2>
    520e:	b0 93 28 47 	sts	0x4728, r27	; 0x804728 <_ZL17g_time_to_wake_up+0x3>
    5212:	81 e0       	ldi	r24, 0x01	; 1
    5214:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    5218:	81 e0       	ldi	r24, 0x01	; 1
    521a:	28 96       	adiw	r28, 0x08	; 8
    521c:	cd bf       	out	0x3d, r28	; 61
    521e:	de bf       	out	0x3e, r29	; 62
    5220:	df 91       	pop	r29
    5222:	cf 91       	pop	r28
    5224:	08 95       	ret

00005226 <_Z8wdt_init7WDReset>:
    5226:	cf 93       	push	r28
    5228:	df 93       	push	r29
    522a:	1f 92       	push	r1
    522c:	cd b7       	in	r28, 0x3d	; 61
    522e:	de b7       	in	r29, 0x3e	; 62
    5230:	89 83       	std	Y+1, r24	; 0x01
    5232:	00 00       	nop
    5234:	0f 90       	pop	r0
    5236:	df 91       	pop	r29
    5238:	cf 91       	pop	r28
    523a:	08 95       	ret

0000523c <_Z13throttleValueh>:
    523c:	cf 93       	push	r28
    523e:	df 93       	push	r29
    5240:	cd b7       	in	r28, 0x3d	; 61
    5242:	de b7       	in	r29, 0x3e	; 62
    5244:	2a 97       	sbiw	r28, 0x0a	; 10
    5246:	cd bf       	out	0x3d, r28	; 61
    5248:	de bf       	out	0x3e, r29	; 62
    524a:	8a 87       	std	Y+10, r24	; 0x0a
    524c:	8a 85       	ldd	r24, Y+10	; 0x0a
    524e:	89 83       	std	Y+1, r24	; 0x01
    5250:	85 e0       	ldi	r24, 0x05	; 5
    5252:	90 e0       	ldi	r25, 0x00	; 0
    5254:	8a 83       	std	Y+2, r24	; 0x02
    5256:	9b 83       	std	Y+3, r25	; 0x03
    5258:	84 e1       	ldi	r24, 0x14	; 20
    525a:	90 e0       	ldi	r25, 0x00	; 0
    525c:	8c 83       	std	Y+4, r24	; 0x04
    525e:	9d 83       	std	Y+5, r25	; 0x05
    5260:	89 81       	ldd	r24, Y+1	; 0x01
    5262:	28 2f       	mov	r18, r24
    5264:	88 0f       	add	r24, r24
    5266:	33 0b       	sbc	r19, r19
    5268:	8c 81       	ldd	r24, Y+4	; 0x04
    526a:	9d 81       	ldd	r25, Y+5	; 0x05
    526c:	82 17       	cp	r24, r18
    526e:	93 07       	cpc	r25, r19
    5270:	5c f0       	brlt	.+22     	; 0x5288 <_Z13throttleValueh+0x4c>
    5272:	89 81       	ldd	r24, Y+1	; 0x01
    5274:	08 2e       	mov	r0, r24
    5276:	00 0c       	add	r0, r0
    5278:	99 0b       	sbc	r25, r25
    527a:	2a 81       	ldd	r18, Y+2	; 0x02
    527c:	3b 81       	ldd	r19, Y+3	; 0x03
    527e:	82 17       	cp	r24, r18
    5280:	93 07       	cpc	r25, r19
    5282:	24 f4       	brge	.+8      	; 0x528c <_Z13throttleValueh+0x50>
    5284:	c9 01       	movw	r24, r18
    5286:	02 c0       	rjmp	.+4      	; 0x528c <_Z13throttleValueh+0x50>
    5288:	8c 81       	ldd	r24, Y+4	; 0x04
    528a:	9d 81       	ldd	r25, Y+5	; 0x05
    528c:	8a 87       	std	Y+10, r24	; 0x0a
    528e:	8a 85       	ldd	r24, Y+10	; 0x0a
    5290:	28 2f       	mov	r18, r24
    5292:	30 e0       	ldi	r19, 0x00	; 0
    5294:	40 e0       	ldi	r20, 0x00	; 0
    5296:	50 e0       	ldi	r21, 0x00	; 0
    5298:	88 ed       	ldi	r24, 0xD8	; 216
    529a:	9d e0       	ldi	r25, 0x0D	; 13
    529c:	a0 e0       	ldi	r26, 0x00	; 0
    529e:	b0 e0       	ldi	r27, 0x00	; 0
    52a0:	bc 01       	movw	r22, r24
    52a2:	cd 01       	movw	r24, r26
    52a4:	0e 94 2e 73 	call	0xe65c	; 0xe65c <__divmodsi4>
    52a8:	da 01       	movw	r26, r20
    52aa:	c9 01       	movw	r24, r18
    52ac:	2a e0       	ldi	r18, 0x0A	; 10
    52ae:	30 e0       	ldi	r19, 0x00	; 0
    52b0:	40 e0       	ldi	r20, 0x00	; 0
    52b2:	50 e0       	ldi	r21, 0x00	; 0
    52b4:	bc 01       	movw	r22, r24
    52b6:	cd 01       	movw	r24, r26
    52b8:	0e 94 2e 73 	call	0xe65c	; 0xe65c <__divmodsi4>
    52bc:	da 01       	movw	r26, r20
    52be:	c9 01       	movw	r24, r18
    52c0:	bc 01       	movw	r22, r24
    52c2:	cd 01       	movw	r24, r26
    52c4:	0e 94 71 71 	call	0xe2e2	; 0xe2e2 <__floatsisf>
    52c8:	dc 01       	movw	r26, r24
    52ca:	cb 01       	movw	r24, r22
    52cc:	8e 83       	std	Y+6, r24	; 0x06
    52ce:	9f 83       	std	Y+7, r25	; 0x07
    52d0:	a8 87       	std	Y+8, r26	; 0x08
    52d2:	b9 87       	std	Y+9, r27	; 0x09
    52d4:	6e 81       	ldd	r22, Y+6	; 0x06
    52d6:	7f 81       	ldd	r23, Y+7	; 0x07
    52d8:	88 85       	ldd	r24, Y+8	; 0x08
    52da:	99 85       	ldd	r25, Y+9	; 0x09
    52dc:	0e 94 40 71 	call	0xe280	; 0xe280 <__fixunssfsi>
    52e0:	dc 01       	movw	r26, r24
    52e2:	cb 01       	movw	r24, r22
    52e4:	2a 96       	adiw	r28, 0x0a	; 10
    52e6:	cd bf       	out	0x3d, r28	; 61
    52e8:	de bf       	out	0x3e, r29	; 62
    52ea:	df 91       	pop	r29
    52ec:	cf 91       	pop	r28
    52ee:	08 95       	ret

000052f0 <_Z11launchEventP2SC>:
    52f0:	cf 93       	push	r28
    52f2:	df 93       	push	r29
    52f4:	00 d0       	rcall	.+0      	; 0x52f6 <_Z11launchEventP2SC+0x6>
    52f6:	1f 92       	push	r1
    52f8:	cd b7       	in	r28, 0x3d	; 61
    52fa:	de b7       	in	r29, 0x3e	; 62
    52fc:	8a 83       	std	Y+2, r24	; 0x02
    52fe:	9b 83       	std	Y+3, r25	; 0x03
    5300:	8a 81       	ldd	r24, Y+2	; 0x02
    5302:	9b 81       	ldd	r25, Y+3	; 0x03
    5304:	0e 94 a3 29 	call	0x5346	; 0x5346 <_Z33activateEventUsingCurrentSettingsP2SC>
    5308:	89 83       	std	Y+1, r24	; 0x01
    530a:	8a 81       	ldd	r24, Y+2	; 0x02
    530c:	9b 81       	ldd	r25, Y+3	; 0x03
    530e:	fc 01       	movw	r30, r24
    5310:	80 81       	ld	r24, Z
    5312:	88 23       	and	r24, r24
    5314:	31 f0       	breq	.+12     	; 0x5322 <_Z11launchEventP2SC+0x32>
    5316:	8a 81       	ldd	r24, Y+2	; 0x02
    5318:	9b 81       	ldd	r25, Y+3	; 0x03
    531a:	fc 01       	movw	r30, r24
    531c:	80 81       	ld	r24, Z
    531e:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    5322:	89 81       	ldd	r24, Y+1	; 0x01
    5324:	88 23       	and	r24, r24
    5326:	21 f0       	breq	.+8      	; 0x5330 <_Z11launchEventP2SC+0x40>
    5328:	89 81       	ldd	r24, Y+1	; 0x01
    532a:	80 93 d6 46 	sts	0x46D6, r24	; 0x8046d6 <_ZL17g_last_error_code>
    532e:	04 c0       	rjmp	.+8      	; 0x5338 <_Z11launchEventP2SC+0x48>
    5330:	0e 94 64 28 	call	0x50c8	; 0x50c8 <_Z12eventEnabledv>
    5334:	80 93 1f 47 	sts	0x471F, r24	; 0x80471f <g_event_enabled>
    5338:	89 81       	ldd	r24, Y+1	; 0x01
    533a:	23 96       	adiw	r28, 0x03	; 3
    533c:	cd bf       	out	0x3d, r28	; 61
    533e:	de bf       	out	0x3e, r29	; 62
    5340:	df 91       	pop	r29
    5342:	cf 91       	pop	r28
    5344:	08 95       	ret

00005346 <_Z33activateEventUsingCurrentSettingsP2SC>:
    5346:	cf 93       	push	r28
    5348:	df 93       	push	r29
    534a:	cd b7       	in	r28, 0x3d	; 61
    534c:	de b7       	in	r29, 0x3e	; 62
    534e:	63 97       	sbiw	r28, 0x13	; 19
    5350:	cd bf       	out	0x3d, r28	; 61
    5352:	de bf       	out	0x3e, r29	; 62
    5354:	8a 8b       	std	Y+18, r24	; 0x12
    5356:	9b 8b       	std	Y+19, r25	; 0x13
    5358:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    535c:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    5360:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    5364:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    5368:	21 e0       	ldi	r18, 0x01	; 1
    536a:	89 2b       	or	r24, r25
    536c:	8a 2b       	or	r24, r26
    536e:	8b 2b       	or	r24, r27
    5370:	09 f0       	breq	.+2      	; 0x5374 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    5372:	20 e0       	ldi	r18, 0x00	; 0
    5374:	22 23       	and	r18, r18
    5376:	11 f0       	breq	.+4      	; 0x537c <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    5378:	8c ec       	ldi	r24, 0xCC	; 204
    537a:	12 c2       	rjmp	.+1060   	; 0x57a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    537c:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    5380:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    5384:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    5388:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    538c:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    5390:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    5394:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    5398:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    539c:	61 e0       	ldi	r22, 0x01	; 1
    539e:	28 17       	cp	r18, r24
    53a0:	39 07       	cpc	r19, r25
    53a2:	4a 07       	cpc	r20, r26
    53a4:	5b 07       	cpc	r21, r27
    53a6:	08 f4       	brcc	.+2      	; 0x53aa <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    53a8:	60 e0       	ldi	r22, 0x00	; 0
    53aa:	66 23       	and	r22, r22
    53ac:	11 f0       	breq	.+4      	; 0x53b2 <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    53ae:	8d ec       	ldi	r24, 0xCD	; 205
    53b0:	f7 c1       	rjmp	.+1006   	; 0x57a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    53b2:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    53b6:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    53ba:	21 e0       	ldi	r18, 0x01	; 1
    53bc:	89 2b       	or	r24, r25
    53be:	09 f0       	breq	.+2      	; 0x53c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    53c0:	20 e0       	ldi	r18, 0x00	; 0
    53c2:	22 23       	and	r18, r18
    53c4:	11 f0       	breq	.+4      	; 0x53ca <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    53c6:	8b ec       	ldi	r24, 0xCB	; 203
    53c8:	eb c1       	rjmp	.+982    	; 0x57a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    53ca:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    53ce:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    53d2:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    53d6:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    53da:	28 0f       	add	r18, r24
    53dc:	39 1f       	adc	r19, r25
    53de:	80 91 15 47 	lds	r24, 0x4715	; 0x804715 <g_intra_cycle_delay_time>
    53e2:	90 91 16 47 	lds	r25, 0x4716	; 0x804716 <g_intra_cycle_delay_time+0x1>
    53e6:	41 e0       	ldi	r20, 0x01	; 1
    53e8:	28 17       	cp	r18, r24
    53ea:	39 07       	cpc	r19, r25
    53ec:	0c f0       	brlt	.+2      	; 0x53f0 <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    53ee:	40 e0       	ldi	r20, 0x00	; 0
    53f0:	44 23       	and	r20, r20
    53f2:	11 f0       	breq	.+4      	; 0x53f8 <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    53f4:	8a ec       	ldi	r24, 0xCA	; 202
    53f6:	d4 c1       	rjmp	.+936    	; 0x57a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    53f8:	80 91 e9 46 	lds	r24, 0x46E9	; 0x8046e9 <g_messages_text>
    53fc:	88 23       	and	r24, r24
    53fe:	11 f4       	brne	.+4      	; 0x5404 <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    5400:	89 ec       	ldi	r24, 0xC9	; 201
    5402:	ce c1       	rjmp	.+924    	; 0x57a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    5404:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    5408:	81 e0       	ldi	r24, 0x01	; 1
    540a:	99 23       	and	r25, r25
    540c:	09 f0       	breq	.+2      	; 0x5410 <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    540e:	80 e0       	ldi	r24, 0x00	; 0
    5410:	88 23       	and	r24, r24
    5412:	11 f0       	breq	.+4      	; 0x5418 <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    5414:	88 ec       	ldi	r24, 0xC8	; 200
    5416:	c4 c1       	rjmp	.+904    	; 0x57a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    5418:	80 91 fe 46 	lds	r24, 0x46FE	; 0x8046fe <g_messages_text+0x15>
    541c:	88 23       	and	r24, r24
    541e:	91 f1       	breq	.+100    	; 0x5484 <_Z33activateEventUsingCurrentSettingsP2SC+0x13e>
    5420:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    5424:	88 23       	and	r24, r24
    5426:	31 f0       	breq	.+12     	; 0x5434 <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    5428:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    542c:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    5430:	89 2b       	or	r24, r25
    5432:	11 f4       	brne	.+4      	; 0x5438 <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    5434:	81 e0       	ldi	r24, 0x01	; 1
    5436:	01 c0       	rjmp	.+2      	; 0x543a <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    5438:	80 e0       	ldi	r24, 0x00	; 0
    543a:	88 23       	and	r24, r24
    543c:	11 f0       	breq	.+4      	; 0x5442 <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    543e:	87 ec       	ldi	r24, 0xC7	; 199
    5440:	af c1       	rjmp	.+862    	; 0x57a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    5442:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    5446:	88 2f       	mov	r24, r24
    5448:	90 e0       	ldi	r25, 0x00	; 0
    544a:	bc 01       	movw	r22, r24
    544c:	8e ef       	ldi	r24, 0xFE	; 254
    544e:	96 e4       	ldi	r25, 0x46	; 70
    5450:	0e 94 ca 52 	call	0xa594	; 0xa594 <_Z26timeRequiredToSendStrAtWPMPcj>
    5454:	8c 50       	subi	r24, 0x0C	; 12
    5456:	9e 4f       	sbci	r25, 0xFE	; 254
    5458:	96 95       	lsr	r25
    545a:	87 95       	ror	r24
    545c:	96 95       	lsr	r25
    545e:	87 95       	ror	r24
    5460:	96 95       	lsr	r25
    5462:	87 95       	ror	r24
    5464:	9c 01       	movw	r18, r24
    5466:	a5 ec       	ldi	r26, 0xC5	; 197
    5468:	b0 e2       	ldi	r27, 0x20	; 32
    546a:	0e 94 56 73 	call	0xe6ac	; 0xe6ac <__umulhisi3>
    546e:	92 95       	swap	r25
    5470:	82 95       	swap	r24
    5472:	8f 70       	andi	r24, 0x0F	; 15
    5474:	89 27       	eor	r24, r25
    5476:	9f 70       	andi	r25, 0x0F	; 15
    5478:	89 27       	eor	r24, r25
    547a:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <g_time_needed_for_ID>
    547e:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <g_time_needed_for_ID+0x1>
    5482:	04 c0       	rjmp	.+8      	; 0x548c <_Z33activateEventUsingCurrentSettingsP2SC+0x146>
    5484:	10 92 13 47 	sts	0x4713, r1	; 0x804713 <g_time_needed_for_ID>
    5488:	10 92 14 47 	sts	0x4714, r1	; 0x804714 <g_time_needed_for_ID+0x1>
    548c:	80 e0       	ldi	r24, 0x00	; 0
    548e:	90 e0       	ldi	r25, 0x00	; 0
    5490:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    5494:	dc 01       	movw	r26, r24
    5496:	cb 01       	movw	r24, r22
    5498:	8a 83       	std	Y+2, r24	; 0x02
    549a:	9b 83       	std	Y+3, r25	; 0x03
    549c:	ac 83       	std	Y+4, r26	; 0x04
    549e:	bd 83       	std	Y+5, r27	; 0x05
    54a0:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    54a4:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    54a8:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    54ac:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    54b0:	61 e0       	ldi	r22, 0x01	; 1
    54b2:	8a 81       	ldd	r24, Y+2	; 0x02
    54b4:	9b 81       	ldd	r25, Y+3	; 0x03
    54b6:	ac 81       	ldd	r26, Y+4	; 0x04
    54b8:	bd 81       	ldd	r27, Y+5	; 0x05
    54ba:	28 17       	cp	r18, r24
    54bc:	39 07       	cpc	r19, r25
    54be:	4a 07       	cpc	r20, r26
    54c0:	5b 07       	cpc	r21, r27
    54c2:	08 f0       	brcs	.+2      	; 0x54c6 <_Z33activateEventUsingCurrentSettingsP2SC+0x180>
    54c4:	60 e0       	ldi	r22, 0x00	; 0
    54c6:	66 23       	and	r22, r22
    54c8:	59 f0       	breq	.+22     	; 0x54e0 <_Z33activateEventUsingCurrentSettingsP2SC+0x19a>
    54ca:	8a 89       	ldd	r24, Y+18	; 0x12
    54cc:	9b 89       	ldd	r25, Y+19	; 0x13
    54ce:	89 2b       	or	r24, r25
    54d0:	09 f4       	brne	.+2      	; 0x54d4 <_Z33activateEventUsingCurrentSettingsP2SC+0x18e>
    54d2:	65 c1       	rjmp	.+714    	; 0x579e <_Z33activateEventUsingCurrentSettingsP2SC+0x458>
    54d4:	8a 89       	ldd	r24, Y+18	; 0x12
    54d6:	9b 89       	ldd	r25, Y+19	; 0x13
    54d8:	2a ef       	ldi	r18, 0xFA	; 250
    54da:	fc 01       	movw	r30, r24
    54dc:	20 83       	st	Z, r18
    54de:	5f c1       	rjmp	.+702    	; 0x579e <_Z33activateEventUsingCurrentSettingsP2SC+0x458>
    54e0:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    54e4:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    54e8:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    54ec:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    54f0:	8a 81       	ldd	r24, Y+2	; 0x02
    54f2:	9b 81       	ldd	r25, Y+3	; 0x03
    54f4:	ac 81       	ldd	r26, Y+4	; 0x04
    54f6:	bd 81       	ldd	r27, Y+5	; 0x05
    54f8:	bc 01       	movw	r22, r24
    54fa:	cd 01       	movw	r24, r26
    54fc:	0e 94 8d 6c 	call	0xd91a	; 0xd91a <_Z7timeDifmm>
    5500:	dc 01       	movw	r26, r24
    5502:	cb 01       	movw	r24, r22
    5504:	8e 83       	std	Y+6, r24	; 0x06
    5506:	9f 83       	std	Y+7, r25	; 0x07
    5508:	a8 87       	std	Y+8, r26	; 0x08
    550a:	b9 87       	std	Y+9, r27	; 0x09
    550c:	8e 81       	ldd	r24, Y+6	; 0x06
    550e:	9f 81       	ldd	r25, Y+7	; 0x07
    5510:	a8 85       	ldd	r26, Y+8	; 0x08
    5512:	b9 85       	ldd	r27, Y+9	; 0x09
    5514:	bb 23       	and	r27, r27
    5516:	0c f4       	brge	.+2      	; 0x551a <_Z33activateEventUsingCurrentSettingsP2SC+0x1d4>
    5518:	34 c1       	rjmp	.+616    	; 0x5782 <_Z33activateEventUsingCurrentSettingsP2SC+0x43c>
    551a:	19 82       	std	Y+1, r1	; 0x01
    551c:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5520:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5524:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    5528:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    552c:	82 0f       	add	r24, r18
    552e:	93 1f       	adc	r25, r19
    5530:	8a 87       	std	Y+10, r24	; 0x0a
    5532:	9b 87       	std	Y+11, r25	; 0x0b
    5534:	8a 85       	ldd	r24, Y+10	; 0x0a
    5536:	9b 85       	ldd	r25, Y+11	; 0x0b
    5538:	9c 01       	movw	r18, r24
    553a:	99 0f       	add	r25, r25
    553c:	44 0b       	sbc	r20, r20
    553e:	55 0b       	sbc	r21, r21
    5540:	8e 81       	ldd	r24, Y+6	; 0x06
    5542:	9f 81       	ldd	r25, Y+7	; 0x07
    5544:	a8 85       	ldd	r26, Y+8	; 0x08
    5546:	b9 85       	ldd	r27, Y+9	; 0x09
    5548:	bc 01       	movw	r22, r24
    554a:	cd 01       	movw	r24, r26
    554c:	0e 94 2e 73 	call	0xe65c	; 0xe65c <__divmodsi4>
    5550:	dc 01       	movw	r26, r24
    5552:	cb 01       	movw	r24, r22
    5554:	8c 87       	std	Y+12, r24	; 0x0c
    5556:	9d 87       	std	Y+13, r25	; 0x0d
    5558:	20 91 15 47 	lds	r18, 0x4715	; 0x804715 <g_intra_cycle_delay_time>
    555c:	30 91 16 47 	lds	r19, 0x4716	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5560:	8c 85       	ldd	r24, Y+12	; 0x0c
    5562:	9d 85       	ldd	r25, Y+13	; 0x0d
    5564:	a9 01       	movw	r20, r18
    5566:	48 1b       	sub	r20, r24
    5568:	59 0b       	sbc	r21, r25
    556a:	ca 01       	movw	r24, r20
    556c:	8e 87       	std	Y+14, r24	; 0x0e
    556e:	9f 87       	std	Y+15, r25	; 0x0f
    5570:	8e 85       	ldd	r24, Y+14	; 0x0e
    5572:	9f 85       	ldd	r25, Y+15	; 0x0f
    5574:	18 16       	cp	r1, r24
    5576:	19 06       	cpc	r1, r25
    5578:	0c f4       	brge	.+2      	; 0x557c <_Z33activateEventUsingCurrentSettingsP2SC+0x236>
    557a:	a8 c0       	rjmp	.+336    	; 0x56cc <_Z33activateEventUsingCurrentSettingsP2SC+0x386>
    557c:	8e 85       	ldd	r24, Y+14	; 0x0e
    557e:	9f 85       	ldd	r25, Y+15	; 0x0f
    5580:	22 27       	eor	r18, r18
    5582:	33 27       	eor	r19, r19
    5584:	28 1b       	sub	r18, r24
    5586:	39 0b       	sbc	r19, r25
    5588:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    558c:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5590:	41 e0       	ldi	r20, 0x01	; 1
    5592:	28 17       	cp	r18, r24
    5594:	39 07       	cpc	r19, r25
    5596:	0c f4       	brge	.+2      	; 0x559a <_Z33activateEventUsingCurrentSettingsP2SC+0x254>
    5598:	40 e0       	ldi	r20, 0x00	; 0
    559a:	44 23       	and	r20, r20
    559c:	09 f4       	brne	.+2      	; 0x55a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x25a>
    559e:	41 c0       	rjmp	.+130    	; 0x5622 <_Z33activateEventUsingCurrentSettingsP2SC+0x2dc>
    55a0:	2a 85       	ldd	r18, Y+10	; 0x0a
    55a2:	3b 85       	ldd	r19, Y+11	; 0x0b
    55a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    55a6:	9f 85       	ldd	r25, Y+15	; 0x0f
    55a8:	82 0f       	add	r24, r18
    55aa:	93 1f       	adc	r25, r19
    55ac:	91 95       	neg	r25
    55ae:	81 95       	neg	r24
    55b0:	91 09       	sbc	r25, r1
    55b2:	09 2e       	mov	r0, r25
    55b4:	00 0c       	add	r0, r0
    55b6:	aa 0b       	sbc	r26, r26
    55b8:	bb 0b       	sbc	r27, r27
    55ba:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    55be:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    55c2:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    55c6:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    55ca:	8a 89       	ldd	r24, Y+18	; 0x12
    55cc:	9b 89       	ldd	r25, Y+19	; 0x13
    55ce:	89 2b       	or	r24, r25
    55d0:	29 f0       	breq	.+10     	; 0x55dc <_Z33activateEventUsingCurrentSettingsP2SC+0x296>
    55d2:	8a 89       	ldd	r24, Y+18	; 0x12
    55d4:	9b 89       	ldd	r25, Y+19	; 0x13
    55d6:	2e ef       	ldi	r18, 0xFE	; 254
    55d8:	fc 01       	movw	r30, r24
    55da:	20 83       	st	Z, r18
    55dc:	90 91 1f 47 	lds	r25, 0x471F	; 0x80471f <g_event_enabled>
    55e0:	81 e0       	ldi	r24, 0x01	; 1
    55e2:	89 27       	eor	r24, r25
    55e4:	88 23       	and	r24, r24
    55e6:	09 f4       	brne	.+2      	; 0x55ea <_Z33activateEventUsingCurrentSettingsP2SC+0x2a4>
    55e8:	a6 c0       	rjmp	.+332    	; 0x5736 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    55ea:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    55ee:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    55f2:	9c 01       	movw	r18, r24
    55f4:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    55f8:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    55fc:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    5600:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    5604:	28 1b       	sub	r18, r24
    5606:	39 0b       	sbc	r19, r25
    5608:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <g_time_needed_for_ID>
    560c:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <g_time_needed_for_ID+0x1>
    5610:	a9 01       	movw	r20, r18
    5612:	48 1b       	sub	r20, r24
    5614:	59 0b       	sbc	r21, r25
    5616:	ca 01       	movw	r24, r20
    5618:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    561c:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    5620:	8a c0       	rjmp	.+276    	; 0x5736 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    5622:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5626:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    562a:	8e 85       	ldd	r24, Y+14	; 0x0e
    562c:	9f 85       	ldd	r25, Y+15	; 0x0f
    562e:	82 0f       	add	r24, r18
    5630:	93 1f       	adc	r25, r19
    5632:	09 2e       	mov	r0, r25
    5634:	00 0c       	add	r0, r0
    5636:	aa 0b       	sbc	r26, r26
    5638:	bb 0b       	sbc	r27, r27
    563a:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    563e:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    5642:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    5646:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    564a:	81 e0       	ldi	r24, 0x01	; 1
    564c:	89 83       	std	Y+1, r24	; 0x01
    564e:	8a 89       	ldd	r24, Y+18	; 0x12
    5650:	9b 89       	ldd	r25, Y+19	; 0x13
    5652:	89 2b       	or	r24, r25
    5654:	29 f0       	breq	.+10     	; 0x5660 <_Z33activateEventUsingCurrentSettingsP2SC+0x31a>
    5656:	8a 89       	ldd	r24, Y+18	; 0x12
    5658:	9b 89       	ldd	r25, Y+19	; 0x13
    565a:	2d ef       	ldi	r18, 0xFD	; 253
    565c:	fc 01       	movw	r30, r24
    565e:	20 83       	st	Z, r18
    5660:	90 91 1f 47 	lds	r25, 0x471F	; 0x80471f <g_event_enabled>
    5664:	81 e0       	ldi	r24, 0x01	; 1
    5666:	89 27       	eor	r24, r25
    5668:	88 23       	and	r24, r24
    566a:	09 f4       	brne	.+2      	; 0x566e <_Z33activateEventUsingCurrentSettingsP2SC+0x328>
    566c:	64 c0       	rjmp	.+200    	; 0x5736 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    566e:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <g_time_needed_for_ID>
    5672:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <g_time_needed_for_ID+0x1>
    5676:	9c 01       	movw	r18, r24
    5678:	40 e0       	ldi	r20, 0x00	; 0
    567a:	50 e0       	ldi	r21, 0x00	; 0
    567c:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    5680:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    5684:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    5688:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    568c:	61 e0       	ldi	r22, 0x01	; 1
    568e:	28 17       	cp	r18, r24
    5690:	39 07       	cpc	r19, r25
    5692:	4a 07       	cpc	r20, r26
    5694:	5b 07       	cpc	r21, r27
    5696:	0c f0       	brlt	.+2      	; 0x569a <_Z33activateEventUsingCurrentSettingsP2SC+0x354>
    5698:	60 e0       	ldi	r22, 0x00	; 0
    569a:	66 23       	and	r22, r22
    569c:	09 f4       	brne	.+2      	; 0x56a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x35a>
    569e:	4b c0       	rjmp	.+150    	; 0x5736 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    56a0:	80 91 dd 46 	lds	r24, 0x46DD	; 0x8046dd <_ZL12g_on_the_air>
    56a4:	90 91 de 46 	lds	r25, 0x46DE	; 0x8046de <_ZL12g_on_the_air+0x1>
    56a8:	a0 91 df 46 	lds	r26, 0x46DF	; 0x8046df <_ZL12g_on_the_air+0x2>
    56ac:	b0 91 e0 46 	lds	r27, 0x46E0	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    56b0:	9c 01       	movw	r18, r24
    56b2:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <g_time_needed_for_ID>
    56b6:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <g_time_needed_for_ID+0x1>
    56ba:	a9 01       	movw	r20, r18
    56bc:	48 1b       	sub	r20, r24
    56be:	59 0b       	sbc	r21, r25
    56c0:	ca 01       	movw	r24, r20
    56c2:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    56c6:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    56ca:	35 c0       	rjmp	.+106    	; 0x5736 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    56cc:	8e 85       	ldd	r24, Y+14	; 0x0e
    56ce:	9f 85       	ldd	r25, Y+15	; 0x0f
    56d0:	91 95       	neg	r25
    56d2:	81 95       	neg	r24
    56d4:	91 09       	sbc	r25, r1
    56d6:	09 2e       	mov	r0, r25
    56d8:	00 0c       	add	r0, r0
    56da:	aa 0b       	sbc	r26, r26
    56dc:	bb 0b       	sbc	r27, r27
    56de:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    56e2:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    56e6:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    56ea:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    56ee:	8a 89       	ldd	r24, Y+18	; 0x12
    56f0:	9b 89       	ldd	r25, Y+19	; 0x13
    56f2:	89 2b       	or	r24, r25
    56f4:	29 f0       	breq	.+10     	; 0x5700 <_Z33activateEventUsingCurrentSettingsP2SC+0x3ba>
    56f6:	8a 89       	ldd	r24, Y+18	; 0x12
    56f8:	9b 89       	ldd	r25, Y+19	; 0x13
    56fa:	2e ef       	ldi	r18, 0xFE	; 254
    56fc:	fc 01       	movw	r30, r24
    56fe:	20 83       	st	Z, r18
    5700:	90 91 1f 47 	lds	r25, 0x471F	; 0x80471f <g_event_enabled>
    5704:	81 e0       	ldi	r24, 0x01	; 1
    5706:	89 27       	eor	r24, r25
    5708:	88 23       	and	r24, r24
    570a:	a9 f0       	breq	.+42     	; 0x5736 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    570c:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5710:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5714:	8e 85       	ldd	r24, Y+14	; 0x0e
    5716:	9f 85       	ldd	r25, Y+15	; 0x0f
    5718:	82 0f       	add	r24, r18
    571a:	93 1f       	adc	r25, r19
    571c:	9c 01       	movw	r18, r24
    571e:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <g_time_needed_for_ID>
    5722:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <g_time_needed_for_ID+0x1>
    5726:	a9 01       	movw	r20, r18
    5728:	48 1b       	sub	r20, r24
    572a:	59 0b       	sbc	r21, r25
    572c:	ca 01       	movw	r24, r20
    572e:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    5732:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    5736:	89 81       	ldd	r24, Y+1	; 0x01
    5738:	88 23       	and	r24, r24
    573a:	e1 f0       	breq	.+56     	; 0x5774 <_Z33activateEventUsingCurrentSettingsP2SC+0x42e>
    573c:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <g_event_enabled>
    5740:	88 8b       	std	Y+16, r24	; 0x10
    5742:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    5746:	81 e0       	ldi	r24, 0x01	; 1
    5748:	89 8b       	std	Y+17, r24	; 0x11
    574a:	ce 01       	movw	r24, r28
    574c:	41 96       	adiw	r24, 0x11	; 17
    574e:	40 e0       	ldi	r20, 0x00	; 0
    5750:	50 e0       	ldi	r21, 0x00	; 0
    5752:	bc 01       	movw	r22, r24
    5754:	89 ee       	ldi	r24, 0xE9	; 233
    5756:	96 e4       	ldi	r25, 0x46	; 70
    5758:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    575c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5760:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    5764:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5768:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    576c:	88 89       	ldd	r24, Y+16	; 0x10
    576e:	80 93 1f 47 	sts	0x471F, r24	; 0x80471f <g_event_enabled>
    5772:	03 c0       	rjmp	.+6      	; 0x577a <_Z33activateEventUsingCurrentSettingsP2SC+0x434>
    5774:	80 e0       	ldi	r24, 0x00	; 0
    5776:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    577a:	81 e0       	ldi	r24, 0x01	; 1
    577c:	80 93 20 47 	sts	0x4720, r24	; 0x804720 <g_event_commenced>
    5780:	0c c0       	rjmp	.+24     	; 0x579a <_Z33activateEventUsingCurrentSettingsP2SC+0x454>
    5782:	8a 89       	ldd	r24, Y+18	; 0x12
    5784:	9b 89       	ldd	r25, Y+19	; 0x13
    5786:	89 2b       	or	r24, r25
    5788:	29 f0       	breq	.+10     	; 0x5794 <_Z33activateEventUsingCurrentSettingsP2SC+0x44e>
    578a:	8a 89       	ldd	r24, Y+18	; 0x12
    578c:	9b 89       	ldd	r25, Y+19	; 0x13
    578e:	2f ef       	ldi	r18, 0xFF	; 255
    5790:	fc 01       	movw	r30, r24
    5792:	20 83       	st	Z, r18
    5794:	80 e0       	ldi	r24, 0x00	; 0
    5796:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    579a:	10 92 22 47 	sts	0x4722, r1	; 0x804722 <g_waiting_for_next_event>
    579e:	80 e0       	ldi	r24, 0x00	; 0
    57a0:	63 96       	adiw	r28, 0x13	; 19
    57a2:	cd bf       	out	0x3d, r28	; 61
    57a4:	de bf       	out	0x3e, r29	; 62
    57a6:	df 91       	pop	r29
    57a8:	cf 91       	pop	r28
    57aa:	08 95       	ret

000057ac <_Z18antennaIsConnectedv>:
    57ac:	cf 93       	push	r28
    57ae:	df 93       	push	r29
    57b0:	cd b7       	in	r28, 0x3d	; 61
    57b2:	de b7       	in	r29, 0x3e	; 62
    57b4:	81 e0       	ldi	r24, 0x01	; 1
    57b6:	df 91       	pop	r29
    57b8:	cf 91       	pop	r28
    57ba:	08 95       	ret

000057bc <_Z12suspendEventv>:
    57bc:	cf 93       	push	r28
    57be:	df 93       	push	r29
    57c0:	1f 92       	push	r1
    57c2:	cd b7       	in	r28, 0x3d	; 61
    57c4:	de b7       	in	r29, 0x3e	; 62
    57c6:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    57ca:	10 92 dd 46 	sts	0x46DD, r1	; 0x8046dd <_ZL12g_on_the_air>
    57ce:	10 92 de 46 	sts	0x46DE, r1	; 0x8046de <_ZL12g_on_the_air+0x1>
    57d2:	10 92 df 46 	sts	0x46DF, r1	; 0x8046df <_ZL12g_on_the_air+0x2>
    57d6:	10 92 e0 46 	sts	0x46E0, r1	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    57da:	10 92 20 47 	sts	0x4720, r1	; 0x804720 <g_event_commenced>
    57de:	80 e0       	ldi	r24, 0x00	; 0
    57e0:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    57e4:	80 e0       	ldi	r24, 0x00	; 0
    57e6:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    57ea:	19 82       	std	Y+1, r1	; 0x01
    57ec:	40 e0       	ldi	r20, 0x00	; 0
    57ee:	50 e0       	ldi	r21, 0x00	; 0
    57f0:	ce 01       	movw	r24, r28
    57f2:	01 96       	adiw	r24, 0x01	; 1
    57f4:	bc 01       	movw	r22, r24
    57f6:	87 e5       	ldi	r24, 0x57	; 87
    57f8:	90 e4       	ldi	r25, 0x40	; 64
    57fa:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    57fe:	61 e0       	ldi	r22, 0x01	; 1
    5800:	82 e3       	ldi	r24, 0x32	; 50
    5802:	97 e4       	ldi	r25, 0x47	; 71
    5804:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    5808:	68 e0       	ldi	r22, 0x08	; 8
    580a:	82 e3       	ldi	r24, 0x32	; 50
    580c:	97 e4       	ldi	r25, 0x47	; 71
    580e:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    5812:	00 00       	nop
    5814:	0f 90       	pop	r0
    5816:	df 91       	pop	r29
    5818:	cf 91       	pop	r28
    581a:	08 95       	ret

0000581c <_Z13startEventNow19EventActionSource_t>:
    581c:	cf 93       	push	r28
    581e:	df 93       	push	r29
    5820:	00 d0       	rcall	.+0      	; 0x5822 <_Z13startEventNow19EventActionSource_t+0x6>
    5822:	cd b7       	in	r28, 0x3d	; 61
    5824:	de b7       	in	r29, 0x3e	; 62
    5826:	8a 83       	std	Y+2, r24	; 0x02
    5828:	0e 94 c1 32 	call	0x6582	; 0x6582 <_Z23clockConfigurationCheckv>
    582c:	89 83       	std	Y+1, r24	; 0x01
    582e:	8a 81       	ldd	r24, Y+2	; 0x02
    5830:	88 23       	and	r24, r24
    5832:	79 f4       	brne	.+30     	; 0x5852 <_Z13startEventNow19EventActionSource_t+0x36>
    5834:	89 81       	ldd	r24, Y+1	; 0x01
    5836:	82 30       	cpi	r24, 0x02	; 2
    5838:	31 f4       	brne	.+12     	; 0x5846 <_Z13startEventNow19EventActionSource_t+0x2a>
    583a:	60 e0       	ldi	r22, 0x00	; 0
    583c:	80 e0       	ldi	r24, 0x00	; 0
    583e:	90 e0       	ldi	r25, 0x00	; 0
    5840:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5844:	47 c0       	rjmp	.+142    	; 0x58d4 <_Z13startEventNow19EventActionSource_t+0xb8>
    5846:	63 e0       	ldi	r22, 0x03	; 3
    5848:	80 e0       	ldi	r24, 0x00	; 0
    584a:	90 e0       	ldi	r25, 0x00	; 0
    584c:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5850:	41 c0       	rjmp	.+130    	; 0x58d4 <_Z13startEventNow19EventActionSource_t+0xb8>
    5852:	8a 81       	ldd	r24, Y+2	; 0x02
    5854:	82 30       	cpi	r24, 0x02	; 2
    5856:	f1 f4       	brne	.+60     	; 0x5894 <_Z13startEventNow19EventActionSource_t+0x78>
    5858:	89 81       	ldd	r24, Y+1	; 0x01
    585a:	82 30       	cpi	r24, 0x02	; 2
    585c:	31 f4       	brne	.+12     	; 0x586a <_Z13startEventNow19EventActionSource_t+0x4e>
    585e:	61 e0       	ldi	r22, 0x01	; 1
    5860:	80 e0       	ldi	r24, 0x00	; 0
    5862:	90 e0       	ldi	r25, 0x00	; 0
    5864:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5868:	35 c0       	rjmp	.+106    	; 0x58d4 <_Z13startEventNow19EventActionSource_t+0xb8>
    586a:	89 81       	ldd	r24, Y+1	; 0x01
    586c:	81 30       	cpi	r24, 0x01	; 1
    586e:	31 f0       	breq	.+12     	; 0x587c <_Z13startEventNow19EventActionSource_t+0x60>
    5870:	89 81       	ldd	r24, Y+1	; 0x01
    5872:	84 30       	cpi	r24, 0x04	; 4
    5874:	19 f0       	breq	.+6      	; 0x587c <_Z13startEventNow19EventActionSource_t+0x60>
    5876:	89 81       	ldd	r24, Y+1	; 0x01
    5878:	83 30       	cpi	r24, 0x03	; 3
    587a:	31 f4       	brne	.+12     	; 0x5888 <_Z13startEventNow19EventActionSource_t+0x6c>
    587c:	61 e0       	ldi	r22, 0x01	; 1
    587e:	80 e0       	ldi	r24, 0x00	; 0
    5880:	90 e0       	ldi	r25, 0x00	; 0
    5882:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5886:	26 c0       	rjmp	.+76     	; 0x58d4 <_Z13startEventNow19EventActionSource_t+0xb8>
    5888:	63 e0       	ldi	r22, 0x03	; 3
    588a:	80 e0       	ldi	r24, 0x00	; 0
    588c:	90 e0       	ldi	r25, 0x00	; 0
    588e:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5892:	20 c0       	rjmp	.+64     	; 0x58d4 <_Z13startEventNow19EventActionSource_t+0xb8>
    5894:	89 81       	ldd	r24, Y+1	; 0x01
    5896:	82 30       	cpi	r24, 0x02	; 2
    5898:	31 f4       	brne	.+12     	; 0x58a6 <_Z13startEventNow19EventActionSource_t+0x8a>
    589a:	61 e0       	ldi	r22, 0x01	; 1
    589c:	80 e0       	ldi	r24, 0x00	; 0
    589e:	90 e0       	ldi	r25, 0x00	; 0
    58a0:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    58a4:	17 c0       	rjmp	.+46     	; 0x58d4 <_Z13startEventNow19EventActionSource_t+0xb8>
    58a6:	89 81       	ldd	r24, Y+1	; 0x01
    58a8:	81 30       	cpi	r24, 0x01	; 1
    58aa:	31 f4       	brne	.+12     	; 0x58b8 <_Z13startEventNow19EventActionSource_t+0x9c>
    58ac:	62 e0       	ldi	r22, 0x02	; 2
    58ae:	80 e0       	ldi	r24, 0x00	; 0
    58b0:	90 e0       	ldi	r25, 0x00	; 0
    58b2:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    58b6:	0e c0       	rjmp	.+28     	; 0x58d4 <_Z13startEventNow19EventActionSource_t+0xb8>
    58b8:	89 81       	ldd	r24, Y+1	; 0x01
    58ba:	84 30       	cpi	r24, 0x04	; 4
    58bc:	31 f4       	brne	.+12     	; 0x58ca <_Z13startEventNow19EventActionSource_t+0xae>
    58be:	63 e0       	ldi	r22, 0x03	; 3
    58c0:	80 e0       	ldi	r24, 0x00	; 0
    58c2:	90 e0       	ldi	r25, 0x00	; 0
    58c4:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    58c8:	05 c0       	rjmp	.+10     	; 0x58d4 <_Z13startEventNow19EventActionSource_t+0xb8>
    58ca:	63 e0       	ldi	r22, 0x03	; 3
    58cc:	80 e0       	ldi	r24, 0x00	; 0
    58ce:	90 e0       	ldi	r25, 0x00	; 0
    58d0:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    58d4:	00 00       	nop
    58d6:	0f 90       	pop	r0
    58d8:	0f 90       	pop	r0
    58da:	df 91       	pop	r29
    58dc:	cf 91       	pop	r28
    58de:	08 95       	ret

000058e0 <_Z12stopEventNow19EventActionSource_t>:
    58e0:	cf 93       	push	r28
    58e2:	df 93       	push	r29
    58e4:	00 d0       	rcall	.+0      	; 0x58e6 <_Z12stopEventNow19EventActionSource_t+0x6>
    58e6:	cd b7       	in	r28, 0x3d	; 61
    58e8:	de b7       	in	r29, 0x3e	; 62
    58ea:	8a 83       	std	Y+2, r24	; 0x02
    58ec:	0e 94 c1 32 	call	0x6582	; 0x6582 <_Z23clockConfigurationCheckv>
    58f0:	89 83       	std	Y+1, r24	; 0x01
    58f2:	8a 81       	ldd	r24, Y+2	; 0x02
    58f4:	82 30       	cpi	r24, 0x02	; 2
    58f6:	31 f4       	brne	.+12     	; 0x5904 <_Z12stopEventNow19EventActionSource_t+0x24>
    58f8:	60 e0       	ldi	r22, 0x00	; 0
    58fa:	80 e0       	ldi	r24, 0x00	; 0
    58fc:	90 e0       	ldi	r25, 0x00	; 0
    58fe:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5902:	16 c0       	rjmp	.+44     	; 0x5930 <_Z12stopEventNow19EventActionSource_t+0x50>
    5904:	89 81       	ldd	r24, Y+1	; 0x01
    5906:	81 30       	cpi	r24, 0x01	; 1
    5908:	29 f4       	brne	.+10     	; 0x5914 <_Z12stopEventNow19EventActionSource_t+0x34>
    590a:	62 e0       	ldi	r22, 0x02	; 2
    590c:	80 e0       	ldi	r24, 0x00	; 0
    590e:	90 e0       	ldi	r25, 0x00	; 0
    5910:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5914:	89 81       	ldd	r24, Y+1	; 0x01
    5916:	84 30       	cpi	r24, 0x04	; 4
    5918:	31 f4       	brne	.+12     	; 0x5926 <_Z12stopEventNow19EventActionSource_t+0x46>
    591a:	60 e0       	ldi	r22, 0x00	; 0
    591c:	80 e0       	ldi	r24, 0x00	; 0
    591e:	90 e0       	ldi	r25, 0x00	; 0
    5920:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5924:	05 c0       	rjmp	.+10     	; 0x5930 <_Z12stopEventNow19EventActionSource_t+0x50>
    5926:	60 e0       	ldi	r22, 0x00	; 0
    5928:	80 e0       	ldi	r24, 0x00	; 0
    592a:	90 e0       	ldi	r25, 0x00	; 0
    592c:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    5930:	00 00       	nop
    5932:	0f 90       	pop	r0
    5934:	0f 90       	pop	r0
    5936:	df 91       	pop	r29
    5938:	cf 91       	pop	r28
    593a:	08 95       	ret

0000593c <_Z18startEventUsingRTCv>:
    593c:	ef 92       	push	r14
    593e:	ff 92       	push	r15
    5940:	0f 93       	push	r16
    5942:	1f 93       	push	r17
    5944:	cf 93       	push	r28
    5946:	df 93       	push	r29
    5948:	cd b7       	in	r28, 0x3d	; 61
    594a:	de b7       	in	r29, 0x3e	; 62
    594c:	25 97       	sbiw	r28, 0x05	; 5
    594e:	cd bf       	out	0x3d, r28	; 61
    5950:	de bf       	out	0x3e, r29	; 62
    5952:	80 e0       	ldi	r24, 0x00	; 0
    5954:	90 e0       	ldi	r25, 0x00	; 0
    5956:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    595a:	dc 01       	movw	r26, r24
    595c:	cb 01       	movw	r24, r22
    595e:	89 83       	std	Y+1, r24	; 0x01
    5960:	9a 83       	std	Y+2, r25	; 0x02
    5962:	ab 83       	std	Y+3, r26	; 0x03
    5964:	bc 83       	std	Y+4, r27	; 0x04
    5966:	0e 94 c1 32 	call	0x6582	; 0x6582 <_Z23clockConfigurationCheckv>
    596a:	8d 83       	std	Y+5, r24	; 0x05
    596c:	8d 81       	ldd	r24, Y+5	; 0x05
    596e:	82 30       	cpi	r24, 0x02	; 2
    5970:	09 f4       	brne	.+2      	; 0x5974 <_Z18startEventUsingRTCv+0x38>
    5972:	60 c0       	rjmp	.+192    	; 0x5a34 <_Z18startEventUsingRTCv+0xf8>
    5974:	63 e0       	ldi	r22, 0x03	; 3
    5976:	80 e0       	ldi	r24, 0x00	; 0
    5978:	90 e0       	ldi	r25, 0x00	; 0
    597a:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t>
    597e:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    5982:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    5986:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    598a:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    598e:	89 81       	ldd	r24, Y+1	; 0x01
    5990:	9a 81       	ldd	r25, Y+2	; 0x02
    5992:	ab 81       	ldd	r26, Y+3	; 0x03
    5994:	bc 81       	ldd	r27, Y+4	; 0x04
    5996:	0f 2e       	mov	r0, r31
    5998:	f1 e4       	ldi	r31, 0x41	; 65
    599a:	ef 2e       	mov	r14, r31
    599c:	f1 e4       	ldi	r31, 0x41	; 65
    599e:	ff 2e       	mov	r15, r31
    59a0:	f0 2d       	mov	r31, r0
    59a2:	0e e4       	ldi	r16, 0x4E	; 78
    59a4:	11 e4       	ldi	r17, 0x41	; 65
    59a6:	bc 01       	movw	r22, r24
    59a8:	cd 01       	movw	r24, r26
    59aa:	0e 94 1f 31 	call	0x623e	; 0x623e <_Z14reportTimeTillmmPKcS0_>
    59ae:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    59b2:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    59b6:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    59ba:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    59be:	61 e0       	ldi	r22, 0x01	; 1
    59c0:	89 81       	ldd	r24, Y+1	; 0x01
    59c2:	9a 81       	ldd	r25, Y+2	; 0x02
    59c4:	ab 81       	ldd	r26, Y+3	; 0x03
    59c6:	bc 81       	ldd	r27, Y+4	; 0x04
    59c8:	28 17       	cp	r18, r24
    59ca:	39 07       	cpc	r19, r25
    59cc:	4a 07       	cpc	r20, r26
    59ce:	5b 07       	cpc	r21, r27
    59d0:	08 f0       	brcs	.+2      	; 0x59d4 <_Z18startEventUsingRTCv+0x98>
    59d2:	60 e0       	ldi	r22, 0x00	; 0
    59d4:	66 23       	and	r22, r22
    59d6:	a9 f0       	breq	.+42     	; 0x5a02 <_Z18startEventUsingRTCv+0xc6>
    59d8:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    59dc:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    59e0:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    59e4:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    59e8:	89 81       	ldd	r24, Y+1	; 0x01
    59ea:	9a 81       	ldd	r25, Y+2	; 0x02
    59ec:	ab 81       	ldd	r26, Y+3	; 0x03
    59ee:	bc 81       	ldd	r27, Y+4	; 0x04
    59f0:	e1 2c       	mov	r14, r1
    59f2:	f1 2c       	mov	r15, r1
    59f4:	02 e6       	ldi	r16, 0x62	; 98
    59f6:	11 e4       	ldi	r17, 0x41	; 65
    59f8:	bc 01       	movw	r22, r24
    59fa:	cd 01       	movw	r24, r26
    59fc:	0e 94 1f 31 	call	0x623e	; 0x623e <_Z14reportTimeTillmmPKcS0_>
    5a00:	1b c0       	rjmp	.+54     	; 0x5a38 <_Z18startEventUsingRTCv+0xfc>
    5a02:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    5a06:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    5a0a:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    5a0e:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    5a12:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    5a16:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    5a1a:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    5a1e:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    5a22:	e1 2c       	mov	r14, r1
    5a24:	f1 2c       	mov	r15, r1
    5a26:	0a e5       	ldi	r16, 0x5A	; 90
    5a28:	11 e4       	ldi	r17, 0x41	; 65
    5a2a:	bc 01       	movw	r22, r24
    5a2c:	cd 01       	movw	r24, r26
    5a2e:	0e 94 1f 31 	call	0x623e	; 0x623e <_Z14reportTimeTillmmPKcS0_>
    5a32:	02 c0       	rjmp	.+4      	; 0x5a38 <_Z18startEventUsingRTCv+0xfc>
    5a34:	0e 94 5b 33 	call	0x66b6	; 0x66b6 <_Z18reportConfigErrorsv>
    5a38:	00 00       	nop
    5a3a:	25 96       	adiw	r28, 0x05	; 5
    5a3c:	cd bf       	out	0x3d, r28	; 61
    5a3e:	de bf       	out	0x3e, r29	; 62
    5a40:	df 91       	pop	r29
    5a42:	cf 91       	pop	r28
    5a44:	1f 91       	pop	r17
    5a46:	0f 91       	pop	r16
    5a48:	ff 90       	pop	r15
    5a4a:	ef 90       	pop	r14
    5a4c:	08 95       	ret

00005a4e <_Z11setupForFoxP5Fox_t13EventAction_t>:
    5a4e:	cf 93       	push	r28
    5a50:	df 93       	push	r29
    5a52:	cd b7       	in	r28, 0x3d	; 61
    5a54:	de b7       	in	r29, 0x3e	; 62
    5a56:	60 97       	sbiw	r28, 0x10	; 16
    5a58:	cd bf       	out	0x3d, r28	; 61
    5a5a:	de bf       	out	0x3e, r29	; 62
    5a5c:	8e 87       	std	Y+14, r24	; 0x0e
    5a5e:	9f 87       	std	Y+15, r25	; 0x0f
    5a60:	68 8b       	std	Y+16, r22	; 0x10
    5a62:	81 e0       	ldi	r24, 0x01	; 1
    5a64:	89 83       	std	Y+1, r24	; 0x01
    5a66:	8e 85       	ldd	r24, Y+14	; 0x0e
    5a68:	9f 85       	ldd	r25, Y+15	; 0x0f
    5a6a:	89 2b       	or	r24, r25
    5a6c:	61 f0       	breq	.+24     	; 0x5a86 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
    5a6e:	8e 85       	ldd	r24, Y+14	; 0x0e
    5a70:	9f 85       	ldd	r25, Y+15	; 0x0f
    5a72:	fc 01       	movw	r30, r24
    5a74:	80 81       	ld	r24, Z
    5a76:	82 31       	cpi	r24, 0x12	; 18
    5a78:	31 f0       	breq	.+12     	; 0x5a86 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
    5a7a:	8e 85       	ldd	r24, Y+14	; 0x0e
    5a7c:	9f 85       	ldd	r25, Y+15	; 0x0f
    5a7e:	fc 01       	movw	r30, r24
    5a80:	80 81       	ld	r24, Z
    5a82:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <g_fox>
    5a86:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    5a8a:	10 92 20 47 	sts	0x4720, r1	; 0x804720 <g_event_commenced>
    5a8e:	60 e0       	ldi	r22, 0x00	; 0
    5a90:	82 e3       	ldi	r24, 0x32	; 50
    5a92:	97 e4       	ldi	r25, 0x47	; 71
    5a94:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    5a98:	80 91 17 40 	lds	r24, 0x4017	; 0x804017 <g_fox>
    5a9c:	88 2f       	mov	r24, r24
    5a9e:	90 e0       	ldi	r25, 0x00	; 0
    5aa0:	09 2e       	mov	r0, r25
    5aa2:	00 0c       	add	r0, r0
    5aa4:	aa 0b       	sbc	r26, r26
    5aa6:	bb 0b       	sbc	r27, r27
    5aa8:	41 e0       	ldi	r20, 0x01	; 1
    5aaa:	50 e0       	ldi	r21, 0x00	; 0
    5aac:	20 e1       	ldi	r18, 0x10	; 16
    5aae:	30 e0       	ldi	r19, 0x00	; 0
    5ab0:	84 1b       	sub	r24, r20
    5ab2:	95 0b       	sbc	r25, r21
    5ab4:	28 17       	cp	r18, r24
    5ab6:	39 07       	cpc	r19, r25
    5ab8:	08 f4       	brcc	.+2      	; 0x5abc <_Z11setupForFoxP5Fox_t13EventAction_t+0x6e>
    5aba:	a1 c1       	rjmp	.+834    	; 0x5dfe <_Z11setupForFoxP5Fox_t13EventAction_t+0x3b0>
    5abc:	8e 5a       	subi	r24, 0xAE	; 174
    5abe:	9f 4f       	sbci	r25, 0xFF	; 255
    5ac0:	fc 01       	movw	r30, r24
    5ac2:	0c 94 4d 73 	jmp	0xe69a	; 0xe69a <__tablejump2__>
    5ac6:	89 81       	ldd	r24, Y+1	; 0x01
    5ac8:	88 23       	and	r24, r24
    5aca:	89 f0       	breq	.+34     	; 0x5aee <_Z11setupForFoxP5Fox_t13EventAction_t+0xa0>
    5acc:	8d e4       	ldi	r24, 0x4D	; 77
    5ace:	9f e4       	ldi	r25, 0x4F	; 79
    5ad0:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5ad4:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5ad8:	85 e4       	ldi	r24, 0x45	; 69
    5ada:	90 e0       	ldi	r25, 0x00	; 0
    5adc:	80 93 eb 46 	sts	0x46EB, r24	; 0x8046eb <g_messages_text+0x2>
    5ae0:	90 93 ec 46 	sts	0x46EC, r25	; 0x8046ec <g_messages_text+0x3>
    5ae4:	19 82       	std	Y+1, r1	; 0x01
    5ae6:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <g_intra_cycle_delay_time>
    5aea:	10 92 16 47 	sts	0x4716, r1	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5aee:	89 81       	ldd	r24, Y+1	; 0x01
    5af0:	88 23       	and	r24, r24
    5af2:	99 f0       	breq	.+38     	; 0x5b1a <_Z11setupForFoxP5Fox_t13EventAction_t+0xcc>
    5af4:	8d e4       	ldi	r24, 0x4D	; 77
    5af6:	9f e4       	ldi	r25, 0x4F	; 79
    5af8:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5afc:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5b00:	89 e4       	ldi	r24, 0x49	; 73
    5b02:	90 e0       	ldi	r25, 0x00	; 0
    5b04:	80 93 eb 46 	sts	0x46EB, r24	; 0x8046eb <g_messages_text+0x2>
    5b08:	90 93 ec 46 	sts	0x46EC, r25	; 0x8046ec <g_messages_text+0x3>
    5b0c:	19 82       	std	Y+1, r1	; 0x01
    5b0e:	8c e3       	ldi	r24, 0x3C	; 60
    5b10:	90 e0       	ldi	r25, 0x00	; 0
    5b12:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5b16:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5b1a:	89 81       	ldd	r24, Y+1	; 0x01
    5b1c:	88 23       	and	r24, r24
    5b1e:	99 f0       	breq	.+38     	; 0x5b46 <_Z11setupForFoxP5Fox_t13EventAction_t+0xf8>
    5b20:	8d e4       	ldi	r24, 0x4D	; 77
    5b22:	9f e4       	ldi	r25, 0x4F	; 79
    5b24:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5b28:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5b2c:	83 e5       	ldi	r24, 0x53	; 83
    5b2e:	90 e0       	ldi	r25, 0x00	; 0
    5b30:	80 93 eb 46 	sts	0x46EB, r24	; 0x8046eb <g_messages_text+0x2>
    5b34:	90 93 ec 46 	sts	0x46EC, r25	; 0x8046ec <g_messages_text+0x3>
    5b38:	19 82       	std	Y+1, r1	; 0x01
    5b3a:	88 e7       	ldi	r24, 0x78	; 120
    5b3c:	90 e0       	ldi	r25, 0x00	; 0
    5b3e:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5b42:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5b46:	89 81       	ldd	r24, Y+1	; 0x01
    5b48:	88 23       	and	r24, r24
    5b4a:	99 f0       	breq	.+38     	; 0x5b72 <_Z11setupForFoxP5Fox_t13EventAction_t+0x124>
    5b4c:	8d e4       	ldi	r24, 0x4D	; 77
    5b4e:	9f e4       	ldi	r25, 0x4F	; 79
    5b50:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5b54:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5b58:	88 e4       	ldi	r24, 0x48	; 72
    5b5a:	90 e0       	ldi	r25, 0x00	; 0
    5b5c:	80 93 eb 46 	sts	0x46EB, r24	; 0x8046eb <g_messages_text+0x2>
    5b60:	90 93 ec 46 	sts	0x46EC, r25	; 0x8046ec <g_messages_text+0x3>
    5b64:	19 82       	std	Y+1, r1	; 0x01
    5b66:	84 eb       	ldi	r24, 0xB4	; 180
    5b68:	90 e0       	ldi	r25, 0x00	; 0
    5b6a:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5b6e:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5b72:	89 81       	ldd	r24, Y+1	; 0x01
    5b74:	88 23       	and	r24, r24
    5b76:	91 f0       	breq	.+36     	; 0x5b9c <_Z11setupForFoxP5Fox_t13EventAction_t+0x14e>
    5b78:	8d e4       	ldi	r24, 0x4D	; 77
    5b7a:	9f e4       	ldi	r25, 0x4F	; 79
    5b7c:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5b80:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5b84:	85 e3       	ldi	r24, 0x35	; 53
    5b86:	90 e0       	ldi	r25, 0x00	; 0
    5b88:	80 93 eb 46 	sts	0x46EB, r24	; 0x8046eb <g_messages_text+0x2>
    5b8c:	90 93 ec 46 	sts	0x46EC, r25	; 0x8046ec <g_messages_text+0x3>
    5b90:	80 ef       	ldi	r24, 0xF0	; 240
    5b92:	90 e0       	ldi	r25, 0x00	; 0
    5b94:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5b98:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5b9c:	81 e0       	ldi	r24, 0x01	; 1
    5b9e:	8f 83       	std	Y+7, r24	; 0x07
    5ba0:	ce 01       	movw	r24, r28
    5ba2:	07 96       	adiw	r24, 0x07	; 7
    5ba4:	40 e0       	ldi	r20, 0x00	; 0
    5ba6:	50 e0       	ldi	r21, 0x00	; 0
    5ba8:	bc 01       	movw	r22, r24
    5baa:	89 ee       	ldi	r24, 0xE9	; 233
    5bac:	96 e4       	ldi	r25, 0x46	; 70
    5bae:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    5bb2:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5bb6:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    5bba:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5bbe:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5bc2:	8c e3       	ldi	r24, 0x3C	; 60
    5bc4:	90 e0       	ldi	r25, 0x00	; 0
    5bc6:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    5bca:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    5bce:	8c e3       	ldi	r24, 0x3C	; 60
    5bd0:	90 e0       	ldi	r25, 0x00	; 0
    5bd2:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5bd6:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    5bda:	80 ef       	ldi	r24, 0xF0	; 240
    5bdc:	90 e0       	ldi	r25, 0x00	; 0
    5bde:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5be2:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    5be6:	41 c1       	rjmp	.+642    	; 0x5e6a <_Z11setupForFoxP5Fox_t13EventAction_t+0x41c>
    5be8:	89 81       	ldd	r24, Y+1	; 0x01
    5bea:	88 23       	and	r24, r24
    5bec:	69 f0       	breq	.+26     	; 0x5c08 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1ba>
    5bee:	8d e4       	ldi	r24, 0x4D	; 77
    5bf0:	95 e4       	ldi	r25, 0x45	; 69
    5bf2:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5bf6:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5bfa:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5bfe:	19 82       	std	Y+1, r1	; 0x01
    5c00:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <g_intra_cycle_delay_time>
    5c04:	10 92 16 47 	sts	0x4716, r1	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5c08:	89 81       	ldd	r24, Y+1	; 0x01
    5c0a:	88 23       	and	r24, r24
    5c0c:	79 f0       	breq	.+30     	; 0x5c2c <_Z11setupForFoxP5Fox_t13EventAction_t+0x1de>
    5c0e:	8d e4       	ldi	r24, 0x4D	; 77
    5c10:	99 e4       	ldi	r25, 0x49	; 73
    5c12:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5c16:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5c1a:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5c1e:	19 82       	std	Y+1, r1	; 0x01
    5c20:	8c e0       	ldi	r24, 0x0C	; 12
    5c22:	90 e0       	ldi	r25, 0x00	; 0
    5c24:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5c28:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5c2c:	89 81       	ldd	r24, Y+1	; 0x01
    5c2e:	88 23       	and	r24, r24
    5c30:	79 f0       	breq	.+30     	; 0x5c50 <_Z11setupForFoxP5Fox_t13EventAction_t+0x202>
    5c32:	8d e4       	ldi	r24, 0x4D	; 77
    5c34:	93 e5       	ldi	r25, 0x53	; 83
    5c36:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5c3a:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5c3e:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5c42:	19 82       	std	Y+1, r1	; 0x01
    5c44:	88 e1       	ldi	r24, 0x18	; 24
    5c46:	90 e0       	ldi	r25, 0x00	; 0
    5c48:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5c4c:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5c50:	89 81       	ldd	r24, Y+1	; 0x01
    5c52:	88 23       	and	r24, r24
    5c54:	79 f0       	breq	.+30     	; 0x5c74 <_Z11setupForFoxP5Fox_t13EventAction_t+0x226>
    5c56:	8d e4       	ldi	r24, 0x4D	; 77
    5c58:	98 e4       	ldi	r25, 0x48	; 72
    5c5a:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5c5e:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5c62:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5c66:	19 82       	std	Y+1, r1	; 0x01
    5c68:	84 e2       	ldi	r24, 0x24	; 36
    5c6a:	90 e0       	ldi	r25, 0x00	; 0
    5c6c:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5c70:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5c74:	89 81       	ldd	r24, Y+1	; 0x01
    5c76:	88 23       	and	r24, r24
    5c78:	71 f0       	breq	.+28     	; 0x5c96 <_Z11setupForFoxP5Fox_t13EventAction_t+0x248>
    5c7a:	8d e4       	ldi	r24, 0x4D	; 77
    5c7c:	95 e3       	ldi	r25, 0x35	; 53
    5c7e:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5c82:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5c86:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5c8a:	80 e3       	ldi	r24, 0x30	; 48
    5c8c:	90 e0       	ldi	r25, 0x00	; 0
    5c8e:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5c92:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5c96:	81 e0       	ldi	r24, 0x01	; 1
    5c98:	88 87       	std	Y+8, r24	; 0x08
    5c9a:	ce 01       	movw	r24, r28
    5c9c:	08 96       	adiw	r24, 0x08	; 8
    5c9e:	40 e0       	ldi	r20, 0x00	; 0
    5ca0:	50 e0       	ldi	r21, 0x00	; 0
    5ca2:	bc 01       	movw	r22, r24
    5ca4:	89 ee       	ldi	r24, 0xE9	; 233
    5ca6:	96 e4       	ldi	r25, 0x46	; 70
    5ca8:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    5cac:	88 e0       	ldi	r24, 0x08	; 8
    5cae:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    5cb2:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5cb6:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    5cba:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5cbe:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5cc2:	88 e5       	ldi	r24, 0x58	; 88
    5cc4:	92 e0       	ldi	r25, 0x02	; 2
    5cc6:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    5cca:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    5cce:	8c e0       	ldi	r24, 0x0C	; 12
    5cd0:	90 e0       	ldi	r25, 0x00	; 0
    5cd2:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5cd6:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    5cda:	80 e3       	ldi	r24, 0x30	; 48
    5cdc:	90 e0       	ldi	r25, 0x00	; 0
    5cde:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5ce2:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    5ce6:	c1 c0       	rjmp	.+386    	; 0x5e6a <_Z11setupForFoxP5Fox_t13EventAction_t+0x41c>
    5ce8:	89 81       	ldd	r24, Y+1	; 0x01
    5cea:	88 23       	and	r24, r24
    5cec:	69 f0       	breq	.+26     	; 0x5d08 <_Z11setupForFoxP5Fox_t13EventAction_t+0x2ba>
    5cee:	8f e4       	ldi	r24, 0x4F	; 79
    5cf0:	95 e4       	ldi	r25, 0x45	; 69
    5cf2:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5cf6:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5cfa:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5cfe:	19 82       	std	Y+1, r1	; 0x01
    5d00:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <g_intra_cycle_delay_time>
    5d04:	10 92 16 47 	sts	0x4716, r1	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5d08:	89 81       	ldd	r24, Y+1	; 0x01
    5d0a:	88 23       	and	r24, r24
    5d0c:	79 f0       	breq	.+30     	; 0x5d2c <_Z11setupForFoxP5Fox_t13EventAction_t+0x2de>
    5d0e:	8f e4       	ldi	r24, 0x4F	; 79
    5d10:	99 e4       	ldi	r25, 0x49	; 73
    5d12:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5d16:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5d1a:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5d1e:	19 82       	std	Y+1, r1	; 0x01
    5d20:	8c e0       	ldi	r24, 0x0C	; 12
    5d22:	90 e0       	ldi	r25, 0x00	; 0
    5d24:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5d28:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5d2c:	89 81       	ldd	r24, Y+1	; 0x01
    5d2e:	88 23       	and	r24, r24
    5d30:	79 f0       	breq	.+30     	; 0x5d50 <_Z11setupForFoxP5Fox_t13EventAction_t+0x302>
    5d32:	8f e4       	ldi	r24, 0x4F	; 79
    5d34:	93 e5       	ldi	r25, 0x53	; 83
    5d36:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5d3a:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5d3e:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5d42:	19 82       	std	Y+1, r1	; 0x01
    5d44:	88 e1       	ldi	r24, 0x18	; 24
    5d46:	90 e0       	ldi	r25, 0x00	; 0
    5d48:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5d4c:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5d50:	89 81       	ldd	r24, Y+1	; 0x01
    5d52:	88 23       	and	r24, r24
    5d54:	79 f0       	breq	.+30     	; 0x5d74 <_Z11setupForFoxP5Fox_t13EventAction_t+0x326>
    5d56:	8f e4       	ldi	r24, 0x4F	; 79
    5d58:	98 e4       	ldi	r25, 0x48	; 72
    5d5a:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5d5e:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5d62:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5d66:	19 82       	std	Y+1, r1	; 0x01
    5d68:	84 e2       	ldi	r24, 0x24	; 36
    5d6a:	90 e0       	ldi	r25, 0x00	; 0
    5d6c:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5d70:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5d74:	89 81       	ldd	r24, Y+1	; 0x01
    5d76:	88 23       	and	r24, r24
    5d78:	71 f0       	breq	.+28     	; 0x5d96 <_Z11setupForFoxP5Fox_t13EventAction_t+0x348>
    5d7a:	8f e4       	ldi	r24, 0x4F	; 79
    5d7c:	95 e3       	ldi	r25, 0x35	; 53
    5d7e:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5d82:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5d86:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5d8a:	80 e3       	ldi	r24, 0x30	; 48
    5d8c:	90 e0       	ldi	r25, 0x00	; 0
    5d8e:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    5d92:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5d96:	81 e0       	ldi	r24, 0x01	; 1
    5d98:	89 87       	std	Y+9, r24	; 0x09
    5d9a:	ce 01       	movw	r24, r28
    5d9c:	09 96       	adiw	r24, 0x09	; 9
    5d9e:	40 e0       	ldi	r20, 0x00	; 0
    5da0:	50 e0       	ldi	r21, 0x00	; 0
    5da2:	bc 01       	movw	r22, r24
    5da4:	89 ee       	ldi	r24, 0xE9	; 233
    5da6:	96 e4       	ldi	r25, 0x46	; 70
    5da8:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    5dac:	8f e0       	ldi	r24, 0x0F	; 15
    5dae:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    5db2:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5db6:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    5dba:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5dbe:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5dc2:	88 e5       	ldi	r24, 0x58	; 88
    5dc4:	92 e0       	ldi	r25, 0x02	; 2
    5dc6:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    5dca:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    5dce:	8c e0       	ldi	r24, 0x0C	; 12
    5dd0:	90 e0       	ldi	r25, 0x00	; 0
    5dd2:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5dd6:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    5dda:	80 e3       	ldi	r24, 0x30	; 48
    5ddc:	90 e0       	ldi	r25, 0x00	; 0
    5dde:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5de2:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    5de6:	41 c0       	rjmp	.+130    	; 0x5e6a <_Z11setupForFoxP5Fox_t13EventAction_t+0x41c>
    5de8:	83 e5       	ldi	r24, 0x53	; 83
    5dea:	90 e0       	ldi	r25, 0x00	; 0
    5dec:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5df0:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5df4:	19 82       	std	Y+1, r1	; 0x01
    5df6:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <g_intra_cycle_delay_time>
    5dfa:	10 92 16 47 	sts	0x4716, r1	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5dfe:	89 81       	ldd	r24, Y+1	; 0x01
    5e00:	88 23       	and	r24, r24
    5e02:	41 f0       	breq	.+16     	; 0x5e14 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3c6>
    5e04:	8d e4       	ldi	r24, 0x4D	; 77
    5e06:	9f e4       	ldi	r25, 0x4F	; 79
    5e08:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
    5e0c:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <g_messages_text+0x1>
    5e10:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <g_messages_text+0x2>
    5e14:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <g_intra_cycle_delay_time>
    5e18:	10 92 16 47 	sts	0x4716, r1	; 0x804716 <g_intra_cycle_delay_time+0x1>
    5e1c:	81 e0       	ldi	r24, 0x01	; 1
    5e1e:	8a 87       	std	Y+10, r24	; 0x0a
    5e20:	ce 01       	movw	r24, r28
    5e22:	0a 96       	adiw	r24, 0x0a	; 10
    5e24:	40 e0       	ldi	r20, 0x00	; 0
    5e26:	50 e0       	ldi	r21, 0x00	; 0
    5e28:	bc 01       	movw	r22, r24
    5e2a:	89 ee       	ldi	r24, 0xE9	; 233
    5e2c:	96 e4       	ldi	r25, 0x46	; 70
    5e2e:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    5e32:	88 e0       	ldi	r24, 0x08	; 8
    5e34:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    5e38:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5e3c:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    5e40:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5e44:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5e48:	88 e5       	ldi	r24, 0x58	; 88
    5e4a:	92 e0       	ldi	r25, 0x02	; 2
    5e4c:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZL26g_sendID_seconds_countdown>
    5e50:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZL26g_sendID_seconds_countdown+0x1>
    5e54:	8c e3       	ldi	r24, 0x3C	; 60
    5e56:	90 e0       	ldi	r25, 0x00	; 0
    5e58:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5e5c:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    5e60:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    5e64:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    5e68:	00 00       	nop
    5e6a:	88 89       	ldd	r24, Y+16	; 0x10
    5e6c:	88 23       	and	r24, r24
    5e6e:	a1 f4       	brne	.+40     	; 0x5e98 <_Z11setupForFoxP5Fox_t13EventAction_t+0x44a>
    5e70:	10 92 20 47 	sts	0x4720, r1	; 0x804720 <g_event_commenced>
    5e74:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    5e78:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_use_rtc_for_startstop>
    5e7c:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <g_event_enabled>
    5e80:	80 e0       	ldi	r24, 0x00	; 0
    5e82:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    5e86:	60 e0       	ldi	r22, 0x00	; 0
    5e88:	82 e3       	ldi	r24, 0x32	; 50
    5e8a:	97 e4       	ldi	r25, 0x47	; 71
    5e8c:	0e 94 f6 4a 	call	0x95ec	; 0x95ec <_ZN4leds6setRedEb>
    5e90:	80 e0       	ldi	r24, 0x00	; 0
    5e92:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
    5e96:	96 c0       	rjmp	.+300    	; 0x5fc4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x576>
    5e98:	88 89       	ldd	r24, Y+16	; 0x10
    5e9a:	81 30       	cpi	r24, 0x01	; 1
    5e9c:	09 f0       	breq	.+2      	; 0x5ea0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x452>
    5e9e:	59 c0       	rjmp	.+178    	; 0x5f52 <_Z11setupForFoxP5Fox_t13EventAction_t+0x504>
    5ea0:	1a 82       	std	Y+2, r1	; 0x02
    5ea2:	80 e0       	ldi	r24, 0x00	; 0
    5ea4:	90 e0       	ldi	r25, 0x00	; 0
    5ea6:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    5eaa:	dc 01       	movw	r26, r24
    5eac:	cb 01       	movw	r24, r22
    5eae:	8b 83       	std	Y+3, r24	; 0x03
    5eb0:	9c 83       	std	Y+4, r25	; 0x04
    5eb2:	ad 83       	std	Y+5, r26	; 0x05
    5eb4:	be 83       	std	Y+6, r27	; 0x06
    5eb6:	8a 81       	ldd	r24, Y+2	; 0x02
    5eb8:	88 23       	and	r24, r24
    5eba:	c9 f5       	brne	.+114    	; 0x5f2e <_Z11setupForFoxP5Fox_t13EventAction_t+0x4e0>
    5ebc:	8b 81       	ldd	r24, Y+3	; 0x03
    5ebe:	9c 81       	ldd	r25, Y+4	; 0x04
    5ec0:	ad 81       	ldd	r26, Y+5	; 0x05
    5ec2:	be 81       	ldd	r27, Y+6	; 0x06
    5ec4:	80 93 17 47 	sts	0x4717, r24	; 0x804717 <g_event_start_epoch>
    5ec8:	90 93 18 47 	sts	0x4718, r25	; 0x804718 <g_event_start_epoch+0x1>
    5ecc:	a0 93 19 47 	sts	0x4719, r26	; 0x804719 <g_event_start_epoch+0x2>
    5ed0:	b0 93 1a 47 	sts	0x471A, r27	; 0x80471a <g_event_start_epoch+0x3>
    5ed4:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    5ed8:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    5edc:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    5ee0:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    5ee4:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    5ee8:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    5eec:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    5ef0:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    5ef4:	61 e0       	ldi	r22, 0x01	; 1
    5ef6:	82 17       	cp	r24, r18
    5ef8:	93 07       	cpc	r25, r19
    5efa:	a4 07       	cpc	r26, r20
    5efc:	b5 07       	cpc	r27, r21
    5efe:	08 f0       	brcs	.+2      	; 0x5f02 <_Z11setupForFoxP5Fox_t13EventAction_t+0x4b4>
    5f00:	60 e0       	ldi	r22, 0x00	; 0
    5f02:	66 23       	and	r22, r22
    5f04:	a1 f0       	breq	.+40     	; 0x5f2e <_Z11setupForFoxP5Fox_t13EventAction_t+0x4e0>
    5f06:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    5f0a:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    5f0e:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    5f12:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    5f16:	80 58       	subi	r24, 0x80	; 128
    5f18:	9e 4a       	sbci	r25, 0xAE	; 174
    5f1a:	ae 4f       	sbci	r26, 0xFE	; 254
    5f1c:	bf 4f       	sbci	r27, 0xFF	; 255
    5f1e:	80 93 1b 47 	sts	0x471B, r24	; 0x80471b <g_event_finish_epoch>
    5f22:	90 93 1c 47 	sts	0x471C, r25	; 0x80471c <g_event_finish_epoch+0x1>
    5f26:	a0 93 1d 47 	sts	0x471D, r26	; 0x80471d <g_event_finish_epoch+0x2>
    5f2a:	b0 93 1e 47 	sts	0x471E, r27	; 0x80471e <g_event_finish_epoch+0x3>
    5f2e:	1b 86       	std	Y+11, r1	; 0x0b
    5f30:	ce 01       	movw	r24, r28
    5f32:	0b 96       	adiw	r24, 0x0b	; 11
    5f34:	0e 94 78 29 	call	0x52f0	; 0x52f0 <_Z11launchEventP2SC>
    5f38:	8a 83       	std	Y+2, r24	; 0x02
    5f3a:	82 e0       	ldi	r24, 0x02	; 2
    5f3c:	80 93 e4 46 	sts	0x46E4, r24	; 0x8046e4 <_ZL19g_wifi_enable_delay>
    5f40:	8a 81       	ldd	r24, Y+2	; 0x02
    5f42:	88 23       	and	r24, r24
    5f44:	09 f0       	breq	.+2      	; 0x5f48 <_Z11setupForFoxP5Fox_t13EventAction_t+0x4fa>
    5f46:	3e c0       	rjmp	.+124    	; 0x5fc4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x576>
    5f48:	8c e3       	ldi	r24, 0x3C	; 60
    5f4a:	97 e4       	ldi	r25, 0x47	; 71
    5f4c:	0e 94 f1 3f 	call	0x7fe2	; 0x7fe2 <_ZN13EepromManager13saveAllEEPROMEv>
    5f50:	39 c0       	rjmp	.+114    	; 0x5fc4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x576>
    5f52:	88 89       	ldd	r24, Y+16	; 0x10
    5f54:	82 30       	cpi	r24, 0x02	; 2
    5f56:	91 f5       	brne	.+100    	; 0x5fbc <_Z11setupForFoxP5Fox_t13EventAction_t+0x56e>
    5f58:	81 e0       	ldi	r24, 0x01	; 1
    5f5a:	8c 87       	std	Y+12, r24	; 0x0c
    5f5c:	ce 01       	movw	r24, r28
    5f5e:	0c 96       	adiw	r24, 0x0c	; 12
    5f60:	40 e0       	ldi	r20, 0x00	; 0
    5f62:	50 e0       	ldi	r21, 0x00	; 0
    5f64:	bc 01       	movw	r22, r24
    5f66:	89 ee       	ldi	r24, 0xE9	; 233
    5f68:	96 e4       	ldi	r25, 0x46	; 70
    5f6a:	0e 94 72 51 	call	0xa2e4	; 0xa2e4 <_Z9makeMorsePcPbS0_>
    5f6e:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5f72:	0e 94 1e 29 	call	0x523c	; 0x523c <_Z13throttleValueh>
    5f76:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5f7a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5f7e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5f82:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5f86:	09 2e       	mov	r0, r25
    5f88:	00 0c       	add	r0, r0
    5f8a:	aa 0b       	sbc	r26, r26
    5f8c:	bb 0b       	sbc	r27, r27
    5f8e:	80 93 dd 46 	sts	0x46DD, r24	; 0x8046dd <_ZL12g_on_the_air>
    5f92:	90 93 de 46 	sts	0x46DE, r25	; 0x8046de <_ZL12g_on_the_air+0x1>
    5f96:	a0 93 df 46 	sts	0x46DF, r26	; 0x8046df <_ZL12g_on_the_air+0x2>
    5f9a:	b0 93 e0 46 	sts	0x46E0, r27	; 0x8046e0 <_ZL12g_on_the_air+0x3>
    5f9e:	81 e0       	ldi	r24, 0x01	; 1
    5fa0:	80 93 20 47 	sts	0x4720, r24	; 0x804720 <g_event_commenced>
    5fa4:	81 e0       	ldi	r24, 0x01	; 1
    5fa6:	80 93 1f 47 	sts	0x471F, r24	; 0x80471f <g_event_enabled>
    5faa:	8d ef       	ldi	r24, 0xFD	; 253
    5fac:	80 93 d7 46 	sts	0x46D7, r24	; 0x8046d7 <_ZL18g_last_status_code>
    5fb0:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_use_rtc_for_startstop>
    5fb4:	81 e0       	ldi	r24, 0x01	; 1
    5fb6:	80 93 1f 47 	sts	0x471F, r24	; 0x80471f <g_event_enabled>
    5fba:	04 c0       	rjmp	.+8      	; 0x5fc4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x576>
    5fbc:	ce 01       	movw	r24, r28
    5fbe:	0d 96       	adiw	r24, 0x0d	; 13
    5fc0:	0e 94 78 29 	call	0x52f0	; 0x52f0 <_Z11launchEventP2SC>
    5fc4:	00 00       	nop
    5fc6:	60 96       	adiw	r28, 0x10	; 16
    5fc8:	cd bf       	out	0x3d, r28	; 61
    5fca:	de bf       	out	0x3e, r29	; 62
    5fcc:	df 91       	pop	r29
    5fce:	cf 91       	pop	r28
    5fd0:	08 95       	ret

00005fd2 <_Z18validateTimeStringPcPma>:
    5fd2:	cf 93       	push	r28
    5fd4:	df 93       	push	r29
    5fd6:	cd b7       	in	r28, 0x3d	; 61
    5fd8:	de b7       	in	r29, 0x3e	; 62
    5fda:	a8 97       	sbiw	r28, 0x28	; 40
    5fdc:	cd bf       	out	0x3d, r28	; 61
    5fde:	de bf       	out	0x3e, r29	; 62
    5fe0:	8c a3       	std	Y+36, r24	; 0x24
    5fe2:	9d a3       	std	Y+37, r25	; 0x25
    5fe4:	6e a3       	std	Y+38, r22	; 0x26
    5fe6:	7f a3       	std	Y+39, r23	; 0x27
    5fe8:	48 a7       	std	Y+40, r20	; 0x28
    5fea:	19 82       	std	Y+1, r1	; 0x01
    5fec:	1a 82       	std	Y+2, r1	; 0x02
    5fee:	1b 82       	std	Y+3, r1	; 0x03
    5ff0:	1c 82       	std	Y+4, r1	; 0x04
    5ff2:	8c a1       	ldd	r24, Y+36	; 0x24
    5ff4:	9d a1       	ldd	r25, Y+37	; 0x25
    5ff6:	0e 94 2f 75 	call	0xea5e	; 0xea5e <strlen>
    5ffa:	8d 83       	std	Y+5, r24	; 0x05
    5ffc:	9e 83       	std	Y+6, r25	; 0x06
    5ffe:	80 e0       	ldi	r24, 0x00	; 0
    6000:	96 e6       	ldi	r25, 0x66	; 102
    6002:	ae ee       	ldi	r26, 0xEE	; 238
    6004:	bf e5       	ldi	r27, 0x5F	; 95
    6006:	8f 83       	std	Y+7, r24	; 0x07
    6008:	98 87       	std	Y+8, r25	; 0x08
    600a:	a9 87       	std	Y+9, r26	; 0x09
    600c:	ba 87       	std	Y+10, r27	; 0x0a
    600e:	1b 86       	std	Y+11, r1	; 0x0b
    6010:	80 e0       	ldi	r24, 0x00	; 0
    6012:	90 e0       	ldi	r25, 0x00	; 0
    6014:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    6018:	dc 01       	movw	r26, r24
    601a:	cb 01       	movw	r24, r22
    601c:	8c 87       	std	Y+12, r24	; 0x0c
    601e:	9d 87       	std	Y+13, r25	; 0x0d
    6020:	ae 87       	std	Y+14, r26	; 0x0e
    6022:	bf 87       	std	Y+15, r27	; 0x0f
    6024:	8e a1       	ldd	r24, Y+38	; 0x26
    6026:	9f a1       	ldd	r25, Y+39	; 0x27
    6028:	87 51       	subi	r24, 0x17	; 23
    602a:	97 44       	sbci	r25, 0x47	; 71
    602c:	69 f5       	brne	.+90     	; 0x6088 <_Z18validateTimeStringPcPma+0xb6>
    602e:	8c 85       	ldd	r24, Y+12	; 0x0c
    6030:	9d 85       	ldd	r25, Y+13	; 0x0d
    6032:	ae 85       	ldd	r26, Y+14	; 0x0e
    6034:	bf 85       	ldd	r27, Y+15	; 0x0f
    6036:	88 8b       	std	Y+16, r24	; 0x10
    6038:	99 8b       	std	Y+17, r25	; 0x11
    603a:	aa 8b       	std	Y+18, r26	; 0x12
    603c:	bb 8b       	std	Y+19, r27	; 0x13
    603e:	80 e0       	ldi	r24, 0x00	; 0
    6040:	96 e6       	ldi	r25, 0x66	; 102
    6042:	ae ee       	ldi	r26, 0xEE	; 238
    6044:	bf e5       	ldi	r27, 0x5F	; 95
    6046:	8c 8b       	std	Y+20, r24	; 0x14
    6048:	9d 8b       	std	Y+21, r25	; 0x15
    604a:	ae 8b       	std	Y+22, r26	; 0x16
    604c:	bf 8b       	std	Y+23, r27	; 0x17
    604e:	28 89       	ldd	r18, Y+16	; 0x10
    6050:	39 89       	ldd	r19, Y+17	; 0x11
    6052:	4a 89       	ldd	r20, Y+18	; 0x12
    6054:	5b 89       	ldd	r21, Y+19	; 0x13
    6056:	8c 89       	ldd	r24, Y+20	; 0x14
    6058:	9d 89       	ldd	r25, Y+21	; 0x15
    605a:	ae 89       	ldd	r26, Y+22	; 0x16
    605c:	bf 89       	ldd	r27, Y+23	; 0x17
    605e:	28 17       	cp	r18, r24
    6060:	39 07       	cpc	r19, r25
    6062:	4a 07       	cpc	r20, r26
    6064:	5b 07       	cpc	r21, r27
    6066:	28 f4       	brcc	.+10     	; 0x6072 <_Z18validateTimeStringPcPma+0xa0>
    6068:	8c 89       	ldd	r24, Y+20	; 0x14
    606a:	9d 89       	ldd	r25, Y+21	; 0x15
    606c:	ae 89       	ldd	r26, Y+22	; 0x16
    606e:	bf 89       	ldd	r27, Y+23	; 0x17
    6070:	04 c0       	rjmp	.+8      	; 0x607a <_Z18validateTimeStringPcPma+0xa8>
    6072:	88 89       	ldd	r24, Y+16	; 0x10
    6074:	99 89       	ldd	r25, Y+17	; 0x11
    6076:	aa 89       	ldd	r26, Y+18	; 0x12
    6078:	bb 89       	ldd	r27, Y+19	; 0x13
    607a:	8f 83       	std	Y+7, r24	; 0x07
    607c:	98 87       	std	Y+8, r25	; 0x08
    607e:	a9 87       	std	Y+9, r26	; 0x09
    6080:	ba 87       	std	Y+10, r27	; 0x0a
    6082:	81 e0       	ldi	r24, 0x01	; 1
    6084:	8b 87       	std	Y+11, r24	; 0x0b
    6086:	35 c0       	rjmp	.+106    	; 0x60f2 <_Z18validateTimeStringPcPma+0x120>
    6088:	8e a1       	ldd	r24, Y+38	; 0x26
    608a:	9f a1       	ldd	r25, Y+39	; 0x27
    608c:	8b 51       	subi	r24, 0x1B	; 27
    608e:	97 44       	sbci	r25, 0x47	; 71
    6090:	81 f5       	brne	.+96     	; 0x60f2 <_Z18validateTimeStringPcPma+0x120>
    6092:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    6096:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    609a:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    609e:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    60a2:	8c 8f       	std	Y+28, r24	; 0x1c
    60a4:	9d 8f       	std	Y+29, r25	; 0x1d
    60a6:	ae 8f       	std	Y+30, r26	; 0x1e
    60a8:	bf 8f       	std	Y+31, r27	; 0x1f
    60aa:	8c 85       	ldd	r24, Y+12	; 0x0c
    60ac:	9d 85       	ldd	r25, Y+13	; 0x0d
    60ae:	ae 85       	ldd	r26, Y+14	; 0x0e
    60b0:	bf 85       	ldd	r27, Y+15	; 0x0f
    60b2:	88 a3       	std	Y+32, r24	; 0x20
    60b4:	99 a3       	std	Y+33, r25	; 0x21
    60b6:	aa a3       	std	Y+34, r26	; 0x22
    60b8:	bb a3       	std	Y+35, r27	; 0x23
    60ba:	2c 8d       	ldd	r18, Y+28	; 0x1c
    60bc:	3d 8d       	ldd	r19, Y+29	; 0x1d
    60be:	4e 8d       	ldd	r20, Y+30	; 0x1e
    60c0:	5f 8d       	ldd	r21, Y+31	; 0x1f
    60c2:	88 a1       	ldd	r24, Y+32	; 0x20
    60c4:	99 a1       	ldd	r25, Y+33	; 0x21
    60c6:	aa a1       	ldd	r26, Y+34	; 0x22
    60c8:	bb a1       	ldd	r27, Y+35	; 0x23
    60ca:	28 17       	cp	r18, r24
    60cc:	39 07       	cpc	r19, r25
    60ce:	4a 07       	cpc	r20, r26
    60d0:	5b 07       	cpc	r21, r27
    60d2:	28 f4       	brcc	.+10     	; 0x60de <_Z18validateTimeStringPcPma+0x10c>
    60d4:	88 a1       	ldd	r24, Y+32	; 0x20
    60d6:	99 a1       	ldd	r25, Y+33	; 0x21
    60d8:	aa a1       	ldd	r26, Y+34	; 0x22
    60da:	bb a1       	ldd	r27, Y+35	; 0x23
    60dc:	04 c0       	rjmp	.+8      	; 0x60e6 <_Z18validateTimeStringPcPma+0x114>
    60de:	8c 8d       	ldd	r24, Y+28	; 0x1c
    60e0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    60e2:	ae 8d       	ldd	r26, Y+30	; 0x1e
    60e4:	bf 8d       	ldd	r27, Y+31	; 0x1f
    60e6:	8f 83       	std	Y+7, r24	; 0x07
    60e8:	98 87       	std	Y+8, r25	; 0x08
    60ea:	a9 87       	std	Y+9, r26	; 0x09
    60ec:	ba 87       	std	Y+10, r27	; 0x0a
    60ee:	82 e0       	ldi	r24, 0x02	; 2
    60f0:	8b 87       	std	Y+11, r24	; 0x0b
    60f2:	8d 81       	ldd	r24, Y+5	; 0x05
    60f4:	9e 81       	ldd	r25, Y+6	; 0x06
    60f6:	0a 97       	sbiw	r24, 0x0a	; 10
    60f8:	a9 f4       	brne	.+42     	; 0x6124 <_Z18validateTimeStringPcPma+0x152>
    60fa:	8c a1       	ldd	r24, Y+36	; 0x24
    60fc:	9d a1       	ldd	r25, Y+37	; 0x25
    60fe:	0a 96       	adiw	r24, 0x0a	; 10
    6100:	20 e3       	ldi	r18, 0x30	; 48
    6102:	fc 01       	movw	r30, r24
    6104:	20 83       	st	Z, r18
    6106:	8c a1       	ldd	r24, Y+36	; 0x24
    6108:	9d a1       	ldd	r25, Y+37	; 0x25
    610a:	0b 96       	adiw	r24, 0x0b	; 11
    610c:	20 e3       	ldi	r18, 0x30	; 48
    610e:	fc 01       	movw	r30, r24
    6110:	20 83       	st	Z, r18
    6112:	8c a1       	ldd	r24, Y+36	; 0x24
    6114:	9d a1       	ldd	r25, Y+37	; 0x25
    6116:	0c 96       	adiw	r24, 0x0c	; 12
    6118:	fc 01       	movw	r30, r24
    611a:	10 82       	st	Z, r1
    611c:	8c e0       	ldi	r24, 0x0C	; 12
    611e:	90 e0       	ldi	r25, 0x00	; 0
    6120:	8d 83       	std	Y+5, r24	; 0x05
    6122:	9e 83       	std	Y+6, r25	; 0x06
    6124:	8d 81       	ldd	r24, Y+5	; 0x05
    6126:	9e 81       	ldd	r25, Y+6	; 0x06
    6128:	0c 97       	sbiw	r24, 0x0c	; 12
    612a:	41 f4       	brne	.+16     	; 0x613c <_Z18validateTimeStringPcPma+0x16a>
    612c:	8c a1       	ldd	r24, Y+36	; 0x24
    612e:	9d a1       	ldd	r25, Y+37	; 0x25
    6130:	0e 94 e6 6c 	call	0xd9cc	; 0xd9cc <_Z11only_digitsPc>
    6134:	88 23       	and	r24, r24
    6136:	11 f0       	breq	.+4      	; 0x613c <_Z18validateTimeStringPcPma+0x16a>
    6138:	81 e0       	ldi	r24, 0x01	; 1
    613a:	01 c0       	rjmp	.+2      	; 0x613e <_Z18validateTimeStringPcPma+0x16c>
    613c:	80 e0       	ldi	r24, 0x00	; 0
    613e:	88 23       	and	r24, r24
    6140:	09 f4       	brne	.+2      	; 0x6144 <_Z18validateTimeStringPcPma+0x172>
    6142:	69 c0       	rjmp	.+210    	; 0x6216 <_Z18validateTimeStringPcPma+0x244>
    6144:	8c a1       	ldd	r24, Y+36	; 0x24
    6146:	9d a1       	ldd	r25, Y+37	; 0x25
    6148:	bc 01       	movw	r22, r24
    614a:	80 e0       	ldi	r24, 0x00	; 0
    614c:	90 e0       	ldi	r25, 0x00	; 0
    614e:	0e 94 3e 35 	call	0x6a7c	; 0x6a7c <_Z16RTC_String2EpochPbPc>
    6152:	dc 01       	movw	r26, r24
    6154:	cb 01       	movw	r24, r22
    6156:	88 8f       	std	Y+24, r24	; 0x18
    6158:	99 8f       	std	Y+25, r25	; 0x19
    615a:	aa 8f       	std	Y+26, r26	; 0x1a
    615c:	bb 8f       	std	Y+27, r27	; 0x1b
    615e:	88 a5       	ldd	r24, Y+40	; 0x28
    6160:	28 2f       	mov	r18, r24
    6162:	88 0f       	add	r24, r24
    6164:	33 0b       	sbc	r19, r19
    6166:	44 0b       	sbc	r20, r20
    6168:	55 0b       	sbc	r21, r21
    616a:	80 e1       	ldi	r24, 0x10	; 16
    616c:	9e e0       	ldi	r25, 0x0E	; 14
    616e:	dc 01       	movw	r26, r24
    6170:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <__muluhisi3>
    6174:	9b 01       	movw	r18, r22
    6176:	ac 01       	movw	r20, r24
    6178:	88 8d       	ldd	r24, Y+24	; 0x18
    617a:	99 8d       	ldd	r25, Y+25	; 0x19
    617c:	aa 8d       	ldd	r26, Y+26	; 0x1a
    617e:	bb 8d       	ldd	r27, Y+27	; 0x1b
    6180:	82 0f       	add	r24, r18
    6182:	93 1f       	adc	r25, r19
    6184:	a4 1f       	adc	r26, r20
    6186:	b5 1f       	adc	r27, r21
    6188:	88 8f       	std	Y+24, r24	; 0x18
    618a:	99 8f       	std	Y+25, r25	; 0x19
    618c:	aa 8f       	std	Y+26, r26	; 0x1a
    618e:	bb 8f       	std	Y+27, r27	; 0x1b
    6190:	28 8d       	ldd	r18, Y+24	; 0x18
    6192:	39 8d       	ldd	r19, Y+25	; 0x19
    6194:	4a 8d       	ldd	r20, Y+26	; 0x1a
    6196:	5b 8d       	ldd	r21, Y+27	; 0x1b
    6198:	8f 81       	ldd	r24, Y+7	; 0x07
    619a:	98 85       	ldd	r25, Y+8	; 0x08
    619c:	a9 85       	ldd	r26, Y+9	; 0x09
    619e:	ba 85       	ldd	r27, Y+10	; 0x0a
    61a0:	82 17       	cp	r24, r18
    61a2:	93 07       	cpc	r25, r19
    61a4:	a4 07       	cpc	r26, r20
    61a6:	b5 07       	cpc	r27, r21
    61a8:	48 f4       	brcc	.+18     	; 0x61bc <_Z18validateTimeStringPcPma+0x1ea>
    61aa:	88 8d       	ldd	r24, Y+24	; 0x18
    61ac:	99 8d       	ldd	r25, Y+25	; 0x19
    61ae:	aa 8d       	ldd	r26, Y+26	; 0x1a
    61b0:	bb 8d       	ldd	r27, Y+27	; 0x1b
    61b2:	89 83       	std	Y+1, r24	; 0x01
    61b4:	9a 83       	std	Y+2, r25	; 0x02
    61b6:	ab 83       	std	Y+3, r26	; 0x03
    61b8:	bc 83       	std	Y+4, r27	; 0x04
    61ba:	35 c0       	rjmp	.+106    	; 0x6226 <_Z18validateTimeStringPcPma+0x254>
    61bc:	8b 85       	ldd	r24, Y+11	; 0x0b
    61be:	81 30       	cpi	r24, 0x01	; 1
    61c0:	29 f4       	brne	.+10     	; 0x61cc <_Z18validateTimeStringPcPma+0x1fa>
    61c2:	8e ef       	ldi	r24, 0xFE	; 254
    61c4:	92 e4       	ldi	r25, 0x42	; 66
    61c6:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    61ca:	2d c0       	rjmp	.+90     	; 0x6226 <_Z18validateTimeStringPcPma+0x254>
    61cc:	8b 85       	ldd	r24, Y+11	; 0x0b
    61ce:	82 30       	cpi	r24, 0x02	; 2
    61d0:	e9 f4       	brne	.+58     	; 0x620c <_Z18validateTimeStringPcPma+0x23a>
    61d2:	80 e0       	ldi	r24, 0x00	; 0
    61d4:	90 e0       	ldi	r25, 0x00	; 0
    61d6:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    61da:	9b 01       	movw	r18, r22
    61dc:	ac 01       	movw	r20, r24
    61de:	61 e0       	ldi	r22, 0x01	; 1
    61e0:	88 8d       	ldd	r24, Y+24	; 0x18
    61e2:	99 8d       	ldd	r25, Y+25	; 0x19
    61e4:	aa 8d       	ldd	r26, Y+26	; 0x1a
    61e6:	bb 8d       	ldd	r27, Y+27	; 0x1b
    61e8:	82 17       	cp	r24, r18
    61ea:	93 07       	cpc	r25, r19
    61ec:	a4 07       	cpc	r26, r20
    61ee:	b5 07       	cpc	r27, r21
    61f0:	08 f0       	brcs	.+2      	; 0x61f4 <_Z18validateTimeStringPcPma+0x222>
    61f2:	60 e0       	ldi	r22, 0x00	; 0
    61f4:	66 23       	and	r22, r22
    61f6:	29 f0       	breq	.+10     	; 0x6202 <_Z18validateTimeStringPcPma+0x230>
    61f8:	83 e1       	ldi	r24, 0x13	; 19
    61fa:	93 e4       	ldi	r25, 0x43	; 67
    61fc:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    6200:	12 c0       	rjmp	.+36     	; 0x6226 <_Z18validateTimeStringPcPma+0x254>
    6202:	89 e2       	ldi	r24, 0x29	; 41
    6204:	93 e4       	ldi	r25, 0x43	; 67
    6206:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    620a:	0d c0       	rjmp	.+26     	; 0x6226 <_Z18validateTimeStringPcPma+0x254>
    620c:	84 e4       	ldi	r24, 0x44	; 68
    620e:	93 e4       	ldi	r25, 0x43	; 67
    6210:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    6214:	08 c0       	rjmp	.+16     	; 0x6226 <_Z18validateTimeStringPcPma+0x254>
    6216:	8d 81       	ldd	r24, Y+5	; 0x05
    6218:	9e 81       	ldd	r25, Y+6	; 0x06
    621a:	89 2b       	or	r24, r25
    621c:	21 f0       	breq	.+8      	; 0x6226 <_Z18validateTimeStringPcPma+0x254>
    621e:	88 e5       	ldi	r24, 0x58	; 88
    6220:	93 e4       	ldi	r25, 0x43	; 67
    6222:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    6226:	89 81       	ldd	r24, Y+1	; 0x01
    6228:	9a 81       	ldd	r25, Y+2	; 0x02
    622a:	ab 81       	ldd	r26, Y+3	; 0x03
    622c:	bc 81       	ldd	r27, Y+4	; 0x04
    622e:	bc 01       	movw	r22, r24
    6230:	cd 01       	movw	r24, r26
    6232:	a8 96       	adiw	r28, 0x28	; 40
    6234:	cd bf       	out	0x3d, r28	; 61
    6236:	de bf       	out	0x3e, r29	; 62
    6238:	df 91       	pop	r29
    623a:	cf 91       	pop	r28
    623c:	08 95       	ret

0000623e <_Z14reportTimeTillmmPKcS0_>:
    623e:	ef 92       	push	r14
    6240:	ff 92       	push	r15
    6242:	0f 93       	push	r16
    6244:	1f 93       	push	r17
    6246:	cf 93       	push	r28
    6248:	df 93       	push	r29
    624a:	cd b7       	in	r28, 0x3d	; 61
    624c:	de b7       	in	r29, 0x3e	; 62
    624e:	6f 97       	sbiw	r28, 0x1f	; 31
    6250:	cd bf       	out	0x3d, r28	; 61
    6252:	de bf       	out	0x3e, r29	; 62
    6254:	6c 8b       	std	Y+20, r22	; 0x14
    6256:	7d 8b       	std	Y+21, r23	; 0x15
    6258:	8e 8b       	std	Y+22, r24	; 0x16
    625a:	9f 8b       	std	Y+23, r25	; 0x17
    625c:	28 8f       	std	Y+24, r18	; 0x18
    625e:	39 8f       	std	Y+25, r19	; 0x19
    6260:	4a 8f       	std	Y+26, r20	; 0x1a
    6262:	5b 8f       	std	Y+27, r21	; 0x1b
    6264:	0c 8f       	std	Y+28, r16	; 0x1c
    6266:	1d 8f       	std	Y+29, r17	; 0x1d
    6268:	ee 8e       	std	Y+30, r14	; 0x1e
    626a:	ff 8e       	std	Y+31, r15	; 0x1f
    626c:	19 82       	std	Y+1, r1	; 0x01
    626e:	2c 89       	ldd	r18, Y+20	; 0x14
    6270:	3d 89       	ldd	r19, Y+21	; 0x15
    6272:	4e 89       	ldd	r20, Y+22	; 0x16
    6274:	5f 89       	ldd	r21, Y+23	; 0x17
    6276:	88 8d       	ldd	r24, Y+24	; 0x18
    6278:	99 8d       	ldd	r25, Y+25	; 0x19
    627a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    627c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    627e:	28 17       	cp	r18, r24
    6280:	39 07       	cpc	r19, r25
    6282:	4a 07       	cpc	r20, r26
    6284:	5b 07       	cpc	r21, r27
    6286:	60 f0       	brcs	.+24     	; 0x62a0 <_Z14reportTimeTillmmPKcS0_+0x62>
    6288:	81 e0       	ldi	r24, 0x01	; 1
    628a:	89 83       	std	Y+1, r24	; 0x01
    628c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    628e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6290:	89 2b       	or	r24, r25
    6292:	09 f4       	brne	.+2      	; 0x6296 <_Z14reportTimeTillmmPKcS0_+0x58>
    6294:	6b c1       	rjmp	.+726    	; 0x656c <_Z14reportTimeTillmmPKcS0_+0x32e>
    6296:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6298:	9f 8d       	ldd	r25, Y+31	; 0x1f
    629a:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    629e:	66 c1       	rjmp	.+716    	; 0x656c <_Z14reportTimeTillmmPKcS0_+0x32e>
    62a0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    62a2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    62a4:	89 2b       	or	r24, r25
    62a6:	21 f0       	breq	.+8      	; 0x62b0 <_Z14reportTimeTillmmPKcS0_+0x72>
    62a8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    62aa:	9d 8d       	ldd	r25, Y+29	; 0x1d
    62ac:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    62b0:	28 8d       	ldd	r18, Y+24	; 0x18
    62b2:	39 8d       	ldd	r19, Y+25	; 0x19
    62b4:	4a 8d       	ldd	r20, Y+26	; 0x1a
    62b6:	5b 8d       	ldd	r21, Y+27	; 0x1b
    62b8:	8c 89       	ldd	r24, Y+20	; 0x14
    62ba:	9d 89       	ldd	r25, Y+21	; 0x15
    62bc:	ae 89       	ldd	r26, Y+22	; 0x16
    62be:	bf 89       	ldd	r27, Y+23	; 0x17
    62c0:	79 01       	movw	r14, r18
    62c2:	8a 01       	movw	r16, r20
    62c4:	e8 1a       	sub	r14, r24
    62c6:	f9 0a       	sbc	r15, r25
    62c8:	0a 0b       	sbc	r16, r26
    62ca:	1b 0b       	sbc	r17, r27
    62cc:	d8 01       	movw	r26, r16
    62ce:	c7 01       	movw	r24, r14
    62d0:	8a 83       	std	Y+2, r24	; 0x02
    62d2:	9b 83       	std	Y+3, r25	; 0x03
    62d4:	ac 83       	std	Y+4, r26	; 0x04
    62d6:	bd 83       	std	Y+5, r27	; 0x05
    62d8:	8a 81       	ldd	r24, Y+2	; 0x02
    62da:	9b 81       	ldd	r25, Y+3	; 0x03
    62dc:	ac 81       	ldd	r26, Y+4	; 0x04
    62de:	bd 81       	ldd	r27, Y+5	; 0x05
    62e0:	20 e8       	ldi	r18, 0x80	; 128
    62e2:	33 e3       	ldi	r19, 0x33	; 51
    62e4:	41 ee       	ldi	r20, 0xE1	; 225
    62e6:	51 e0       	ldi	r21, 0x01	; 1
    62e8:	bc 01       	movw	r22, r24
    62ea:	cd 01       	movw	r24, r26
    62ec:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    62f0:	da 01       	movw	r26, r20
    62f2:	c9 01       	movw	r24, r18
    62f4:	8e 83       	std	Y+6, r24	; 0x06
    62f6:	9f 83       	std	Y+7, r25	; 0x07
    62f8:	8e 81       	ldd	r24, Y+6	; 0x06
    62fa:	9f 81       	ldd	r25, Y+7	; 0x07
    62fc:	cc 01       	movw	r24, r24
    62fe:	a0 e0       	ldi	r26, 0x00	; 0
    6300:	b0 e0       	ldi	r27, 0x00	; 0
    6302:	9c 01       	movw	r18, r24
    6304:	ad 01       	movw	r20, r26
    6306:	60 e8       	ldi	r22, 0x80	; 128
    6308:	73 e3       	ldi	r23, 0x33	; 51
    630a:	81 ee       	ldi	r24, 0xE1	; 225
    630c:	91 e0       	ldi	r25, 0x01	; 1
    630e:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    6312:	9b 01       	movw	r18, r22
    6314:	ac 01       	movw	r20, r24
    6316:	8a 81       	ldd	r24, Y+2	; 0x02
    6318:	9b 81       	ldd	r25, Y+3	; 0x03
    631a:	ac 81       	ldd	r26, Y+4	; 0x04
    631c:	bd 81       	ldd	r27, Y+5	; 0x05
    631e:	82 1b       	sub	r24, r18
    6320:	93 0b       	sbc	r25, r19
    6322:	a4 0b       	sbc	r26, r20
    6324:	b5 0b       	sbc	r27, r21
    6326:	88 87       	std	Y+8, r24	; 0x08
    6328:	99 87       	std	Y+9, r25	; 0x09
    632a:	aa 87       	std	Y+10, r26	; 0x0a
    632c:	bb 87       	std	Y+11, r27	; 0x0b
    632e:	88 85       	ldd	r24, Y+8	; 0x08
    6330:	99 85       	ldd	r25, Y+9	; 0x09
    6332:	aa 85       	ldd	r26, Y+10	; 0x0a
    6334:	bb 85       	ldd	r27, Y+11	; 0x0b
    6336:	20 e8       	ldi	r18, 0x80	; 128
    6338:	31 e5       	ldi	r19, 0x51	; 81
    633a:	41 e0       	ldi	r20, 0x01	; 1
    633c:	50 e0       	ldi	r21, 0x00	; 0
    633e:	bc 01       	movw	r22, r24
    6340:	cd 01       	movw	r24, r26
    6342:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    6346:	da 01       	movw	r26, r20
    6348:	c9 01       	movw	r24, r18
    634a:	8c 87       	std	Y+12, r24	; 0x0c
    634c:	9d 87       	std	Y+13, r25	; 0x0d
    634e:	8c 85       	ldd	r24, Y+12	; 0x0c
    6350:	9d 85       	ldd	r25, Y+13	; 0x0d
    6352:	cc 01       	movw	r24, r24
    6354:	a0 e0       	ldi	r26, 0x00	; 0
    6356:	b0 e0       	ldi	r27, 0x00	; 0
    6358:	9c 01       	movw	r18, r24
    635a:	ad 01       	movw	r20, r26
    635c:	60 e8       	ldi	r22, 0x80	; 128
    635e:	71 e5       	ldi	r23, 0x51	; 81
    6360:	81 e0       	ldi	r24, 0x01	; 1
    6362:	90 e0       	ldi	r25, 0x00	; 0
    6364:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    6368:	9b 01       	movw	r18, r22
    636a:	ac 01       	movw	r20, r24
    636c:	88 85       	ldd	r24, Y+8	; 0x08
    636e:	99 85       	ldd	r25, Y+9	; 0x09
    6370:	aa 85       	ldd	r26, Y+10	; 0x0a
    6372:	bb 85       	ldd	r27, Y+11	; 0x0b
    6374:	82 1b       	sub	r24, r18
    6376:	93 0b       	sbc	r25, r19
    6378:	a4 0b       	sbc	r26, r20
    637a:	b5 0b       	sbc	r27, r21
    637c:	88 87       	std	Y+8, r24	; 0x08
    637e:	99 87       	std	Y+9, r25	; 0x09
    6380:	aa 87       	std	Y+10, r26	; 0x0a
    6382:	bb 87       	std	Y+11, r27	; 0x0b
    6384:	88 85       	ldd	r24, Y+8	; 0x08
    6386:	99 85       	ldd	r25, Y+9	; 0x09
    6388:	aa 85       	ldd	r26, Y+10	; 0x0a
    638a:	bb 85       	ldd	r27, Y+11	; 0x0b
    638c:	20 e1       	ldi	r18, 0x10	; 16
    638e:	3e e0       	ldi	r19, 0x0E	; 14
    6390:	40 e0       	ldi	r20, 0x00	; 0
    6392:	50 e0       	ldi	r21, 0x00	; 0
    6394:	bc 01       	movw	r22, r24
    6396:	cd 01       	movw	r24, r26
    6398:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    639c:	da 01       	movw	r26, r20
    639e:	c9 01       	movw	r24, r18
    63a0:	8e 87       	std	Y+14, r24	; 0x0e
    63a2:	9f 87       	std	Y+15, r25	; 0x0f
    63a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    63a6:	9f 85       	ldd	r25, Y+15	; 0x0f
    63a8:	9c 01       	movw	r18, r24
    63aa:	40 e0       	ldi	r20, 0x00	; 0
    63ac:	50 e0       	ldi	r21, 0x00	; 0
    63ae:	80 e1       	ldi	r24, 0x10	; 16
    63b0:	9e e0       	ldi	r25, 0x0E	; 14
    63b2:	dc 01       	movw	r26, r24
    63b4:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <__muluhisi3>
    63b8:	9b 01       	movw	r18, r22
    63ba:	ac 01       	movw	r20, r24
    63bc:	88 85       	ldd	r24, Y+8	; 0x08
    63be:	99 85       	ldd	r25, Y+9	; 0x09
    63c0:	aa 85       	ldd	r26, Y+10	; 0x0a
    63c2:	bb 85       	ldd	r27, Y+11	; 0x0b
    63c4:	82 1b       	sub	r24, r18
    63c6:	93 0b       	sbc	r25, r19
    63c8:	a4 0b       	sbc	r26, r20
    63ca:	b5 0b       	sbc	r27, r21
    63cc:	88 87       	std	Y+8, r24	; 0x08
    63ce:	99 87       	std	Y+9, r25	; 0x09
    63d0:	aa 87       	std	Y+10, r26	; 0x0a
    63d2:	bb 87       	std	Y+11, r27	; 0x0b
    63d4:	88 85       	ldd	r24, Y+8	; 0x08
    63d6:	99 85       	ldd	r25, Y+9	; 0x09
    63d8:	aa 85       	ldd	r26, Y+10	; 0x0a
    63da:	bb 85       	ldd	r27, Y+11	; 0x0b
    63dc:	2c e3       	ldi	r18, 0x3C	; 60
    63de:	30 e0       	ldi	r19, 0x00	; 0
    63e0:	40 e0       	ldi	r20, 0x00	; 0
    63e2:	50 e0       	ldi	r21, 0x00	; 0
    63e4:	bc 01       	movw	r22, r24
    63e6:	cd 01       	movw	r24, r26
    63e8:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    63ec:	da 01       	movw	r26, r20
    63ee:	c9 01       	movw	r24, r18
    63f0:	88 8b       	std	Y+16, r24	; 0x10
    63f2:	99 8b       	std	Y+17, r25	; 0x11
    63f4:	28 85       	ldd	r18, Y+8	; 0x08
    63f6:	39 85       	ldd	r19, Y+9	; 0x09
    63f8:	48 89       	ldd	r20, Y+16	; 0x10
    63fa:	59 89       	ldd	r21, Y+17	; 0x11
    63fc:	6c e3       	ldi	r22, 0x3C	; 60
    63fe:	64 9f       	mul	r22, r20
    6400:	c0 01       	movw	r24, r0
    6402:	65 9f       	mul	r22, r21
    6404:	90 0d       	add	r25, r0
    6406:	11 24       	eor	r1, r1
    6408:	89 01       	movw	r16, r18
    640a:	08 1b       	sub	r16, r24
    640c:	19 0b       	sbc	r17, r25
    640e:	c8 01       	movw	r24, r16
    6410:	8a 8b       	std	Y+18, r24	; 0x12
    6412:	9b 8b       	std	Y+19, r25	; 0x13
    6414:	10 92 a4 46 	sts	0x46A4, r1	; 0x8046a4 <_ZL9g_tempStr>
    6418:	8e 81       	ldd	r24, Y+6	; 0x06
    641a:	9f 81       	ldd	r25, Y+7	; 0x07
    641c:	89 2b       	or	r24, r25
    641e:	f1 f0       	breq	.+60     	; 0x645c <_Z14reportTimeTillmmPKcS0_+0x21e>
    6420:	8f 81       	ldd	r24, Y+7	; 0x07
    6422:	8f 93       	push	r24
    6424:	8e 81       	ldd	r24, Y+6	; 0x06
    6426:	8f 93       	push	r24
    6428:	8c e6       	ldi	r24, 0x6C	; 108
    642a:	93 e4       	ldi	r25, 0x43	; 67
    642c:	89 2f       	mov	r24, r25
    642e:	8f 93       	push	r24
    6430:	8c e6       	ldi	r24, 0x6C	; 108
    6432:	93 e4       	ldi	r25, 0x43	; 67
    6434:	8f 93       	push	r24
    6436:	84 ea       	ldi	r24, 0xA4	; 164
    6438:	96 e4       	ldi	r25, 0x46	; 70
    643a:	89 2f       	mov	r24, r25
    643c:	8f 93       	push	r24
    643e:	84 ea       	ldi	r24, 0xA4	; 164
    6440:	96 e4       	ldi	r25, 0x46	; 70
    6442:	8f 93       	push	r24
    6444:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    6448:	0f 90       	pop	r0
    644a:	0f 90       	pop	r0
    644c:	0f 90       	pop	r0
    644e:	0f 90       	pop	r0
    6450:	0f 90       	pop	r0
    6452:	0f 90       	pop	r0
    6454:	84 ea       	ldi	r24, 0xA4	; 164
    6456:	96 e4       	ldi	r25, 0x46	; 70
    6458:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    645c:	8c 85       	ldd	r24, Y+12	; 0x0c
    645e:	9d 85       	ldd	r25, Y+13	; 0x0d
    6460:	89 2b       	or	r24, r25
    6462:	f1 f0       	breq	.+60     	; 0x64a0 <_Z14reportTimeTillmmPKcS0_+0x262>
    6464:	8d 85       	ldd	r24, Y+13	; 0x0d
    6466:	8f 93       	push	r24
    6468:	8c 85       	ldd	r24, Y+12	; 0x0c
    646a:	8f 93       	push	r24
    646c:	84 e7       	ldi	r24, 0x74	; 116
    646e:	93 e4       	ldi	r25, 0x43	; 67
    6470:	89 2f       	mov	r24, r25
    6472:	8f 93       	push	r24
    6474:	84 e7       	ldi	r24, 0x74	; 116
    6476:	93 e4       	ldi	r25, 0x43	; 67
    6478:	8f 93       	push	r24
    647a:	84 ea       	ldi	r24, 0xA4	; 164
    647c:	96 e4       	ldi	r25, 0x46	; 70
    647e:	89 2f       	mov	r24, r25
    6480:	8f 93       	push	r24
    6482:	84 ea       	ldi	r24, 0xA4	; 164
    6484:	96 e4       	ldi	r25, 0x46	; 70
    6486:	8f 93       	push	r24
    6488:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    648c:	0f 90       	pop	r0
    648e:	0f 90       	pop	r0
    6490:	0f 90       	pop	r0
    6492:	0f 90       	pop	r0
    6494:	0f 90       	pop	r0
    6496:	0f 90       	pop	r0
    6498:	84 ea       	ldi	r24, 0xA4	; 164
    649a:	96 e4       	ldi	r25, 0x46	; 70
    649c:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    64a0:	8e 85       	ldd	r24, Y+14	; 0x0e
    64a2:	9f 85       	ldd	r25, Y+15	; 0x0f
    64a4:	89 2b       	or	r24, r25
    64a6:	f1 f0       	breq	.+60     	; 0x64e4 <_Z14reportTimeTillmmPKcS0_+0x2a6>
    64a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    64aa:	8f 93       	push	r24
    64ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    64ae:	8f 93       	push	r24
    64b0:	8d e7       	ldi	r24, 0x7D	; 125
    64b2:	93 e4       	ldi	r25, 0x43	; 67
    64b4:	89 2f       	mov	r24, r25
    64b6:	8f 93       	push	r24
    64b8:	8d e7       	ldi	r24, 0x7D	; 125
    64ba:	93 e4       	ldi	r25, 0x43	; 67
    64bc:	8f 93       	push	r24
    64be:	84 ea       	ldi	r24, 0xA4	; 164
    64c0:	96 e4       	ldi	r25, 0x46	; 70
    64c2:	89 2f       	mov	r24, r25
    64c4:	8f 93       	push	r24
    64c6:	84 ea       	ldi	r24, 0xA4	; 164
    64c8:	96 e4       	ldi	r25, 0x46	; 70
    64ca:	8f 93       	push	r24
    64cc:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    64d0:	0f 90       	pop	r0
    64d2:	0f 90       	pop	r0
    64d4:	0f 90       	pop	r0
    64d6:	0f 90       	pop	r0
    64d8:	0f 90       	pop	r0
    64da:	0f 90       	pop	r0
    64dc:	84 ea       	ldi	r24, 0xA4	; 164
    64de:	96 e4       	ldi	r25, 0x46	; 70
    64e0:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    64e4:	88 89       	ldd	r24, Y+16	; 0x10
    64e6:	99 89       	ldd	r25, Y+17	; 0x11
    64e8:	89 2b       	or	r24, r25
    64ea:	f1 f0       	breq	.+60     	; 0x6528 <_Z14reportTimeTillmmPKcS0_+0x2ea>
    64ec:	89 89       	ldd	r24, Y+17	; 0x11
    64ee:	8f 93       	push	r24
    64f0:	88 89       	ldd	r24, Y+16	; 0x10
    64f2:	8f 93       	push	r24
    64f4:	85 e8       	ldi	r24, 0x85	; 133
    64f6:	93 e4       	ldi	r25, 0x43	; 67
    64f8:	89 2f       	mov	r24, r25
    64fa:	8f 93       	push	r24
    64fc:	85 e8       	ldi	r24, 0x85	; 133
    64fe:	93 e4       	ldi	r25, 0x43	; 67
    6500:	8f 93       	push	r24
    6502:	84 ea       	ldi	r24, 0xA4	; 164
    6504:	96 e4       	ldi	r25, 0x46	; 70
    6506:	89 2f       	mov	r24, r25
    6508:	8f 93       	push	r24
    650a:	84 ea       	ldi	r24, 0xA4	; 164
    650c:	96 e4       	ldi	r25, 0x46	; 70
    650e:	8f 93       	push	r24
    6510:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    6514:	0f 90       	pop	r0
    6516:	0f 90       	pop	r0
    6518:	0f 90       	pop	r0
    651a:	0f 90       	pop	r0
    651c:	0f 90       	pop	r0
    651e:	0f 90       	pop	r0
    6520:	84 ea       	ldi	r24, 0xA4	; 164
    6522:	96 e4       	ldi	r25, 0x46	; 70
    6524:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    6528:	8b 89       	ldd	r24, Y+19	; 0x13
    652a:	8f 93       	push	r24
    652c:	8a 89       	ldd	r24, Y+18	; 0x12
    652e:	8f 93       	push	r24
    6530:	8d e8       	ldi	r24, 0x8D	; 141
    6532:	93 e4       	ldi	r25, 0x43	; 67
    6534:	89 2f       	mov	r24, r25
    6536:	8f 93       	push	r24
    6538:	8d e8       	ldi	r24, 0x8D	; 141
    653a:	93 e4       	ldi	r25, 0x43	; 67
    653c:	8f 93       	push	r24
    653e:	84 ea       	ldi	r24, 0xA4	; 164
    6540:	96 e4       	ldi	r25, 0x46	; 70
    6542:	89 2f       	mov	r24, r25
    6544:	8f 93       	push	r24
    6546:	84 ea       	ldi	r24, 0xA4	; 164
    6548:	96 e4       	ldi	r25, 0x46	; 70
    654a:	8f 93       	push	r24
    654c:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    6550:	0f 90       	pop	r0
    6552:	0f 90       	pop	r0
    6554:	0f 90       	pop	r0
    6556:	0f 90       	pop	r0
    6558:	0f 90       	pop	r0
    655a:	0f 90       	pop	r0
    655c:	84 ea       	ldi	r24, 0xA4	; 164
    655e:	96 e4       	ldi	r25, 0x46	; 70
    6560:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    6564:	0e 94 de 59 	call	0xb3bc	; 0xb3bc <sb_send_NewLine>
    6568:	10 92 a4 46 	sts	0x46A4, r1	; 0x8046a4 <_ZL9g_tempStr>
    656c:	89 81       	ldd	r24, Y+1	; 0x01
    656e:	6f 96       	adiw	r28, 0x1f	; 31
    6570:	cd bf       	out	0x3d, r28	; 61
    6572:	de bf       	out	0x3e, r29	; 62
    6574:	df 91       	pop	r29
    6576:	cf 91       	pop	r28
    6578:	1f 91       	pop	r17
    657a:	0f 91       	pop	r16
    657c:	ff 90       	pop	r15
    657e:	ef 90       	pop	r14
    6580:	08 95       	ret

00006582 <_Z23clockConfigurationCheckv>:
    6582:	cf 93       	push	r28
    6584:	df 93       	push	r29
    6586:	00 d0       	rcall	.+0      	; 0x6588 <_Z23clockConfigurationCheckv+0x6>
    6588:	00 d0       	rcall	.+0      	; 0x658a <_Z23clockConfigurationCheckv+0x8>
    658a:	cd b7       	in	r28, 0x3d	; 61
    658c:	de b7       	in	r29, 0x3e	; 62
    658e:	80 e0       	ldi	r24, 0x00	; 0
    6590:	90 e0       	ldi	r25, 0x00	; 0
    6592:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    6596:	dc 01       	movw	r26, r24
    6598:	cb 01       	movw	r24, r22
    659a:	89 83       	std	Y+1, r24	; 0x01
    659c:	9a 83       	std	Y+2, r25	; 0x02
    659e:	ab 83       	std	Y+3, r26	; 0x03
    65a0:	bc 83       	std	Y+4, r27	; 0x04
    65a2:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    65a6:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    65aa:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    65ae:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    65b2:	81 15       	cp	r24, r1
    65b4:	96 46       	sbci	r25, 0x66	; 102
    65b6:	ae 4e       	sbci	r26, 0xEE	; 238
    65b8:	bf 45       	sbci	r27, 0x5F	; 95
    65ba:	b0 f0       	brcs	.+44     	; 0x65e8 <_Z23clockConfigurationCheckv+0x66>
    65bc:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    65c0:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    65c4:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    65c8:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    65cc:	81 15       	cp	r24, r1
    65ce:	96 46       	sbci	r25, 0x66	; 102
    65d0:	ae 4e       	sbci	r26, 0xEE	; 238
    65d2:	bf 45       	sbci	r27, 0x5F	; 95
    65d4:	48 f0       	brcs	.+18     	; 0x65e8 <_Z23clockConfigurationCheckv+0x66>
    65d6:	89 81       	ldd	r24, Y+1	; 0x01
    65d8:	9a 81       	ldd	r25, Y+2	; 0x02
    65da:	ab 81       	ldd	r26, Y+3	; 0x03
    65dc:	bc 81       	ldd	r27, Y+4	; 0x04
    65de:	81 15       	cp	r24, r1
    65e0:	96 46       	sbci	r25, 0x66	; 102
    65e2:	ae 4e       	sbci	r26, 0xEE	; 238
    65e4:	bf 45       	sbci	r27, 0x5F	; 95
    65e6:	10 f4       	brcc	.+4      	; 0x65ec <_Z23clockConfigurationCheckv+0x6a>
    65e8:	81 e0       	ldi	r24, 0x01	; 1
    65ea:	01 c0       	rjmp	.+2      	; 0x65ee <_Z23clockConfigurationCheckv+0x6c>
    65ec:	80 e0       	ldi	r24, 0x00	; 0
    65ee:	88 23       	and	r24, r24
    65f0:	11 f0       	breq	.+4      	; 0x65f6 <_Z23clockConfigurationCheckv+0x74>
    65f2:	82 e0       	ldi	r24, 0x02	; 2
    65f4:	5a c0       	rjmp	.+180    	; 0x66aa <_Z23clockConfigurationCheckv+0x128>
    65f6:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    65fa:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    65fe:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    6602:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    6606:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    660a:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    660e:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    6612:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    6616:	61 e0       	ldi	r22, 0x01	; 1
    6618:	82 17       	cp	r24, r18
    661a:	93 07       	cpc	r25, r19
    661c:	a4 07       	cpc	r26, r20
    661e:	b5 07       	cpc	r27, r21
    6620:	08 f4       	brcc	.+2      	; 0x6624 <_Z23clockConfigurationCheckv+0xa2>
    6622:	60 e0       	ldi	r22, 0x00	; 0
    6624:	66 23       	and	r22, r22
    6626:	11 f0       	breq	.+4      	; 0x662c <_Z23clockConfigurationCheckv+0xaa>
    6628:	82 e0       	ldi	r24, 0x02	; 2
    662a:	3f c0       	rjmp	.+126    	; 0x66aa <_Z23clockConfigurationCheckv+0x128>
    662c:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    6630:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    6634:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    6638:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    663c:	61 e0       	ldi	r22, 0x01	; 1
    663e:	29 81       	ldd	r18, Y+1	; 0x01
    6640:	3a 81       	ldd	r19, Y+2	; 0x02
    6642:	4b 81       	ldd	r20, Y+3	; 0x03
    6644:	5c 81       	ldd	r21, Y+4	; 0x04
    6646:	82 17       	cp	r24, r18
    6648:	93 07       	cpc	r25, r19
    664a:	a4 07       	cpc	r26, r20
    664c:	b5 07       	cpc	r27, r21
    664e:	08 f0       	brcs	.+2      	; 0x6652 <_Z23clockConfigurationCheckv+0xd0>
    6650:	60 e0       	ldi	r22, 0x00	; 0
    6652:	66 23       	and	r22, r22
    6654:	11 f0       	breq	.+4      	; 0x665a <_Z23clockConfigurationCheckv+0xd8>
    6656:	82 e0       	ldi	r24, 0x02	; 2
    6658:	28 c0       	rjmp	.+80     	; 0x66aa <_Z23clockConfigurationCheckv+0x128>
    665a:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    665e:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    6662:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    6666:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    666a:	61 e0       	ldi	r22, 0x01	; 1
    666c:	29 81       	ldd	r18, Y+1	; 0x01
    666e:	3a 81       	ldd	r19, Y+2	; 0x02
    6670:	4b 81       	ldd	r20, Y+3	; 0x03
    6672:	5c 81       	ldd	r21, Y+4	; 0x04
    6674:	82 17       	cp	r24, r18
    6676:	93 07       	cpc	r25, r19
    6678:	a4 07       	cpc	r26, r20
    667a:	b5 07       	cpc	r27, r21
    667c:	08 f0       	brcs	.+2      	; 0x6680 <_Z23clockConfigurationCheckv+0xfe>
    667e:	60 e0       	ldi	r22, 0x00	; 0
    6680:	66 23       	and	r22, r22
    6682:	51 f0       	breq	.+20     	; 0x6698 <_Z23clockConfigurationCheckv+0x116>
    6684:	90 91 1f 47 	lds	r25, 0x471F	; 0x80471f <g_event_enabled>
    6688:	81 e0       	ldi	r24, 0x01	; 1
    668a:	89 27       	eor	r24, r25
    668c:	88 23       	and	r24, r24
    668e:	11 f0       	breq	.+4      	; 0x6694 <_Z23clockConfigurationCheckv+0x112>
    6690:	83 e0       	ldi	r24, 0x03	; 3
    6692:	0b c0       	rjmp	.+22     	; 0x66aa <_Z23clockConfigurationCheckv+0x128>
    6694:	85 e0       	ldi	r24, 0x05	; 5
    6696:	09 c0       	rjmp	.+18     	; 0x66aa <_Z23clockConfigurationCheckv+0x128>
    6698:	90 91 46 47 	lds	r25, 0x4746	; 0x804746 <g_use_rtc_for_startstop>
    669c:	81 e0       	ldi	r24, 0x01	; 1
    669e:	89 27       	eor	r24, r25
    66a0:	88 23       	and	r24, r24
    66a2:	11 f0       	breq	.+4      	; 0x66a8 <_Z23clockConfigurationCheckv+0x126>
    66a4:	84 e0       	ldi	r24, 0x04	; 4
    66a6:	01 c0       	rjmp	.+2      	; 0x66aa <_Z23clockConfigurationCheckv+0x128>
    66a8:	81 e0       	ldi	r24, 0x01	; 1
    66aa:	24 96       	adiw	r28, 0x04	; 4
    66ac:	cd bf       	out	0x3d, r28	; 61
    66ae:	de bf       	out	0x3e, r29	; 62
    66b0:	df 91       	pop	r29
    66b2:	cf 91       	pop	r28
    66b4:	08 95       	ret

000066b6 <_Z18reportConfigErrorsv>:
    66b6:	cf 93       	push	r28
    66b8:	df 93       	push	r29
    66ba:	00 d0       	rcall	.+0      	; 0x66bc <_Z18reportConfigErrorsv+0x6>
    66bc:	00 d0       	rcall	.+0      	; 0x66be <_Z18reportConfigErrorsv+0x8>
    66be:	cd b7       	in	r28, 0x3d	; 61
    66c0:	de b7       	in	r29, 0x3e	; 62
    66c2:	80 e0       	ldi	r24, 0x00	; 0
    66c4:	90 e0       	ldi	r25, 0x00	; 0
    66c6:	0e 94 37 06 	call	0xc6e	; 0xc6e <time>
    66ca:	dc 01       	movw	r26, r24
    66cc:	cb 01       	movw	r24, r22
    66ce:	89 83       	std	Y+1, r24	; 0x01
    66d0:	9a 83       	std	Y+2, r25	; 0x02
    66d2:	ab 83       	std	Y+3, r26	; 0x03
    66d4:	bc 83       	std	Y+4, r27	; 0x04
    66d6:	80 91 fe 46 	lds	r24, 0x46FE	; 0x8046fe <g_messages_text+0x15>
    66da:	88 23       	and	r24, r24
    66dc:	21 f4       	brne	.+8      	; 0x66e6 <_Z18reportConfigErrorsv+0x30>
    66de:	84 e9       	ldi	r24, 0x94	; 148
    66e0:	93 e4       	ldi	r25, 0x43	; 67
    66e2:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    66e6:	89 81       	ldd	r24, Y+1	; 0x01
    66e8:	9a 81       	ldd	r25, Y+2	; 0x02
    66ea:	ab 81       	ldd	r26, Y+3	; 0x03
    66ec:	bc 81       	ldd	r27, Y+4	; 0x04
    66ee:	81 15       	cp	r24, r1
    66f0:	96 46       	sbci	r25, 0x66	; 102
    66f2:	ae 4e       	sbci	r26, 0xEE	; 238
    66f4:	bf 45       	sbci	r27, 0x5F	; 95
    66f6:	20 f4       	brcc	.+8      	; 0x6700 <_Z18reportConfigErrorsv+0x4a>
    66f8:	85 eb       	ldi	r24, 0xB5	; 181
    66fa:	93 e4       	ldi	r25, 0x43	; 67
    66fc:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    6700:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    6704:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    6708:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    670c:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    6710:	61 e0       	ldi	r22, 0x01	; 1
    6712:	89 81       	ldd	r24, Y+1	; 0x01
    6714:	9a 81       	ldd	r25, Y+2	; 0x02
    6716:	ab 81       	ldd	r26, Y+3	; 0x03
    6718:	bc 81       	ldd	r27, Y+4	; 0x04
    671a:	28 17       	cp	r18, r24
    671c:	39 07       	cpc	r19, r25
    671e:	4a 07       	cpc	r20, r26
    6720:	5b 07       	cpc	r21, r27
    6722:	08 f0       	brcs	.+2      	; 0x6726 <_Z18reportConfigErrorsv+0x70>
    6724:	60 e0       	ldi	r22, 0x00	; 0
    6726:	66 23       	and	r22, r22
    6728:	f1 f0       	breq	.+60     	; 0x6766 <_Z18reportConfigErrorsv+0xb0>
    672a:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    672e:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    6732:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    6736:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    673a:	61 e0       	ldi	r22, 0x01	; 1
    673c:	89 81       	ldd	r24, Y+1	; 0x01
    673e:	9a 81       	ldd	r25, Y+2	; 0x02
    6740:	ab 81       	ldd	r26, Y+3	; 0x03
    6742:	bc 81       	ldd	r27, Y+4	; 0x04
    6744:	28 17       	cp	r18, r24
    6746:	39 07       	cpc	r19, r25
    6748:	4a 07       	cpc	r20, r26
    674a:	5b 07       	cpc	r21, r27
    674c:	08 f0       	brcs	.+2      	; 0x6750 <_Z18reportConfigErrorsv+0x9a>
    674e:	60 e0       	ldi	r22, 0x00	; 0
    6750:	66 23       	and	r22, r22
    6752:	21 f0       	breq	.+8      	; 0x675c <_Z18reportConfigErrorsv+0xa6>
    6754:	8d ed       	ldi	r24, 0xDD	; 221
    6756:	93 e4       	ldi	r25, 0x43	; 67
    6758:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    675c:	83 e0       	ldi	r24, 0x03	; 3
    675e:	94 e4       	ldi	r25, 0x44	; 68
    6760:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    6764:	2f c0       	rjmp	.+94     	; 0x67c4 <_Z18reportConfigErrorsv+0x10e>
    6766:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <g_event_start_epoch>
    676a:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    676e:	40 91 19 47 	lds	r20, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    6772:	50 91 1a 47 	lds	r21, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    6776:	61 e0       	ldi	r22, 0x01	; 1
    6778:	89 81       	ldd	r24, Y+1	; 0x01
    677a:	9a 81       	ldd	r25, Y+2	; 0x02
    677c:	ab 81       	ldd	r26, Y+3	; 0x03
    677e:	bc 81       	ldd	r27, Y+4	; 0x04
    6780:	28 17       	cp	r18, r24
    6782:	39 07       	cpc	r19, r25
    6784:	4a 07       	cpc	r20, r26
    6786:	5b 07       	cpc	r21, r27
    6788:	08 f0       	brcs	.+2      	; 0x678c <_Z18reportConfigErrorsv+0xd6>
    678a:	60 e0       	ldi	r22, 0x00	; 0
    678c:	66 23       	and	r22, r22
    678e:	d1 f0       	breq	.+52     	; 0x67c4 <_Z18reportConfigErrorsv+0x10e>
    6790:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    6794:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    6798:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    679c:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    67a0:	21 e0       	ldi	r18, 0x01	; 1
    67a2:	81 15       	cp	r24, r1
    67a4:	96 46       	sbci	r25, 0x66	; 102
    67a6:	ae 4e       	sbci	r26, 0xEE	; 238
    67a8:	bf 45       	sbci	r27, 0x5F	; 95
    67aa:	08 f0       	brcs	.+2      	; 0x67ae <_Z18reportConfigErrorsv+0xf8>
    67ac:	20 e0       	ldi	r18, 0x00	; 0
    67ae:	22 23       	and	r18, r18
    67b0:	29 f0       	breq	.+10     	; 0x67bc <_Z18reportConfigErrorsv+0x106>
    67b2:	8d ed       	ldi	r24, 0xDD	; 221
    67b4:	93 e4       	ldi	r25, 0x43	; 67
    67b6:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    67ba:	04 c0       	rjmp	.+8      	; 0x67c4 <_Z18reportConfigErrorsv+0x10e>
    67bc:	8a e2       	ldi	r24, 0x2A	; 42
    67be:	94 e4       	ldi	r25, 0x44	; 68
    67c0:	0e 94 08 5a 	call	0xb410	; 0xb410 <sb_send_string>
    67c4:	00 00       	nop
    67c6:	24 96       	adiw	r28, 0x04	; 4
    67c8:	cd bf       	out	0x3d, r28	; 61
    67ca:	de bf       	out	0x3e, r29	; 62
    67cc:	df 91       	pop	r29
    67ce:	cf 91       	pop	r28
    67d0:	08 95       	ret

000067d2 <_Z7bcd2dech>:
    67d2:	cf 93       	push	r28
    67d4:	df 93       	push	r29
    67d6:	00 d0       	rcall	.+0      	; 0x67d8 <_Z7bcd2dech+0x6>
    67d8:	cd b7       	in	r28, 0x3d	; 61
    67da:	de b7       	in	r29, 0x3e	; 62
    67dc:	8a 83       	std	Y+2, r24	; 0x02
    67de:	8a 81       	ldd	r24, Y+2	; 0x02
    67e0:	88 2f       	mov	r24, r24
    67e2:	90 e0       	ldi	r25, 0x00	; 0
    67e4:	95 95       	asr	r25
    67e6:	87 95       	ror	r24
    67e8:	95 95       	asr	r25
    67ea:	87 95       	ror	r24
    67ec:	95 95       	asr	r25
    67ee:	87 95       	ror	r24
    67f0:	95 95       	asr	r25
    67f2:	87 95       	ror	r24
    67f4:	88 0f       	add	r24, r24
    67f6:	98 2f       	mov	r25, r24
    67f8:	99 0f       	add	r25, r25
    67fa:	99 0f       	add	r25, r25
    67fc:	98 0f       	add	r25, r24
    67fe:	8a 81       	ldd	r24, Y+2	; 0x02
    6800:	8f 70       	andi	r24, 0x0F	; 15
    6802:	89 0f       	add	r24, r25
    6804:	89 83       	std	Y+1, r24	; 0x01
    6806:	89 81       	ldd	r24, Y+1	; 0x01
    6808:	0f 90       	pop	r0
    680a:	0f 90       	pop	r0
    680c:	df 91       	pop	r29
    680e:	cf 91       	pop	r28
    6810:	08 95       	ret

00006812 <_Z8char2bcdPc>:

uint8_t char2bcd(char c[])
{
    6812:	cf 93       	push	r28
    6814:	df 93       	push	r29
    6816:	00 d0       	rcall	.+0      	; 0x6818 <_Z8char2bcdPc+0x6>
    6818:	1f 92       	push	r1
    681a:	cd b7       	in	r28, 0x3d	; 61
    681c:	de b7       	in	r29, 0x3e	; 62
    681e:	8a 83       	std	Y+2, r24	; 0x02
    6820:	9b 83       	std	Y+3, r25	; 0x03
	uint8_t result = (c[1] - '0') + ((c[0] - '0') << 4);
    6822:	8a 81       	ldd	r24, Y+2	; 0x02
    6824:	9b 81       	ldd	r25, Y+3	; 0x03
    6826:	01 96       	adiw	r24, 0x01	; 1
    6828:	fc 01       	movw	r30, r24
    682a:	20 81       	ld	r18, Z
    682c:	8a 81       	ldd	r24, Y+2	; 0x02
    682e:	9b 81       	ldd	r25, Y+3	; 0x03
    6830:	fc 01       	movw	r30, r24
    6832:	80 81       	ld	r24, Z
    6834:	80 53       	subi	r24, 0x30	; 48
    6836:	82 95       	swap	r24
    6838:	80 7f       	andi	r24, 0xF0	; 240
    683a:	82 0f       	add	r24, r18
    683c:	80 53       	subi	r24, 0x30	; 48
    683e:	89 83       	std	Y+1, r24	; 0x01
	return( result);
    6840:	89 81       	ldd	r24, Y+1	; 0x01
}
    6842:	23 96       	adiw	r28, 0x03	; 3
    6844:	cd bf       	out	0x3d, r28	; 61
    6846:	de bf       	out	0x3e, r29	; 62
    6848:	df 91       	pop	r29
    684a:	cf 91       	pop	r28
    684c:	08 95       	ret

0000684e <_Z14epoch_from_ltmP2tm>:

time_t epoch_from_ltm(tm *ltm)
{
    684e:	ef 92       	push	r14
    6850:	ff 92       	push	r15
    6852:	0f 93       	push	r16
    6854:	1f 93       	push	r17
    6856:	cf 93       	push	r28
    6858:	df 93       	push	r29
    685a:	cd b7       	in	r28, 0x3d	; 61
    685c:	de b7       	in	r29, 0x3e	; 62
    685e:	26 97       	sbiw	r28, 0x06	; 6
    6860:	cd bf       	out	0x3d, r28	; 61
    6862:	de bf       	out	0x3e, r29	; 62
    6864:	8d 83       	std	Y+5, r24	; 0x05
    6866:	9e 83       	std	Y+6, r25	; 0x06
	time_t epoch = ltm->tm_sec + ltm->tm_min * 60 + ltm->tm_hour * 3600L + ltm->tm_yday * 86400L +
    6868:	8d 81       	ldd	r24, Y+5	; 0x05
    686a:	9e 81       	ldd	r25, Y+6	; 0x06
    686c:	fc 01       	movw	r30, r24
    686e:	80 81       	ld	r24, Z
    6870:	28 2f       	mov	r18, r24
    6872:	88 0f       	add	r24, r24
    6874:	33 0b       	sbc	r19, r19
    6876:	8d 81       	ldd	r24, Y+5	; 0x05
    6878:	9e 81       	ldd	r25, Y+6	; 0x06
    687a:	fc 01       	movw	r30, r24
    687c:	81 81       	ldd	r24, Z+1	; 0x01
    687e:	48 2f       	mov	r20, r24
    6880:	88 0f       	add	r24, r24
    6882:	55 0b       	sbc	r21, r21
    6884:	6c e3       	ldi	r22, 0x3C	; 60
    6886:	64 9f       	mul	r22, r20
    6888:	c0 01       	movw	r24, r0
    688a:	65 9f       	mul	r22, r21
    688c:	90 0d       	add	r25, r0
    688e:	11 24       	eor	r1, r1
    6890:	82 0f       	add	r24, r18
    6892:	93 1f       	adc	r25, r19
    6894:	7c 01       	movw	r14, r24
    6896:	99 0f       	add	r25, r25
    6898:	00 0b       	sbc	r16, r16
    689a:	11 0b       	sbc	r17, r17
    689c:	8d 81       	ldd	r24, Y+5	; 0x05
    689e:	9e 81       	ldd	r25, Y+6	; 0x06
    68a0:	fc 01       	movw	r30, r24
    68a2:	82 81       	ldd	r24, Z+2	; 0x02
    68a4:	28 2f       	mov	r18, r24
    68a6:	88 0f       	add	r24, r24
    68a8:	33 0b       	sbc	r19, r19
    68aa:	44 0b       	sbc	r20, r20
    68ac:	55 0b       	sbc	r21, r21
    68ae:	80 e1       	ldi	r24, 0x10	; 16
    68b0:	9e e0       	ldi	r25, 0x0E	; 14
    68b2:	dc 01       	movw	r26, r24
    68b4:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <__muluhisi3>
    68b8:	dc 01       	movw	r26, r24
    68ba:	cb 01       	movw	r24, r22
    68bc:	e8 0e       	add	r14, r24
    68be:	f9 1e       	adc	r15, r25
    68c0:	0a 1f       	adc	r16, r26
    68c2:	1b 1f       	adc	r17, r27
    68c4:	8d 81       	ldd	r24, Y+5	; 0x05
    68c6:	9e 81       	ldd	r25, Y+6	; 0x06
    68c8:	fc 01       	movw	r30, r24
    68ca:	80 85       	ldd	r24, Z+8	; 0x08
    68cc:	91 85       	ldd	r25, Z+9	; 0x09
    68ce:	09 2e       	mov	r0, r25
    68d0:	00 0c       	add	r0, r0
    68d2:	aa 0b       	sbc	r26, r26
    68d4:	bb 0b       	sbc	r27, r27
    68d6:	9c 01       	movw	r18, r24
    68d8:	ad 01       	movw	r20, r26
    68da:	60 e8       	ldi	r22, 0x80	; 128
    68dc:	71 e5       	ldi	r23, 0x51	; 81
    68de:	81 e0       	ldi	r24, 0x01	; 1
    68e0:	90 e0       	ldi	r25, 0x00	; 0
    68e2:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    68e6:	dc 01       	movw	r26, r24
    68e8:	cb 01       	movw	r24, r22
    68ea:	e8 0e       	add	r14, r24
    68ec:	f9 1e       	adc	r15, r25
    68ee:	0a 1f       	adc	r16, r26
    68f0:	1b 1f       	adc	r17, r27
	(ltm->tm_year - 70) * 31536000L + ((ltm->tm_year - 69) / 4) * 86400L -
    68f2:	8d 81       	ldd	r24, Y+5	; 0x05
    68f4:	9e 81       	ldd	r25, Y+6	; 0x06
    68f6:	fc 01       	movw	r30, r24
    68f8:	86 81       	ldd	r24, Z+6	; 0x06
    68fa:	97 81       	ldd	r25, Z+7	; 0x07
    68fc:	86 54       	subi	r24, 0x46	; 70
    68fe:	91 09       	sbc	r25, r1
    6900:	09 2e       	mov	r0, r25
    6902:	00 0c       	add	r0, r0
    6904:	aa 0b       	sbc	r26, r26
    6906:	bb 0b       	sbc	r27, r27
    6908:	9c 01       	movw	r18, r24
    690a:	ad 01       	movw	r20, r26
    690c:	60 e8       	ldi	r22, 0x80	; 128
    690e:	73 e3       	ldi	r23, 0x33	; 51
    6910:	81 ee       	ldi	r24, 0xE1	; 225
    6912:	91 e0       	ldi	r25, 0x01	; 1
    6914:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    6918:	dc 01       	movw	r26, r24
    691a:	cb 01       	movw	r24, r22
	return( result);
}

time_t epoch_from_ltm(tm *ltm)
{
	time_t epoch = ltm->tm_sec + ltm->tm_min * 60 + ltm->tm_hour * 3600L + ltm->tm_yday * 86400L +
    691c:	e8 0e       	add	r14, r24
    691e:	f9 1e       	adc	r15, r25
    6920:	0a 1f       	adc	r16, r26
    6922:	1b 1f       	adc	r17, r27
	(ltm->tm_year - 70) * 31536000L + ((ltm->tm_year - 69) / 4) * 86400L -
    6924:	8d 81       	ldd	r24, Y+5	; 0x05
    6926:	9e 81       	ldd	r25, Y+6	; 0x06
    6928:	fc 01       	movw	r30, r24
    692a:	86 81       	ldd	r24, Z+6	; 0x06
    692c:	97 81       	ldd	r25, Z+7	; 0x07
    692e:	85 54       	subi	r24, 0x45	; 69
    6930:	91 09       	sbc	r25, r1
    6932:	99 23       	and	r25, r25
    6934:	0c f4       	brge	.+2      	; 0x6938 <_Z14epoch_from_ltmP2tm+0xea>
    6936:	03 96       	adiw	r24, 0x03	; 3
    6938:	95 95       	asr	r25
    693a:	87 95       	ror	r24
    693c:	95 95       	asr	r25
    693e:	87 95       	ror	r24
    6940:	09 2e       	mov	r0, r25
    6942:	00 0c       	add	r0, r0
    6944:	aa 0b       	sbc	r26, r26
    6946:	bb 0b       	sbc	r27, r27
    6948:	9c 01       	movw	r18, r24
    694a:	ad 01       	movw	r20, r26
    694c:	60 e8       	ldi	r22, 0x80	; 128
    694e:	71 e5       	ldi	r23, 0x51	; 81
    6950:	81 e0       	ldi	r24, 0x01	; 1
    6952:	90 e0       	ldi	r25, 0x00	; 0
    6954:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    6958:	dc 01       	movw	r26, r24
    695a:	cb 01       	movw	r24, r22
    695c:	e8 0e       	add	r14, r24
    695e:	f9 1e       	adc	r15, r25
    6960:	0a 1f       	adc	r16, r26
    6962:	1b 1f       	adc	r17, r27
	((ltm->tm_year - 1) / 100) * 86400L + ((ltm->tm_year + 299) / 400) * 86400L;
    6964:	8d 81       	ldd	r24, Y+5	; 0x05
    6966:	9e 81       	ldd	r25, Y+6	; 0x06
    6968:	fc 01       	movw	r30, r24
    696a:	86 81       	ldd	r24, Z+6	; 0x06
    696c:	97 81       	ldd	r25, Z+7	; 0x07
    696e:	01 97       	sbiw	r24, 0x01	; 1
    6970:	24 e6       	ldi	r18, 0x64	; 100
    6972:	30 e0       	ldi	r19, 0x00	; 0
    6974:	b9 01       	movw	r22, r18
    6976:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
    697a:	cb 01       	movw	r24, r22
    697c:	09 2e       	mov	r0, r25
    697e:	00 0c       	add	r0, r0
    6980:	aa 0b       	sbc	r26, r26
    6982:	bb 0b       	sbc	r27, r27
    6984:	9c 01       	movw	r18, r24
    6986:	ad 01       	movw	r20, r26
    6988:	60 e8       	ldi	r22, 0x80	; 128
    698a:	7e ea       	ldi	r23, 0xAE	; 174
    698c:	8e ef       	ldi	r24, 0xFE	; 254
    698e:	9f ef       	ldi	r25, 0xFF	; 255
    6990:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    6994:	dc 01       	movw	r26, r24
    6996:	cb 01       	movw	r24, r22
}

time_t epoch_from_ltm(tm *ltm)
{
	time_t epoch = ltm->tm_sec + ltm->tm_min * 60 + ltm->tm_hour * 3600L + ltm->tm_yday * 86400L +
	(ltm->tm_year - 70) * 31536000L + ((ltm->tm_year - 69) / 4) * 86400L -
    6998:	e8 0e       	add	r14, r24
    699a:	f9 1e       	adc	r15, r25
    699c:	0a 1f       	adc	r16, r26
    699e:	1b 1f       	adc	r17, r27
	((ltm->tm_year - 1) / 100) * 86400L + ((ltm->tm_year + 299) / 400) * 86400L;
    69a0:	8d 81       	ldd	r24, Y+5	; 0x05
    69a2:	9e 81       	ldd	r25, Y+6	; 0x06
    69a4:	fc 01       	movw	r30, r24
    69a6:	86 81       	ldd	r24, Z+6	; 0x06
    69a8:	97 81       	ldd	r25, Z+7	; 0x07
    69aa:	85 5d       	subi	r24, 0xD5	; 213
    69ac:	9e 4f       	sbci	r25, 0xFE	; 254
    69ae:	20 e9       	ldi	r18, 0x90	; 144
    69b0:	31 e0       	ldi	r19, 0x01	; 1
    69b2:	b9 01       	movw	r22, r18
    69b4:	0e 94 f8 72 	call	0xe5f0	; 0xe5f0 <__divmodhi4>
    69b8:	cb 01       	movw	r24, r22
    69ba:	09 2e       	mov	r0, r25
    69bc:	00 0c       	add	r0, r0
    69be:	aa 0b       	sbc	r26, r26
    69c0:	bb 0b       	sbc	r27, r27
    69c2:	9c 01       	movw	r18, r24
    69c4:	ad 01       	movw	r20, r26
    69c6:	60 e8       	ldi	r22, 0x80	; 128
    69c8:	71 e5       	ldi	r23, 0x51	; 81
    69ca:	81 e0       	ldi	r24, 0x01	; 1
    69cc:	90 e0       	ldi	r25, 0x00	; 0
    69ce:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    69d2:	dc 01       	movw	r26, r24
    69d4:	cb 01       	movw	r24, r22
    69d6:	8e 0d       	add	r24, r14
    69d8:	9f 1d       	adc	r25, r15
    69da:	a0 1f       	adc	r26, r16
    69dc:	b1 1f       	adc	r27, r17
    69de:	89 83       	std	Y+1, r24	; 0x01
    69e0:	9a 83       	std	Y+2, r25	; 0x02
    69e2:	ab 83       	std	Y+3, r26	; 0x03
    69e4:	bc 83       	std	Y+4, r27	; 0x04

	return(epoch);
    69e6:	89 81       	ldd	r24, Y+1	; 0x01
    69e8:	9a 81       	ldd	r25, Y+2	; 0x02
    69ea:	ab 81       	ldd	r26, Y+3	; 0x03
    69ec:	bc 81       	ldd	r27, Y+4	; 0x04
}
    69ee:	bc 01       	movw	r22, r24
    69f0:	cd 01       	movw	r24, r26
    69f2:	26 96       	adiw	r28, 0x06	; 6
    69f4:	cd bf       	out	0x3d, r28	; 61
    69f6:	de bf       	out	0x3e, r29	; 62
    69f8:	df 91       	pop	r29
    69fa:	cf 91       	pop	r28
    69fc:	1f 91       	pop	r17
    69fe:	0f 91       	pop	r16
    6a00:	ff 90       	pop	r15
    6a02:	ef 90       	pop	r14
    6a04:	08 95       	ret

00006a06 <_Z24convertEpochToTimeStringmPcj>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    6a06:	cf 93       	push	r28
    6a08:	df 93       	push	r29
    6a0a:	cd b7       	in	r28, 0x3d	; 61
    6a0c:	de b7       	in	r29, 0x3e	; 62
    6a0e:	68 97       	sbiw	r28, 0x18	; 24
    6a10:	cd bf       	out	0x3d, r28	; 61
    6a12:	de bf       	out	0x3e, r29	; 62
    6a14:	69 8b       	std	Y+17, r22	; 0x11
    6a16:	7a 8b       	std	Y+18, r23	; 0x12
    6a18:	8b 8b       	std	Y+19, r24	; 0x13
    6a1a:	9c 8b       	std	Y+20, r25	; 0x14
    6a1c:	4d 8b       	std	Y+21, r20	; 0x15
    6a1e:	5e 8b       	std	Y+22, r21	; 0x16
    6a20:	2f 8b       	std	Y+23, r18	; 0x17
    6a22:	38 8f       	std	Y+24, r19	; 0x18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    6a24:	89 89       	ldd	r24, Y+17	; 0x11
    6a26:	9a 89       	ldd	r25, Y+18	; 0x12
    6a28:	ab 89       	ldd	r26, Y+19	; 0x13
    6a2a:	bc 89       	ldd	r27, Y+20	; 0x14
    6a2c:	80 58       	subi	r24, 0x80	; 128
    6a2e:	93 44       	sbci	r25, 0x43	; 67
    6a30:	ad 46       	sbci	r26, 0x6D	; 109
    6a32:	b8 43       	sbci	r27, 0x38	; 56
    6a34:	8d 87       	std	Y+13, r24	; 0x0d
    6a36:	9e 87       	std	Y+14, r25	; 0x0e
    6a38:	af 87       	std	Y+15, r26	; 0x0f
    6a3a:	b8 8b       	std	Y+16, r27	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    6a3c:	ce 01       	movw	r24, r28
    6a3e:	0d 96       	adiw	r24, 0x0d	; 13
    6a40:	0e 94 79 02 	call	0x4f2	; 0x4f2 <localtime>
    6a44:	2c e0       	ldi	r18, 0x0C	; 12
    6a46:	fc 01       	movw	r30, r24
    6a48:	ce 01       	movw	r24, r28
    6a4a:	01 96       	adiw	r24, 0x01	; 1
    6a4c:	dc 01       	movw	r26, r24
    6a4e:	01 90       	ld	r0, Z+
    6a50:	0d 92       	st	X+, r0
    6a52:	2a 95       	dec	r18
    6a54:	e1 f7       	brne	.-8      	; 0x6a4e <_Z24convertEpochToTimeStringmPcj+0x48>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    6a56:	6f 89       	ldd	r22, Y+23	; 0x17
    6a58:	78 8d       	ldd	r23, Y+24	; 0x18
    6a5a:	8d 89       	ldd	r24, Y+21	; 0x15
    6a5c:	9e 89       	ldd	r25, Y+22	; 0x16
    6a5e:	9e 01       	movw	r18, r28
    6a60:	2f 5f       	subi	r18, 0xFF	; 255
    6a62:	3f 4f       	sbci	r19, 0xFF	; 255
    6a64:	4c e3       	ldi	r20, 0x3C	; 60
    6a66:	54 e4       	ldi	r21, 0x44	; 68
    6a68:	0e 94 22 03 	call	0x644	; 0x644 <strftime>
   return buf;
    6a6c:	8d 89       	ldd	r24, Y+21	; 0x15
    6a6e:	9e 89       	ldd	r25, Y+22	; 0x16
 }
    6a70:	68 96       	adiw	r28, 0x18	; 24
    6a72:	cd bf       	out	0x3d, r28	; 61
    6a74:	de bf       	out	0x3e, r29	; 62
    6a76:	df 91       	pop	r29
    6a78:	cf 91       	pop	r28
    6a7a:	08 95       	ret

00006a7c <_Z16RTC_String2EpochPbPc>:


/* Returns the UNIX epoch value for the character string passed in datetime. If datetime is null then it returns
the UNIX epoch for the time held in the DS3231 RTC. If error is not null then it holds 1 if an error occurred */
time_t RTC_String2Epoch(bool *error, char *datetime)
{
    6a7c:	cf 93       	push	r28
    6a7e:	df 93       	push	r29
    6a80:	cd b7       	in	r28, 0x3d	; 61
    6a82:	de b7       	in	r29, 0x3e	; 62
    6a84:	a3 97       	sbiw	r28, 0x23	; 35
    6a86:	cd bf       	out	0x3d, r28	; 61
    6a88:	de bf       	out	0x3e, r29	; 62
    6a8a:	88 a3       	std	Y+32, r24	; 0x20
    6a8c:	99 a3       	std	Y+33, r25	; 0x21
    6a8e:	6a a3       	std	Y+34, r22	; 0x22
    6a90:	7b a3       	std	Y+35, r23	; 0x23
	time_t epoch = 0;
    6a92:	19 82       	std	Y+1, r1	; 0x01
    6a94:	1a 82       	std	Y+2, r1	; 0x02
    6a96:	1b 82       	std	Y+3, r1	; 0x03
    6a98:	1c 82       	std	Y+4, r1	; 0x04
	uint8_t data[7] = { 0, 0, 0, 0, 0, 0, 0 };
    6a9a:	27 e0       	ldi	r18, 0x07	; 7
    6a9c:	ce 01       	movw	r24, r28
    6a9e:	0d 96       	adiw	r24, 0x0d	; 13
    6aa0:	fc 01       	movw	r30, r24
    6aa2:	32 2f       	mov	r19, r18
    6aa4:	11 92       	st	Z+, r1
    6aa6:	3a 95       	dec	r19
    6aa8:	e9 f7       	brne	.-6      	; 0x6aa4 <_Z16RTC_String2EpochPbPc+0x28>

	struct tm ltm = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    6aaa:	2c e0       	ldi	r18, 0x0C	; 12
    6aac:	ce 01       	movw	r24, r28
    6aae:	44 96       	adiw	r24, 0x14	; 20
    6ab0:	fc 01       	movw	r30, r24
    6ab2:	32 2f       	mov	r19, r18
    6ab4:	11 92       	st	Z+, r1
    6ab6:	3a 95       	dec	r19
    6ab8:	e9 f7       	brne	.-6      	; 0x6ab4 <_Z16RTC_String2EpochPbPc+0x38>
	int16_t year = 100;                 /* start at 100 years past 1900 */
    6aba:	84 e6       	ldi	r24, 0x64	; 100
    6abc:	90 e0       	ldi	r25, 0x00	; 0
    6abe:	8e 83       	std	Y+6, r24	; 0x06
    6ac0:	9f 83       	std	Y+7, r25	; 0x07
	uint8_t date;
	uint8_t hours;
	uint8_t minutes;
	uint8_t seconds;

	if(datetime)                            /* String format "YYMMDDhhmmss" */
    6ac2:	8a a1       	ldd	r24, Y+34	; 0x22
    6ac4:	9b a1       	ldd	r25, Y+35	; 0x23
    6ac6:	89 2b       	or	r24, r25
    6ac8:	09 f4       	brne	.+2      	; 0x6acc <_Z16RTC_String2EpochPbPc+0x50>
    6aca:	85 c0       	rjmp	.+266    	; 0x6bd6 <_Z16RTC_String2EpochPbPc+0x15a>
	{
		data[0] = char2bcd(&datetime[10]);  /* seconds in BCD */
    6acc:	8a a1       	ldd	r24, Y+34	; 0x22
    6ace:	9b a1       	ldd	r25, Y+35	; 0x23
    6ad0:	0a 96       	adiw	r24, 0x0a	; 10
    6ad2:	0e 94 09 34 	call	0x6812	; 0x6812 <_Z8char2bcdPc>
    6ad6:	8d 87       	std	Y+13, r24	; 0x0d
		data[1] = char2bcd(&datetime[8]);   /* minutes in BCD */
    6ad8:	8a a1       	ldd	r24, Y+34	; 0x22
    6ada:	9b a1       	ldd	r25, Y+35	; 0x23
    6adc:	08 96       	adiw	r24, 0x08	; 8
    6ade:	0e 94 09 34 	call	0x6812	; 0x6812 <_Z8char2bcdPc>
    6ae2:	8e 87       	std	Y+14, r24	; 0x0e
		data[2] = char2bcd(&datetime[6]);   /* hours in BCD */
    6ae4:	8a a1       	ldd	r24, Y+34	; 0x22
    6ae6:	9b a1       	ldd	r25, Y+35	; 0x23
    6ae8:	06 96       	adiw	r24, 0x06	; 6
    6aea:	0e 94 09 34 	call	0x6812	; 0x6812 <_Z8char2bcdPc>
    6aee:	8f 87       	std	Y+15, r24	; 0x0f
		/* data[3] =  not used */
		data[4] = char2bcd(&datetime[4]);   /* day of month in BCD */
    6af0:	8a a1       	ldd	r24, Y+34	; 0x22
    6af2:	9b a1       	ldd	r25, Y+35	; 0x23
    6af4:	04 96       	adiw	r24, 0x04	; 4
    6af6:	0e 94 09 34 	call	0x6812	; 0x6812 <_Z8char2bcdPc>
    6afa:	89 8b       	std	Y+17, r24	; 0x11
		data[5] = char2bcd(&datetime[2]);   /* month in BCD */
    6afc:	8a a1       	ldd	r24, Y+34	; 0x22
    6afe:	9b a1       	ldd	r25, Y+35	; 0x23
    6b00:	02 96       	adiw	r24, 0x02	; 2
    6b02:	0e 94 09 34 	call	0x6812	; 0x6812 <_Z8char2bcdPc>
    6b06:	8a 8b       	std	Y+18, r24	; 0x12
		data[6] = char2bcd(&datetime[0]);   /* 2-digit year in BCD */
    6b08:	8a a1       	ldd	r24, Y+34	; 0x22
    6b0a:	9b a1       	ldd	r25, Y+35	; 0x23
    6b0c:	0e 94 09 34 	call	0x6812	; 0x6812 <_Z8char2bcdPc>
    6b10:	8b 8b       	std	Y+19, r24	; 0x13

		hours = bcd2dec(data[2]); /* Must be calculated here */
    6b12:	8f 85       	ldd	r24, Y+15	; 0x0f
    6b14:	0e 94 e9 33 	call	0x67d2	; 0x67d2 <_Z7bcd2dech>
    6b18:	88 87       	std	Y+8, r24	; 0x08

		year += (int16_t)bcd2dec(data[6]);
    6b1a:	8b 89       	ldd	r24, Y+19	; 0x13
    6b1c:	0e 94 e9 33 	call	0x67d2	; 0x67d2 <_Z7bcd2dech>
    6b20:	88 2f       	mov	r24, r24
    6b22:	90 e0       	ldi	r25, 0x00	; 0
    6b24:	2e 81       	ldd	r18, Y+6	; 0x06
    6b26:	3f 81       	ldd	r19, Y+7	; 0x07
    6b28:	82 0f       	add	r24, r18
    6b2a:	93 1f       	adc	r25, r19
    6b2c:	8e 83       	std	Y+6, r24	; 0x06
    6b2e:	9f 83       	std	Y+7, r25	; 0x07
		ltm.tm_year = year;                         /* year since 1900 */
    6b30:	8e 81       	ldd	r24, Y+6	; 0x06
    6b32:	9f 81       	ldd	r25, Y+7	; 0x07
    6b34:	8a 8f       	std	Y+26, r24	; 0x1a
    6b36:	9b 8f       	std	Y+27, r25	; 0x1b

		year += 1900;                               /* adjust year to calendar year */
    6b38:	8e 81       	ldd	r24, Y+6	; 0x06
    6b3a:	9f 81       	ldd	r25, Y+7	; 0x07
    6b3c:	84 59       	subi	r24, 0x94	; 148
    6b3e:	98 4f       	sbci	r25, 0xF8	; 248
    6b40:	8e 83       	std	Y+6, r24	; 0x06
    6b42:	9f 83       	std	Y+7, r25	; 0x07

		month = bcd2dec(data[5]);
    6b44:	8a 89       	ldd	r24, Y+18	; 0x12
    6b46:	0e 94 e9 33 	call	0x67d2	; 0x67d2 <_Z7bcd2dech>
    6b4a:	89 87       	std	Y+9, r24	; 0x09
		ltm.tm_mon = month - 1;                     /* mon 0 to 11 */
    6b4c:	89 85       	ldd	r24, Y+9	; 0x09
    6b4e:	81 50       	subi	r24, 0x01	; 1
    6b50:	89 8f       	std	Y+25, r24	; 0x19

		date = bcd2dec(data[4]);
    6b52:	89 89       	ldd	r24, Y+17	; 0x11
    6b54:	0e 94 e9 33 	call	0x67d2	; 0x67d2 <_Z7bcd2dech>
    6b58:	8a 87       	std	Y+10, r24	; 0x0a
		ltm.tm_mday = date;                         /* month day 1 to 31 */
    6b5a:	8a 85       	ldd	r24, Y+10	; 0x0a
    6b5c:	8f 8b       	std	Y+23, r24	; 0x17

		ltm.tm_yday = 0;
    6b5e:	1c 8e       	std	Y+28, r1	; 0x1c
    6b60:	1d 8e       	std	Y+29, r1	; 0x1d
		for(uint8_t mon = 1; mon < month; mon++)    /* months from 1 to 11 (excludes partial month) */
    6b62:	81 e0       	ldi	r24, 0x01	; 1
    6b64:	8d 83       	std	Y+5, r24	; 0x05
    6b66:	9d 81       	ldd	r25, Y+5	; 0x05
    6b68:	89 85       	ldd	r24, Y+9	; 0x09
    6b6a:	98 17       	cp	r25, r24
    6b6c:	88 f4       	brcc	.+34     	; 0x6b90 <_Z16RTC_String2EpochPbPc+0x114>
		{
			ltm.tm_yday += month_length(year, mon);;
    6b6e:	8e 81       	ldd	r24, Y+6	; 0x06
    6b70:	9f 81       	ldd	r25, Y+7	; 0x07
    6b72:	6d 81       	ldd	r22, Y+5	; 0x05
    6b74:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <month_length>
    6b78:	2c 8d       	ldd	r18, Y+28	; 0x1c
    6b7a:	3d 8d       	ldd	r19, Y+29	; 0x1d
    6b7c:	88 2f       	mov	r24, r24
    6b7e:	90 e0       	ldi	r25, 0x00	; 0
    6b80:	82 0f       	add	r24, r18
    6b82:	93 1f       	adc	r25, r19
    6b84:	8c 8f       	std	Y+28, r24	; 0x1c
    6b86:	9d 8f       	std	Y+29, r25	; 0x1d

		date = bcd2dec(data[4]);
		ltm.tm_mday = date;                         /* month day 1 to 31 */

		ltm.tm_yday = 0;
		for(uint8_t mon = 1; mon < month; mon++)    /* months from 1 to 11 (excludes partial month) */
    6b88:	8d 81       	ldd	r24, Y+5	; 0x05
    6b8a:	8f 5f       	subi	r24, 0xFF	; 255
    6b8c:	8d 83       	std	Y+5, r24	; 0x05
    6b8e:	eb cf       	rjmp	.-42     	; 0x6b66 <_Z16RTC_String2EpochPbPc+0xea>
		{
			ltm.tm_yday += month_length(year, mon);;
		}

		ltm.tm_yday += (ltm.tm_mday - 1);
    6b90:	2c 8d       	ldd	r18, Y+28	; 0x1c
    6b92:	3d 8d       	ldd	r19, Y+29	; 0x1d
    6b94:	8f 89       	ldd	r24, Y+23	; 0x17
    6b96:	08 2e       	mov	r0, r24
    6b98:	00 0c       	add	r0, r0
    6b9a:	99 0b       	sbc	r25, r25
    6b9c:	01 97       	sbiw	r24, 0x01	; 1
    6b9e:	82 0f       	add	r24, r18
    6ba0:	93 1f       	adc	r25, r19
    6ba2:	8c 8f       	std	Y+28, r24	; 0x1c
    6ba4:	9d 8f       	std	Y+29, r25	; 0x1d

		seconds = bcd2dec(data[0]);
    6ba6:	8d 85       	ldd	r24, Y+13	; 0x0d
    6ba8:	0e 94 e9 33 	call	0x67d2	; 0x67d2 <_Z7bcd2dech>
    6bac:	8b 87       	std	Y+11, r24	; 0x0b
		minutes = bcd2dec(data[1]);
    6bae:	8e 85       	ldd	r24, Y+14	; 0x0e
    6bb0:	0e 94 e9 33 	call	0x67d2	; 0x67d2 <_Z7bcd2dech>
    6bb4:	8c 87       	std	Y+12, r24	; 0x0c

		ltm.tm_hour = hours;
    6bb6:	88 85       	ldd	r24, Y+8	; 0x08
    6bb8:	8e 8b       	std	Y+22, r24	; 0x16
		ltm.tm_min = minutes;
    6bba:	8c 85       	ldd	r24, Y+12	; 0x0c
    6bbc:	8d 8b       	std	Y+21, r24	; 0x15
		ltm.tm_sec = seconds;
    6bbe:	8b 85       	ldd	r24, Y+11	; 0x0b
    6bc0:	8c 8b       	std	Y+20, r24	; 0x14

		epoch = epoch_from_ltm(&ltm);
    6bc2:	ce 01       	movw	r24, r28
    6bc4:	44 96       	adiw	r24, 0x14	; 20
    6bc6:	0e 94 27 34 	call	0x684e	; 0x684e <_Z14epoch_from_ltmP2tm>
    6bca:	dc 01       	movw	r26, r24
    6bcc:	cb 01       	movw	r24, r22
    6bce:	89 83       	std	Y+1, r24	; 0x01
    6bd0:	9a 83       	std	Y+2, r25	; 0x02
    6bd2:	ab 83       	std	Y+3, r26	; 0x03
    6bd4:	bc 83       	std	Y+4, r27	; 0x04
	}

	if(error)
    6bd6:	88 a1       	ldd	r24, Y+32	; 0x20
    6bd8:	99 a1       	ldd	r25, Y+33	; 0x21
    6bda:	89 2b       	or	r24, r25
    6bdc:	71 f0       	breq	.+28     	; 0x6bfa <_Z16RTC_String2EpochPbPc+0x17e>
	{
		*error = (epoch == 0);
    6bde:	21 e0       	ldi	r18, 0x01	; 1
    6be0:	89 81       	ldd	r24, Y+1	; 0x01
    6be2:	9a 81       	ldd	r25, Y+2	; 0x02
    6be4:	ab 81       	ldd	r26, Y+3	; 0x03
    6be6:	bc 81       	ldd	r27, Y+4	; 0x04
    6be8:	89 2b       	or	r24, r25
    6bea:	8a 2b       	or	r24, r26
    6bec:	8b 2b       	or	r24, r27
    6bee:	09 f0       	breq	.+2      	; 0x6bf2 <_Z16RTC_String2EpochPbPc+0x176>
    6bf0:	20 e0       	ldi	r18, 0x00	; 0
    6bf2:	88 a1       	ldd	r24, Y+32	; 0x20
    6bf4:	99 a1       	ldd	r25, Y+33	; 0x21
    6bf6:	fc 01       	movw	r30, r24
    6bf8:	20 83       	st	Z, r18
	}

	return(epoch);
    6bfa:	89 81       	ldd	r24, Y+1	; 0x01
    6bfc:	9a 81       	ldd	r25, Y+2	; 0x02
    6bfe:	ab 81       	ldd	r26, Y+3	; 0x03
    6c00:	bc 81       	ldd	r27, Y+4	; 0x04
}
    6c02:	bc 01       	movw	r22, r24
    6c04:	cd 01       	movw	r24, r26
    6c06:	a3 96       	adiw	r28, 0x23	; 35
    6c08:	cd bf       	out	0x3d, r28	; 61
    6c0a:	de bf       	out	0x3e, r29	; 62
    6c0c:	df 91       	pop	r29
    6c0e:	cf 91       	pop	r28
    6c10:	08 95       	ret

00006c12 <_Z41__static_initialization_and_destruction_0ii>:
    6c12:	cf 93       	push	r28
    6c14:	df 93       	push	r29
    6c16:	00 d0       	rcall	.+0      	; 0x6c18 <_Z41__static_initialization_and_destruction_0ii+0x6>
    6c18:	00 d0       	rcall	.+0      	; 0x6c1a <_Z41__static_initialization_and_destruction_0ii+0x8>
    6c1a:	cd b7       	in	r28, 0x3d	; 61
    6c1c:	de b7       	in	r29, 0x3e	; 62
    6c1e:	89 83       	std	Y+1, r24	; 0x01
    6c20:	9a 83       	std	Y+2, r25	; 0x02
    6c22:	6b 83       	std	Y+3, r22	; 0x03
    6c24:	7c 83       	std	Y+4, r23	; 0x04
    6c26:	89 81       	ldd	r24, Y+1	; 0x01
    6c28:	9a 81       	ldd	r25, Y+2	; 0x02
    6c2a:	01 97       	sbiw	r24, 0x01	; 1
    6c2c:	91 f4       	brne	.+36     	; 0x6c52 <_Z41__static_initialization_and_destruction_0ii+0x40>
    6c2e:	8b 81       	ldd	r24, Y+3	; 0x03
    6c30:	9c 81       	ldd	r25, Y+4	; 0x04
    6c32:	01 96       	adiw	r24, 0x01	; 1
    6c34:	71 f4       	brne	.+28     	; 0x6c52 <_Z41__static_initialization_and_destruction_0ii+0x40>
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
    6c36:	82 e3       	ldi	r24, 0x32	; 50
    6c38:	97 e4       	ldi	r25, 0x47	; 71
    6c3a:	0e 94 2d 49 	call	0x925a	; 0x925a <_ZN4ledsC1Ev>
#define TEXT_BUFF_SIZE 50
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);
    6c3e:	62 e3       	ldi	r22, 0x32	; 50
    6c40:	70 e0       	ldi	r23, 0x00	; 0
    6c42:	83 e3       	ldi	r24, 0x33	; 51
    6c44:	97 e4       	ldi	r25, 0x47	; 71
    6c46:	0e 94 4a 3b 	call	0x7694	; 0x7694 <_ZN18CircularStringBuffC1Ej>

EepromManager g_ee_mgr;
    6c4a:	8c e3       	ldi	r24, 0x3C	; 60
    6c4c:	97 e4       	ldi	r25, 0x47	; 71
    6c4e:	0e 94 d3 3d 	call	0x7ba6	; 0x7ba6 <_ZN13EepromManagerC1Ev>
    6c52:	89 81       	ldd	r24, Y+1	; 0x01
    6c54:	9a 81       	ldd	r25, Y+2	; 0x02
    6c56:	89 2b       	or	r24, r25
    6c58:	81 f4       	brne	.+32     	; 0x6c7a <_Z41__static_initialization_and_destruction_0ii+0x68>
    6c5a:	8b 81       	ldd	r24, Y+3	; 0x03
    6c5c:	9c 81       	ldd	r25, Y+4	; 0x04
    6c5e:	01 96       	adiw	r24, 0x01	; 1
    6c60:	61 f4       	brne	.+24     	; 0x6c7a <_Z41__static_initialization_and_destruction_0ii+0x68>
    6c62:	8c e3       	ldi	r24, 0x3C	; 60
    6c64:	97 e4       	ldi	r25, 0x47	; 71
    6c66:	0e 94 e0 3d 	call	0x7bc0	; 0x7bc0 <_ZN13EepromManagerD1Ev>

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
#define TEXT_BUFF_SIZE 50
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);
    6c6a:	83 e3       	ldi	r24, 0x33	; 51
    6c6c:	97 e4       	ldi	r25, 0x47	; 71
    6c6e:	0e 94 7a 3b 	call	0x76f4	; 0x76f4 <_ZN18CircularStringBuffD1Ev>
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
    6c72:	82 e3       	ldi	r24, 0x32	; 50
    6c74:	97 e4       	ldi	r25, 0x47	; 71
    6c76:	0e 94 3a 49 	call	0x9274	; 0x9274 <_ZN4ledsD1Ev>
	{
		*error = (epoch == 0);
	}

	return(epoch);
}
    6c7a:	00 00       	nop
    6c7c:	24 96       	adiw	r28, 0x04	; 4
    6c7e:	cd bf       	out	0x3d, r28	; 61
    6c80:	de bf       	out	0x3e, r29	; 62
    6c82:	df 91       	pop	r29
    6c84:	cf 91       	pop	r28
    6c86:	08 95       	ret

00006c88 <_GLOBAL__sub_I_g_antenna_connect_state>:
    6c88:	cf 93       	push	r28
    6c8a:	df 93       	push	r29
    6c8c:	cd b7       	in	r28, 0x3d	; 61
    6c8e:	de b7       	in	r29, 0x3e	; 62
    6c90:	6f ef       	ldi	r22, 0xFF	; 255
    6c92:	7f ef       	ldi	r23, 0xFF	; 255
    6c94:	81 e0       	ldi	r24, 0x01	; 1
    6c96:	90 e0       	ldi	r25, 0x00	; 0
    6c98:	0e 94 09 36 	call	0x6c12	; 0x6c12 <_Z41__static_initialization_and_destruction_0ii>
    6c9c:	df 91       	pop	r29
    6c9e:	cf 91       	pop	r28
    6ca0:	08 95       	ret

00006ca2 <_GLOBAL__sub_D_g_antenna_connect_state>:
    6ca2:	cf 93       	push	r28
    6ca4:	df 93       	push	r29
    6ca6:	cd b7       	in	r28, 0x3d	; 61
    6ca8:	de b7       	in	r29, 0x3e	; 62
    6caa:	6f ef       	ldi	r22, 0xFF	; 255
    6cac:	7f ef       	ldi	r23, 0xFF	; 255
    6cae:	80 e0       	ldi	r24, 0x00	; 0
    6cb0:	90 e0       	ldi	r25, 0x00	; 0
    6cb2:	0e 94 09 36 	call	0x6c12	; 0x6c12 <_Z41__static_initialization_and_destruction_0ii>
    6cb6:	df 91       	pop	r29
    6cb8:	cf 91       	pop	r28
    6cba:	08 95       	ret

00006cbc <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	} ADC_Init_t;
	
static ADC_Init_t g_adc_initialization = ADC_NOT_INITIALIZED;

void ADC0_setADCChannel(ADC_Active_Channel_t chan)
{
    6cbc:	cf 93       	push	r28
    6cbe:	df 93       	push	r29
    6cc0:	1f 92       	push	r1
    6cc2:	cd b7       	in	r28, 0x3d	; 61
    6cc4:	de b7       	in	r29, 0x3e	; 62
    6cc6:	89 83       	std	Y+1, r24	; 0x01
	switch(chan)
    6cc8:	89 81       	ldd	r24, Y+1	; 0x01
    6cca:	88 2f       	mov	r24, r24
    6ccc:	90 e0       	ldi	r25, 0x00	; 0
    6cce:	82 30       	cpi	r24, 0x02	; 2
    6cd0:	91 05       	cpc	r25, r1
    6cd2:	39 f1       	breq	.+78     	; 0x6d22 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x66>
    6cd4:	83 30       	cpi	r24, 0x03	; 3
    6cd6:	91 05       	cpc	r25, r1
    6cd8:	2c f4       	brge	.+10     	; 0x6ce4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    6cda:	00 97       	sbiw	r24, 0x00	; 0
    6cdc:	49 f0       	breq	.+18     	; 0x6cf0 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x34>
    6cde:	01 97       	sbiw	r24, 0x01	; 1
    6ce0:	a1 f0       	breq	.+40     	; 0x6d0a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x4e>
    6ce2:	46 c0       	rjmp	.+140    	; 0x6d70 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb4>
    6ce4:	83 30       	cpi	r24, 0x03	; 3
    6ce6:	91 05       	cpc	r25, r1
    6ce8:	49 f1       	breq	.+82     	; 0x6d3c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x80>
    6cea:	04 97       	sbiw	r24, 0x04	; 4
    6cec:	a1 f1       	breq	.+104    	; 0x6d56 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9a>
    6cee:	40 c0       	rjmp	.+128    	; 0x6d70 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb4>
	{
		case ADCAudioInput:
		{
			if(g_adc_initialization != ADC_FREE_RUN_INITIALIZED)
    6cf0:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL20g_adc_initialization>
    6cf4:	81 30       	cpi	r24, 0x01	; 1
    6cf6:	19 f0       	breq	.+6      	; 0x6cfe <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x42>
			{
				ADC0_SYSTEM_init(FREE_RUNNING); 
    6cf8:	81 e0       	ldi	r24, 0x01	; 1
    6cfa:	0e 94 23 38 	call	0x7046	; 0x7046 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;
    6cfe:	80 e0       	ldi	r24, 0x00	; 0
    6d00:	96 e0       	ldi	r25, 0x06	; 6
    6d02:	22 e0       	ldi	r18, 0x02	; 2
    6d04:	fc 01       	movw	r30, r24
    6d06:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6d08:	36 c0       	rjmp	.+108    	; 0x6d76 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xba>
		
		case ADCExternalBatteryVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6d0a:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL20g_adc_initialization>
    6d0e:	82 30       	cpi	r24, 0x02	; 2
    6d10:	19 f0       	breq	.+6      	; 0x6d18 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5c>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6d12:	80 e0       	ldi	r24, 0x00	; 0
    6d14:	0e 94 23 38 	call	0x7046	; 0x7046 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN0_gc;
    6d18:	80 e0       	ldi	r24, 0x00	; 0
    6d1a:	96 e0       	ldi	r25, 0x06	; 6
    6d1c:	fc 01       	movw	r30, r24
    6d1e:	10 86       	std	Z+8, r1	; 0x08
		}
		break;
    6d20:	2a c0       	rjmp	.+84     	; 0x6d76 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xba>
		
		case ADC12VRegulatedVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6d22:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL20g_adc_initialization>
    6d26:	82 30       	cpi	r24, 0x02	; 2
    6d28:	19 f0       	breq	.+6      	; 0x6d30 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x74>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6d2a:	80 e0       	ldi	r24, 0x00	; 0
    6d2c:	0e 94 23 38 	call	0x7046	; 0x7046 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN4_gc;
    6d30:	80 e0       	ldi	r24, 0x00	; 0
    6d32:	96 e0       	ldi	r25, 0x06	; 6
    6d34:	24 e0       	ldi	r18, 0x04	; 4
    6d36:	fc 01       	movw	r30, r24
    6d38:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6d3a:	1d c0       	rjmp	.+58     	; 0x6d76 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xba>
		
		case ADCTXAdjustableVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6d3c:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL20g_adc_initialization>
    6d40:	82 30       	cpi	r24, 0x02	; 2
    6d42:	19 f0       	breq	.+6      	; 0x6d4a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x8e>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6d44:	80 e0       	ldi	r24, 0x00	; 0
    6d46:	0e 94 23 38 	call	0x7046	; 0x7046 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
    6d4a:	80 e0       	ldi	r24, 0x00	; 0
    6d4c:	96 e0       	ldi	r25, 0x06	; 6
    6d4e:	25 e0       	ldi	r18, 0x05	; 5
    6d50:	fc 01       	movw	r30, r24
    6d52:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6d54:	10 c0       	rjmp	.+32     	; 0x6d76 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xba>
		
		case ADCTemperature:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6d56:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL20g_adc_initialization>
    6d5a:	82 30       	cpi	r24, 0x02	; 2
    6d5c:	19 f0       	breq	.+6      	; 0x6d64 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xa8>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6d5e:	80 e0       	ldi	r24, 0x00	; 0
    6d60:	0e 94 23 38 	call	0x7046	; 0x7046 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    6d64:	80 e0       	ldi	r24, 0x00	; 0
    6d66:	96 e0       	ldi	r25, 0x06	; 6
    6d68:	22 e4       	ldi	r18, 0x42	; 66
    6d6a:	fc 01       	movw	r30, r24
    6d6c:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6d6e:	03 c0       	rjmp	.+6      	; 0x6d76 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xba>
		
		default:
		{
			ADC0_SYSTEM_shutdown();
    6d70:	0e 94 35 38 	call	0x706a	; 0x706a <_ZL20ADC0_SYSTEM_shutdownv>
		}
		break;	
    6d74:	00 00       	nop
	}
}
    6d76:	00 00       	nop
    6d78:	0f 90       	pop	r0
    6d7a:	df 91       	pop	r29
    6d7c:	cf 91       	pop	r28
    6d7e:	08 95       	ret

00006d80 <_Z20ADC0_startConversionv>:

void ADC0_startConversion(void)
{
    6d80:	cf 93       	push	r28
    6d82:	df 93       	push	r29
    6d84:	cd b7       	in	r28, 0x3d	; 61
    6d86:	de b7       	in	r29, 0x3e	; 62
	if(g_adc_initialization != ADC_NOT_INITIALIZED)
    6d88:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL20g_adc_initialization>
    6d8c:	88 23       	and	r24, r24
    6d8e:	49 f0       	breq	.+18     	; 0x6da2 <_Z20ADC0_startConversionv+0x22>
	{
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6d90:	80 e0       	ldi	r24, 0x00	; 0
    6d92:	96 e0       	ldi	r25, 0x06	; 6
    6d94:	fc 01       	movw	r30, r24
    6d96:	14 86       	std	Z+12, r1	; 0x0c
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    6d98:	80 e0       	ldi	r24, 0x00	; 0
    6d9a:	96 e0       	ldi	r25, 0x06	; 6
    6d9c:	21 e0       	ldi	r18, 0x01	; 1
    6d9e:	fc 01       	movw	r30, r24
    6da0:	22 87       	std	Z+10, r18	; 0x0a
	}
}
    6da2:	00 00       	nop
    6da4:	df 91       	pop	r29
    6da6:	cf 91       	pop	r28
    6da8:	08 95       	ret

00006daa <_Z19ADC0_conversionDonev>:

bool ADC0_conversionDone(void)
{
    6daa:	cf 93       	push	r28
    6dac:	df 93       	push	r29
    6dae:	cd b7       	in	r28, 0x3d	; 61
    6db0:	de b7       	in	r29, 0x3e	; 62
	/* Check if the conversion is done  */
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
    6db2:	80 e0       	ldi	r24, 0x00	; 0
    6db4:	96 e0       	ldi	r25, 0x06	; 6
    6db6:	fc 01       	movw	r30, r24
    6db8:	85 85       	ldd	r24, Z+13	; 0x0d
    6dba:	88 2f       	mov	r24, r24
    6dbc:	90 e0       	ldi	r25, 0x00	; 0
    6dbe:	81 70       	andi	r24, 0x01	; 1
    6dc0:	99 27       	eor	r25, r25
    6dc2:	21 e0       	ldi	r18, 0x01	; 1
    6dc4:	89 2b       	or	r24, r25
    6dc6:	09 f4       	brne	.+2      	; 0x6dca <_Z19ADC0_conversionDonev+0x20>
    6dc8:	20 e0       	ldi	r18, 0x00	; 0
    6dca:	82 2f       	mov	r24, r18
}
    6dcc:	df 91       	pop	r29
    6dce:	cf 91       	pop	r28
    6dd0:	08 95       	ret

00006dd2 <_Z9ADC0_readv>:

int ADC0_read(void)
{
    6dd2:	cf 93       	push	r28
    6dd4:	df 93       	push	r29
    6dd6:	cd b7       	in	r28, 0x3d	; 61
    6dd8:	de b7       	in	r29, 0x3e	; 62
	return ADC0.RES; 	/* Reading the result also clears the interrupt flag */
    6dda:	80 e0       	ldi	r24, 0x00	; 0
    6ddc:	96 e0       	ldi	r25, 0x06	; 6
    6dde:	fc 01       	movw	r30, r24
    6de0:	80 89       	ldd	r24, Z+16	; 0x10
    6de2:	91 89       	ldd	r25, Z+17	; 0x11
}
    6de4:	df 91       	pop	r29
    6de6:	cf 91       	pop	r28
    6de8:	08 95       	ret

00006dea <_Z12temperatureCv>:

float temperatureC(void)
{
    6dea:	cf 93       	push	r28
    6dec:	df 93       	push	r29
    6dee:	cd b7       	in	r28, 0x3d	; 61
    6df0:	de b7       	in	r29, 0x3e	; 62
    6df2:	2f 97       	sbiw	r28, 0x0f	; 15
    6df4:	cd bf       	out	0x3d, r28	; 61
    6df6:	de bf       	out	0x3e, r29	; 62
	uint16_t sigrow_offset = SIGROW.TEMPSENSE1; // Read unsigned value from signature row
    6df8:	80 e0       	ldi	r24, 0x00	; 0
    6dfa:	91 e1       	ldi	r25, 0x11	; 17
    6dfc:	fc 01       	movw	r30, r24
    6dfe:	86 81       	ldd	r24, Z+6	; 0x06
    6e00:	97 81       	ldd	r25, Z+7	; 0x07
    6e02:	8d 83       	std	Y+5, r24	; 0x05
    6e04:	9e 83       	std	Y+6, r25	; 0x06
	uint16_t sigrow_slope = SIGROW.TEMPSENSE0; // Read unsigned value from signature row
    6e06:	80 e0       	ldi	r24, 0x00	; 0
    6e08:	91 e1       	ldi	r25, 0x11	; 17
    6e0a:	fc 01       	movw	r30, r24
    6e0c:	84 81       	ldd	r24, Z+4	; 0x04
    6e0e:	95 81       	ldd	r25, Z+5	; 0x05
    6e10:	8f 83       	std	Y+7, r24	; 0x07
    6e12:	98 87       	std	Y+8, r25	; 0x08
	static uint32_t wait = 10000;
	uint16_t adc_reading;
	float temperature_in_C = -273.15;
    6e14:	83 e3       	ldi	r24, 0x33	; 51
    6e16:	93 e9       	ldi	r25, 0x93	; 147
    6e18:	a8 e8       	ldi	r26, 0x88	; 136
    6e1a:	b3 ec       	ldi	r27, 0xC3	; 195
    6e1c:	89 83       	std	Y+1, r24	; 0x01
    6e1e:	9a 83       	std	Y+2, r25	; 0x02
    6e20:	ab 83       	std	Y+3, r26	; 0x03
    6e22:	bc 83       	std	Y+4, r27	; 0x04
	uint8_t holdMux;
	
	holdMux = ADC0.MUXPOS;
    6e24:	80 e0       	ldi	r24, 0x00	; 0
    6e26:	96 e0       	ldi	r25, 0x06	; 6
    6e28:	fc 01       	movw	r30, r24
    6e2a:	80 85       	ldd	r24, Z+8	; 0x08
    6e2c:	89 87       	std	Y+9, r24	; 0x09
	ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6e2e:	80 e0       	ldi	r24, 0x00	; 0
    6e30:	0e 94 23 38 	call	0x7046	; 0x7046 <_ZL16ADC0_SYSTEM_initb>
	ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    6e34:	80 e0       	ldi	r24, 0x00	; 0
    6e36:	96 e0       	ldi	r25, 0x06	; 6
    6e38:	22 e4       	ldi	r18, 0x42	; 66
    6e3a:	fc 01       	movw	r30, r24
    6e3c:	20 87       	std	Z+8, r18	; 0x08
	ADC0_startConversion();
    6e3e:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <_Z20ADC0_startConversionv>
	
	while((!ADC0_conversionDone()) && wait--);
    6e42:	0e 94 d5 36 	call	0x6daa	; 0x6daa <_Z19ADC0_conversionDonev>
    6e46:	98 2f       	mov	r25, r24
    6e48:	81 e0       	ldi	r24, 0x01	; 1
    6e4a:	89 27       	eor	r24, r25
    6e4c:	88 23       	and	r24, r24
    6e4e:	e1 f0       	breq	.+56     	; 0x6e88 <_Z12temperatureCv+0x9e>
    6e50:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <_ZZ12temperatureCvE4wait>
    6e54:	90 91 1c 40 	lds	r25, 0x401C	; 0x80401c <_ZZ12temperatureCvE4wait+0x1>
    6e58:	a0 91 1d 40 	lds	r26, 0x401D	; 0x80401d <_ZZ12temperatureCvE4wait+0x2>
    6e5c:	b0 91 1e 40 	lds	r27, 0x401E	; 0x80401e <_ZZ12temperatureCvE4wait+0x3>
    6e60:	9c 01       	movw	r18, r24
    6e62:	ad 01       	movw	r20, r26
    6e64:	21 50       	subi	r18, 0x01	; 1
    6e66:	31 09       	sbc	r19, r1
    6e68:	41 09       	sbc	r20, r1
    6e6a:	51 09       	sbc	r21, r1
    6e6c:	20 93 1b 40 	sts	0x401B, r18	; 0x80401b <_ZZ12temperatureCvE4wait>
    6e70:	30 93 1c 40 	sts	0x401C, r19	; 0x80401c <_ZZ12temperatureCvE4wait+0x1>
    6e74:	40 93 1d 40 	sts	0x401D, r20	; 0x80401d <_ZZ12temperatureCvE4wait+0x2>
    6e78:	50 93 1e 40 	sts	0x401E, r21	; 0x80401e <_ZZ12temperatureCvE4wait+0x3>
    6e7c:	89 2b       	or	r24, r25
    6e7e:	8a 2b       	or	r24, r26
    6e80:	8b 2b       	or	r24, r27
    6e82:	11 f0       	breq	.+4      	; 0x6e88 <_Z12temperatureCv+0x9e>
    6e84:	81 e0       	ldi	r24, 0x01	; 1
    6e86:	01 c0       	rjmp	.+2      	; 0x6e8a <_Z12temperatureCv+0xa0>
    6e88:	80 e0       	ldi	r24, 0x00	; 0
    6e8a:	88 23       	and	r24, r24
    6e8c:	09 f0       	breq	.+2      	; 0x6e90 <_Z12temperatureCv+0xa6>
    6e8e:	d9 cf       	rjmp	.-78     	; 0x6e42 <_Z12temperatureCv+0x58>
	
	if(wait)
    6e90:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <_ZZ12temperatureCvE4wait>
    6e94:	90 91 1c 40 	lds	r25, 0x401C	; 0x80401c <_ZZ12temperatureCvE4wait+0x1>
    6e98:	a0 91 1d 40 	lds	r26, 0x401D	; 0x80401d <_ZZ12temperatureCvE4wait+0x2>
    6e9c:	b0 91 1e 40 	lds	r27, 0x401E	; 0x80401e <_ZZ12temperatureCvE4wait+0x3>
    6ea0:	89 2b       	or	r24, r25
    6ea2:	8a 2b       	or	r24, r26
    6ea4:	8b 2b       	or	r24, r27
    6ea6:	09 f4       	brne	.+2      	; 0x6eaa <_Z12temperatureCv+0xc0>
    6ea8:	5b c0       	rjmp	.+182    	; 0x6f60 <_Z12temperatureCv+0x176>
	{
		adc_reading = ADC0.RES;
    6eaa:	80 e0       	ldi	r24, 0x00	; 0
    6eac:	96 e0       	ldi	r25, 0x06	; 6
    6eae:	fc 01       	movw	r30, r24
    6eb0:	80 89       	ldd	r24, Z+16	; 0x10
    6eb2:	91 89       	ldd	r25, Z+17	; 0x11
    6eb4:	8a 87       	std	Y+10, r24	; 0x0a
    6eb6:	9b 87       	std	Y+11, r25	; 0x0b
		uint32_t temp = sigrow_offset - adc_reading;
    6eb8:	2d 81       	ldd	r18, Y+5	; 0x05
    6eba:	3e 81       	ldd	r19, Y+6	; 0x06
    6ebc:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ebe:	9b 85       	ldd	r25, Y+11	; 0x0b
    6ec0:	a9 01       	movw	r20, r18
    6ec2:	48 1b       	sub	r20, r24
    6ec4:	59 0b       	sbc	r21, r25
    6ec6:	ca 01       	movw	r24, r20
    6ec8:	cc 01       	movw	r24, r24
    6eca:	a0 e0       	ldi	r26, 0x00	; 0
    6ecc:	b0 e0       	ldi	r27, 0x00	; 0
    6ece:	8c 87       	std	Y+12, r24	; 0x0c
    6ed0:	9d 87       	std	Y+13, r25	; 0x0d
    6ed2:	ae 87       	std	Y+14, r26	; 0x0e
    6ed4:	bf 87       	std	Y+15, r27	; 0x0f
		temp *= sigrow_slope; // Result will overflow 16-bit variable
    6ed6:	8f 81       	ldd	r24, Y+7	; 0x07
    6ed8:	98 85       	ldd	r25, Y+8	; 0x08
    6eda:	cc 01       	movw	r24, r24
    6edc:	a0 e0       	ldi	r26, 0x00	; 0
    6ede:	b0 e0       	ldi	r27, 0x00	; 0
    6ee0:	2c 85       	ldd	r18, Y+12	; 0x0c
    6ee2:	3d 85       	ldd	r19, Y+13	; 0x0d
    6ee4:	4e 85       	ldd	r20, Y+14	; 0x0e
    6ee6:	5f 85       	ldd	r21, Y+15	; 0x0f
    6ee8:	bc 01       	movw	r22, r24
    6eea:	cd 01       	movw	r24, r26
    6eec:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    6ef0:	dc 01       	movw	r26, r24
    6ef2:	cb 01       	movw	r24, r22
    6ef4:	8c 87       	std	Y+12, r24	; 0x0c
    6ef6:	9d 87       	std	Y+13, r25	; 0x0d
    6ef8:	ae 87       	std	Y+14, r26	; 0x0e
    6efa:	bf 87       	std	Y+15, r27	; 0x0f
		temp += 0x0800; // Add 4096/2 to get correct rounding on division below
    6efc:	8c 85       	ldd	r24, Y+12	; 0x0c
    6efe:	9d 85       	ldd	r25, Y+13	; 0x0d
    6f00:	ae 85       	ldd	r26, Y+14	; 0x0e
    6f02:	bf 85       	ldd	r27, Y+15	; 0x0f
    6f04:	98 5f       	subi	r25, 0xF8	; 248
    6f06:	af 4f       	sbci	r26, 0xFF	; 255
    6f08:	bf 4f       	sbci	r27, 0xFF	; 255
    6f0a:	8c 87       	std	Y+12, r24	; 0x0c
    6f0c:	9d 87       	std	Y+13, r25	; 0x0d
    6f0e:	ae 87       	std	Y+14, r26	; 0x0e
    6f10:	bf 87       	std	Y+15, r27	; 0x0f
		temp >>= 12; // Round off to nearest degree in Kelvin, by dividing with 2^12 (4096)
    6f12:	8c 85       	ldd	r24, Y+12	; 0x0c
    6f14:	9d 85       	ldd	r25, Y+13	; 0x0d
    6f16:	ae 85       	ldd	r26, Y+14	; 0x0e
    6f18:	bf 85       	ldd	r27, Y+15	; 0x0f
    6f1a:	07 2e       	mov	r0, r23
    6f1c:	7c e0       	ldi	r23, 0x0C	; 12
    6f1e:	b6 95       	lsr	r27
    6f20:	a7 95       	ror	r26
    6f22:	97 95       	ror	r25
    6f24:	87 95       	ror	r24
    6f26:	7a 95       	dec	r23
    6f28:	d1 f7       	brne	.-12     	; 0x6f1e <_Z12temperatureCv+0x134>
    6f2a:	70 2d       	mov	r23, r0
    6f2c:	8c 87       	std	Y+12, r24	; 0x0c
    6f2e:	9d 87       	std	Y+13, r25	; 0x0d
    6f30:	ae 87       	std	Y+14, r26	; 0x0e
    6f32:	bf 87       	std	Y+15, r27	; 0x0f
		temperature_in_C += (float)temp;
    6f34:	6c 85       	ldd	r22, Y+12	; 0x0c
    6f36:	7d 85       	ldd	r23, Y+13	; 0x0d
    6f38:	8e 85       	ldd	r24, Y+14	; 0x0e
    6f3a:	9f 85       	ldd	r25, Y+15	; 0x0f
    6f3c:	0e 94 6f 71 	call	0xe2de	; 0xe2de <__floatunsisf>
    6f40:	dc 01       	movw	r26, r24
    6f42:	cb 01       	movw	r24, r22
    6f44:	9c 01       	movw	r18, r24
    6f46:	ad 01       	movw	r20, r26
    6f48:	69 81       	ldd	r22, Y+1	; 0x01
    6f4a:	7a 81       	ldd	r23, Y+2	; 0x02
    6f4c:	8b 81       	ldd	r24, Y+3	; 0x03
    6f4e:	9c 81       	ldd	r25, Y+4	; 0x04
    6f50:	0e 94 3f 70 	call	0xe07e	; 0xe07e <__addsf3>
    6f54:	dc 01       	movw	r26, r24
    6f56:	cb 01       	movw	r24, r22
    6f58:	89 83       	std	Y+1, r24	; 0x01
    6f5a:	9a 83       	std	Y+2, r25	; 0x02
    6f5c:	ab 83       	std	Y+3, r26	; 0x03
    6f5e:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
    6f60:	80 e0       	ldi	r24, 0x00	; 0
    6f62:	96 e0       	ldi	r25, 0x06	; 6
    6f64:	29 85       	ldd	r18, Y+9	; 0x09
    6f66:	fc 01       	movw	r30, r24
    6f68:	20 87       	std	Z+8, r18	; 0x08
	
	return(temperature_in_C);
    6f6a:	89 81       	ldd	r24, Y+1	; 0x01
    6f6c:	9a 81       	ldd	r25, Y+2	; 0x02
    6f6e:	ab 81       	ldd	r26, Y+3	; 0x03
    6f70:	bc 81       	ldd	r27, Y+4	; 0x04
}
    6f72:	bc 01       	movw	r22, r24
    6f74:	cd 01       	movw	r24, r26
    6f76:	2f 96       	adiw	r28, 0x0f	; 15
    6f78:	cd bf       	out	0x3d, r28	; 61
    6f7a:	de bf       	out	0x3e, r29	; 62
    6f7c:	df 91       	pop	r29
    6f7e:	cf 91       	pop	r28
    6f80:	08 95       	ret

00006f82 <_ZL9PORT_initv>:


static void PORT_init(void)
{
    6f82:	cf 93       	push	r28
    6f84:	df 93       	push	r29
    6f86:	cd b7       	in	r28, 0x3d	; 61
    6f88:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD0 */
	PORTD.PIN0CTRL &= ~PORT_ISC_gm;
    6f8a:	80 e6       	ldi	r24, 0x60	; 96
    6f8c:	94 e0       	ldi	r25, 0x04	; 4
    6f8e:	20 e6       	ldi	r18, 0x60	; 96
    6f90:	34 e0       	ldi	r19, 0x04	; 4
    6f92:	f9 01       	movw	r30, r18
    6f94:	20 89       	ldd	r18, Z+16	; 0x10
    6f96:	28 7f       	andi	r18, 0xF8	; 248
    6f98:	fc 01       	movw	r30, r24
    6f9a:	20 8b       	std	Z+16, r18	; 0x10
	PORTD.PIN0CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6f9c:	80 e6       	ldi	r24, 0x60	; 96
    6f9e:	94 e0       	ldi	r25, 0x04	; 4
    6fa0:	20 e6       	ldi	r18, 0x60	; 96
    6fa2:	34 e0       	ldi	r19, 0x04	; 4
    6fa4:	f9 01       	movw	r30, r18
    6fa6:	20 89       	ldd	r18, Z+16	; 0x10
    6fa8:	24 60       	ori	r18, 0x04	; 4
    6faa:	fc 01       	movw	r30, r24
    6fac:	20 8b       	std	Z+16, r18	; 0x10
	
	/* Disable pull-up resistor */
	PORTD.PIN0CTRL &= ~PORT_PULLUPEN_bm;
    6fae:	80 e6       	ldi	r24, 0x60	; 96
    6fb0:	94 e0       	ldi	r25, 0x04	; 4
    6fb2:	20 e6       	ldi	r18, 0x60	; 96
    6fb4:	34 e0       	ldi	r19, 0x04	; 4
    6fb6:	f9 01       	movw	r30, r18
    6fb8:	20 89       	ldd	r18, Z+16	; 0x10
    6fba:	27 7f       	andi	r18, 0xF7	; 247
    6fbc:	fc 01       	movw	r30, r24
    6fbe:	20 8b       	std	Z+16, r18	; 0x10
}
    6fc0:	00 00       	nop
    6fc2:	df 91       	pop	r29
    6fc4:	cf 91       	pop	r28
    6fc6:	08 95       	ret

00006fc8 <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    6fc8:	cf 93       	push	r28
    6fca:	df 93       	push	r29
    6fcc:	cd b7       	in	r28, 0x3d	; 61
    6fce:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    6fd0:	80 ea       	ldi	r24, 0xA0	; 160
    6fd2:	90 e0       	ldi	r25, 0x00	; 0
    6fd4:	21 e0       	ldi	r18, 0x01	; 1
    6fd6:	fc 01       	movw	r30, r24
    6fd8:	20 83       	st	Z, r18
}
    6fda:	00 00       	nop
    6fdc:	df 91       	pop	r29
    6fde:	cf 91       	pop	r28
    6fe0:	08 95       	ret

00006fe2 <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    6fe2:	cf 93       	push	r28
    6fe4:	df 93       	push	r29
    6fe6:	1f 92       	push	r1
    6fe8:	cd b7       	in	r28, 0x3d	; 61
    6fea:	de b7       	in	r29, 0x3e	; 62
    6fec:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    6fee:	80 e0       	ldi	r24, 0x00	; 0
    6ff0:	96 e0       	ldi	r25, 0x06	; 6
    6ff2:	2a e0       	ldi	r18, 0x0A	; 10
    6ff4:	fc 01       	movw	r30, r24
    6ff6:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    6ff8:	89 81       	ldd	r24, Y+1	; 0x01
    6ffa:	88 23       	and	r24, r24
    6ffc:	99 f0       	breq	.+38     	; 0x7024 <_ZL9ADC0_initb+0x42>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    6ffe:	80 e0       	ldi	r24, 0x00	; 0
    7000:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    7002:	23 e0       	ldi	r18, 0x03	; 3
    7004:	fc 01       	movw	r30, r24
    7006:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    7008:	80 e0       	ldi	r24, 0x00	; 0
    700a:	96 e0       	ldi	r25, 0x06	; 6
    700c:	21 e0       	ldi	r18, 0x01	; 1
    700e:	fc 01       	movw	r30, r24
    7010:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    7012:	80 e0       	ldi	r24, 0x00	; 0
    7014:	96 e0       	ldi	r25, 0x06	; 6
    7016:	21 e0       	ldi	r18, 0x01	; 1
    7018:	fc 01       	movw	r30, r24
    701a:	22 87       	std	Z+10, r18	; 0x0a
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
    701c:	81 e0       	ldi	r24, 0x01	; 1
    701e:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL20g_adc_initialization>
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
	}
}
    7022:	0c c0       	rjmp	.+24     	; 0x703c <_ZL9ADC0_initb+0x5a>
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
    7024:	80 e0       	ldi	r24, 0x00	; 0
    7026:	96 e0       	ldi	r25, 0x06	; 6
    7028:	21 e0       	ldi	r18, 0x01	; 1
    702a:	fc 01       	movw	r30, r24
    702c:	20 83       	st	Z, r18
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    702e:	80 e0       	ldi	r24, 0x00	; 0
    7030:	96 e0       	ldi	r25, 0x06	; 6
    7032:	fc 01       	movw	r30, r24
    7034:	14 86       	std	Z+12, r1	; 0x0c
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
    7036:	82 e0       	ldi	r24, 0x02	; 2
    7038:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL20g_adc_initialization>
	}
}
    703c:	00 00       	nop
    703e:	0f 90       	pop	r0
    7040:	df 91       	pop	r29
    7042:	cf 91       	pop	r28
    7044:	08 95       	ret

00007046 <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    7046:	cf 93       	push	r28
    7048:	df 93       	push	r29
    704a:	1f 92       	push	r1
    704c:	cd b7       	in	r28, 0x3d	; 61
    704e:	de b7       	in	r29, 0x3e	; 62
    7050:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    7052:	0e 94 c1 37 	call	0x6f82	; 0x6f82 <_ZL9PORT_initv>
	VREF0_init();
    7056:	0e 94 e4 37 	call	0x6fc8	; 0x6fc8 <_ZL10VREF0_initv>
	ADC0_init(freerun);
    705a:	89 81       	ldd	r24, Y+1	; 0x01
    705c:	0e 94 f1 37 	call	0x6fe2	; 0x6fe2 <_ZL9ADC0_initb>
}
    7060:	00 00       	nop
    7062:	0f 90       	pop	r0
    7064:	df 91       	pop	r29
    7066:	cf 91       	pop	r28
    7068:	08 95       	ret

0000706a <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    706a:	cf 93       	push	r28
    706c:	df 93       	push	r29
    706e:	cd b7       	in	r28, 0x3d	; 61
    7070:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    7072:	80 e0       	ldi	r24, 0x00	; 0
    7074:	96 e0       	ldi	r25, 0x06	; 6
    7076:	fc 01       	movw	r30, r24
    7078:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    707a:	80 e0       	ldi	r24, 0x00	; 0
    707c:	96 e0       	ldi	r25, 0x06	; 6
    707e:	fc 01       	movw	r30, r24
    7080:	10 82       	st	Z, r1
	g_adc_initialization = ADC_NOT_INITIALIZED;
    7082:	10 92 58 47 	sts	0x4758, r1	; 0x804758 <_ZL20g_adc_initialization>
}
    7086:	00 00       	nop
    7088:	df 91       	pop	r29
    708a:	cf 91       	pop	r28
    708c:	08 95       	ret

0000708e <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    708e:	1f 92       	push	r1
    7090:	0f 92       	push	r0
    7092:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    7096:	0f 92       	push	r0
    7098:	11 24       	eor	r1, r1
    709a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    709e:	0f 92       	push	r0
    70a0:	2f 93       	push	r18
    70a2:	3f 93       	push	r19
    70a4:	4f 93       	push	r20
    70a6:	5f 93       	push	r21
    70a8:	6f 93       	push	r22
    70aa:	7f 93       	push	r23
    70ac:	8f 93       	push	r24
    70ae:	9f 93       	push	r25
    70b0:	af 93       	push	r26
    70b2:	bf 93       	push	r27
    70b4:	ef 93       	push	r30
    70b6:	ff 93       	push	r31
    70b8:	cf 93       	push	r28
    70ba:	df 93       	push	r29
    70bc:	00 d0       	rcall	.+0      	; 0x70be <__vector_24+0x30>
    70be:	cd b7       	in	r28, 0x3d	; 61
    70c0:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    70c2:	0e 94 e9 36 	call	0x6dd2	; 0x6dd2 <_Z9ADC0_readv>
    70c6:	89 83       	std	Y+1, r24	; 0x01
    70c8:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    70ca:	89 81       	ldd	r24, Y+1	; 0x01
    70cc:	9a 81       	ldd	r25, Y+2	; 0x02
    70ce:	bc 01       	movw	r22, r24
    70d0:	87 e5       	ldi	r24, 0x57	; 87
    70d2:	97 e4       	ldi	r25, 0x47	; 71
    70d4:	0e 94 df 45 	call	0x8bbe	; 0x8bbe <_ZN8Goertzel9DataPointEi>
    70d8:	88 23       	and	r24, r24
    70da:	21 f0       	breq	.+8      	; 0x70e4 <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    70dc:	80 e0       	ldi	r24, 0x00	; 0
    70de:	96 e0       	ldi	r25, 0x06	; 6
    70e0:	fc 01       	movw	r30, r24
    70e2:	14 86       	std	Z+12, r1	; 0x0c
	}
    70e4:	00 00       	nop
    70e6:	0f 90       	pop	r0
    70e8:	0f 90       	pop	r0
    70ea:	df 91       	pop	r29
    70ec:	cf 91       	pop	r28
    70ee:	ff 91       	pop	r31
    70f0:	ef 91       	pop	r30
    70f2:	bf 91       	pop	r27
    70f4:	af 91       	pop	r26
    70f6:	9f 91       	pop	r25
    70f8:	8f 91       	pop	r24
    70fa:	7f 91       	pop	r23
    70fc:	6f 91       	pop	r22
    70fe:	5f 91       	pop	r21
    7100:	4f 91       	pop	r20
    7102:	3f 91       	pop	r19
    7104:	2f 91       	pop	r18
    7106:	0f 90       	pop	r0
    7108:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    710c:	0f 90       	pop	r0
    710e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    7112:	0f 90       	pop	r0
    7114:	1f 90       	pop	r1
    7116:	18 95       	reti

00007118 <_Z41__static_initialization_and_destruction_0ii>:
    7118:	0f 93       	push	r16
    711a:	1f 93       	push	r17
    711c:	cf 93       	push	r28
    711e:	df 93       	push	r29
    7120:	00 d0       	rcall	.+0      	; 0x7122 <_Z41__static_initialization_and_destruction_0ii+0xa>
    7122:	00 d0       	rcall	.+0      	; 0x7124 <_Z41__static_initialization_and_destruction_0ii+0xc>
    7124:	cd b7       	in	r28, 0x3d	; 61
    7126:	de b7       	in	r29, 0x3e	; 62
    7128:	89 83       	std	Y+1, r24	; 0x01
    712a:	9a 83       	std	Y+2, r25	; 0x02
    712c:	6b 83       	std	Y+3, r22	; 0x03
    712e:	7c 83       	std	Y+4, r23	; 0x04
    7130:	89 81       	ldd	r24, Y+1	; 0x01
    7132:	9a 81       	ldd	r25, Y+2	; 0x02
    7134:	01 97       	sbiw	r24, 0x01	; 1
    7136:	91 f4       	brne	.+36     	; 0x715c <_Z41__static_initialization_and_destruction_0ii+0x44>
    7138:	8b 81       	ldd	r24, Y+3	; 0x03
    713a:	9c 81       	ldd	r25, Y+4	; 0x04
    713c:	01 96       	adiw	r24, 0x01	; 1
    713e:	71 f4       	brne	.+28     	; 0x715c <_Z41__static_initialization_and_destruction_0ii+0x44>
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    7140:	80 e0       	ldi	r24, 0x00	; 0
    7142:	90 e4       	ldi	r25, 0x40	; 64
    7144:	ac eb       	ldi	r26, 0xBC	; 188
    7146:	b6 e4       	ldi	r27, 0x46	; 70
    7148:	8c 01       	movw	r16, r24
    714a:	9d 01       	movw	r18, r26
    714c:	40 e0       	ldi	r20, 0x00	; 0
    714e:	50 e0       	ldi	r21, 0x00	; 0
    7150:	69 e4       	ldi	r22, 0x49	; 73
    7152:	73 e4       	ldi	r23, 0x43	; 67
    7154:	87 e5       	ldi	r24, 0x57	; 87
    7156:	97 e4       	ldi	r25, 0x47	; 71
    7158:	0e 94 34 45 	call	0x8a68	; 0x8a68 <_ZN8GoertzelC1Eff>
    715c:	89 81       	ldd	r24, Y+1	; 0x01
    715e:	9a 81       	ldd	r25, Y+2	; 0x02
    7160:	89 2b       	or	r24, r25
    7162:	41 f4       	brne	.+16     	; 0x7174 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    7164:	8b 81       	ldd	r24, Y+3	; 0x03
    7166:	9c 81       	ldd	r25, Y+4	; 0x04
    7168:	01 96       	adiw	r24, 0x01	; 1
    716a:	21 f4       	brne	.+8      	; 0x7174 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    716c:	87 e5       	ldi	r24, 0x57	; 87
    716e:	97 e4       	ldi	r25, 0x47	; 71
    7170:	0e 94 cc 45 	call	0x8b98	; 0x8b98 <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    7174:	00 00       	nop
    7176:	24 96       	adiw	r28, 0x04	; 4
    7178:	cd bf       	out	0x3d, r28	; 61
    717a:	de bf       	out	0x3e, r29	; 62
    717c:	df 91       	pop	r29
    717e:	cf 91       	pop	r28
    7180:	1f 91       	pop	r17
    7182:	0f 91       	pop	r16
    7184:	08 95       	ret

00007186 <_GLOBAL__sub_I_g_adcVal>:
    7186:	cf 93       	push	r28
    7188:	df 93       	push	r29
    718a:	cd b7       	in	r28, 0x3d	; 61
    718c:	de b7       	in	r29, 0x3e	; 62
    718e:	6f ef       	ldi	r22, 0xFF	; 255
    7190:	7f ef       	ldi	r23, 0xFF	; 255
    7192:	81 e0       	ldi	r24, 0x01	; 1
    7194:	90 e0       	ldi	r25, 0x00	; 0
    7196:	0e 94 8c 38 	call	0x7118	; 0x7118 <_Z41__static_initialization_and_destruction_0ii>
    719a:	df 91       	pop	r29
    719c:	cf 91       	pop	r28
    719e:	08 95       	ret

000071a0 <_GLOBAL__sub_D_g_adcVal>:
    71a0:	cf 93       	push	r28
    71a2:	df 93       	push	r29
    71a4:	cd b7       	in	r28, 0x3d	; 61
    71a6:	de b7       	in	r29, 0x3e	; 62
    71a8:	6f ef       	ldi	r22, 0xFF	; 255
    71aa:	7f ef       	ldi	r23, 0xFF	; 255
    71ac:	80 e0       	ldi	r24, 0x00	; 0
    71ae:	90 e0       	ldi	r25, 0x00	; 0
    71b0:	0e 94 8c 38 	call	0x7118	; 0x7118 <_Z41__static_initialization_and_destruction_0ii>
    71b4:	df 91       	pop	r29
    71b6:	cf 91       	pop	r28
    71b8:	08 95       	ret

000071ba <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    71ba:	cf 93       	push	r28
    71bc:	df 93       	push	r29
    71be:	00 d0       	rcall	.+0      	; 0x71c0 <PORTA_set_pin_pull_mode+0x6>
    71c0:	00 d0       	rcall	.+0      	; 0x71c2 <PORTA_set_pin_pull_mode+0x8>
    71c2:	cd b7       	in	r28, 0x3d	; 61
    71c4:	de b7       	in	r29, 0x3e	; 62
    71c6:	8b 83       	std	Y+3, r24	; 0x03
    71c8:	6c 83       	std	Y+4, r22	; 0x04
    71ca:	8b 81       	ldd	r24, Y+3	; 0x03
    71cc:	88 2f       	mov	r24, r24
    71ce:	90 e0       	ldi	r25, 0x00	; 0
    71d0:	80 5f       	subi	r24, 0xF0	; 240
    71d2:	9b 4f       	sbci	r25, 0xFB	; 251
    71d4:	89 83       	std	Y+1, r24	; 0x01
    71d6:	9a 83       	std	Y+2, r25	; 0x02
    71d8:	8c 81       	ldd	r24, Y+4	; 0x04
    71da:	81 30       	cpi	r24, 0x01	; 1
    71dc:	59 f4       	brne	.+22     	; 0x71f4 <PORTA_set_pin_pull_mode+0x3a>
    71de:	89 81       	ldd	r24, Y+1	; 0x01
    71e0:	9a 81       	ldd	r25, Y+2	; 0x02
    71e2:	fc 01       	movw	r30, r24
    71e4:	80 81       	ld	r24, Z
    71e6:	28 2f       	mov	r18, r24
    71e8:	28 60       	ori	r18, 0x08	; 8
    71ea:	89 81       	ldd	r24, Y+1	; 0x01
    71ec:	9a 81       	ldd	r25, Y+2	; 0x02
    71ee:	fc 01       	movw	r30, r24
    71f0:	20 83       	st	Z, r18
    71f2:	0d c0       	rjmp	.+26     	; 0x720e <PORTA_set_pin_pull_mode+0x54>
    71f4:	8c 81       	ldd	r24, Y+4	; 0x04
    71f6:	88 23       	and	r24, r24
    71f8:	51 f4       	brne	.+20     	; 0x720e <PORTA_set_pin_pull_mode+0x54>
    71fa:	89 81       	ldd	r24, Y+1	; 0x01
    71fc:	9a 81       	ldd	r25, Y+2	; 0x02
    71fe:	fc 01       	movw	r30, r24
    7200:	80 81       	ld	r24, Z
    7202:	28 2f       	mov	r18, r24
    7204:	27 7f       	andi	r18, 0xF7	; 247
    7206:	89 81       	ldd	r24, Y+1	; 0x01
    7208:	9a 81       	ldd	r25, Y+2	; 0x02
    720a:	fc 01       	movw	r30, r24
    720c:	20 83       	st	Z, r18
    720e:	00 00       	nop
    7210:	24 96       	adiw	r28, 0x04	; 4
    7212:	cd bf       	out	0x3d, r28	; 61
    7214:	de bf       	out	0x3e, r29	; 62
    7216:	df 91       	pop	r29
    7218:	cf 91       	pop	r28
    721a:	08 95       	ret

0000721c <PORTA_set_pin_dir>:
    721c:	cf 93       	push	r28
    721e:	df 93       	push	r29
    7220:	00 d0       	rcall	.+0      	; 0x7222 <PORTA_set_pin_dir+0x6>
    7222:	cd b7       	in	r28, 0x3d	; 61
    7224:	de b7       	in	r29, 0x3e	; 62
    7226:	89 83       	std	Y+1, r24	; 0x01
    7228:	6a 83       	std	Y+2, r22	; 0x02
    722a:	8a 81       	ldd	r24, Y+2	; 0x02
    722c:	88 2f       	mov	r24, r24
    722e:	90 e0       	ldi	r25, 0x00	; 0
    7230:	81 30       	cpi	r24, 0x01	; 1
    7232:	91 05       	cpc	r25, r1
    7234:	e1 f0       	breq	.+56     	; 0x726e <PORTA_set_pin_dir+0x52>
    7236:	82 30       	cpi	r24, 0x02	; 2
    7238:	91 05       	cpc	r25, r1
    723a:	71 f1       	breq	.+92     	; 0x7298 <PORTA_set_pin_dir+0x7c>
    723c:	89 2b       	or	r24, r25
    723e:	09 f0       	breq	.+2      	; 0x7242 <PORTA_set_pin_dir+0x26>
    7240:	3b c0       	rjmp	.+118    	; 0x72b8 <PORTA_set_pin_dir+0x9c>
    7242:	20 e0       	ldi	r18, 0x00	; 0
    7244:	30 e0       	ldi	r19, 0x00	; 0
    7246:	80 e0       	ldi	r24, 0x00	; 0
    7248:	90 e0       	ldi	r25, 0x00	; 0
    724a:	fc 01       	movw	r30, r24
    724c:	80 81       	ld	r24, Z
    724e:	68 2f       	mov	r22, r24
    7250:	89 81       	ldd	r24, Y+1	; 0x01
    7252:	48 2f       	mov	r20, r24
    7254:	50 e0       	ldi	r21, 0x00	; 0
    7256:	81 e0       	ldi	r24, 0x01	; 1
    7258:	90 e0       	ldi	r25, 0x00	; 0
    725a:	02 c0       	rjmp	.+4      	; 0x7260 <PORTA_set_pin_dir+0x44>
    725c:	88 0f       	add	r24, r24
    725e:	99 1f       	adc	r25, r25
    7260:	4a 95       	dec	r20
    7262:	e2 f7       	brpl	.-8      	; 0x725c <PORTA_set_pin_dir+0x40>
    7264:	80 95       	com	r24
    7266:	86 23       	and	r24, r22
    7268:	f9 01       	movw	r30, r18
    726a:	80 83       	st	Z, r24
    726c:	25 c0       	rjmp	.+74     	; 0x72b8 <PORTA_set_pin_dir+0x9c>
    726e:	20 e0       	ldi	r18, 0x00	; 0
    7270:	30 e0       	ldi	r19, 0x00	; 0
    7272:	80 e0       	ldi	r24, 0x00	; 0
    7274:	90 e0       	ldi	r25, 0x00	; 0
    7276:	fc 01       	movw	r30, r24
    7278:	80 81       	ld	r24, Z
    727a:	68 2f       	mov	r22, r24
    727c:	89 81       	ldd	r24, Y+1	; 0x01
    727e:	48 2f       	mov	r20, r24
    7280:	50 e0       	ldi	r21, 0x00	; 0
    7282:	81 e0       	ldi	r24, 0x01	; 1
    7284:	90 e0       	ldi	r25, 0x00	; 0
    7286:	02 c0       	rjmp	.+4      	; 0x728c <PORTA_set_pin_dir+0x70>
    7288:	88 0f       	add	r24, r24
    728a:	99 1f       	adc	r25, r25
    728c:	4a 95       	dec	r20
    728e:	e2 f7       	brpl	.-8      	; 0x7288 <PORTA_set_pin_dir+0x6c>
    7290:	86 2b       	or	r24, r22
    7292:	f9 01       	movw	r30, r18
    7294:	80 83       	st	Z, r24
    7296:	10 c0       	rjmp	.+32     	; 0x72b8 <PORTA_set_pin_dir+0x9c>
    7298:	89 81       	ldd	r24, Y+1	; 0x01
    729a:	88 2f       	mov	r24, r24
    729c:	90 e0       	ldi	r25, 0x00	; 0
    729e:	80 5f       	subi	r24, 0xF0	; 240
    72a0:	9b 4f       	sbci	r25, 0xFB	; 251
    72a2:	29 81       	ldd	r18, Y+1	; 0x01
    72a4:	22 2f       	mov	r18, r18
    72a6:	30 e0       	ldi	r19, 0x00	; 0
    72a8:	20 5f       	subi	r18, 0xF0	; 240
    72aa:	3b 4f       	sbci	r19, 0xFB	; 251
    72ac:	f9 01       	movw	r30, r18
    72ae:	20 81       	ld	r18, Z
    72b0:	28 60       	ori	r18, 0x08	; 8
    72b2:	fc 01       	movw	r30, r24
    72b4:	20 83       	st	Z, r18
    72b6:	00 00       	nop
    72b8:	00 00       	nop
    72ba:	0f 90       	pop	r0
    72bc:	0f 90       	pop	r0
    72be:	df 91       	pop	r29
    72c0:	cf 91       	pop	r28
    72c2:	08 95       	ret

000072c4 <PORTA_set_pin_level>:
    72c4:	cf 93       	push	r28
    72c6:	df 93       	push	r29
    72c8:	00 d0       	rcall	.+0      	; 0x72ca <PORTA_set_pin_level+0x6>
    72ca:	cd b7       	in	r28, 0x3d	; 61
    72cc:	de b7       	in	r29, 0x3e	; 62
    72ce:	89 83       	std	Y+1, r24	; 0x01
    72d0:	6a 83       	std	Y+2, r22	; 0x02
    72d2:	8a 81       	ldd	r24, Y+2	; 0x02
    72d4:	88 23       	and	r24, r24
    72d6:	a9 f0       	breq	.+42     	; 0x7302 <PORTA_set_pin_level+0x3e>
    72d8:	20 e0       	ldi	r18, 0x00	; 0
    72da:	30 e0       	ldi	r19, 0x00	; 0
    72dc:	80 e0       	ldi	r24, 0x00	; 0
    72de:	90 e0       	ldi	r25, 0x00	; 0
    72e0:	fc 01       	movw	r30, r24
    72e2:	81 81       	ldd	r24, Z+1	; 0x01
    72e4:	68 2f       	mov	r22, r24
    72e6:	89 81       	ldd	r24, Y+1	; 0x01
    72e8:	48 2f       	mov	r20, r24
    72ea:	50 e0       	ldi	r21, 0x00	; 0
    72ec:	81 e0       	ldi	r24, 0x01	; 1
    72ee:	90 e0       	ldi	r25, 0x00	; 0
    72f0:	02 c0       	rjmp	.+4      	; 0x72f6 <PORTA_set_pin_level+0x32>
    72f2:	88 0f       	add	r24, r24
    72f4:	99 1f       	adc	r25, r25
    72f6:	4a 95       	dec	r20
    72f8:	e2 f7       	brpl	.-8      	; 0x72f2 <PORTA_set_pin_level+0x2e>
    72fa:	86 2b       	or	r24, r22
    72fc:	f9 01       	movw	r30, r18
    72fe:	81 83       	std	Z+1, r24	; 0x01
    7300:	15 c0       	rjmp	.+42     	; 0x732c <PORTA_set_pin_level+0x68>
    7302:	20 e0       	ldi	r18, 0x00	; 0
    7304:	30 e0       	ldi	r19, 0x00	; 0
    7306:	80 e0       	ldi	r24, 0x00	; 0
    7308:	90 e0       	ldi	r25, 0x00	; 0
    730a:	fc 01       	movw	r30, r24
    730c:	81 81       	ldd	r24, Z+1	; 0x01
    730e:	68 2f       	mov	r22, r24
    7310:	89 81       	ldd	r24, Y+1	; 0x01
    7312:	48 2f       	mov	r20, r24
    7314:	50 e0       	ldi	r21, 0x00	; 0
    7316:	81 e0       	ldi	r24, 0x01	; 1
    7318:	90 e0       	ldi	r25, 0x00	; 0
    731a:	02 c0       	rjmp	.+4      	; 0x7320 <PORTA_set_pin_level+0x5c>
    731c:	88 0f       	add	r24, r24
    731e:	99 1f       	adc	r25, r25
    7320:	4a 95       	dec	r20
    7322:	e2 f7       	brpl	.-8      	; 0x731c <PORTA_set_pin_level+0x58>
    7324:	80 95       	com	r24
    7326:	86 23       	and	r24, r22
    7328:	f9 01       	movw	r30, r18
    732a:	81 83       	std	Z+1, r24	; 0x01
    732c:	00 00       	nop
    732e:	0f 90       	pop	r0
    7330:	0f 90       	pop	r0
    7332:	df 91       	pop	r29
    7334:	cf 91       	pop	r28
    7336:	08 95       	ret

00007338 <PORTC_set_pin_dir>:
    7338:	cf 93       	push	r28
    733a:	df 93       	push	r29
    733c:	00 d0       	rcall	.+0      	; 0x733e <PORTC_set_pin_dir+0x6>
    733e:	cd b7       	in	r28, 0x3d	; 61
    7340:	de b7       	in	r29, 0x3e	; 62
    7342:	89 83       	std	Y+1, r24	; 0x01
    7344:	6a 83       	std	Y+2, r22	; 0x02
    7346:	8a 81       	ldd	r24, Y+2	; 0x02
    7348:	88 2f       	mov	r24, r24
    734a:	90 e0       	ldi	r25, 0x00	; 0
    734c:	81 30       	cpi	r24, 0x01	; 1
    734e:	91 05       	cpc	r25, r1
    7350:	e1 f0       	breq	.+56     	; 0x738a <PORTC_set_pin_dir+0x52>
    7352:	82 30       	cpi	r24, 0x02	; 2
    7354:	91 05       	cpc	r25, r1
    7356:	71 f1       	breq	.+92     	; 0x73b4 <PORTC_set_pin_dir+0x7c>
    7358:	89 2b       	or	r24, r25
    735a:	09 f0       	breq	.+2      	; 0x735e <PORTC_set_pin_dir+0x26>
    735c:	3b c0       	rjmp	.+118    	; 0x73d4 <PORTC_set_pin_dir+0x9c>
    735e:	88 e0       	ldi	r24, 0x08	; 8
    7360:	90 e0       	ldi	r25, 0x00	; 0
    7362:	28 e0       	ldi	r18, 0x08	; 8
    7364:	30 e0       	ldi	r19, 0x00	; 0
    7366:	f9 01       	movw	r30, r18
    7368:	20 81       	ld	r18, Z
    736a:	62 2f       	mov	r22, r18
    736c:	29 81       	ldd	r18, Y+1	; 0x01
    736e:	42 2f       	mov	r20, r18
    7370:	50 e0       	ldi	r21, 0x00	; 0
    7372:	21 e0       	ldi	r18, 0x01	; 1
    7374:	30 e0       	ldi	r19, 0x00	; 0
    7376:	02 c0       	rjmp	.+4      	; 0x737c <PORTC_set_pin_dir+0x44>
    7378:	22 0f       	add	r18, r18
    737a:	33 1f       	adc	r19, r19
    737c:	4a 95       	dec	r20
    737e:	e2 f7       	brpl	.-8      	; 0x7378 <PORTC_set_pin_dir+0x40>
    7380:	20 95       	com	r18
    7382:	26 23       	and	r18, r22
    7384:	fc 01       	movw	r30, r24
    7386:	20 83       	st	Z, r18
    7388:	25 c0       	rjmp	.+74     	; 0x73d4 <PORTC_set_pin_dir+0x9c>
    738a:	88 e0       	ldi	r24, 0x08	; 8
    738c:	90 e0       	ldi	r25, 0x00	; 0
    738e:	28 e0       	ldi	r18, 0x08	; 8
    7390:	30 e0       	ldi	r19, 0x00	; 0
    7392:	f9 01       	movw	r30, r18
    7394:	20 81       	ld	r18, Z
    7396:	62 2f       	mov	r22, r18
    7398:	29 81       	ldd	r18, Y+1	; 0x01
    739a:	42 2f       	mov	r20, r18
    739c:	50 e0       	ldi	r21, 0x00	; 0
    739e:	21 e0       	ldi	r18, 0x01	; 1
    73a0:	30 e0       	ldi	r19, 0x00	; 0
    73a2:	02 c0       	rjmp	.+4      	; 0x73a8 <PORTC_set_pin_dir+0x70>
    73a4:	22 0f       	add	r18, r18
    73a6:	33 1f       	adc	r19, r19
    73a8:	4a 95       	dec	r20
    73aa:	e2 f7       	brpl	.-8      	; 0x73a4 <PORTC_set_pin_dir+0x6c>
    73ac:	26 2b       	or	r18, r22
    73ae:	fc 01       	movw	r30, r24
    73b0:	20 83       	st	Z, r18
    73b2:	10 c0       	rjmp	.+32     	; 0x73d4 <PORTC_set_pin_dir+0x9c>
    73b4:	89 81       	ldd	r24, Y+1	; 0x01
    73b6:	88 2f       	mov	r24, r24
    73b8:	90 e0       	ldi	r25, 0x00	; 0
    73ba:	80 5b       	subi	r24, 0xB0	; 176
    73bc:	9b 4f       	sbci	r25, 0xFB	; 251
    73be:	29 81       	ldd	r18, Y+1	; 0x01
    73c0:	22 2f       	mov	r18, r18
    73c2:	30 e0       	ldi	r19, 0x00	; 0
    73c4:	20 5b       	subi	r18, 0xB0	; 176
    73c6:	3b 4f       	sbci	r19, 0xFB	; 251
    73c8:	f9 01       	movw	r30, r18
    73ca:	20 81       	ld	r18, Z
    73cc:	28 60       	ori	r18, 0x08	; 8
    73ce:	fc 01       	movw	r30, r24
    73d0:	20 83       	st	Z, r18
    73d2:	00 00       	nop
    73d4:	00 00       	nop
    73d6:	0f 90       	pop	r0
    73d8:	0f 90       	pop	r0
    73da:	df 91       	pop	r29
    73dc:	cf 91       	pop	r28
    73de:	08 95       	ret

000073e0 <PORTD_set_pin_pull_mode>:
    73e0:	cf 93       	push	r28
    73e2:	df 93       	push	r29
    73e4:	00 d0       	rcall	.+0      	; 0x73e6 <PORTD_set_pin_pull_mode+0x6>
    73e6:	00 d0       	rcall	.+0      	; 0x73e8 <PORTD_set_pin_pull_mode+0x8>
    73e8:	cd b7       	in	r28, 0x3d	; 61
    73ea:	de b7       	in	r29, 0x3e	; 62
    73ec:	8b 83       	std	Y+3, r24	; 0x03
    73ee:	6c 83       	std	Y+4, r22	; 0x04
    73f0:	8b 81       	ldd	r24, Y+3	; 0x03
    73f2:	88 2f       	mov	r24, r24
    73f4:	90 e0       	ldi	r25, 0x00	; 0
    73f6:	80 59       	subi	r24, 0x90	; 144
    73f8:	9b 4f       	sbci	r25, 0xFB	; 251
    73fa:	89 83       	std	Y+1, r24	; 0x01
    73fc:	9a 83       	std	Y+2, r25	; 0x02
    73fe:	8c 81       	ldd	r24, Y+4	; 0x04
    7400:	81 30       	cpi	r24, 0x01	; 1
    7402:	59 f4       	brne	.+22     	; 0x741a <PORTD_set_pin_pull_mode+0x3a>
    7404:	89 81       	ldd	r24, Y+1	; 0x01
    7406:	9a 81       	ldd	r25, Y+2	; 0x02
    7408:	fc 01       	movw	r30, r24
    740a:	80 81       	ld	r24, Z
    740c:	28 2f       	mov	r18, r24
    740e:	28 60       	ori	r18, 0x08	; 8
    7410:	89 81       	ldd	r24, Y+1	; 0x01
    7412:	9a 81       	ldd	r25, Y+2	; 0x02
    7414:	fc 01       	movw	r30, r24
    7416:	20 83       	st	Z, r18
    7418:	0d c0       	rjmp	.+26     	; 0x7434 <PORTD_set_pin_pull_mode+0x54>
    741a:	8c 81       	ldd	r24, Y+4	; 0x04
    741c:	88 23       	and	r24, r24
    741e:	51 f4       	brne	.+20     	; 0x7434 <PORTD_set_pin_pull_mode+0x54>
    7420:	89 81       	ldd	r24, Y+1	; 0x01
    7422:	9a 81       	ldd	r25, Y+2	; 0x02
    7424:	fc 01       	movw	r30, r24
    7426:	80 81       	ld	r24, Z
    7428:	28 2f       	mov	r18, r24
    742a:	27 7f       	andi	r18, 0xF7	; 247
    742c:	89 81       	ldd	r24, Y+1	; 0x01
    742e:	9a 81       	ldd	r25, Y+2	; 0x02
    7430:	fc 01       	movw	r30, r24
    7432:	20 83       	st	Z, r18
    7434:	00 00       	nop
    7436:	24 96       	adiw	r28, 0x04	; 4
    7438:	cd bf       	out	0x3d, r28	; 61
    743a:	de bf       	out	0x3e, r29	; 62
    743c:	df 91       	pop	r29
    743e:	cf 91       	pop	r28
    7440:	08 95       	ret

00007442 <PORTD_pin_set_isc>:
    7442:	cf 93       	push	r28
    7444:	df 93       	push	r29
    7446:	00 d0       	rcall	.+0      	; 0x7448 <PORTD_pin_set_isc+0x6>
    7448:	00 d0       	rcall	.+0      	; 0x744a <PORTD_pin_set_isc+0x8>
    744a:	cd b7       	in	r28, 0x3d	; 61
    744c:	de b7       	in	r29, 0x3e	; 62
    744e:	8b 83       	std	Y+3, r24	; 0x03
    7450:	6c 83       	std	Y+4, r22	; 0x04
    7452:	8b 81       	ldd	r24, Y+3	; 0x03
    7454:	88 2f       	mov	r24, r24
    7456:	90 e0       	ldi	r25, 0x00	; 0
    7458:	80 59       	subi	r24, 0x90	; 144
    745a:	9b 4f       	sbci	r25, 0xFB	; 251
    745c:	89 83       	std	Y+1, r24	; 0x01
    745e:	9a 83       	std	Y+2, r25	; 0x02
    7460:	89 81       	ldd	r24, Y+1	; 0x01
    7462:	9a 81       	ldd	r25, Y+2	; 0x02
    7464:	fc 01       	movw	r30, r24
    7466:	80 81       	ld	r24, Z
    7468:	98 2f       	mov	r25, r24
    746a:	98 7f       	andi	r25, 0xF8	; 248
    746c:	8c 81       	ldd	r24, Y+4	; 0x04
    746e:	89 2b       	or	r24, r25
    7470:	28 2f       	mov	r18, r24
    7472:	89 81       	ldd	r24, Y+1	; 0x01
    7474:	9a 81       	ldd	r25, Y+2	; 0x02
    7476:	fc 01       	movw	r30, r24
    7478:	20 83       	st	Z, r18
    747a:	00 00       	nop
    747c:	24 96       	adiw	r28, 0x04	; 4
    747e:	cd bf       	out	0x3d, r28	; 61
    7480:	de bf       	out	0x3e, r29	; 62
    7482:	df 91       	pop	r29
    7484:	cf 91       	pop	r28
    7486:	08 95       	ret

00007488 <PORTD_set_pin_dir>:
    7488:	cf 93       	push	r28
    748a:	df 93       	push	r29
    748c:	00 d0       	rcall	.+0      	; 0x748e <PORTD_set_pin_dir+0x6>
    748e:	cd b7       	in	r28, 0x3d	; 61
    7490:	de b7       	in	r29, 0x3e	; 62
    7492:	89 83       	std	Y+1, r24	; 0x01
    7494:	6a 83       	std	Y+2, r22	; 0x02
    7496:	8a 81       	ldd	r24, Y+2	; 0x02
    7498:	88 2f       	mov	r24, r24
    749a:	90 e0       	ldi	r25, 0x00	; 0
    749c:	81 30       	cpi	r24, 0x01	; 1
    749e:	91 05       	cpc	r25, r1
    74a0:	e1 f0       	breq	.+56     	; 0x74da <PORTD_set_pin_dir+0x52>
    74a2:	82 30       	cpi	r24, 0x02	; 2
    74a4:	91 05       	cpc	r25, r1
    74a6:	71 f1       	breq	.+92     	; 0x7504 <PORTD_set_pin_dir+0x7c>
    74a8:	89 2b       	or	r24, r25
    74aa:	09 f0       	breq	.+2      	; 0x74ae <PORTD_set_pin_dir+0x26>
    74ac:	3b c0       	rjmp	.+118    	; 0x7524 <PORTD_set_pin_dir+0x9c>
    74ae:	8c e0       	ldi	r24, 0x0C	; 12
    74b0:	90 e0       	ldi	r25, 0x00	; 0
    74b2:	2c e0       	ldi	r18, 0x0C	; 12
    74b4:	30 e0       	ldi	r19, 0x00	; 0
    74b6:	f9 01       	movw	r30, r18
    74b8:	20 81       	ld	r18, Z
    74ba:	62 2f       	mov	r22, r18
    74bc:	29 81       	ldd	r18, Y+1	; 0x01
    74be:	42 2f       	mov	r20, r18
    74c0:	50 e0       	ldi	r21, 0x00	; 0
    74c2:	21 e0       	ldi	r18, 0x01	; 1
    74c4:	30 e0       	ldi	r19, 0x00	; 0
    74c6:	02 c0       	rjmp	.+4      	; 0x74cc <PORTD_set_pin_dir+0x44>
    74c8:	22 0f       	add	r18, r18
    74ca:	33 1f       	adc	r19, r19
    74cc:	4a 95       	dec	r20
    74ce:	e2 f7       	brpl	.-8      	; 0x74c8 <PORTD_set_pin_dir+0x40>
    74d0:	20 95       	com	r18
    74d2:	26 23       	and	r18, r22
    74d4:	fc 01       	movw	r30, r24
    74d6:	20 83       	st	Z, r18
    74d8:	25 c0       	rjmp	.+74     	; 0x7524 <PORTD_set_pin_dir+0x9c>
    74da:	8c e0       	ldi	r24, 0x0C	; 12
    74dc:	90 e0       	ldi	r25, 0x00	; 0
    74de:	2c e0       	ldi	r18, 0x0C	; 12
    74e0:	30 e0       	ldi	r19, 0x00	; 0
    74e2:	f9 01       	movw	r30, r18
    74e4:	20 81       	ld	r18, Z
    74e6:	62 2f       	mov	r22, r18
    74e8:	29 81       	ldd	r18, Y+1	; 0x01
    74ea:	42 2f       	mov	r20, r18
    74ec:	50 e0       	ldi	r21, 0x00	; 0
    74ee:	21 e0       	ldi	r18, 0x01	; 1
    74f0:	30 e0       	ldi	r19, 0x00	; 0
    74f2:	02 c0       	rjmp	.+4      	; 0x74f8 <PORTD_set_pin_dir+0x70>
    74f4:	22 0f       	add	r18, r18
    74f6:	33 1f       	adc	r19, r19
    74f8:	4a 95       	dec	r20
    74fa:	e2 f7       	brpl	.-8      	; 0x74f4 <PORTD_set_pin_dir+0x6c>
    74fc:	26 2b       	or	r18, r22
    74fe:	fc 01       	movw	r30, r24
    7500:	20 83       	st	Z, r18
    7502:	10 c0       	rjmp	.+32     	; 0x7524 <PORTD_set_pin_dir+0x9c>
    7504:	89 81       	ldd	r24, Y+1	; 0x01
    7506:	88 2f       	mov	r24, r24
    7508:	90 e0       	ldi	r25, 0x00	; 0
    750a:	80 59       	subi	r24, 0x90	; 144
    750c:	9b 4f       	sbci	r25, 0xFB	; 251
    750e:	29 81       	ldd	r18, Y+1	; 0x01
    7510:	22 2f       	mov	r18, r18
    7512:	30 e0       	ldi	r19, 0x00	; 0
    7514:	20 59       	subi	r18, 0x90	; 144
    7516:	3b 4f       	sbci	r19, 0xFB	; 251
    7518:	f9 01       	movw	r30, r18
    751a:	20 81       	ld	r18, Z
    751c:	28 60       	ori	r18, 0x08	; 8
    751e:	fc 01       	movw	r30, r24
    7520:	20 83       	st	Z, r18
    7522:	00 00       	nop
    7524:	00 00       	nop
    7526:	0f 90       	pop	r0
    7528:	0f 90       	pop	r0
    752a:	df 91       	pop	r29
    752c:	cf 91       	pop	r28
    752e:	08 95       	ret

00007530 <PORTD_set_pin_level>:
    7530:	cf 93       	push	r28
    7532:	df 93       	push	r29
    7534:	00 d0       	rcall	.+0      	; 0x7536 <PORTD_set_pin_level+0x6>
    7536:	cd b7       	in	r28, 0x3d	; 61
    7538:	de b7       	in	r29, 0x3e	; 62
    753a:	89 83       	std	Y+1, r24	; 0x01
    753c:	6a 83       	std	Y+2, r22	; 0x02
    753e:	8a 81       	ldd	r24, Y+2	; 0x02
    7540:	88 23       	and	r24, r24
    7542:	a9 f0       	breq	.+42     	; 0x756e <PORTD_set_pin_level+0x3e>
    7544:	8c e0       	ldi	r24, 0x0C	; 12
    7546:	90 e0       	ldi	r25, 0x00	; 0
    7548:	2c e0       	ldi	r18, 0x0C	; 12
    754a:	30 e0       	ldi	r19, 0x00	; 0
    754c:	f9 01       	movw	r30, r18
    754e:	21 81       	ldd	r18, Z+1	; 0x01
    7550:	62 2f       	mov	r22, r18
    7552:	29 81       	ldd	r18, Y+1	; 0x01
    7554:	42 2f       	mov	r20, r18
    7556:	50 e0       	ldi	r21, 0x00	; 0
    7558:	21 e0       	ldi	r18, 0x01	; 1
    755a:	30 e0       	ldi	r19, 0x00	; 0
    755c:	02 c0       	rjmp	.+4      	; 0x7562 <PORTD_set_pin_level+0x32>
    755e:	22 0f       	add	r18, r18
    7560:	33 1f       	adc	r19, r19
    7562:	4a 95       	dec	r20
    7564:	e2 f7       	brpl	.-8      	; 0x755e <PORTD_set_pin_level+0x2e>
    7566:	26 2b       	or	r18, r22
    7568:	fc 01       	movw	r30, r24
    756a:	21 83       	std	Z+1, r18	; 0x01
    756c:	15 c0       	rjmp	.+42     	; 0x7598 <PORTD_set_pin_level+0x68>
    756e:	8c e0       	ldi	r24, 0x0C	; 12
    7570:	90 e0       	ldi	r25, 0x00	; 0
    7572:	2c e0       	ldi	r18, 0x0C	; 12
    7574:	30 e0       	ldi	r19, 0x00	; 0
    7576:	f9 01       	movw	r30, r18
    7578:	21 81       	ldd	r18, Z+1	; 0x01
    757a:	62 2f       	mov	r22, r18
    757c:	29 81       	ldd	r18, Y+1	; 0x01
    757e:	42 2f       	mov	r20, r18
    7580:	50 e0       	ldi	r21, 0x00	; 0
    7582:	21 e0       	ldi	r18, 0x01	; 1
    7584:	30 e0       	ldi	r19, 0x00	; 0
    7586:	02 c0       	rjmp	.+4      	; 0x758c <PORTD_set_pin_level+0x5c>
    7588:	22 0f       	add	r18, r18
    758a:	33 1f       	adc	r19, r19
    758c:	4a 95       	dec	r20
    758e:	e2 f7       	brpl	.-8      	; 0x7588 <PORTD_set_pin_level+0x58>
    7590:	20 95       	com	r18
    7592:	26 23       	and	r18, r22
    7594:	fc 01       	movw	r30, r24
    7596:	21 83       	std	Z+1, r18	; 0x01
    7598:	00 00       	nop
    759a:	0f 90       	pop	r0
    759c:	0f 90       	pop	r0
    759e:	df 91       	pop	r29
    75a0:	cf 91       	pop	r28
    75a2:	08 95       	ret

000075a4 <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    75a4:	cf 93       	push	r28
    75a6:	df 93       	push	r29
    75a8:	cd b7       	in	r28, 0x3d	; 61
    75aa:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
 	PORTA_set_pin_dir(RF_OUT_ENABLE, PORT_DIR_OUT);
    75ac:	61 e0       	ldi	r22, 0x01	; 1
    75ae:	81 e0       	ldi	r24, 0x01	; 1
    75b0:	0e 94 0e 39 	call	0x721c	; 0x721c <PORTA_set_pin_dir>
	PORTA_set_pin_level(RF_OUT_ENABLE, LOW);
    75b4:	60 e0       	ldi	r22, 0x00	; 0
    75b6:	81 e0       	ldi	r24, 0x01	; 1
    75b8:	0e 94 62 39 	call	0x72c4	; 0x72c4 <PORTA_set_pin_level>

 	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    75bc:	61 e0       	ldi	r22, 0x01	; 1
    75be:	82 e0       	ldi	r24, 0x02	; 2
    75c0:	0e 94 0e 39 	call	0x721c	; 0x721c <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    75c4:	60 e0       	ldi	r22, 0x00	; 0
    75c6:	82 e0       	ldi	r24, 0x02	; 2
    75c8:	0e 94 62 39 	call	0x72c4	; 0x72c4 <PORTA_set_pin_level>

	PORTA_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    75cc:	60 e0       	ldi	r22, 0x00	; 0
    75ce:	83 e0       	ldi	r24, 0x03	; 3
    75d0:	0e 94 0e 39 	call	0x721c	; 0x721c <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    75d4:	60 e0       	ldi	r22, 0x00	; 0
    75d6:	83 e0       	ldi	r24, 0x03	; 3
    75d8:	0e 94 dd 38 	call	0x71ba	; 0x71ba <PORTA_set_pin_pull_mode>

 	PORTA_set_pin_dir(TO_WIFI_RX, PORT_DIR_OUT);
    75dc:	61 e0       	ldi	r22, 0x01	; 1
    75de:	84 e0       	ldi	r24, 0x04	; 4
    75e0:	0e 94 0e 39 	call	0x721c	; 0x721c <PORTA_set_pin_dir>

 	PORTA_set_pin_dir(TO_WIFI_TX, PORT_DIR_IN);
    75e4:	60 e0       	ldi	r22, 0x00	; 0
    75e6:	85 e0       	ldi	r24, 0x05	; 5
    75e8:	0e 94 0e 39 	call	0x721c	; 0x721c <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(TO_WIFI_TX, PORT_PULL_UP);
    75ec:	61 e0       	ldi	r22, 0x01	; 1
    75ee:	85 e0       	ldi	r24, 0x05	; 5
    75f0:	0e 94 dd 38 	call	0x71ba	; 0x71ba <PORTA_set_pin_pull_mode>

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    75f4:	61 e0       	ldi	r22, 0x01	; 1
    75f6:	86 e0       	ldi	r24, 0x06	; 6
    75f8:	0e 94 0e 39 	call	0x721c	; 0x721c <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, LOW);
    75fc:	60 e0       	ldi	r22, 0x00	; 0
    75fe:	86 e0       	ldi	r24, 0x06	; 6
    7600:	0e 94 62 39 	call	0x72c4	; 0x72c4 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    7604:	61 e0       	ldi	r22, 0x01	; 1
    7606:	82 e0       	ldi	r24, 0x02	; 2
    7608:	0e 94 0e 39 	call	0x721c	; 0x721c <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    760c:	60 e0       	ldi	r22, 0x00	; 0
    760e:	82 e0       	ldi	r24, 0x02	; 2
    7610:	0e 94 62 39 	call	0x72c4	; 0x72c4 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    7614:	61 e0       	ldi	r22, 0x01	; 1
    7616:	87 e0       	ldi	r24, 0x07	; 7
    7618:	0e 94 0e 39 	call	0x721c	; 0x721c <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    761c:	60 e0       	ldi	r22, 0x00	; 0
    761e:	87 e0       	ldi	r24, 0x07	; 7
    7620:	0e 94 62 39 	call	0x72c4	; 0x72c4 <PORTA_set_pin_level>
	
	/* PORTC *************************************************************************************/
	
	PORTC_set_pin_dir(SERIAL_TX, PORT_DIR_OUT);
    7624:	61 e0       	ldi	r22, 0x01	; 1
    7626:	80 e0       	ldi	r24, 0x00	; 0
    7628:	0e 94 9c 39 	call	0x7338	; 0x7338 <PORTC_set_pin_dir>
	PORTC_set_pin_dir(SERIAL_RX, PORT_DIR_IN);
    762c:	60 e0       	ldi	r22, 0x00	; 0
    762e:	81 e0       	ldi	r24, 0x01	; 1
    7630:	0e 94 9c 39 	call	0x7338	; 0x7338 <PORTC_set_pin_dir>
// 	PORTC_set_pin_dir(SI5351_SDA, PORT_DIR_OUT);
// 	PORTC_set_pin_dir(SI5351_SCL, PORT_DIR_IN);
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(VBAT_IN, PORT_DIR_IN);
    7634:	60 e0       	ldi	r22, 0x00	; 0
    7636:	80 e0       	ldi	r24, 0x00	; 0
    7638:	0e 94 44 3a 	call	0x7488	; 0x7488 <PORTD_set_pin_dir>

	PORTD_set_pin_dir(VDIV_ENABLE, PORT_DIR_OUT);
    763c:	61 e0       	ldi	r22, 0x01	; 1
    763e:	81 e0       	ldi	r24, 0x01	; 1
    7640:	0e 94 44 3a 	call	0x7488	; 0x7488 <PORTD_set_pin_dir>
	PORTD_set_pin_level(VDIV_ENABLE, LOW);
    7644:	60 e0       	ldi	r22, 0x00	; 0
    7646:	81 e0       	ldi	r24, 0x01	; 1
    7648:	0e 94 98 3a 	call	0x7530	; 0x7530 <PORTD_set_pin_level>

	PORTD_set_pin_dir(LED_RED, PORT_DIR_OUT);
    764c:	61 e0       	ldi	r22, 0x01	; 1
    764e:	82 e0       	ldi	r24, 0x02	; 2
    7650:	0e 94 44 3a 	call	0x7488	; 0x7488 <PORTD_set_pin_dir>
	PORTD_set_pin_level(LED_RED, LOW);
    7654:	60 e0       	ldi	r22, 0x00	; 0
    7656:	82 e0       	ldi	r24, 0x02	; 2
    7658:	0e 94 98 3a 	call	0x7530	; 0x7530 <PORTD_set_pin_level>

	PORTD_set_pin_dir(SWITCH, PORT_DIR_IN);
    765c:	60 e0       	ldi	r22, 0x00	; 0
    765e:	83 e0       	ldi	r24, 0x03	; 3
    7660:	0e 94 44 3a 	call	0x7488	; 0x7488 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    7664:	61 e0       	ldi	r22, 0x01	; 1
    7666:	83 e0       	ldi	r24, 0x03	; 3
    7668:	0e 94 f0 39 	call	0x73e0	; 0x73e0 <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(SWITCH, PORT_ISC_BOTHEDGES_gc);
    766c:	61 e0       	ldi	r22, 0x01	; 1
    766e:	83 e0       	ldi	r24, 0x03	; 3
    7670:	0e 94 21 3a 	call	0x7442	; 0x7442 <PORTD_pin_set_isc>

	/* PORTF *************************************************************************************/
// 	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
}
    7674:	00 00       	nop
    7676:	df 91       	pop	r29
    7678:	cf 91       	pop	r28
    767a:	08 95       	ret

0000767c <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    767c:	cf 93       	push	r28
    767e:	df 93       	push	r29
    7680:	cd b7       	in	r28, 0x3d	; 61
    7682:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    7684:	80 e8       	ldi	r24, 0x80	; 128
    7686:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    7688:	fc 01       	movw	r30, r24
    768a:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    768c:	80 e0       	ldi	r24, 0x00	; 0
}
    768e:	df 91       	pop	r29
    7690:	cf 91       	pop	r28
    7692:	08 95       	ret

00007694 <_ZN18CircularStringBuffC1Ej>:
      size = max_size_ + head_ - tail_;
    }
  }

  return (size);
}
    7694:	cf 93       	push	r28
    7696:	df 93       	push	r29
    7698:	00 d0       	rcall	.+0      	; 0x769a <_ZN18CircularStringBuffC1Ej+0x6>
    769a:	00 d0       	rcall	.+0      	; 0x769c <_ZN18CircularStringBuffC1Ej+0x8>
    769c:	cd b7       	in	r28, 0x3d	; 61
    769e:	de b7       	in	r29, 0x3e	; 62
    76a0:	89 83       	std	Y+1, r24	; 0x01
    76a2:	9a 83       	std	Y+2, r25	; 0x02
    76a4:	6b 83       	std	Y+3, r22	; 0x03
    76a6:	7c 83       	std	Y+4, r23	; 0x04
    76a8:	8b 81       	ldd	r24, Y+3	; 0x03
    76aa:	9c 81       	ldd	r25, Y+4	; 0x04
    76ac:	0e 94 90 73 	call	0xe720	; 0xe720 <malloc>
    76b0:	9c 01       	movw	r18, r24
    76b2:	89 81       	ldd	r24, Y+1	; 0x01
    76b4:	9a 81       	ldd	r25, Y+2	; 0x02
    76b6:	fc 01       	movw	r30, r24
    76b8:	25 83       	std	Z+5, r18	; 0x05
    76ba:	36 83       	std	Z+6, r19	; 0x06
    76bc:	89 81       	ldd	r24, Y+1	; 0x01
    76be:	9a 81       	ldd	r25, Y+2	; 0x02
    76c0:	2b 81       	ldd	r18, Y+3	; 0x03
    76c2:	3c 81       	ldd	r19, Y+4	; 0x04
    76c4:	fc 01       	movw	r30, r24
    76c6:	27 83       	std	Z+7, r18	; 0x07
    76c8:	30 87       	std	Z+8, r19	; 0x08
    76ca:	89 81       	ldd	r24, Y+1	; 0x01
    76cc:	9a 81       	ldd	r25, Y+2	; 0x02
    76ce:	fc 01       	movw	r30, r24
    76d0:	10 82       	st	Z, r1
    76d2:	11 82       	std	Z+1, r1	; 0x01
    76d4:	89 81       	ldd	r24, Y+1	; 0x01
    76d6:	9a 81       	ldd	r25, Y+2	; 0x02
    76d8:	fc 01       	movw	r30, r24
    76da:	12 82       	std	Z+2, r1	; 0x02
    76dc:	13 82       	std	Z+3, r1	; 0x03
    76de:	89 81       	ldd	r24, Y+1	; 0x01
    76e0:	9a 81       	ldd	r25, Y+2	; 0x02
    76e2:	fc 01       	movw	r30, r24
    76e4:	14 82       	std	Z+4, r1	; 0x04
    76e6:	00 00       	nop
    76e8:	24 96       	adiw	r28, 0x04	; 4
    76ea:	cd bf       	out	0x3d, r28	; 61
    76ec:	de bf       	out	0x3e, r29	; 62
    76ee:	df 91       	pop	r29
    76f0:	cf 91       	pop	r28
    76f2:	08 95       	ret

000076f4 <_ZN18CircularStringBuffD1Ev>:
    76f4:	cf 93       	push	r28
    76f6:	df 93       	push	r29
    76f8:	00 d0       	rcall	.+0      	; 0x76fa <_ZN18CircularStringBuffD1Ev+0x6>
    76fa:	cd b7       	in	r28, 0x3d	; 61
    76fc:	de b7       	in	r29, 0x3e	; 62
    76fe:	89 83       	std	Y+1, r24	; 0x01
    7700:	9a 83       	std	Y+2, r25	; 0x02
    7702:	89 81       	ldd	r24, Y+1	; 0x01
    7704:	9a 81       	ldd	r25, Y+2	; 0x02
    7706:	fc 01       	movw	r30, r24
    7708:	85 81       	ldd	r24, Z+5	; 0x05
    770a:	96 81       	ldd	r25, Z+6	; 0x06
    770c:	0e 94 28 74 	call	0xe850	; 0xe850 <free>
    7710:	00 00       	nop
    7712:	0f 90       	pop	r0
    7714:	0f 90       	pop	r0
    7716:	df 91       	pop	r29
    7718:	cf 91       	pop	r28
    771a:	08 95       	ret

0000771c <_ZNK18CircularStringBuff5emptyEv>:
    771c:	cf 93       	push	r28
    771e:	df 93       	push	r29
    7720:	00 d0       	rcall	.+0      	; 0x7722 <_ZNK18CircularStringBuff5emptyEv+0x6>
    7722:	cd b7       	in	r28, 0x3d	; 61
    7724:	de b7       	in	r29, 0x3e	; 62
    7726:	89 83       	std	Y+1, r24	; 0x01
    7728:	9a 83       	std	Y+2, r25	; 0x02
    772a:	89 81       	ldd	r24, Y+1	; 0x01
    772c:	9a 81       	ldd	r25, Y+2	; 0x02
    772e:	fc 01       	movw	r30, r24
    7730:	94 81       	ldd	r25, Z+4	; 0x04
    7732:	81 e0       	ldi	r24, 0x01	; 1
    7734:	89 27       	eor	r24, r25
    7736:	88 23       	and	r24, r24
    7738:	79 f0       	breq	.+30     	; 0x7758 <_ZNK18CircularStringBuff5emptyEv+0x3c>
    773a:	89 81       	ldd	r24, Y+1	; 0x01
    773c:	9a 81       	ldd	r25, Y+2	; 0x02
    773e:	fc 01       	movw	r30, r24
    7740:	20 81       	ld	r18, Z
    7742:	31 81       	ldd	r19, Z+1	; 0x01
    7744:	89 81       	ldd	r24, Y+1	; 0x01
    7746:	9a 81       	ldd	r25, Y+2	; 0x02
    7748:	fc 01       	movw	r30, r24
    774a:	82 81       	ldd	r24, Z+2	; 0x02
    774c:	93 81       	ldd	r25, Z+3	; 0x03
    774e:	28 17       	cp	r18, r24
    7750:	39 07       	cpc	r19, r25
    7752:	11 f4       	brne	.+4      	; 0x7758 <_ZNK18CircularStringBuff5emptyEv+0x3c>
    7754:	81 e0       	ldi	r24, 0x01	; 1
    7756:	01 c0       	rjmp	.+2      	; 0x775a <_ZNK18CircularStringBuff5emptyEv+0x3e>
    7758:	80 e0       	ldi	r24, 0x00	; 0
    775a:	0f 90       	pop	r0
    775c:	0f 90       	pop	r0
    775e:	df 91       	pop	r29
    7760:	cf 91       	pop	r28
    7762:	08 95       	ret

00007764 <_ZNK18CircularStringBuff4fullEv>:
    7764:	cf 93       	push	r28
    7766:	df 93       	push	r29
    7768:	00 d0       	rcall	.+0      	; 0x776a <_ZNK18CircularStringBuff4fullEv+0x6>
    776a:	cd b7       	in	r28, 0x3d	; 61
    776c:	de b7       	in	r29, 0x3e	; 62
    776e:	89 83       	std	Y+1, r24	; 0x01
    7770:	9a 83       	std	Y+2, r25	; 0x02
    7772:	89 81       	ldd	r24, Y+1	; 0x01
    7774:	9a 81       	ldd	r25, Y+2	; 0x02
    7776:	fc 01       	movw	r30, r24
    7778:	84 81       	ldd	r24, Z+4	; 0x04
    777a:	0f 90       	pop	r0
    777c:	0f 90       	pop	r0
    777e:	df 91       	pop	r29
    7780:	cf 91       	pop	r28
    7782:	08 95       	ret

00007784 <_ZN18CircularStringBuff3putEc>:

/** 
 * Place another item in the buffer
 */
void CircularStringBuff::put(char item)
{
    7784:	cf 93       	push	r28
    7786:	df 93       	push	r29
    7788:	00 d0       	rcall	.+0      	; 0x778a <_ZN18CircularStringBuff3putEc+0x6>
    778a:	1f 92       	push	r1
    778c:	cd b7       	in	r28, 0x3d	; 61
    778e:	de b7       	in	r29, 0x3e	; 62
    7790:	89 83       	std	Y+1, r24	; 0x01
    7792:	9a 83       	std	Y+2, r25	; 0x02
    7794:	6b 83       	std	Y+3, r22	; 0x03
  buf_[head_] = item;
    7796:	89 81       	ldd	r24, Y+1	; 0x01
    7798:	9a 81       	ldd	r25, Y+2	; 0x02
    779a:	fc 01       	movw	r30, r24
    779c:	85 81       	ldd	r24, Z+5	; 0x05
    779e:	96 81       	ldd	r25, Z+6	; 0x06
    77a0:	29 81       	ldd	r18, Y+1	; 0x01
    77a2:	3a 81       	ldd	r19, Y+2	; 0x02
    77a4:	f9 01       	movw	r30, r18
    77a6:	20 81       	ld	r18, Z
    77a8:	31 81       	ldd	r19, Z+1	; 0x01
    77aa:	82 0f       	add	r24, r18
    77ac:	93 1f       	adc	r25, r19
    77ae:	2b 81       	ldd	r18, Y+3	; 0x03
    77b0:	fc 01       	movw	r30, r24
    77b2:	20 83       	st	Z, r18

  if (full_)
    77b4:	89 81       	ldd	r24, Y+1	; 0x01
    77b6:	9a 81       	ldd	r25, Y+2	; 0x02
    77b8:	fc 01       	movw	r30, r24
    77ba:	84 81       	ldd	r24, Z+4	; 0x04
    77bc:	88 23       	and	r24, r24
    77be:	b1 f0       	breq	.+44     	; 0x77ec <_ZN18CircularStringBuff3putEc+0x68>
  {
    tail_ = (tail_ + 1) % max_size_;
    77c0:	89 81       	ldd	r24, Y+1	; 0x01
    77c2:	9a 81       	ldd	r25, Y+2	; 0x02
    77c4:	fc 01       	movw	r30, r24
    77c6:	82 81       	ldd	r24, Z+2	; 0x02
    77c8:	93 81       	ldd	r25, Z+3	; 0x03
    77ca:	01 96       	adiw	r24, 0x01	; 1
    77cc:	ac 01       	movw	r20, r24
    77ce:	89 81       	ldd	r24, Y+1	; 0x01
    77d0:	9a 81       	ldd	r25, Y+2	; 0x02
    77d2:	fc 01       	movw	r30, r24
    77d4:	27 81       	ldd	r18, Z+7	; 0x07
    77d6:	30 85       	ldd	r19, Z+8	; 0x08
    77d8:	ca 01       	movw	r24, r20
    77da:	b9 01       	movw	r22, r18
    77dc:	0e 94 e4 72 	call	0xe5c8	; 0xe5c8 <__udivmodhi4>
    77e0:	9c 01       	movw	r18, r24
    77e2:	89 81       	ldd	r24, Y+1	; 0x01
    77e4:	9a 81       	ldd	r25, Y+2	; 0x02
    77e6:	fc 01       	movw	r30, r24
    77e8:	22 83       	std	Z+2, r18	; 0x02
    77ea:	33 83       	std	Z+3, r19	; 0x03
  }

  head_ = (head_ + 1) % max_size_;
    77ec:	89 81       	ldd	r24, Y+1	; 0x01
    77ee:	9a 81       	ldd	r25, Y+2	; 0x02
    77f0:	fc 01       	movw	r30, r24
    77f2:	80 81       	ld	r24, Z
    77f4:	91 81       	ldd	r25, Z+1	; 0x01
    77f6:	01 96       	adiw	r24, 0x01	; 1
    77f8:	ac 01       	movw	r20, r24
    77fa:	89 81       	ldd	r24, Y+1	; 0x01
    77fc:	9a 81       	ldd	r25, Y+2	; 0x02
    77fe:	fc 01       	movw	r30, r24
    7800:	27 81       	ldd	r18, Z+7	; 0x07
    7802:	30 85       	ldd	r19, Z+8	; 0x08
    7804:	ca 01       	movw	r24, r20
    7806:	b9 01       	movw	r22, r18
    7808:	0e 94 e4 72 	call	0xe5c8	; 0xe5c8 <__udivmodhi4>
    780c:	9c 01       	movw	r18, r24
    780e:	89 81       	ldd	r24, Y+1	; 0x01
    7810:	9a 81       	ldd	r25, Y+2	; 0x02
    7812:	fc 01       	movw	r30, r24
    7814:	20 83       	st	Z, r18
    7816:	31 83       	std	Z+1, r19	; 0x01

  full_ = head_ == tail_;
    7818:	89 81       	ldd	r24, Y+1	; 0x01
    781a:	9a 81       	ldd	r25, Y+2	; 0x02
    781c:	fc 01       	movw	r30, r24
    781e:	20 81       	ld	r18, Z
    7820:	31 81       	ldd	r19, Z+1	; 0x01
    7822:	89 81       	ldd	r24, Y+1	; 0x01
    7824:	9a 81       	ldd	r25, Y+2	; 0x02
    7826:	fc 01       	movw	r30, r24
    7828:	82 81       	ldd	r24, Z+2	; 0x02
    782a:	93 81       	ldd	r25, Z+3	; 0x03
    782c:	41 e0       	ldi	r20, 0x01	; 1
    782e:	28 17       	cp	r18, r24
    7830:	39 07       	cpc	r19, r25
    7832:	09 f0       	breq	.+2      	; 0x7836 <_ZN18CircularStringBuff3putEc+0xb2>
    7834:	40 e0       	ldi	r20, 0x00	; 0
    7836:	89 81       	ldd	r24, Y+1	; 0x01
    7838:	9a 81       	ldd	r25, Y+2	; 0x02
    783a:	fc 01       	movw	r30, r24
    783c:	44 83       	std	Z+4, r20	; 0x04
}
    783e:	00 00       	nop
    7840:	23 96       	adiw	r28, 0x03	; 3
    7842:	cd bf       	out	0x3d, r28	; 61
    7844:	de bf       	out	0x3e, r29	; 62
    7846:	df 91       	pop	r29
    7848:	cf 91       	pop	r28
    784a:	08 95       	ret

0000784c <_ZN18CircularStringBuff3popEv>:

/** 
 * Return the last put item and remove it from the buffer
 */
char CircularStringBuff::pop()
{
    784c:	cf 93       	push	r28
    784e:	df 93       	push	r29
    7850:	00 d0       	rcall	.+0      	; 0x7852 <_ZN18CircularStringBuff3popEv+0x6>
    7852:	1f 92       	push	r1
    7854:	cd b7       	in	r28, 0x3d	; 61
    7856:	de b7       	in	r29, 0x3e	; 62
    7858:	8a 83       	std	Y+2, r24	; 0x02
    785a:	9b 83       	std	Y+3, r25	; 0x03
  if (empty())
    785c:	8a 81       	ldd	r24, Y+2	; 0x02
    785e:	9b 81       	ldd	r25, Y+3	; 0x03
    7860:	0e 94 8e 3b 	call	0x771c	; 0x771c <_ZNK18CircularStringBuff5emptyEv>
    7864:	88 23       	and	r24, r24
    7866:	11 f0       	breq	.+4      	; 0x786c <_ZN18CircularStringBuff3popEv+0x20>
  {
	  return ('\0');
    7868:	80 e0       	ldi	r24, 0x00	; 0
    786a:	35 c0       	rjmp	.+106    	; 0x78d6 <_ZN18CircularStringBuff3popEv+0x8a>
  }

  /*Read data and decrement the head (we now have one more free space) */
  char val = buf_[head_];
    786c:	8a 81       	ldd	r24, Y+2	; 0x02
    786e:	9b 81       	ldd	r25, Y+3	; 0x03
    7870:	fc 01       	movw	r30, r24
    7872:	85 81       	ldd	r24, Z+5	; 0x05
    7874:	96 81       	ldd	r25, Z+6	; 0x06
    7876:	2a 81       	ldd	r18, Y+2	; 0x02
    7878:	3b 81       	ldd	r19, Y+3	; 0x03
    787a:	f9 01       	movw	r30, r18
    787c:	20 81       	ld	r18, Z
    787e:	31 81       	ldd	r19, Z+1	; 0x01
    7880:	82 0f       	add	r24, r18
    7882:	93 1f       	adc	r25, r19
    7884:	fc 01       	movw	r30, r24
    7886:	80 81       	ld	r24, Z
    7888:	89 83       	std	Y+1, r24	; 0x01
  if(head_) 
    788a:	8a 81       	ldd	r24, Y+2	; 0x02
    788c:	9b 81       	ldd	r25, Y+3	; 0x03
    788e:	fc 01       	movw	r30, r24
    7890:	80 81       	ld	r24, Z
    7892:	91 81       	ldd	r25, Z+1	; 0x01
    7894:	89 2b       	or	r24, r25
    7896:	71 f0       	breq	.+28     	; 0x78b4 <_ZN18CircularStringBuff3popEv+0x68>
  {
	  head_--;
    7898:	8a 81       	ldd	r24, Y+2	; 0x02
    789a:	9b 81       	ldd	r25, Y+3	; 0x03
    789c:	fc 01       	movw	r30, r24
    789e:	80 81       	ld	r24, Z
    78a0:	91 81       	ldd	r25, Z+1	; 0x01
    78a2:	9c 01       	movw	r18, r24
    78a4:	21 50       	subi	r18, 0x01	; 1
    78a6:	31 09       	sbc	r19, r1
    78a8:	8a 81       	ldd	r24, Y+2	; 0x02
    78aa:	9b 81       	ldd	r25, Y+3	; 0x03
    78ac:	fc 01       	movw	r30, r24
    78ae:	20 83       	st	Z, r18
    78b0:	31 83       	std	Z+1, r19	; 0x01
    78b2:	0c c0       	rjmp	.+24     	; 0x78cc <_ZN18CircularStringBuff3popEv+0x80>
  }
  else
  {
	  head_ = (max_size_-1);
    78b4:	8a 81       	ldd	r24, Y+2	; 0x02
    78b6:	9b 81       	ldd	r25, Y+3	; 0x03
    78b8:	fc 01       	movw	r30, r24
    78ba:	87 81       	ldd	r24, Z+7	; 0x07
    78bc:	90 85       	ldd	r25, Z+8	; 0x08
    78be:	01 97       	sbiw	r24, 0x01	; 1
    78c0:	9c 01       	movw	r18, r24
    78c2:	8a 81       	ldd	r24, Y+2	; 0x02
    78c4:	9b 81       	ldd	r25, Y+3	; 0x03
    78c6:	fc 01       	movw	r30, r24
    78c8:	20 83       	st	Z, r18
    78ca:	31 83       	std	Z+1, r19	; 0x01
  }
  
  full_ = false;
    78cc:	8a 81       	ldd	r24, Y+2	; 0x02
    78ce:	9b 81       	ldd	r25, Y+3	; 0x03
    78d0:	fc 01       	movw	r30, r24
    78d2:	14 82       	std	Z+4, r1	; 0x04

  return (val);
    78d4:	89 81       	ldd	r24, Y+1	; 0x01
}
    78d6:	23 96       	adiw	r28, 0x03	; 3
    78d8:	cd bf       	out	0x3d, r28	; 61
    78da:	de bf       	out	0x3e, r29	; 62
    78dc:	df 91       	pop	r29
    78de:	cf 91       	pop	r28
    78e0:	08 95       	ret

000078e2 <_ZN18CircularStringBuff3getEv>:

/** 
 * Return the FIFO entry and delete it from the buffer
 */
char CircularStringBuff::get()
{
    78e2:	cf 93       	push	r28
    78e4:	df 93       	push	r29
    78e6:	00 d0       	rcall	.+0      	; 0x78e8 <_ZN18CircularStringBuff3getEv+0x6>
    78e8:	1f 92       	push	r1
    78ea:	cd b7       	in	r28, 0x3d	; 61
    78ec:	de b7       	in	r29, 0x3e	; 62
    78ee:	8a 83       	std	Y+2, r24	; 0x02
    78f0:	9b 83       	std	Y+3, r25	; 0x03
  if (empty())
    78f2:	8a 81       	ldd	r24, Y+2	; 0x02
    78f4:	9b 81       	ldd	r25, Y+3	; 0x03
    78f6:	0e 94 8e 3b 	call	0x771c	; 0x771c <_ZNK18CircularStringBuff5emptyEv>
    78fa:	88 23       	and	r24, r24
    78fc:	11 f0       	breq	.+4      	; 0x7902 <_ZN18CircularStringBuff3getEv+0x20>
  {
    return ('\0');
    78fe:	80 e0       	ldi	r24, 0x00	; 0
    7900:	2a c0       	rjmp	.+84     	; 0x7956 <_ZN18CircularStringBuff3getEv+0x74>
  }

  /*Read data and advance the tail (we now have a free space) */
  char val = buf_[tail_];
    7902:	8a 81       	ldd	r24, Y+2	; 0x02
    7904:	9b 81       	ldd	r25, Y+3	; 0x03
    7906:	fc 01       	movw	r30, r24
    7908:	85 81       	ldd	r24, Z+5	; 0x05
    790a:	96 81       	ldd	r25, Z+6	; 0x06
    790c:	2a 81       	ldd	r18, Y+2	; 0x02
    790e:	3b 81       	ldd	r19, Y+3	; 0x03
    7910:	f9 01       	movw	r30, r18
    7912:	22 81       	ldd	r18, Z+2	; 0x02
    7914:	33 81       	ldd	r19, Z+3	; 0x03
    7916:	82 0f       	add	r24, r18
    7918:	93 1f       	adc	r25, r19
    791a:	fc 01       	movw	r30, r24
    791c:	80 81       	ld	r24, Z
    791e:	89 83       	std	Y+1, r24	; 0x01
  full_ = false;
    7920:	8a 81       	ldd	r24, Y+2	; 0x02
    7922:	9b 81       	ldd	r25, Y+3	; 0x03
    7924:	fc 01       	movw	r30, r24
    7926:	14 82       	std	Z+4, r1	; 0x04
  tail_ = (tail_ + 1) % max_size_;
    7928:	8a 81       	ldd	r24, Y+2	; 0x02
    792a:	9b 81       	ldd	r25, Y+3	; 0x03
    792c:	fc 01       	movw	r30, r24
    792e:	82 81       	ldd	r24, Z+2	; 0x02
    7930:	93 81       	ldd	r25, Z+3	; 0x03
    7932:	01 96       	adiw	r24, 0x01	; 1
    7934:	ac 01       	movw	r20, r24
    7936:	8a 81       	ldd	r24, Y+2	; 0x02
    7938:	9b 81       	ldd	r25, Y+3	; 0x03
    793a:	fc 01       	movw	r30, r24
    793c:	27 81       	ldd	r18, Z+7	; 0x07
    793e:	30 85       	ldd	r19, Z+8	; 0x08
    7940:	ca 01       	movw	r24, r20
    7942:	b9 01       	movw	r22, r18
    7944:	0e 94 e4 72 	call	0xe5c8	; 0xe5c8 <__udivmodhi4>
    7948:	9c 01       	movw	r18, r24
    794a:	8a 81       	ldd	r24, Y+2	; 0x02
    794c:	9b 81       	ldd	r25, Y+3	; 0x03
    794e:	fc 01       	movw	r30, r24
    7950:	22 83       	std	Z+2, r18	; 0x02
    7952:	33 83       	std	Z+3, r19	; 0x03

  return (val);
    7954:	89 81       	ldd	r24, Y+1	; 0x01
}
    7956:	23 96       	adiw	r28, 0x03	; 3
    7958:	cd bf       	out	0x3d, r28	; 61
    795a:	de bf       	out	0x3e, r29	; 62
    795c:	df 91       	pop	r29
    795e:	cf 91       	pop	r28
    7960:	08 95       	ret

00007962 <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    7962:	cf 93       	push	r28
    7964:	df 93       	push	r29
    7966:	00 d0       	rcall	.+0      	; 0x7968 <ccp_write_io+0x6>
    7968:	1f 92       	push	r1
    796a:	cd b7       	in	r28, 0x3d	; 61
    796c:	de b7       	in	r29, 0x3e	; 62
    796e:	89 83       	std	Y+1, r24	; 0x01
    7970:	9a 83       	std	Y+2, r25	; 0x02
    7972:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    7974:	89 81       	ldd	r24, Y+1	; 0x01
    7976:	9a 81       	ldd	r25, Y+2	; 0x02
    7978:	4b 81       	ldd	r20, Y+3	; 0x03
    797a:	68 ed       	ldi	r22, 0xD8	; 216
    797c:	0e 94 d7 54 	call	0xa9ae	; 0xa9ae <protected_write_io>
}
    7980:	00 00       	nop
    7982:	23 96       	adiw	r28, 0x03	; 3
    7984:	cd bf       	out	0x3d, r28	; 61
    7986:	de bf       	out	0x3e, r29	; 62
    7988:	df 91       	pop	r29
    798a:	cf 91       	pop	r28
    798c:	08 95       	ret

0000798e <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    798e:	cf 93       	push	r28
    7990:	df 93       	push	r29
    7992:	cd b7       	in	r28, 0x3d	; 61
    7994:	de b7       	in	r29, 0x3e	; 62
	ccp_write_io((void *)&(CLKCTRL.XOSC32KCTRLA),CLKCTRL_CSUT_1K_gc /* 1k cycles */
			| 1 << CLKCTRL_ENABLE_bp   /* Enable: enabled */
			| 1 << CLKCTRL_RUNSTDBY_bp /* Run standby: enabled */
			| 1 << CLKCTRL_SEL_bp      /* Select external clock: XTAL32K1 input only */
			| 0 << CLKCTRL_LPMODE_bp /* Low-Power Mode: disabled */);
    7996:	65 e8       	ldi	r22, 0x85	; 133
    7998:	8c e7       	ldi	r24, 0x7C	; 124
    799a:	90 e0       	ldi	r25, 0x00	; 0
    799c:	0e 94 b1 3c 	call	0x7962	; 0x7962 <ccp_write_io>
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 1 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    79a0:	65 e2       	ldi	r22, 0x25	; 37
    79a2:	88 e6       	ldi	r24, 0x68	; 104
    79a4:	90 e0       	ldi	r25, 0x00	; 0
    79a6:	0e 94 b1 3c 	call	0x7962	; 0x7962 <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    79aa:	80 e0       	ldi	r24, 0x00	; 0
}
    79ac:	df 91       	pop	r29
    79ae:	cf 91       	pop	r28
    79b0:	08 95       	ret

000079b2 <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    79b2:	cf 93       	push	r28
    79b4:	df 93       	push	r29
    79b6:	cd b7       	in	r28, 0x3d	; 61
    79b8:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    79ba:	78 94       	sei

	return 0;
    79bc:	80 e0       	ldi	r24, 0x00	; 0
}
    79be:	df 91       	pop	r29
    79c0:	cf 91       	pop	r28
    79c2:	08 95       	ret

000079c4 <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    79c4:	cf 93       	push	r28
    79c6:	df 93       	push	r29
    79c8:	cd b7       	in	r28, 0x3d	; 61
    79ca:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_VDD_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.500V Internal Voltage Reference for DAC */
    79cc:	80 ea       	ldi	r24, 0xA0	; 160
    79ce:	90 e0       	ldi	r25, 0x00	; 0
    79d0:	23 e0       	ldi	r18, 0x03	; 3
    79d2:	fc 01       	movw	r30, r24
    79d4:	22 83       	std	Z+2, r18	; 0x02
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    79d6:	6a e0       	ldi	r22, 0x0A	; 10
    79d8:	70 e0       	ldi	r23, 0x00	; 0
    79da:	80 e0       	ldi	r24, 0x00	; 0
    79dc:	90 e0       	ldi	r25, 0x00	; 0
    79de:	0e 94 63 65 	call	0xcac6	; 0xcac6 <util_delay_ms>
    79e2:	88 23       	and	r24, r24
    79e4:	09 f0       	breq	.+2      	; 0x79e8 <_ZL9VREF_initv+0x24>
    79e6:	f7 cf       	rjmp	.-18     	; 0x79d6 <_ZL9VREF_initv+0x12>
}
    79e8:	00 00       	nop
    79ea:	df 91       	pop	r29
    79ec:	cf 91       	pop	r28
    79ee:	08 95       	ret

000079f0 <_Z9DAC0_initv>:

void DAC0_init(void)
{
    79f0:	cf 93       	push	r28
    79f2:	df 93       	push	r29
    79f4:	cd b7       	in	r28, 0x3d	; 61
    79f6:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    79f8:	0e 94 e2 3c 	call	0x79c4	; 0x79c4 <_ZL9VREF_initv>
	
    /* Disable digital input buffer */
    PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    79fc:	80 e6       	ldi	r24, 0x60	; 96
    79fe:	94 e0       	ldi	r25, 0x04	; 4
    7a00:	20 e6       	ldi	r18, 0x60	; 96
    7a02:	34 e0       	ldi	r19, 0x04	; 4
    7a04:	f9 01       	movw	r30, r18
    7a06:	26 89       	ldd	r18, Z+22	; 0x16
    7a08:	28 7f       	andi	r18, 0xF8	; 248
    7a0a:	fc 01       	movw	r30, r24
    7a0c:	26 8b       	std	Z+22, r18	; 0x16
    PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    7a0e:	80 e6       	ldi	r24, 0x60	; 96
    7a10:	94 e0       	ldi	r25, 0x04	; 4
    7a12:	20 e6       	ldi	r18, 0x60	; 96
    7a14:	34 e0       	ldi	r19, 0x04	; 4
    7a16:	f9 01       	movw	r30, r18
    7a18:	26 89       	ldd	r18, Z+22	; 0x16
    7a1a:	24 60       	ori	r18, 0x04	; 4
    7a1c:	fc 01       	movw	r30, r24
    7a1e:	26 8b       	std	Z+22, r18	; 0x16
    /* Disable pull-up resistor */
    PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;   
    7a20:	80 e6       	ldi	r24, 0x60	; 96
    7a22:	94 e0       	ldi	r25, 0x04	; 4
    7a24:	20 e6       	ldi	r18, 0x60	; 96
    7a26:	34 e0       	ldi	r19, 0x04	; 4
    7a28:	f9 01       	movw	r30, r18
    7a2a:	26 89       	ldd	r18, Z+22	; 0x16
    7a2c:	27 7f       	andi	r18, 0xF7	; 247
    7a2e:	fc 01       	movw	r30, r24
    7a30:	26 8b       	std	Z+22, r18	; 0x16
    DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    7a32:	80 ea       	ldi	r24, 0xA0	; 160
    7a34:	96 e0       	ldi	r25, 0x06	; 6
               | DAC_OUTEN_bm           /* Enable output buffer */
               | DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    7a36:	21 ec       	ldi	r18, 0xC1	; 193
    7a38:	fc 01       	movw	r30, r24
    7a3a:	20 83       	st	Z, r18
// 	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
// 	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
// 	| DAC_OUTEN_bm;           /* Enable output buffer */
// 	
// 	DAC0_setVal(DAC_DEFAULT_VALUE);
}
    7a3c:	00 00       	nop
    7a3e:	df 91       	pop	r29
    7a40:	cf 91       	pop	r28
    7a42:	08 95       	ret

00007a44 <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    7a44:	cf 93       	push	r28
    7a46:	df 93       	push	r29
    7a48:	00 d0       	rcall	.+0      	; 0x7a4a <_Z11DAC0_setValj+0x6>
    7a4a:	cd b7       	in	r28, 0x3d	; 61
    7a4c:	de b7       	in	r29, 0x3e	; 62
    7a4e:	89 83       	std	Y+1, r24	; 0x01
    7a50:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    7a52:	80 ea       	ldi	r24, 0xA0	; 160
    7a54:	96 e0       	ldi	r25, 0x06	; 6
    7a56:	29 81       	ldd	r18, Y+1	; 0x01
    7a58:	22 95       	swap	r18
    7a5a:	22 0f       	add	r18, r18
    7a5c:	22 0f       	add	r18, r18
    7a5e:	20 7c       	andi	r18, 0xC0	; 192
    7a60:	fc 01       	movw	r30, r24
    7a62:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    7a64:	80 ea       	ldi	r24, 0xA0	; 160
    7a66:	96 e0       	ldi	r25, 0x06	; 6
    7a68:	29 81       	ldd	r18, Y+1	; 0x01
    7a6a:	3a 81       	ldd	r19, Y+2	; 0x02
    7a6c:	36 95       	lsr	r19
    7a6e:	27 95       	ror	r18
    7a70:	36 95       	lsr	r19
    7a72:	27 95       	ror	r18
    7a74:	fc 01       	movw	r30, r24
    7a76:	23 83       	std	Z+3, r18	; 0x03
}
    7a78:	00 00       	nop
    7a7a:	0f 90       	pop	r0
    7a7c:	0f 90       	pop	r0
    7a7e:	df 91       	pop	r29
    7a80:	cf 91       	pop	r28
    7a82:	08 95       	ret

00007a84 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    7a84:	cf 93       	push	r28
    7a86:	df 93       	push	r29
    7a88:	00 d0       	rcall	.+0      	; 0x7a8a <mcu_init+0x6>
    7a8a:	00 d0       	rcall	.+0      	; 0x7a8c <mcu_init+0x8>
    7a8c:	cd b7       	in	r28, 0x3d	; 61
    7a8e:	de b7       	in	r29, 0x3e	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7a90:	19 82       	std	Y+1, r1	; 0x01
    7a92:	89 81       	ldd	r24, Y+1	; 0x01
    7a94:	88 30       	cpi	r24, 0x08	; 8
    7a96:	98 f4       	brcc	.+38     	; 0x7abe <mcu_init+0x3a>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7a98:	89 81       	ldd	r24, Y+1	; 0x01
    7a9a:	88 2f       	mov	r24, r24
    7a9c:	90 e0       	ldi	r25, 0x00	; 0
    7a9e:	80 5f       	subi	r24, 0xF0	; 240
    7aa0:	9b 4f       	sbci	r25, 0xFB	; 251
    7aa2:	29 81       	ldd	r18, Y+1	; 0x01
    7aa4:	22 2f       	mov	r18, r18
    7aa6:	30 e0       	ldi	r19, 0x00	; 0
    7aa8:	20 5f       	subi	r18, 0xF0	; 240
    7aaa:	3b 4f       	sbci	r19, 0xFB	; 251
    7aac:	f9 01       	movw	r30, r18
    7aae:	20 81       	ld	r18, Z
    7ab0:	28 60       	ori	r18, 0x08	; 8
    7ab2:	fc 01       	movw	r30, r24
    7ab4:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7ab6:	89 81       	ldd	r24, Y+1	; 0x01
    7ab8:	8f 5f       	subi	r24, 0xFF	; 255
    7aba:	89 83       	std	Y+1, r24	; 0x01
    7abc:	ea cf       	rjmp	.-44     	; 0x7a92 <mcu_init+0xe>

// 	for (uint8_t i = 0; i < 8; i++) {
// 		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
// 	}

	for (uint8_t i = 0; i < 8; i++) {
    7abe:	1a 82       	std	Y+2, r1	; 0x02
    7ac0:	8a 81       	ldd	r24, Y+2	; 0x02
    7ac2:	88 30       	cpi	r24, 0x08	; 8
    7ac4:	98 f4       	brcc	.+38     	; 0x7aec <mcu_init+0x68>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7ac6:	8a 81       	ldd	r24, Y+2	; 0x02
    7ac8:	88 2f       	mov	r24, r24
    7aca:	90 e0       	ldi	r25, 0x00	; 0
    7acc:	80 5b       	subi	r24, 0xB0	; 176
    7ace:	9b 4f       	sbci	r25, 0xFB	; 251
    7ad0:	2a 81       	ldd	r18, Y+2	; 0x02
    7ad2:	22 2f       	mov	r18, r18
    7ad4:	30 e0       	ldi	r19, 0x00	; 0
    7ad6:	20 5b       	subi	r18, 0xB0	; 176
    7ad8:	3b 4f       	sbci	r19, 0xFB	; 251
    7ada:	f9 01       	movw	r30, r18
    7adc:	20 81       	ld	r18, Z
    7ade:	28 60       	ori	r18, 0x08	; 8
    7ae0:	fc 01       	movw	r30, r24
    7ae2:	20 83       	st	Z, r18

// 	for (uint8_t i = 0; i < 8; i++) {
// 		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
// 	}

	for (uint8_t i = 0; i < 8; i++) {
    7ae4:	8a 81       	ldd	r24, Y+2	; 0x02
    7ae6:	8f 5f       	subi	r24, 0xFF	; 255
    7ae8:	8a 83       	std	Y+2, r24	; 0x02
    7aea:	ea cf       	rjmp	.-44     	; 0x7ac0 <mcu_init+0x3c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7aec:	1b 82       	std	Y+3, r1	; 0x03
    7aee:	8b 81       	ldd	r24, Y+3	; 0x03
    7af0:	88 30       	cpi	r24, 0x08	; 8
    7af2:	98 f4       	brcc	.+38     	; 0x7b1a <mcu_init+0x96>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7af4:	8b 81       	ldd	r24, Y+3	; 0x03
    7af6:	88 2f       	mov	r24, r24
    7af8:	90 e0       	ldi	r25, 0x00	; 0
    7afa:	80 59       	subi	r24, 0x90	; 144
    7afc:	9b 4f       	sbci	r25, 0xFB	; 251
    7afe:	2b 81       	ldd	r18, Y+3	; 0x03
    7b00:	22 2f       	mov	r18, r18
    7b02:	30 e0       	ldi	r19, 0x00	; 0
    7b04:	20 59       	subi	r18, 0x90	; 144
    7b06:	3b 4f       	sbci	r19, 0xFB	; 251
    7b08:	f9 01       	movw	r30, r18
    7b0a:	20 81       	ld	r18, Z
    7b0c:	28 60       	ori	r18, 0x08	; 8
    7b0e:	fc 01       	movw	r30, r24
    7b10:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b12:	8b 81       	ldd	r24, Y+3	; 0x03
    7b14:	8f 5f       	subi	r24, 0xFF	; 255
    7b16:	8b 83       	std	Y+3, r24	; 0x03
    7b18:	ea cf       	rjmp	.-44     	; 0x7aee <mcu_init+0x6a>

// 	for (uint8_t i = 0; i < 8; i++) {
// 		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
// 	}

	for (uint8_t i = 0; i < 8; i++) {
    7b1a:	1c 82       	std	Y+4, r1	; 0x04
    7b1c:	8c 81       	ldd	r24, Y+4	; 0x04
    7b1e:	88 30       	cpi	r24, 0x08	; 8
    7b20:	98 f4       	brcc	.+38     	; 0x7b48 <mcu_init+0xc4>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7b22:	8c 81       	ldd	r24, Y+4	; 0x04
    7b24:	88 2f       	mov	r24, r24
    7b26:	90 e0       	ldi	r25, 0x00	; 0
    7b28:	80 55       	subi	r24, 0x50	; 80
    7b2a:	9b 4f       	sbci	r25, 0xFB	; 251
    7b2c:	2c 81       	ldd	r18, Y+4	; 0x04
    7b2e:	22 2f       	mov	r18, r18
    7b30:	30 e0       	ldi	r19, 0x00	; 0
    7b32:	20 55       	subi	r18, 0x50	; 80
    7b34:	3b 4f       	sbci	r19, 0xFB	; 251
    7b36:	f9 01       	movw	r30, r18
    7b38:	20 81       	ld	r18, Z
    7b3a:	28 60       	ori	r18, 0x08	; 8
    7b3c:	fc 01       	movw	r30, r24
    7b3e:	20 83       	st	Z, r18

// 	for (uint8_t i = 0; i < 8; i++) {
// 		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
// 	}

	for (uint8_t i = 0; i < 8; i++) {
    7b40:	8c 81       	ldd	r24, Y+4	; 0x04
    7b42:	8f 5f       	subi	r24, 0xFF	; 255
    7b44:	8c 83       	std	Y+4, r24	; 0x04
    7b46:	ea cf       	rjmp	.-44     	; 0x7b1c <mcu_init+0x98>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    7b48:	00 00       	nop
    7b4a:	24 96       	adiw	r28, 0x04	; 4
    7b4c:	cd bf       	out	0x3d, r28	; 61
    7b4e:	de bf       	out	0x3e, r29	; 62
    7b50:	df 91       	pop	r29
    7b52:	cf 91       	pop	r28
    7b54:	08 95       	ret

00007b56 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    7b56:	cf 93       	push	r28
    7b58:	df 93       	push	r29
    7b5a:	cd b7       	in	r28, 0x3d	; 61
    7b5c:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    7b5e:	0e 94 42 3d 	call	0x7a84	; 0x7a84 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    7b62:	0e 94 c7 3c 	call	0x798e	; 0x798e <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    7b66:	0e 94 0f 65 	call	0xca1e	; 0xca1e <TIMERB_init>
	RTC_init(); /* Start 1-second timer and interrupts */
    7b6a:	0e 94 dc 54 	call	0xa9b8	; 0xa9b8 <RTC_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    7b6e:	0e 94 d9 3c 	call	0x79b2	; 0x79b2 <CPUINT_init>
	BINIO_init();
    7b72:	0e 94 d2 3a 	call	0x75a4	; 0x75a4 <_Z10BINIO_initv>
// 	LED_set_RED_dir(PORT_DIR_OUT);
// 	LED_set_RED_level(OFF);
// 	LED_set_GREEN_dir(PORT_DIR_OUT);
// 	LED_set_GREEN_level(OFF);

	SLPCTRL_init();
    7b76:	0e 94 eb 64 	call	0xc9d6	; 0xc9d6 <SLPCTRL_init>
	
	DAC0_init();
    7b7a:	0e 94 f8 3c 	call	0x79f0	; 0x79f0 <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    7b7e:	40 e0       	ldi	r20, 0x00	; 0
    7b80:	60 e8       	ldi	r22, 0x80	; 128
    7b82:	75 e2       	ldi	r23, 0x25	; 37
    7b84:	80 e0       	ldi	r24, 0x00	; 0
    7b86:	90 e0       	ldi	r25, 0x00	; 0
    7b88:	0e 94 d2 4f 	call	0x9fa4	; 0x9fa4 <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    7b8c:	41 e0       	ldi	r20, 0x01	; 1
    7b8e:	60 e8       	ldi	r22, 0x80	; 128
    7b90:	75 e2       	ldi	r23, 0x25	; 37
    7b92:	80 e0       	ldi	r24, 0x00	; 0
    7b94:	90 e0       	ldi	r25, 0x00	; 0
    7b96:	0e 94 1b 59 	call	0xb236	; 0xb236 <serialbus_init>

	BOD_init();
    7b9a:	0e 94 3e 3b 	call	0x767c	; 0x767c <BOD_init>
}
    7b9e:	00 00       	nop
    7ba0:	df 91       	pop	r29
    7ba2:	cf 91       	pop	r28
    7ba4:	08 95       	ret

00007ba6 <_ZN13EepromManagerC1Ev>:
extern volatile int16_t g_intra_cycle_delay_time;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    7ba6:	cf 93       	push	r28
    7ba8:	df 93       	push	r29
    7baa:	00 d0       	rcall	.+0      	; 0x7bac <_ZN13EepromManagerC1Ev+0x6>
    7bac:	cd b7       	in	r28, 0x3d	; 61
    7bae:	de b7       	in	r29, 0x3e	; 62
    7bb0:	89 83       	std	Y+1, r24	; 0x01
    7bb2:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    7bb4:	00 00       	nop
    7bb6:	0f 90       	pop	r0
    7bb8:	0f 90       	pop	r0
    7bba:	df 91       	pop	r29
    7bbc:	cf 91       	pop	r28
    7bbe:	08 95       	ret

00007bc0 <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    7bc0:	cf 93       	push	r28
    7bc2:	df 93       	push	r29
    7bc4:	00 d0       	rcall	.+0      	; 0x7bc6 <_ZN13EepromManagerD1Ev+0x6>
    7bc6:	cd b7       	in	r28, 0x3d	; 61
    7bc8:	de b7       	in	r29, 0x3e	; 62
    7bca:	89 83       	std	Y+1, r24	; 0x01
    7bcc:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    7bce:	00 00       	nop
    7bd0:	0f 90       	pop	r0
    7bd2:	0f 90       	pop	r0
    7bd4:	df 91       	pop	r29
    7bd6:	cf 91       	pop	r28
    7bd8:	08 95       	ret

00007bda <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    7bda:	cf 93       	push	r28
    7bdc:	df 93       	push	r29
    7bde:	00 d0       	rcall	.+0      	; 0x7be0 <_Z21avr_eeprom_write_bytejh+0x6>
    7be0:	1f 92       	push	r1
    7be2:	cd b7       	in	r28, 0x3d	; 61
    7be4:	de b7       	in	r29, 0x3e	; 62
    7be6:	89 83       	std	Y+1, r24	; 0x01
    7be8:	9a 83       	std	Y+2, r25	; 0x02
    7bea:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    7bec:	80 e0       	ldi	r24, 0x00	; 0
    7bee:	90 e1       	ldi	r25, 0x10	; 16
    7bf0:	fc 01       	movw	r30, r24
    7bf2:	82 81       	ldd	r24, Z+2	; 0x02
    7bf4:	88 2f       	mov	r24, r24
    7bf6:	90 e0       	ldi	r25, 0x00	; 0
    7bf8:	82 70       	andi	r24, 0x02	; 2
    7bfa:	99 27       	eor	r25, r25
    7bfc:	21 e0       	ldi	r18, 0x01	; 1
    7bfe:	89 2b       	or	r24, r25
    7c00:	09 f4       	brne	.+2      	; 0x7c04 <_Z21avr_eeprom_write_bytejh+0x2a>
    7c02:	20 e0       	ldi	r18, 0x00	; 0
    7c04:	22 23       	and	r18, r18
    7c06:	09 f0       	breq	.+2      	; 0x7c0a <_Z21avr_eeprom_write_bytejh+0x30>
    7c08:	f1 cf       	rjmp	.-30     	; 0x7bec <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    7c0a:	8d e9       	ldi	r24, 0x9D	; 157
    7c0c:	93 e1       	ldi	r25, 0x13	; 19
    7c0e:	84 bf       	out	0x34, r24	; 52
    7c10:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    7c14:	89 81       	ldd	r24, Y+1	; 0x01
    7c16:	9a 81       	ldd	r25, Y+2	; 0x02
    7c18:	9c 5e       	subi	r25, 0xEC	; 236
    7c1a:	2b 81       	ldd	r18, Y+3	; 0x03
    7c1c:	fc 01       	movw	r30, r24
    7c1e:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    7c20:	8d e9       	ldi	r24, 0x9D	; 157
    7c22:	90 e0       	ldi	r25, 0x00	; 0
    7c24:	84 bf       	out	0x34, r24	; 52
    7c26:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    7c2a:	00 00       	nop
    7c2c:	23 96       	adiw	r28, 0x03	; 3
    7c2e:	cd bf       	out	0x3d, r28	; 61
    7c30:	de bf       	out	0x3e, r29	; 62
    7c32:	df 91       	pop	r29
    7c34:	cf 91       	pop	r28
    7c36:	08 95       	ret

00007c38 <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    7c38:	cf 93       	push	r28
    7c3a:	df 93       	push	r29
    7c3c:	00 d0       	rcall	.+0      	; 0x7c3e <_Z21avr_eeprom_write_wordjj+0x6>
    7c3e:	00 d0       	rcall	.+0      	; 0x7c40 <_Z21avr_eeprom_write_wordjj+0x8>
    7c40:	cd b7       	in	r28, 0x3d	; 61
    7c42:	de b7       	in	r29, 0x3e	; 62
    7c44:	89 83       	std	Y+1, r24	; 0x01
    7c46:	9a 83       	std	Y+2, r25	; 0x02
    7c48:	6b 83       	std	Y+3, r22	; 0x03
    7c4a:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    7c4c:	80 e0       	ldi	r24, 0x00	; 0
    7c4e:	90 e1       	ldi	r25, 0x10	; 16
    7c50:	fc 01       	movw	r30, r24
    7c52:	82 81       	ldd	r24, Z+2	; 0x02
    7c54:	88 2f       	mov	r24, r24
    7c56:	90 e0       	ldi	r25, 0x00	; 0
    7c58:	82 70       	andi	r24, 0x02	; 2
    7c5a:	99 27       	eor	r25, r25
    7c5c:	21 e0       	ldi	r18, 0x01	; 1
    7c5e:	89 2b       	or	r24, r25
    7c60:	09 f4       	brne	.+2      	; 0x7c64 <_Z21avr_eeprom_write_wordjj+0x2c>
    7c62:	20 e0       	ldi	r18, 0x00	; 0
    7c64:	22 23       	and	r18, r18
    7c66:	09 f0       	breq	.+2      	; 0x7c6a <_Z21avr_eeprom_write_wordjj+0x32>
    7c68:	f1 cf       	rjmp	.-30     	; 0x7c4c <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    7c6a:	8d e9       	ldi	r24, 0x9D	; 157
    7c6c:	93 e1       	ldi	r25, 0x13	; 19
    7c6e:	84 bf       	out	0x34, r24	; 52
    7c70:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    7c74:	89 81       	ldd	r24, Y+1	; 0x01
    7c76:	9a 81       	ldd	r25, Y+2	; 0x02
    7c78:	9c 5e       	subi	r25, 0xEC	; 236
    7c7a:	9c 01       	movw	r18, r24
    7c7c:	8b 81       	ldd	r24, Y+3	; 0x03
    7c7e:	9c 81       	ldd	r25, Y+4	; 0x04
    7c80:	f9 01       	movw	r30, r18
    7c82:	80 83       	st	Z, r24
    7c84:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    7c86:	8d e9       	ldi	r24, 0x9D	; 157
    7c88:	90 e0       	ldi	r25, 0x00	; 0
    7c8a:	84 bf       	out	0x34, r24	; 52
    7c8c:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    7c90:	00 00       	nop
    7c92:	24 96       	adiw	r28, 0x04	; 4
    7c94:	cd bf       	out	0x3d, r28	; 61
    7c96:	de bf       	out	0x3e, r29	; 62
    7c98:	df 91       	pop	r29
    7c9a:	cf 91       	pop	r28
    7c9c:	08 95       	ret

00007c9e <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    7c9e:	cf 93       	push	r28
    7ca0:	df 93       	push	r29
    7ca2:	cd b7       	in	r28, 0x3d	; 61
    7ca4:	de b7       	in	r29, 0x3e	; 62
    7ca6:	26 97       	sbiw	r28, 0x06	; 6
    7ca8:	cd bf       	out	0x3d, r28	; 61
    7caa:	de bf       	out	0x3e, r29	; 62
    7cac:	89 83       	std	Y+1, r24	; 0x01
    7cae:	9a 83       	std	Y+2, r25	; 0x02
    7cb0:	4b 83       	std	Y+3, r20	; 0x03
    7cb2:	5c 83       	std	Y+4, r21	; 0x04
    7cb4:	6d 83       	std	Y+5, r22	; 0x05
    7cb6:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    7cb8:	80 e0       	ldi	r24, 0x00	; 0
    7cba:	90 e1       	ldi	r25, 0x10	; 16
    7cbc:	fc 01       	movw	r30, r24
    7cbe:	82 81       	ldd	r24, Z+2	; 0x02
    7cc0:	88 2f       	mov	r24, r24
    7cc2:	90 e0       	ldi	r25, 0x00	; 0
    7cc4:	82 70       	andi	r24, 0x02	; 2
    7cc6:	99 27       	eor	r25, r25
    7cc8:	21 e0       	ldi	r18, 0x01	; 1
    7cca:	89 2b       	or	r24, r25
    7ccc:	09 f4       	brne	.+2      	; 0x7cd0 <_Z22avr_eeprom_write_dwordjm+0x32>
    7cce:	20 e0       	ldi	r18, 0x00	; 0
    7cd0:	22 23       	and	r18, r18
    7cd2:	09 f0       	breq	.+2      	; 0x7cd6 <_Z22avr_eeprom_write_dwordjm+0x38>
    7cd4:	f1 cf       	rjmp	.-30     	; 0x7cb8 <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    7cd6:	8d e9       	ldi	r24, 0x9D	; 157
    7cd8:	93 e1       	ldi	r25, 0x13	; 19
    7cda:	84 bf       	out	0x34, r24	; 52
    7cdc:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    7ce0:	89 81       	ldd	r24, Y+1	; 0x01
    7ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    7ce4:	9c 5e       	subi	r25, 0xEC	; 236
    7ce6:	9c 01       	movw	r18, r24
    7ce8:	8b 81       	ldd	r24, Y+3	; 0x03
    7cea:	9c 81       	ldd	r25, Y+4	; 0x04
    7cec:	ad 81       	ldd	r26, Y+5	; 0x05
    7cee:	be 81       	ldd	r27, Y+6	; 0x06
    7cf0:	f9 01       	movw	r30, r18
    7cf2:	80 83       	st	Z, r24
    7cf4:	91 83       	std	Z+1, r25	; 0x01
    7cf6:	a2 83       	std	Z+2, r26	; 0x02
    7cf8:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    7cfa:	8d e9       	ldi	r24, 0x9D	; 157
    7cfc:	90 e0       	ldi	r25, 0x00	; 0
    7cfe:	84 bf       	out	0x34, r24	; 52
    7d00:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    7d04:	00 00       	nop
    7d06:	26 96       	adiw	r28, 0x06	; 6
    7d08:	cd bf       	out	0x3d, r28	; 61
    7d0a:	de bf       	out	0x3e, r29	; 62
    7d0c:	df 91       	pop	r29
    7d0e:	cf 91       	pop	r28
    7d10:	08 95       	ret

00007d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    7d12:	cf 93       	push	r28
    7d14:	df 93       	push	r29
    7d16:	cd b7       	in	r28, 0x3d	; 61
    7d18:	de b7       	in	r29, 0x3e	; 62
    7d1a:	65 97       	sbiw	r28, 0x15	; 21
    7d1c:	cd bf       	out	0x3d, r28	; 61
    7d1e:	de bf       	out	0x3e, r29	; 62
    7d20:	89 8b       	std	Y+17, r24	; 0x11
    7d22:	9a 8b       	std	Y+18, r25	; 0x12
    7d24:	6b 8b       	std	Y+19, r22	; 0x13
    7d26:	4c 8b       	std	Y+20, r20	; 0x14
    7d28:	5d 8b       	std	Y+21, r21	; 0x15
	if(!val)
    7d2a:	8c 89       	ldd	r24, Y+20	; 0x14
    7d2c:	9d 89       	ldd	r25, Y+21	; 0x15
    7d2e:	89 2b       	or	r24, r25
    7d30:	09 f4       	brne	.+2      	; 0x7d34 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x22>
    7d32:	4e c1       	rjmp	.+668    	; 0x7fd0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2be>
	{
		return;
	}

	switch(v)
    7d34:	8b 89       	ldd	r24, Y+19	; 0x13
    7d36:	88 2f       	mov	r24, r24
    7d38:	90 e0       	ldi	r25, 0x00	; 0
    7d3a:	09 2e       	mov	r0, r25
    7d3c:	00 0c       	add	r0, r0
    7d3e:	aa 0b       	sbc	r26, r26
    7d40:	bb 0b       	sbc	r27, r27
    7d42:	40 e0       	ldi	r20, 0x00	; 0
    7d44:	50 e0       	ldi	r21, 0x00	; 0
    7d46:	21 e5       	ldi	r18, 0x51	; 81
    7d48:	30 e0       	ldi	r19, 0x00	; 0
    7d4a:	84 1b       	sub	r24, r20
    7d4c:	95 0b       	sbc	r25, r21
    7d4e:	28 17       	cp	r18, r24
    7d50:	39 07       	cpc	r19, r25
    7d52:	08 f4       	brcc	.+2      	; 0x7d56 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x44>
    7d54:	3f c1       	rjmp	.+638    	; 0x7fd4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c2>
    7d56:	8d 59       	subi	r24, 0x9D	; 157
    7d58:	9f 4f       	sbci	r25, 0xFF	; 255
    7d5a:	fc 01       	movw	r30, r24
    7d5c:	0c 94 4d 73 	jmp	0xe69a	; 0xe69a <__tablejump2__>
	{
		case Frequency:
		{
			avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    7d60:	8c 89       	ldd	r24, Y+20	; 0x14
    7d62:	9d 89       	ldd	r25, Y+21	; 0x15
    7d64:	fc 01       	movw	r30, r24
    7d66:	80 81       	ld	r24, Z
    7d68:	91 81       	ldd	r25, Z+1	; 0x01
    7d6a:	a2 81       	ldd	r26, Z+2	; 0x02
    7d6c:	b3 81       	ldd	r27, Z+3	; 0x03
    7d6e:	ac 01       	movw	r20, r24
    7d70:	bd 01       	movw	r22, r26
    7d72:	80 e4       	ldi	r24, 0x40	; 64
    7d74:	90 e0       	ldi	r25, 0x00	; 0
    7d76:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    7d7a:	2d c1       	rjmp	.+602    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case RTTY_offset:
		{
			avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    7d7c:	8c 89       	ldd	r24, Y+20	; 0x14
    7d7e:	9d 89       	ldd	r25, Y+21	; 0x15
    7d80:	fc 01       	movw	r30, r24
    7d82:	80 81       	ld	r24, Z
    7d84:	91 81       	ldd	r25, Z+1	; 0x01
    7d86:	a2 81       	ldd	r26, Z+2	; 0x02
    7d88:	b3 81       	ldd	r27, Z+3	; 0x03
    7d8a:	ac 01       	movw	r20, r24
    7d8c:	bd 01       	movw	r22, r26
    7d8e:	84 e4       	ldi	r24, 0x44	; 68
    7d90:	90 e0       	ldi	r25, 0x00	; 0
    7d92:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    7d96:	1f c1       	rjmp	.+574    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case RF_Power:
		{
			avr_eeprom_write_word(RF_Power, *(uint32_t*)val);			
    7d98:	8c 89       	ldd	r24, Y+20	; 0x14
    7d9a:	9d 89       	ldd	r25, Y+21	; 0x15
    7d9c:	fc 01       	movw	r30, r24
    7d9e:	80 81       	ld	r24, Z
    7da0:	91 81       	ldd	r25, Z+1	; 0x01
    7da2:	a2 81       	ldd	r26, Z+2	; 0x02
    7da4:	b3 81       	ldd	r27, Z+3	; 0x03
    7da6:	bc 01       	movw	r22, r24
    7da8:	88 e4       	ldi	r24, 0x48	; 72
    7daa:	90 e0       	ldi	r25, 0x00	; 0
    7dac:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    7db0:	12 c1       	rjmp	.+548    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case StationID_text:
		{
			char* char_addr = (char*)val;
    7db2:	8c 89       	ldd	r24, Y+20	; 0x14
    7db4:	9d 89       	ldd	r25, Y+21	; 0x15
    7db6:	89 83       	std	Y+1, r24	; 0x01
    7db8:	9a 83       	std	Y+2, r25	; 0x02
			char c = *char_addr++;
    7dba:	89 81       	ldd	r24, Y+1	; 0x01
    7dbc:	9a 81       	ldd	r25, Y+2	; 0x02
    7dbe:	9c 01       	movw	r18, r24
    7dc0:	2f 5f       	subi	r18, 0xFF	; 255
    7dc2:	3f 4f       	sbci	r19, 0xFF	; 255
    7dc4:	29 83       	std	Y+1, r18	; 0x01
    7dc6:	3a 83       	std	Y+2, r19	; 0x02
    7dc8:	fc 01       	movw	r30, r24
    7dca:	80 81       	ld	r24, Z
    7dcc:	8b 83       	std	Y+3, r24	; 0x03
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    7dce:	8a e0       	ldi	r24, 0x0A	; 10
    7dd0:	90 e0       	ldi	r25, 0x00	; 0
    7dd2:	8c 83       	std	Y+4, r24	; 0x04
    7dd4:	9d 83       	std	Y+5, r25	; 0x05

			while(c)
    7dd6:	8b 81       	ldd	r24, Y+3	; 0x03
    7dd8:	88 23       	and	r24, r24
    7dda:	a9 f0       	breq	.+42     	; 0x7e06 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf4>
			{
				avr_eeprom_write_byte(j++, c);
    7ddc:	8c 81       	ldd	r24, Y+4	; 0x04
    7dde:	9d 81       	ldd	r25, Y+5	; 0x05
    7de0:	9c 01       	movw	r18, r24
    7de2:	2f 5f       	subi	r18, 0xFF	; 255
    7de4:	3f 4f       	sbci	r19, 0xFF	; 255
    7de6:	2c 83       	std	Y+4, r18	; 0x04
    7de8:	3d 83       	std	Y+5, r19	; 0x05
    7dea:	6b 81       	ldd	r22, Y+3	; 0x03
    7dec:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    7df0:	89 81       	ldd	r24, Y+1	; 0x01
    7df2:	9a 81       	ldd	r25, Y+2	; 0x02
    7df4:	9c 01       	movw	r18, r24
    7df6:	2f 5f       	subi	r18, 0xFF	; 255
    7df8:	3f 4f       	sbci	r19, 0xFF	; 255
    7dfa:	29 83       	std	Y+1, r18	; 0x01
    7dfc:	3a 83       	std	Y+2, r19	; 0x02
    7dfe:	fc 01       	movw	r30, r24
    7e00:	80 81       	ld	r24, Z
    7e02:	8b 83       	std	Y+3, r24	; 0x03
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
    7e04:	e8 cf       	rjmp	.-48     	; 0x7dd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc4>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    7e06:	8c 81       	ldd	r24, Y+4	; 0x04
    7e08:	9d 81       	ldd	r25, Y+5	; 0x05
    7e0a:	60 e0       	ldi	r22, 0x00	; 0
    7e0c:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7e10:	e2 c0       	rjmp	.+452    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Pattern_text:
		{
			char* char_addr = (char*)val;
    7e12:	8c 89       	ldd	r24, Y+20	; 0x14
    7e14:	9d 89       	ldd	r25, Y+21	; 0x15
    7e16:	8e 83       	std	Y+6, r24	; 0x06
    7e18:	9f 83       	std	Y+7, r25	; 0x07
			char c = *char_addr++;
    7e1a:	8e 81       	ldd	r24, Y+6	; 0x06
    7e1c:	9f 81       	ldd	r25, Y+7	; 0x07
    7e1e:	9c 01       	movw	r18, r24
    7e20:	2f 5f       	subi	r18, 0xFF	; 255
    7e22:	3f 4f       	sbci	r19, 0xFF	; 255
    7e24:	2e 83       	std	Y+6, r18	; 0x06
    7e26:	3f 83       	std	Y+7, r19	; 0x07
    7e28:	fc 01       	movw	r30, r24
    7e2a:	80 81       	ld	r24, Z
    7e2c:	88 87       	std	Y+8, r24	; 0x08
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;
    7e2e:	8f e1       	ldi	r24, 0x1F	; 31
    7e30:	90 e0       	ldi	r25, 0x00	; 0
    7e32:	89 87       	std	Y+9, r24	; 0x09
    7e34:	9a 87       	std	Y+10, r25	; 0x0a

			while(c)
    7e36:	88 85       	ldd	r24, Y+8	; 0x08
    7e38:	88 23       	and	r24, r24
    7e3a:	a9 f0       	breq	.+42     	; 0x7e66 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x154>
			{
				avr_eeprom_write_byte(j++, c);
    7e3c:	89 85       	ldd	r24, Y+9	; 0x09
    7e3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    7e40:	9c 01       	movw	r18, r24
    7e42:	2f 5f       	subi	r18, 0xFF	; 255
    7e44:	3f 4f       	sbci	r19, 0xFF	; 255
    7e46:	29 87       	std	Y+9, r18	; 0x09
    7e48:	3a 87       	std	Y+10, r19	; 0x0a
    7e4a:	68 85       	ldd	r22, Y+8	; 0x08
    7e4c:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    7e50:	8e 81       	ldd	r24, Y+6	; 0x06
    7e52:	9f 81       	ldd	r25, Y+7	; 0x07
    7e54:	9c 01       	movw	r18, r24
    7e56:	2f 5f       	subi	r18, 0xFF	; 255
    7e58:	3f 4f       	sbci	r19, 0xFF	; 255
    7e5a:	2e 83       	std	Y+6, r18	; 0x06
    7e5c:	3f 83       	std	Y+7, r19	; 0x07
    7e5e:	fc 01       	movw	r30, r24
    7e60:	80 81       	ld	r24, Z
    7e62:	88 87       	std	Y+8, r24	; 0x08
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;

			while(c)
    7e64:	e8 cf       	rjmp	.-48     	; 0x7e36 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x124>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    7e66:	89 85       	ldd	r24, Y+9	; 0x09
    7e68:	9a 85       	ldd	r25, Y+10	; 0x0a
    7e6a:	60 e0       	ldi	r22, 0x00	; 0
    7e6c:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7e70:	b2 c0       	rjmp	.+356    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case UnlockCode:
		{
			uint8_t* uint8_addr = (uint8_t*)val;
    7e72:	8c 89       	ldd	r24, Y+20	; 0x14
    7e74:	9d 89       	ldd	r25, Y+21	; 0x15
    7e76:	8b 87       	std	Y+11, r24	; 0x0b
    7e78:	9c 87       	std	Y+12, r25	; 0x0c
			uint8_t c = *uint8_addr++;
    7e7a:	8b 85       	ldd	r24, Y+11	; 0x0b
    7e7c:	9c 85       	ldd	r25, Y+12	; 0x0c
    7e7e:	9c 01       	movw	r18, r24
    7e80:	2f 5f       	subi	r18, 0xFF	; 255
    7e82:	3f 4f       	sbci	r19, 0xFF	; 255
    7e84:	2b 87       	std	Y+11, r18	; 0x0b
    7e86:	3c 87       	std	Y+12, r19	; 0x0c
    7e88:	fc 01       	movw	r30, r24
    7e8a:	80 81       	ld	r24, Z
    7e8c:	8d 87       	std	Y+13, r24	; 0x0d
			int i = 0;
    7e8e:	1f 86       	std	Y+15, r1	; 0x0f
    7e90:	18 8a       	std	Y+16, r1	; 0x10
			uint8_t j = (uint8_t)UnlockCode;
    7e92:	84 e3       	ldi	r24, 0x34	; 52
    7e94:	8e 87       	std	Y+14, r24	; 0x0e
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    7e96:	8d 85       	ldd	r24, Y+13	; 0x0d
    7e98:	88 23       	and	r24, r24
    7e9a:	c1 f0       	breq	.+48     	; 0x7ecc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1ba>
    7e9c:	8f 85       	ldd	r24, Y+15	; 0x0f
    7e9e:	98 89       	ldd	r25, Y+16	; 0x10
    7ea0:	08 97       	sbiw	r24, 0x08	; 8
    7ea2:	a4 f4       	brge	.+40     	; 0x7ecc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1ba>
			{
				avr_eeprom_write_byte(j++, c);
    7ea4:	8e 85       	ldd	r24, Y+14	; 0x0e
    7ea6:	91 e0       	ldi	r25, 0x01	; 1
    7ea8:	98 0f       	add	r25, r24
    7eaa:	9e 87       	std	Y+14, r25	; 0x0e
    7eac:	88 2f       	mov	r24, r24
    7eae:	90 e0       	ldi	r25, 0x00	; 0
    7eb0:	6d 85       	ldd	r22, Y+13	; 0x0d
    7eb2:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
				c = *uint8_addr++;
    7eb6:	8b 85       	ldd	r24, Y+11	; 0x0b
    7eb8:	9c 85       	ldd	r25, Y+12	; 0x0c
    7eba:	9c 01       	movw	r18, r24
    7ebc:	2f 5f       	subi	r18, 0xFF	; 255
    7ebe:	3f 4f       	sbci	r19, 0xFF	; 255
    7ec0:	2b 87       	std	Y+11, r18	; 0x0b
    7ec2:	3c 87       	std	Y+12, r19	; 0x0c
    7ec4:	fc 01       	movw	r30, r24
    7ec6:	80 81       	ld	r24, Z
    7ec8:	8d 87       	std	Y+13, r24	; 0x0d
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    7eca:	e5 cf       	rjmp	.-54     	; 0x7e96 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x184>
			{
				avr_eeprom_write_byte(j++, c);
				c = *uint8_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    7ecc:	8e 85       	ldd	r24, Y+14	; 0x0e
    7ece:	88 2f       	mov	r24, r24
    7ed0:	90 e0       	ldi	r25, 0x00	; 0
    7ed2:	60 e0       	ldi	r22, 0x00	; 0
    7ed4:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7ed8:	7e c0       	rjmp	.+252    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Id_codespeed:
		{
			avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    7eda:	8c 89       	ldd	r24, Y+20	; 0x14
    7edc:	9d 89       	ldd	r25, Y+21	; 0x15
    7ede:	fc 01       	movw	r30, r24
    7ee0:	80 81       	ld	r24, Z
    7ee2:	68 2f       	mov	r22, r24
    7ee4:	8d e3       	ldi	r24, 0x3D	; 61
    7ee6:	90 e0       	ldi	r25, 0x00	; 0
    7ee8:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7eec:	74 c0       	rjmp	.+232    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Fox_setting:
		{
			avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    7eee:	8c 89       	ldd	r24, Y+20	; 0x14
    7ef0:	9d 89       	ldd	r25, Y+21	; 0x15
    7ef2:	fc 01       	movw	r30, r24
    7ef4:	80 81       	ld	r24, Z
    7ef6:	68 2f       	mov	r22, r24
    7ef8:	8e e3       	ldi	r24, 0x3E	; 62
    7efa:	90 e0       	ldi	r25, 0x00	; 0
    7efc:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7f00:	6a c0       	rjmp	.+212    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Event_start_epoch:
		{
			avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    7f02:	8c 89       	ldd	r24, Y+20	; 0x14
    7f04:	9d 89       	ldd	r25, Y+21	; 0x15
    7f06:	fc 01       	movw	r30, r24
    7f08:	80 81       	ld	r24, Z
    7f0a:	91 81       	ldd	r25, Z+1	; 0x01
    7f0c:	a2 81       	ldd	r26, Z+2	; 0x02
    7f0e:	b3 81       	ldd	r27, Z+3	; 0x03
    7f10:	ac 01       	movw	r20, r24
    7f12:	bd 01       	movw	r22, r26
    7f14:	82 e0       	ldi	r24, 0x02	; 2
    7f16:	90 e0       	ldi	r25, 0x00	; 0
    7f18:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    7f1c:	5c c0       	rjmp	.+184    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Event_finish_epoch:
		{
			avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    7f1e:	8c 89       	ldd	r24, Y+20	; 0x14
    7f20:	9d 89       	ldd	r25, Y+21	; 0x15
    7f22:	fc 01       	movw	r30, r24
    7f24:	80 81       	ld	r24, Z
    7f26:	91 81       	ldd	r25, Z+1	; 0x01
    7f28:	a2 81       	ldd	r26, Z+2	; 0x02
    7f2a:	b3 81       	ldd	r27, Z+3	; 0x03
    7f2c:	ac 01       	movw	r20, r24
    7f2e:	bd 01       	movw	r22, r26
    7f30:	86 e0       	ldi	r24, 0x06	; 6
    7f32:	90 e0       	ldi	r25, 0x00	; 0
    7f34:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    7f38:	4e c0       	rjmp	.+156    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Utc_offset:
		{
			avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    7f3a:	8c 89       	ldd	r24, Y+20	; 0x14
    7f3c:	9d 89       	ldd	r25, Y+21	; 0x15
    7f3e:	fc 01       	movw	r30, r24
    7f40:	80 81       	ld	r24, Z
    7f42:	68 2f       	mov	r22, r24
    7f44:	8f e3       	ldi	r24, 0x3F	; 63
    7f46:	90 e0       	ldi	r25, 0x00	; 0
    7f48:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7f4c:	44 c0       	rjmp	.+136    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case Pattern_Code_Speed:
		{
			avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
    7f4e:	8c 89       	ldd	r24, Y+20	; 0x14
    7f50:	9d 89       	ldd	r25, Y+21	; 0x15
    7f52:	fc 01       	movw	r30, r24
    7f54:	80 81       	ld	r24, Z
    7f56:	68 2f       	mov	r22, r24
    7f58:	8a e4       	ldi	r24, 0x4A	; 74
    7f5a:	90 e0       	ldi	r25, 0x00	; 0
    7f5c:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7f60:	3a c0       	rjmp	.+116    	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Off_Air_Seconds:
		{
			avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
    7f62:	8c 89       	ldd	r24, Y+20	; 0x14
    7f64:	9d 89       	ldd	r25, Y+21	; 0x15
    7f66:	fc 01       	movw	r30, r24
    7f68:	80 81       	ld	r24, Z
    7f6a:	91 81       	ldd	r25, Z+1	; 0x01
    7f6c:	bc 01       	movw	r22, r24
    7f6e:	8b e4       	ldi	r24, 0x4B	; 75
    7f70:	90 e0       	ldi	r25, 0x00	; 0
    7f72:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    7f76:	2f c0       	rjmp	.+94     	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case On_Air_Seconds:
		{
			avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
    7f78:	8c 89       	ldd	r24, Y+20	; 0x14
    7f7a:	9d 89       	ldd	r25, Y+21	; 0x15
    7f7c:	fc 01       	movw	r30, r24
    7f7e:	80 81       	ld	r24, Z
    7f80:	91 81       	ldd	r25, Z+1	; 0x01
    7f82:	bc 01       	movw	r22, r24
    7f84:	8d e4       	ldi	r24, 0x4D	; 77
    7f86:	90 e0       	ldi	r25, 0x00	; 0
    7f88:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    7f8c:	24 c0       	rjmp	.+72     	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case ID_Period_Seconds:
		{
			avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
    7f8e:	8c 89       	ldd	r24, Y+20	; 0x14
    7f90:	9d 89       	ldd	r25, Y+21	; 0x15
    7f92:	fc 01       	movw	r30, r24
    7f94:	80 81       	ld	r24, Z
    7f96:	91 81       	ldd	r25, Z+1	; 0x01
    7f98:	bc 01       	movw	r22, r24
    7f9a:	8f e4       	ldi	r24, 0x4F	; 79
    7f9c:	90 e0       	ldi	r25, 0x00	; 0
    7f9e:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    7fa2:	19 c0       	rjmp	.+50     	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case Intra_Cycle_Delay_Seconds:
		{
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
    7fa4:	8c 89       	ldd	r24, Y+20	; 0x14
    7fa6:	9d 89       	ldd	r25, Y+21	; 0x15
    7fa8:	fc 01       	movw	r30, r24
    7faa:	80 81       	ld	r24, Z
    7fac:	91 81       	ldd	r25, Z+1	; 0x01
    7fae:	bc 01       	movw	r22, r24
    7fb0:	81 e5       	ldi	r24, 0x51	; 81
    7fb2:	90 e0       	ldi	r25, 0x00	; 0
    7fb4:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    7fb8:	0e c0       	rjmp	.+28     	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Eeprom_initialization_flag:
		{
			avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    7fba:	8c 89       	ldd	r24, Y+20	; 0x14
    7fbc:	9d 89       	ldd	r25, Y+21	; 0x15
    7fbe:	fc 01       	movw	r30, r24
    7fc0:	80 81       	ld	r24, Z
    7fc2:	91 81       	ldd	r25, Z+1	; 0x01
    7fc4:	bc 01       	movw	r22, r24
    7fc6:	80 e0       	ldi	r24, 0x00	; 0
    7fc8:	90 e0       	ldi	r25, 0x00	; 0
    7fca:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    7fce:	03 c0       	rjmp	.+6      	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    7fd0:	00 00       	nop
    7fd2:	01 c0       	rjmp	.+2      	; 0x7fd6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		default:
		{

		}
		break;
    7fd4:	00 00       	nop
	}
}
    7fd6:	65 96       	adiw	r28, 0x15	; 21
    7fd8:	cd bf       	out	0x3d, r28	; 61
    7fda:	de bf       	out	0x3e, r29	; 62
    7fdc:	df 91       	pop	r29
    7fde:	cf 91       	pop	r28
    7fe0:	08 95       	ret

00007fe2 <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    7fe2:	0f 93       	push	r16
    7fe4:	1f 93       	push	r17
    7fe6:	cf 93       	push	r28
    7fe8:	df 93       	push	r29
    7fea:	00 d0       	rcall	.+0      	; 0x7fec <_ZN13EepromManager13saveAllEEPROMEv+0xa>
    7fec:	00 d0       	rcall	.+0      	; 0x7fee <_ZN13EepromManager13saveAllEEPROMEv+0xc>
    7fee:	cd b7       	in	r28, 0x3d	; 61
    7ff0:	de b7       	in	r29, 0x3e	; 62
    7ff2:	8b 83       	std	Y+3, r24	; 0x03
    7ff4:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t i;
	
	if(g_id_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    7ff6:	8d e3       	ldi	r24, 0x3D	; 61
    7ff8:	90 e0       	ldi	r25, 0x00	; 0
    7ffa:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    7ffe:	28 2f       	mov	r18, r24
    8000:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    8004:	81 e0       	ldi	r24, 0x01	; 1
    8006:	29 17       	cp	r18, r25
    8008:	09 f4       	brne	.+2      	; 0x800c <__RODATA_PM_OFFSET__+0xc>
    800a:	80 e0       	ldi	r24, 0x00	; 0
    800c:	88 23       	and	r24, r24
    800e:	39 f0       	breq	.+14     	; 0x801e <__RODATA_PM_OFFSET__+0x1e>
	{
		updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);
    8010:	8b 81       	ldd	r24, Y+3	; 0x03
    8012:	9c 81       	ldd	r25, Y+4	; 0x04
    8014:	4b e0       	ldi	r20, 0x0B	; 11
    8016:	50 e4       	ldi	r21, 0x40	; 64
    8018:	6d e3       	ldi	r22, 0x3D	; 61
    801a:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_fox != eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)))
    801e:	8e e3       	ldi	r24, 0x3E	; 62
    8020:	90 e0       	ldi	r25, 0x00	; 0
    8022:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    8026:	28 2f       	mov	r18, r24
    8028:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <g_fox>
    802c:	81 e0       	ldi	r24, 0x01	; 1
    802e:	29 17       	cp	r18, r25
    8030:	09 f4       	brne	.+2      	; 0x8034 <__RODATA_PM_OFFSET__+0x34>
    8032:	80 e0       	ldi	r24, 0x00	; 0
    8034:	88 23       	and	r24, r24
    8036:	39 f0       	breq	.+14     	; 0x8046 <__RODATA_PM_OFFSET__+0x46>
	{
		updateEEPROMVar(Fox_setting, (void*)&g_fox);
    8038:	8b 81       	ldd	r24, Y+3	; 0x03
    803a:	9c 81       	ldd	r25, Y+4	; 0x04
    803c:	47 e1       	ldi	r20, 0x17	; 23
    803e:	50 e4       	ldi	r21, 0x40	; 64
    8040:	6e e3       	ldi	r22, 0x3E	; 62
    8042:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_start_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    8046:	82 e0       	ldi	r24, 0x02	; 2
    8048:	90 e0       	ldi	r25, 0x00	; 0
    804a:	0e 94 12 7c 	call	0xf824	; 0xf824 <eeprom_read_dword>
    804e:	9b 01       	movw	r18, r22
    8050:	ac 01       	movw	r20, r24
    8052:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    8056:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    805a:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    805e:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    8062:	61 e0       	ldi	r22, 0x01	; 1
    8064:	28 17       	cp	r18, r24
    8066:	39 07       	cpc	r19, r25
    8068:	4a 07       	cpc	r20, r26
    806a:	5b 07       	cpc	r21, r27
    806c:	09 f4       	brne	.+2      	; 0x8070 <__RODATA_PM_OFFSET__+0x70>
    806e:	60 e0       	ldi	r22, 0x00	; 0
    8070:	66 23       	and	r22, r22
    8072:	39 f0       	breq	.+14     	; 0x8082 <__RODATA_PM_OFFSET__+0x82>
	{
		updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    8074:	8b 81       	ldd	r24, Y+3	; 0x03
    8076:	9c 81       	ldd	r25, Y+4	; 0x04
    8078:	47 e1       	ldi	r20, 0x17	; 23
    807a:	57 e4       	ldi	r21, 0x47	; 71
    807c:	62 e0       	ldi	r22, 0x02	; 2
    807e:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_finish_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    8082:	86 e0       	ldi	r24, 0x06	; 6
    8084:	90 e0       	ldi	r25, 0x00	; 0
    8086:	0e 94 12 7c 	call	0xf824	; 0xf824 <eeprom_read_dword>
    808a:	9b 01       	movw	r18, r22
    808c:	ac 01       	movw	r20, r24
    808e:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    8092:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    8096:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    809a:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    809e:	61 e0       	ldi	r22, 0x01	; 1
    80a0:	28 17       	cp	r18, r24
    80a2:	39 07       	cpc	r19, r25
    80a4:	4a 07       	cpc	r20, r26
    80a6:	5b 07       	cpc	r21, r27
    80a8:	09 f4       	brne	.+2      	; 0x80ac <__RODATA_PM_OFFSET__+0xac>
    80aa:	60 e0       	ldi	r22, 0x00	; 0
    80ac:	66 23       	and	r22, r22
    80ae:	39 f0       	breq	.+14     	; 0x80be <__RODATA_PM_OFFSET__+0xbe>
	{
		updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    80b0:	8b 81       	ldd	r24, Y+3	; 0x03
    80b2:	9c 81       	ldd	r25, Y+4	; 0x04
    80b4:	4b e1       	ldi	r20, 0x1B	; 27
    80b6:	57 e4       	ldi	r21, 0x47	; 71
    80b8:	66 e0       	ldi	r22, 0x06	; 6
    80ba:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    80be:	80 91 3d 47 	lds	r24, 0x473D	; 0x80473d <g_utc_offset>
    80c2:	08 2f       	mov	r16, r24
    80c4:	88 0f       	add	r24, r24
    80c6:	11 0b       	sbc	r17, r17
    80c8:	8f e3       	ldi	r24, 0x3F	; 63
    80ca:	90 e0       	ldi	r25, 0x00	; 0
    80cc:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    80d0:	88 2f       	mov	r24, r24
    80d2:	90 e0       	ldi	r25, 0x00	; 0
    80d4:	21 e0       	ldi	r18, 0x01	; 1
    80d6:	08 17       	cp	r16, r24
    80d8:	19 07       	cpc	r17, r25
    80da:	09 f4       	brne	.+2      	; 0x80de <__RODATA_PM_OFFSET__+0xde>
    80dc:	20 e0       	ldi	r18, 0x00	; 0
    80de:	22 23       	and	r18, r18
    80e0:	39 f0       	breq	.+14     	; 0x80f0 <__RODATA_PM_OFFSET__+0xf0>
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    80e2:	8b 81       	ldd	r24, Y+3	; 0x03
    80e4:	9c 81       	ldd	r25, Y+4	; 0x04
    80e6:	4d e3       	ldi	r20, 0x3D	; 61
    80e8:	57 e4       	ldi	r21, 0x47	; 71
    80ea:	6f e3       	ldi	r22, 0x3F	; 63
    80ec:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    80f0:	19 82       	std	Y+1, r1	; 0x01
    80f2:	1a 82       	std	Y+2, r1	; 0x02
    80f4:	89 81       	ldd	r24, Y+1	; 0x01
    80f6:	9a 81       	ldd	r25, Y+2	; 0x02
    80f8:	44 97       	sbiw	r24, 0x14	; 20
    80fa:	e8 f4       	brcc	.+58     	; 0x8136 <__RODATA_PM_OFFSET__+0x136>
	{
		if(g_messages_text[STATION_ID][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i]))))
    80fc:	89 81       	ldd	r24, Y+1	; 0x01
    80fe:	9a 81       	ldd	r25, Y+2	; 0x02
    8100:	82 50       	subi	r24, 0x02	; 2
    8102:	99 4b       	sbci	r25, 0xB9	; 185
    8104:	fc 01       	movw	r30, r24
    8106:	10 81       	ld	r17, Z
    8108:	89 81       	ldd	r24, Y+1	; 0x01
    810a:	9a 81       	ldd	r25, Y+2	; 0x02
    810c:	0a 96       	adiw	r24, 0x0a	; 10
    810e:	80 50       	subi	r24, 0x00	; 0
    8110:	90 40       	sbci	r25, 0x00	; 0
    8112:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    8116:	18 17       	cp	r17, r24
    8118:	41 f0       	breq	.+16     	; 0x812a <__RODATA_PM_OFFSET__+0x12a>
		{
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    811a:	8b 81       	ldd	r24, Y+3	; 0x03
    811c:	9c 81       	ldd	r25, Y+4	; 0x04
    811e:	4e ef       	ldi	r20, 0xFE	; 254
    8120:	56 e4       	ldi	r21, 0x46	; 70
    8122:	6a e0       	ldi	r22, 0x0A	; 10
    8124:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    8128:	06 c0       	rjmp	.+12     	; 0x8136 <__RODATA_PM_OFFSET__+0x136>
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    812a:	89 81       	ldd	r24, Y+1	; 0x01
    812c:	9a 81       	ldd	r25, Y+2	; 0x02
    812e:	01 96       	adiw	r24, 0x01	; 1
    8130:	89 83       	std	Y+1, r24	; 0x01
    8132:	9a 83       	std	Y+2, r25	; 0x02
    8134:	df cf       	rjmp	.-66     	; 0x80f4 <__RODATA_PM_OFFSET__+0xf4>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8136:	19 82       	std	Y+1, r1	; 0x01
    8138:	1a 82       	std	Y+2, r1	; 0x02
    813a:	89 81       	ldd	r24, Y+1	; 0x01
    813c:	9a 81       	ldd	r25, Y+2	; 0x02
    813e:	44 97       	sbiw	r24, 0x14	; 20
    8140:	e8 f4       	brcc	.+58     	; 0x817c <__RODATA_PM_OFFSET__+0x17c>
	{
		if(g_messages_text[PATTERN_TEXT][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i]))))
    8142:	89 81       	ldd	r24, Y+1	; 0x01
    8144:	9a 81       	ldd	r25, Y+2	; 0x02
    8146:	87 51       	subi	r24, 0x17	; 23
    8148:	99 4b       	sbci	r25, 0xB9	; 185
    814a:	fc 01       	movw	r30, r24
    814c:	10 81       	ld	r17, Z
    814e:	89 81       	ldd	r24, Y+1	; 0x01
    8150:	9a 81       	ldd	r25, Y+2	; 0x02
    8152:	4f 96       	adiw	r24, 0x1f	; 31
    8154:	80 50       	subi	r24, 0x00	; 0
    8156:	90 40       	sbci	r25, 0x00	; 0
    8158:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    815c:	18 17       	cp	r17, r24
    815e:	41 f0       	breq	.+16     	; 0x8170 <__RODATA_PM_OFFSET__+0x170>
		{
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
    8160:	8b 81       	ldd	r24, Y+3	; 0x03
    8162:	9c 81       	ldd	r25, Y+4	; 0x04
    8164:	49 ee       	ldi	r20, 0xE9	; 233
    8166:	56 e4       	ldi	r21, 0x46	; 70
    8168:	6f e1       	ldi	r22, 0x1F	; 31
    816a:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    816e:	06 c0       	rjmp	.+12     	; 0x817c <__RODATA_PM_OFFSET__+0x17c>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8170:	89 81       	ldd	r24, Y+1	; 0x01
    8172:	9a 81       	ldd	r25, Y+2	; 0x02
    8174:	01 96       	adiw	r24, 0x01	; 1
    8176:	89 83       	std	Y+1, r24	; 0x01
    8178:	9a 83       	std	Y+2, r25	; 0x02
    817a:	df cf       	rjmp	.-66     	; 0x813a <__RODATA_PM_OFFSET__+0x13a>
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    817c:	19 82       	std	Y+1, r1	; 0x01
    817e:	1a 82       	std	Y+2, r1	; 0x02
    8180:	89 81       	ldd	r24, Y+1	; 0x01
    8182:	9a 81       	ldd	r25, Y+2	; 0x02
    8184:	08 97       	sbiw	r24, 0x08	; 8
    8186:	e8 f4       	brcc	.+58     	; 0x81c2 <__RODATA_PM_OFFSET__+0x1c2>
	{
		if(g_unlockCode[i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i]))))
    8188:	89 81       	ldd	r24, Y+1	; 0x01
    818a:	9a 81       	ldd	r25, Y+2	; 0x02
    818c:	82 5c       	subi	r24, 0xC2	; 194
    818e:	98 4b       	sbci	r25, 0xB8	; 184
    8190:	fc 01       	movw	r30, r24
    8192:	10 81       	ld	r17, Z
    8194:	89 81       	ldd	r24, Y+1	; 0x01
    8196:	9a 81       	ldd	r25, Y+2	; 0x02
    8198:	c4 96       	adiw	r24, 0x34	; 52
    819a:	80 50       	subi	r24, 0x00	; 0
    819c:	90 40       	sbci	r25, 0x00	; 0
    819e:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    81a2:	18 17       	cp	r17, r24
    81a4:	41 f0       	breq	.+16     	; 0x81b6 <__RODATA_PM_OFFSET__+0x1b6>
		{
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    81a6:	8b 81       	ldd	r24, Y+3	; 0x03
    81a8:	9c 81       	ldd	r25, Y+4	; 0x04
    81aa:	4e e3       	ldi	r20, 0x3E	; 62
    81ac:	57 e4       	ldi	r21, 0x47	; 71
    81ae:	64 e3       	ldi	r22, 0x34	; 52
    81b0:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    81b4:	06 c0       	rjmp	.+12     	; 0x81c2 <__RODATA_PM_OFFSET__+0x1c2>
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    81b6:	89 81       	ldd	r24, Y+1	; 0x01
    81b8:	9a 81       	ldd	r25, Y+2	; 0x02
    81ba:	01 96       	adiw	r24, 0x01	; 1
    81bc:	89 83       	std	Y+1, r24	; 0x01
    81be:	9a 83       	std	Y+2, r25	; 0x02
    81c0:	df cf       	rjmp	.-66     	; 0x8180 <__RODATA_PM_OFFSET__+0x180>
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
			break;
		}
	}
	
	if(g_80m_frequency != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    81c2:	80 e4       	ldi	r24, 0x40	; 64
    81c4:	90 e0       	ldi	r25, 0x00	; 0
    81c6:	0e 94 12 7c 	call	0xf824	; 0xf824 <eeprom_read_dword>
    81ca:	9b 01       	movw	r18, r22
    81cc:	ac 01       	movw	r20, r24
    81ce:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_80m_frequency>
    81d2:	90 91 2d 40 	lds	r25, 0x402D	; 0x80402d <g_80m_frequency+0x1>
    81d6:	a0 91 2e 40 	lds	r26, 0x402E	; 0x80402e <g_80m_frequency+0x2>
    81da:	b0 91 2f 40 	lds	r27, 0x402F	; 0x80402f <g_80m_frequency+0x3>
    81de:	28 17       	cp	r18, r24
    81e0:	39 07       	cpc	r19, r25
    81e2:	4a 07       	cpc	r20, r26
    81e4:	5b 07       	cpc	r21, r27
    81e6:	39 f0       	breq	.+14     	; 0x81f6 <__RODATA_PM_OFFSET__+0x1f6>
	{
		updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    81e8:	8b 81       	ldd	r24, Y+3	; 0x03
    81ea:	9c 81       	ldd	r25, Y+4	; 0x04
    81ec:	4c e2       	ldi	r20, 0x2C	; 44
    81ee:	50 e4       	ldi	r21, 0x40	; 64
    81f0:	60 e4       	ldi	r22, 0x40	; 64
    81f2:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_rtty_offset != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    81f6:	84 e4       	ldi	r24, 0x44	; 68
    81f8:	90 e0       	ldi	r25, 0x00	; 0
    81fa:	0e 94 12 7c 	call	0xf824	; 0xf824 <eeprom_read_dword>
    81fe:	9b 01       	movw	r18, r22
    8200:	ac 01       	movw	r20, r24
    8202:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <g_rtty_offset>
    8206:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <g_rtty_offset+0x1>
    820a:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <g_rtty_offset+0x2>
    820e:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <g_rtty_offset+0x3>
    8212:	28 17       	cp	r18, r24
    8214:	39 07       	cpc	r19, r25
    8216:	4a 07       	cpc	r20, r26
    8218:	5b 07       	cpc	r21, r27
    821a:	39 f0       	breq	.+14     	; 0x822a <__RODATA_PM_OFFSET__+0x22a>
	{
		updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    821c:	8b 81       	ldd	r24, Y+3	; 0x03
    821e:	9c 81       	ldd	r25, Y+4	; 0x04
    8220:	42 e3       	ldi	r20, 0x32	; 50
    8222:	50 e4       	ldi	r21, 0x40	; 64
    8224:	64 e4       	ldi	r22, 0x44	; 68
    8226:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_80m_power_level_mW != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    822a:	88 e4       	ldi	r24, 0x48	; 72
    822c:	90 e0       	ldi	r25, 0x00	; 0
    822e:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    8232:	9c 01       	movw	r18, r24
    8234:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_80m_power_level_mW>
    8238:	90 91 31 40 	lds	r25, 0x4031	; 0x804031 <g_80m_power_level_mW+0x1>
    823c:	28 17       	cp	r18, r24
    823e:	39 07       	cpc	r19, r25
    8240:	39 f0       	breq	.+14     	; 0x8250 <__RODATA_PM_OFFSET__+0x250>
	{
		updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    8242:	8b 81       	ldd	r24, Y+3	; 0x03
    8244:	9c 81       	ldd	r25, Y+4	; 0x04
    8246:	40 e3       	ldi	r20, 0x30	; 48
    8248:	50 e4       	ldi	r21, 0x40	; 64
    824a:	68 e4       	ldi	r22, 0x48	; 72
    824c:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_pattern_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
    8250:	8a e4       	ldi	r24, 0x4A	; 74
    8252:	90 e0       	ldi	r25, 0x00	; 0
    8254:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    8258:	28 2f       	mov	r18, r24
    825a:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    825e:	81 e0       	ldi	r24, 0x01	; 1
    8260:	29 17       	cp	r18, r25
    8262:	09 f4       	brne	.+2      	; 0x8266 <__RODATA_PM_OFFSET__+0x266>
    8264:	80 e0       	ldi	r24, 0x00	; 0
    8266:	88 23       	and	r24, r24
    8268:	39 f0       	breq	.+14     	; 0x8278 <__RODATA_PM_OFFSET__+0x278>
	{
		updateEEPROMVar(Pattern_Code_Speed, (void*)&g_pattern_codespeed);
    826a:	8b 81       	ldd	r24, Y+3	; 0x03
    826c:	9c 81       	ldd	r25, Y+4	; 0x04
    826e:	4c e0       	ldi	r20, 0x0C	; 12
    8270:	50 e4       	ldi	r21, 0x40	; 64
    8272:	6a e4       	ldi	r22, 0x4A	; 74
    8274:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}

	if(g_off_air_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
    8278:	8b e4       	ldi	r24, 0x4B	; 75
    827a:	90 e0       	ldi	r25, 0x00	; 0
    827c:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    8280:	9c 01       	movw	r18, r24
    8282:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    8286:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    828a:	41 e0       	ldi	r20, 0x01	; 1
    828c:	28 17       	cp	r18, r24
    828e:	39 07       	cpc	r19, r25
    8290:	09 f4       	brne	.+2      	; 0x8294 <__RODATA_PM_OFFSET__+0x294>
    8292:	40 e0       	ldi	r20, 0x00	; 0
    8294:	44 23       	and	r20, r20
    8296:	39 f0       	breq	.+14     	; 0x82a6 <__RODATA_PM_OFFSET__+0x2a6>
	{
		updateEEPROMVar(Off_Air_Seconds, (void*)&g_off_air_seconds);
    8298:	8b 81       	ldd	r24, Y+3	; 0x03
    829a:	9c 81       	ldd	r25, Y+4	; 0x04
    829c:	4f e0       	ldi	r20, 0x0F	; 15
    829e:	50 e4       	ldi	r21, 0x40	; 64
    82a0:	6b e4       	ldi	r22, 0x4B	; 75
    82a2:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_on_air_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
    82a6:	8d e4       	ldi	r24, 0x4D	; 77
    82a8:	90 e0       	ldi	r25, 0x00	; 0
    82aa:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    82ae:	9c 01       	movw	r18, r24
    82b0:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    82b4:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    82b8:	41 e0       	ldi	r20, 0x01	; 1
    82ba:	28 17       	cp	r18, r24
    82bc:	39 07       	cpc	r19, r25
    82be:	09 f4       	brne	.+2      	; 0x82c2 <__RODATA_PM_OFFSET__+0x2c2>
    82c0:	40 e0       	ldi	r20, 0x00	; 0
    82c2:	44 23       	and	r20, r20
    82c4:	39 f0       	breq	.+14     	; 0x82d4 <__RODATA_PM_OFFSET__+0x2d4>
	{
		updateEEPROMVar(On_Air_Seconds, (void*)&g_on_air_seconds);
    82c6:	8b 81       	ldd	r24, Y+3	; 0x03
    82c8:	9c 81       	ldd	r25, Y+4	; 0x04
    82ca:	4d e0       	ldi	r20, 0x0D	; 13
    82cc:	50 e4       	ldi	r21, 0x40	; 64
    82ce:	6d e4       	ldi	r22, 0x4D	; 77
    82d0:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_ID_period_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
    82d4:	8f e4       	ldi	r24, 0x4F	; 79
    82d6:	90 e0       	ldi	r25, 0x00	; 0
    82d8:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    82dc:	9c 01       	movw	r18, r24
    82de:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    82e2:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    82e6:	41 e0       	ldi	r20, 0x01	; 1
    82e8:	28 17       	cp	r18, r24
    82ea:	39 07       	cpc	r19, r25
    82ec:	09 f4       	brne	.+2      	; 0x82f0 <__RODATA_PM_OFFSET__+0x2f0>
    82ee:	40 e0       	ldi	r20, 0x00	; 0
    82f0:	44 23       	and	r20, r20
    82f2:	39 f0       	breq	.+14     	; 0x8302 <__RODATA_PM_OFFSET__+0x302>
	{
		updateEEPROMVar(ID_Period_Seconds, (void*)&g_ID_period_seconds);
    82f4:	8b 81       	ldd	r24, Y+3	; 0x03
    82f6:	9c 81       	ldd	r25, Y+4	; 0x04
    82f8:	41 e1       	ldi	r20, 0x11	; 17
    82fa:	50 e4       	ldi	r21, 0x40	; 64
    82fc:	6f e4       	ldi	r22, 0x4F	; 79
    82fe:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_intra_cycle_delay_time != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
    8302:	81 e5       	ldi	r24, 0x51	; 81
    8304:	90 e0       	ldi	r25, 0x00	; 0
    8306:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    830a:	9c 01       	movw	r18, r24
    830c:	80 91 15 47 	lds	r24, 0x4715	; 0x804715 <g_intra_cycle_delay_time>
    8310:	90 91 16 47 	lds	r25, 0x4716	; 0x804716 <g_intra_cycle_delay_time+0x1>
    8314:	41 e0       	ldi	r20, 0x01	; 1
    8316:	28 17       	cp	r18, r24
    8318:	39 07       	cpc	r19, r25
    831a:	09 f4       	brne	.+2      	; 0x831e <__RODATA_PM_OFFSET__+0x31e>
    831c:	40 e0       	ldi	r20, 0x00	; 0
    831e:	44 23       	and	r20, r20
    8320:	39 f0       	breq	.+14     	; 0x8330 <__RODATA_PM_OFFSET__+0x330>
	{
		updateEEPROMVar(Intra_Cycle_Delay_Seconds, (void*)&g_intra_cycle_delay_time);
    8322:	8b 81       	ldd	r24, Y+3	; 0x03
    8324:	9c 81       	ldd	r25, Y+4	; 0x04
    8326:	45 e1       	ldi	r20, 0x15	; 21
    8328:	57 e4       	ldi	r21, 0x47	; 71
    832a:	61 e5       	ldi	r22, 0x51	; 81
    832c:	0e 94 89 3e 	call	0x7d12	; 0x7d12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}	
}
    8330:	00 00       	nop
    8332:	24 96       	adiw	r28, 0x04	; 4
    8334:	cd bf       	out	0x3d, r28	; 61
    8336:	de bf       	out	0x3e, r29	; 62
    8338:	df 91       	pop	r29
    833a:	cf 91       	pop	r28
    833c:	1f 91       	pop	r17
    833e:	0f 91       	pop	r16
    8340:	08 95       	ret

00008342 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    8342:	cf 93       	push	r28
    8344:	df 93       	push	r29
    8346:	cd b7       	in	r28, 0x3d	; 61
    8348:	de b7       	in	r29, 0x3e	; 62
    834a:	ec 97       	sbiw	r28, 0x3c	; 60
    834c:	cd bf       	out	0x3d, r28	; 61
    834e:	de bf       	out	0x3e, r29	; 62
    8350:	8b af       	std	Y+59, r24	; 0x3b
    8352:	9c af       	std	Y+60, r25	; 0x3c
	bool failure = true;
    8354:	81 e0       	ldi	r24, 0x01	; 1
    8356:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    8358:	80 e0       	ldi	r24, 0x00	; 0
    835a:	90 e0       	ldi	r25, 0x00	; 0
    835c:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    8360:	8c 83       	std	Y+4, r24	; 0x04
    8362:	9d 83       	std	Y+5, r25	; 0x05

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    8364:	8c 81       	ldd	r24, Y+4	; 0x04
    8366:	9d 81       	ldd	r25, Y+5	; 0x05
    8368:	8e 3c       	cpi	r24, 0xCE	; 206
    836a:	91 05       	cpc	r25, r1
    836c:	09 f0       	breq	.+2      	; 0x8370 <_ZN13EepromManager11readNonVolsEv+0x2e>
    836e:	2e c2       	rjmp	.+1116   	; 0x87cc <_ZN13EepromManager11readNonVolsEv+0x48a>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    8370:	8d e3       	ldi	r24, 0x3D	; 61
    8372:	90 e0       	ldi	r25, 0x00	; 0
    8374:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    8378:	8e 83       	std	Y+6, r24	; 0x06
    837a:	85 e0       	ldi	r24, 0x05	; 5
    837c:	8f 83       	std	Y+7, r24	; 0x07
    837e:	84 e1       	ldi	r24, 0x14	; 20
    8380:	88 87       	std	Y+8, r24	; 0x08
    8382:	9e 81       	ldd	r25, Y+6	; 0x06
    8384:	88 85       	ldd	r24, Y+8	; 0x08
    8386:	89 17       	cp	r24, r25
    8388:	40 f0       	brcs	.+16     	; 0x839a <_ZN13EepromManager11readNonVolsEv+0x58>
    838a:	9e 81       	ldd	r25, Y+6	; 0x06
    838c:	8f 81       	ldd	r24, Y+7	; 0x07
    838e:	98 17       	cp	r25, r24
    8390:	10 f4       	brcc	.+4      	; 0x8396 <_ZN13EepromManager11readNonVolsEv+0x54>
    8392:	8f 81       	ldd	r24, Y+7	; 0x07
    8394:	03 c0       	rjmp	.+6      	; 0x839c <_ZN13EepromManager11readNonVolsEv+0x5a>
    8396:	8e 81       	ldd	r24, Y+6	; 0x06
    8398:	01 c0       	rjmp	.+2      	; 0x839c <_ZN13EepromManager11readNonVolsEv+0x5a>
    839a:	88 85       	ldd	r24, Y+8	; 0x08
    839c:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
    83a0:	8e e3       	ldi	r24, 0x3E	; 62
    83a2:	90 e0       	ldi	r25, 0x00	; 0
    83a4:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    83a8:	89 87       	std	Y+9, r24	; 0x09
    83aa:	1a 86       	std	Y+10, r1	; 0x0a
    83ac:	81 e1       	ldi	r24, 0x11	; 17
    83ae:	8b 87       	std	Y+11, r24	; 0x0b
    83b0:	99 85       	ldd	r25, Y+9	; 0x09
    83b2:	8b 85       	ldd	r24, Y+11	; 0x0b
    83b4:	89 17       	cp	r24, r25
    83b6:	40 f0       	brcs	.+16     	; 0x83c8 <_ZN13EepromManager11readNonVolsEv+0x86>
    83b8:	99 85       	ldd	r25, Y+9	; 0x09
    83ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    83bc:	98 17       	cp	r25, r24
    83be:	10 f4       	brcc	.+4      	; 0x83c4 <_ZN13EepromManager11readNonVolsEv+0x82>
    83c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    83c2:	03 c0       	rjmp	.+6      	; 0x83ca <_ZN13EepromManager11readNonVolsEv+0x88>
    83c4:	89 85       	ldd	r24, Y+9	; 0x09
    83c6:	01 c0       	rjmp	.+2      	; 0x83ca <_ZN13EepromManager11readNonVolsEv+0x88>
    83c8:	8b 85       	ldd	r24, Y+11	; 0x0b
    83ca:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    83ce:	82 e0       	ldi	r24, 0x02	; 2
    83d0:	90 e0       	ldi	r25, 0x00	; 0
    83d2:	0e 94 12 7c 	call	0xf824	; 0xf824 <eeprom_read_dword>
    83d6:	dc 01       	movw	r26, r24
    83d8:	cb 01       	movw	r24, r22
    83da:	80 93 17 47 	sts	0x4717, r24	; 0x804717 <g_event_start_epoch>
    83de:	90 93 18 47 	sts	0x4718, r25	; 0x804718 <g_event_start_epoch+0x1>
    83e2:	a0 93 19 47 	sts	0x4719, r26	; 0x804719 <g_event_start_epoch+0x2>
    83e6:	b0 93 1a 47 	sts	0x471A, r27	; 0x80471a <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    83ea:	86 e0       	ldi	r24, 0x06	; 6
    83ec:	90 e0       	ldi	r25, 0x00	; 0
    83ee:	0e 94 12 7c 	call	0xf824	; 0xf824 <eeprom_read_dword>
    83f2:	dc 01       	movw	r26, r24
    83f4:	cb 01       	movw	r24, r22
    83f6:	80 93 1b 47 	sts	0x471B, r24	; 0x80471b <g_event_finish_epoch>
    83fa:	90 93 1c 47 	sts	0x471C, r25	; 0x80471c <g_event_finish_epoch+0x1>
    83fe:	a0 93 1d 47 	sts	0x471D, r26	; 0x80471d <g_event_finish_epoch+0x2>
    8402:	b0 93 1e 47 	sts	0x471E, r27	; 0x80471e <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    8406:	8f e3       	ldi	r24, 0x3F	; 63
    8408:	90 e0       	ldi	r25, 0x00	; 0
    840a:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    840e:	80 93 3d 47 	sts	0x473D, r24	; 0x80473d <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8412:	1a 82       	std	Y+2, r1	; 0x02
    8414:	1b 82       	std	Y+3, r1	; 0x03
    8416:	8a 81       	ldd	r24, Y+2	; 0x02
    8418:	9b 81       	ldd	r25, Y+3	; 0x03
    841a:	44 97       	sbiw	r24, 0x14	; 20
    841c:	e8 f4       	brcc	.+58     	; 0x8458 <_ZN13EepromManager11readNonVolsEv+0x116>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    841e:	8a 81       	ldd	r24, Y+2	; 0x02
    8420:	9b 81       	ldd	r25, Y+3	; 0x03
    8422:	0a 96       	adiw	r24, 0x0a	; 10
    8424:	80 50       	subi	r24, 0x00	; 0
    8426:	90 40       	sbci	r25, 0x00	; 0
    8428:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    842c:	28 2f       	mov	r18, r24
    842e:	8a 81       	ldd	r24, Y+2	; 0x02
    8430:	9b 81       	ldd	r25, Y+3	; 0x03
    8432:	82 50       	subi	r24, 0x02	; 2
    8434:	99 4b       	sbci	r25, 0xB9	; 185
    8436:	fc 01       	movw	r30, r24
    8438:	20 83       	st	Z, r18
			if(!g_messages_text[STATION_ID][i])
    843a:	8a 81       	ldd	r24, Y+2	; 0x02
    843c:	9b 81       	ldd	r25, Y+3	; 0x03
    843e:	82 50       	subi	r24, 0x02	; 2
    8440:	99 4b       	sbci	r25, 0xB9	; 185
    8442:	fc 01       	movw	r30, r24
    8444:	80 81       	ld	r24, Z
    8446:	88 23       	and	r24, r24
    8448:	31 f0       	breq	.+12     	; 0x8456 <_ZN13EepromManager11readNonVolsEv+0x114>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    844a:	8a 81       	ldd	r24, Y+2	; 0x02
    844c:	9b 81       	ldd	r25, Y+3	; 0x03
    844e:	01 96       	adiw	r24, 0x01	; 1
    8450:	8a 83       	std	Y+2, r24	; 0x02
    8452:	9b 83       	std	Y+3, r25	; 0x03
    8454:	e0 cf       	rjmp	.-64     	; 0x8416 <_ZN13EepromManager11readNonVolsEv+0xd4>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(!g_messages_text[STATION_ID][i])
			{
				break;
    8456:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8458:	1a 82       	std	Y+2, r1	; 0x02
    845a:	1b 82       	std	Y+3, r1	; 0x03
    845c:	8a 81       	ldd	r24, Y+2	; 0x02
    845e:	9b 81       	ldd	r25, Y+3	; 0x03
    8460:	44 97       	sbiw	r24, 0x14	; 20
    8462:	e8 f4       	brcc	.+58     	; 0x849e <_ZN13EepromManager11readNonVolsEv+0x15c>
		{
			g_messages_text[PATTERN_TEXT][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));
    8464:	8a 81       	ldd	r24, Y+2	; 0x02
    8466:	9b 81       	ldd	r25, Y+3	; 0x03
    8468:	4f 96       	adiw	r24, 0x1f	; 31
    846a:	80 50       	subi	r24, 0x00	; 0
    846c:	90 40       	sbci	r25, 0x00	; 0
    846e:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    8472:	28 2f       	mov	r18, r24
    8474:	8a 81       	ldd	r24, Y+2	; 0x02
    8476:	9b 81       	ldd	r25, Y+3	; 0x03
    8478:	87 51       	subi	r24, 0x17	; 23
    847a:	99 4b       	sbci	r25, 0xB9	; 185
    847c:	fc 01       	movw	r30, r24
    847e:	20 83       	st	Z, r18
			if(!g_messages_text[PATTERN_TEXT][i])
    8480:	8a 81       	ldd	r24, Y+2	; 0x02
    8482:	9b 81       	ldd	r25, Y+3	; 0x03
    8484:	87 51       	subi	r24, 0x17	; 23
    8486:	99 4b       	sbci	r25, 0xB9	; 185
    8488:	fc 01       	movw	r30, r24
    848a:	80 81       	ld	r24, Z
    848c:	88 23       	and	r24, r24
    848e:	31 f0       	breq	.+12     	; 0x849c <_ZN13EepromManager11readNonVolsEv+0x15a>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8490:	8a 81       	ldd	r24, Y+2	; 0x02
    8492:	9b 81       	ldd	r25, Y+3	; 0x03
    8494:	01 96       	adiw	r24, 0x01	; 1
    8496:	8a 83       	std	Y+2, r24	; 0x02
    8498:	9b 83       	std	Y+3, r25	; 0x03
    849a:	e0 cf       	rjmp	.-64     	; 0x845c <_ZN13EepromManager11readNonVolsEv+0x11a>
		{
			g_messages_text[PATTERN_TEXT][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));
			if(!g_messages_text[PATTERN_TEXT][i])
			{
				break;
    849c:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    849e:	1a 82       	std	Y+2, r1	; 0x02
    84a0:	1b 82       	std	Y+3, r1	; 0x03
    84a2:	8a 81       	ldd	r24, Y+2	; 0x02
    84a4:	9b 81       	ldd	r25, Y+3	; 0x03
    84a6:	08 97       	sbiw	r24, 0x08	; 8
    84a8:	e8 f4       	brcc	.+58     	; 0x84e4 <_ZN13EepromManager11readNonVolsEv+0x1a2>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
    84aa:	8a 81       	ldd	r24, Y+2	; 0x02
    84ac:	9b 81       	ldd	r25, Y+3	; 0x03
    84ae:	c4 96       	adiw	r24, 0x34	; 52
    84b0:	80 50       	subi	r24, 0x00	; 0
    84b2:	90 40       	sbci	r25, 0x00	; 0
    84b4:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    84b8:	28 2f       	mov	r18, r24
    84ba:	8a 81       	ldd	r24, Y+2	; 0x02
    84bc:	9b 81       	ldd	r25, Y+3	; 0x03
    84be:	82 5c       	subi	r24, 0xC2	; 194
    84c0:	98 4b       	sbci	r25, 0xB8	; 184
    84c2:	fc 01       	movw	r30, r24
    84c4:	20 83       	st	Z, r18
			if(!g_unlockCode[i])
    84c6:	8a 81       	ldd	r24, Y+2	; 0x02
    84c8:	9b 81       	ldd	r25, Y+3	; 0x03
    84ca:	82 5c       	subi	r24, 0xC2	; 194
    84cc:	98 4b       	sbci	r25, 0xB8	; 184
    84ce:	fc 01       	movw	r30, r24
    84d0:	80 81       	ld	r24, Z
    84d2:	88 23       	and	r24, r24
    84d4:	31 f0       	breq	.+12     	; 0x84e2 <_ZN13EepromManager11readNonVolsEv+0x1a0>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    84d6:	8a 81       	ldd	r24, Y+2	; 0x02
    84d8:	9b 81       	ldd	r25, Y+3	; 0x03
    84da:	01 96       	adiw	r24, 0x01	; 1
    84dc:	8a 83       	std	Y+2, r24	; 0x02
    84de:	9b 83       	std	Y+3, r25	; 0x03
    84e0:	e0 cf       	rjmp	.-64     	; 0x84a2 <_ZN13EepromManager11readNonVolsEv+0x160>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
			if(!g_unlockCode[i])
			{
				break;
    84e2:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    84e4:	80 e4       	ldi	r24, 0x40	; 64
    84e6:	90 e0       	ldi	r25, 0x00	; 0
    84e8:	0e 94 12 7c 	call	0xf824	; 0xf824 <eeprom_read_dword>
    84ec:	dc 01       	movw	r26, r24
    84ee:	cb 01       	movw	r24, r22
    84f0:	8c 87       	std	Y+12, r24	; 0x0c
    84f2:	9d 87       	std	Y+13, r25	; 0x0d
    84f4:	ae 87       	std	Y+14, r26	; 0x0e
    84f6:	bf 87       	std	Y+15, r27	; 0x0f
    84f8:	80 ee       	ldi	r24, 0xE0	; 224
    84fa:	97 e6       	ldi	r25, 0x67	; 103
    84fc:	a5 e3       	ldi	r26, 0x35	; 53
    84fe:	b0 e0       	ldi	r27, 0x00	; 0
    8500:	88 8b       	std	Y+16, r24	; 0x10
    8502:	99 8b       	std	Y+17, r25	; 0x11
    8504:	aa 8b       	std	Y+18, r26	; 0x12
    8506:	bb 8b       	std	Y+19, r27	; 0x13
    8508:	80 e0       	ldi	r24, 0x00	; 0
    850a:	99 e0       	ldi	r25, 0x09	; 9
    850c:	ad e3       	ldi	r26, 0x3D	; 61
    850e:	b0 e0       	ldi	r27, 0x00	; 0
    8510:	8c 8b       	std	Y+20, r24	; 0x14
    8512:	9d 8b       	std	Y+21, r25	; 0x15
    8514:	ae 8b       	std	Y+22, r26	; 0x16
    8516:	bf 8b       	std	Y+23, r27	; 0x17
    8518:	2c 85       	ldd	r18, Y+12	; 0x0c
    851a:	3d 85       	ldd	r19, Y+13	; 0x0d
    851c:	4e 85       	ldd	r20, Y+14	; 0x0e
    851e:	5f 85       	ldd	r21, Y+15	; 0x0f
    8520:	8c 89       	ldd	r24, Y+20	; 0x14
    8522:	9d 89       	ldd	r25, Y+21	; 0x15
    8524:	ae 89       	ldd	r26, Y+22	; 0x16
    8526:	bf 89       	ldd	r27, Y+23	; 0x17
    8528:	82 17       	cp	r24, r18
    852a:	93 07       	cpc	r25, r19
    852c:	a4 07       	cpc	r26, r20
    852e:	b5 07       	cpc	r27, r21
    8530:	b8 f0       	brcs	.+46     	; 0x8560 <_ZN13EepromManager11readNonVolsEv+0x21e>
    8532:	2c 85       	ldd	r18, Y+12	; 0x0c
    8534:	3d 85       	ldd	r19, Y+13	; 0x0d
    8536:	4e 85       	ldd	r20, Y+14	; 0x0e
    8538:	5f 85       	ldd	r21, Y+15	; 0x0f
    853a:	88 89       	ldd	r24, Y+16	; 0x10
    853c:	99 89       	ldd	r25, Y+17	; 0x11
    853e:	aa 89       	ldd	r26, Y+18	; 0x12
    8540:	bb 89       	ldd	r27, Y+19	; 0x13
    8542:	28 17       	cp	r18, r24
    8544:	39 07       	cpc	r19, r25
    8546:	4a 07       	cpc	r20, r26
    8548:	5b 07       	cpc	r21, r27
    854a:	28 f4       	brcc	.+10     	; 0x8556 <_ZN13EepromManager11readNonVolsEv+0x214>
    854c:	88 89       	ldd	r24, Y+16	; 0x10
    854e:	99 89       	ldd	r25, Y+17	; 0x11
    8550:	aa 89       	ldd	r26, Y+18	; 0x12
    8552:	bb 89       	ldd	r27, Y+19	; 0x13
    8554:	09 c0       	rjmp	.+18     	; 0x8568 <_ZN13EepromManager11readNonVolsEv+0x226>
    8556:	8c 85       	ldd	r24, Y+12	; 0x0c
    8558:	9d 85       	ldd	r25, Y+13	; 0x0d
    855a:	ae 85       	ldd	r26, Y+14	; 0x0e
    855c:	bf 85       	ldd	r27, Y+15	; 0x0f
    855e:	04 c0       	rjmp	.+8      	; 0x8568 <_ZN13EepromManager11readNonVolsEv+0x226>
    8560:	8c 89       	ldd	r24, Y+20	; 0x14
    8562:	9d 89       	ldd	r25, Y+21	; 0x15
    8564:	ae 89       	ldd	r26, Y+22	; 0x16
    8566:	bf 89       	ldd	r27, Y+23	; 0x17
    8568:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <g_80m_frequency>
    856c:	90 93 2d 40 	sts	0x402D, r25	; 0x80402d <g_80m_frequency+0x1>
    8570:	a0 93 2e 40 	sts	0x402E, r26	; 0x80402e <g_80m_frequency+0x2>
    8574:	b0 93 2f 40 	sts	0x402F, r27	; 0x80402f <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    8578:	84 e4       	ldi	r24, 0x44	; 68
    857a:	90 e0       	ldi	r25, 0x00	; 0
    857c:	0e 94 12 7c 	call	0xf824	; 0xf824 <eeprom_read_dword>
    8580:	dc 01       	movw	r26, r24
    8582:	cb 01       	movw	r24, r22
    8584:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <g_rtty_offset>
    8588:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <g_rtty_offset+0x1>
    858c:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <g_rtty_offset+0x2>
    8590:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    8594:	88 e4       	ldi	r24, 0x48	; 72
    8596:	90 e0       	ldi	r25, 0x00	; 0
    8598:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    859c:	88 8f       	std	Y+24, r24	; 0x18
    859e:	99 8f       	std	Y+25, r25	; 0x19
    85a0:	1a 8e       	std	Y+26, r1	; 0x1a
    85a2:	1b 8e       	std	Y+27, r1	; 0x1b
    85a4:	88 e8       	ldi	r24, 0x88	; 136
    85a6:	93 e1       	ldi	r25, 0x13	; 19
    85a8:	8c 8f       	std	Y+28, r24	; 0x1c
    85aa:	9d 8f       	std	Y+29, r25	; 0x1d
    85ac:	28 8d       	ldd	r18, Y+24	; 0x18
    85ae:	39 8d       	ldd	r19, Y+25	; 0x19
    85b0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    85b2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    85b4:	82 17       	cp	r24, r18
    85b6:	93 07       	cpc	r25, r19
    85b8:	68 f0       	brcs	.+26     	; 0x85d4 <_ZN13EepromManager11readNonVolsEv+0x292>
    85ba:	28 8d       	ldd	r18, Y+24	; 0x18
    85bc:	39 8d       	ldd	r19, Y+25	; 0x19
    85be:	8a 8d       	ldd	r24, Y+26	; 0x1a
    85c0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    85c2:	28 17       	cp	r18, r24
    85c4:	39 07       	cpc	r19, r25
    85c6:	18 f4       	brcc	.+6      	; 0x85ce <_ZN13EepromManager11readNonVolsEv+0x28c>
    85c8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    85ca:	9b 8d       	ldd	r25, Y+27	; 0x1b
    85cc:	05 c0       	rjmp	.+10     	; 0x85d8 <_ZN13EepromManager11readNonVolsEv+0x296>
    85ce:	88 8d       	ldd	r24, Y+24	; 0x18
    85d0:	99 8d       	ldd	r25, Y+25	; 0x19
    85d2:	02 c0       	rjmp	.+4      	; 0x85d8 <_ZN13EepromManager11readNonVolsEv+0x296>
    85d4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    85d6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    85d8:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_80m_power_level_mW>
    85dc:	90 93 31 40 	sts	0x4031, r25	; 0x804031 <g_80m_power_level_mW+0x1>

		/* Perform sanity checks */
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
    85e0:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    85e4:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    85e8:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    85ec:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    85f0:	89 2b       	or	r24, r25
    85f2:	8a 2b       	or	r24, r26
    85f4:	8b 2b       	or	r24, r27
    85f6:	b9 f0       	breq	.+46     	; 0x8626 <_ZN13EepromManager11readNonVolsEv+0x2e4>
    85f8:	20 91 1b 47 	lds	r18, 0x471B	; 0x80471b <g_event_finish_epoch>
    85fc:	30 91 1c 47 	lds	r19, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    8600:	40 91 1d 47 	lds	r20, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    8604:	50 91 1e 47 	lds	r21, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    8608:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    860c:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    8610:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    8614:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    8618:	82 17       	cp	r24, r18
    861a:	93 07       	cpc	r25, r19
    861c:	a4 07       	cpc	r26, r20
    861e:	b5 07       	cpc	r27, r21
    8620:	10 f0       	brcs	.+4      	; 0x8626 <_ZN13EepromManager11readNonVolsEv+0x2e4>
    8622:	81 e0       	ldi	r24, 0x01	; 1
    8624:	01 c0       	rjmp	.+2      	; 0x8628 <_ZN13EepromManager11readNonVolsEv+0x2e6>
    8626:	80 e0       	ldi	r24, 0x00	; 0
    8628:	88 23       	and	r24, r24
    862a:	a1 f0       	breq	.+40     	; 0x8654 <_ZN13EepromManager11readNonVolsEv+0x312>
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
    862c:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    8630:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    8634:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    8638:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    863c:	80 58       	subi	r24, 0x80	; 128
    863e:	9e 4a       	sbci	r25, 0xAE	; 174
    8640:	ae 4f       	sbci	r26, 0xFE	; 254
    8642:	bf 4f       	sbci	r27, 0xFF	; 255
    8644:	80 93 1b 47 	sts	0x471B, r24	; 0x80471b <g_event_finish_epoch>
    8648:	90 93 1c 47 	sts	0x471C, r25	; 0x80471c <g_event_finish_epoch+0x1>
    864c:	a0 93 1d 47 	sts	0x471D, r26	; 0x80471d <g_event_finish_epoch+0x2>
    8650:	b0 93 1e 47 	sts	0x471E, r27	; 0x80471e <g_event_finish_epoch+0x3>
		}
		
		g_pattern_codespeed = CLAMP(5, eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_codespeed))), 20);
    8654:	8a e4       	ldi	r24, 0x4A	; 74
    8656:	90 e0       	ldi	r25, 0x00	; 0
    8658:	0e 94 0a 7c 	call	0xf814	; 0xf814 <eeprom_read_byte>
    865c:	8e 8f       	std	Y+30, r24	; 0x1e
    865e:	85 e0       	ldi	r24, 0x05	; 5
    8660:	90 e0       	ldi	r25, 0x00	; 0
    8662:	8f 8f       	std	Y+31, r24	; 0x1f
    8664:	98 a3       	std	Y+32, r25	; 0x20
    8666:	84 e1       	ldi	r24, 0x14	; 20
    8668:	90 e0       	ldi	r25, 0x00	; 0
    866a:	89 a3       	std	Y+33, r24	; 0x21
    866c:	9a a3       	std	Y+34, r25	; 0x22
    866e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8670:	28 2f       	mov	r18, r24
    8672:	30 e0       	ldi	r19, 0x00	; 0
    8674:	89 a1       	ldd	r24, Y+33	; 0x21
    8676:	9a a1       	ldd	r25, Y+34	; 0x22
    8678:	82 17       	cp	r24, r18
    867a:	93 07       	cpc	r25, r19
    867c:	54 f0       	brlt	.+20     	; 0x8692 <_ZN13EepromManager11readNonVolsEv+0x350>
    867e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8680:	88 2f       	mov	r24, r24
    8682:	90 e0       	ldi	r25, 0x00	; 0
    8684:	2f 8d       	ldd	r18, Y+31	; 0x1f
    8686:	38 a1       	ldd	r19, Y+32	; 0x20
    8688:	82 17       	cp	r24, r18
    868a:	93 07       	cpc	r25, r19
    868c:	24 f4       	brge	.+8      	; 0x8696 <_ZN13EepromManager11readNonVolsEv+0x354>
    868e:	c9 01       	movw	r24, r18
    8690:	02 c0       	rjmp	.+4      	; 0x8696 <_ZN13EepromManager11readNonVolsEv+0x354>
    8692:	89 a1       	ldd	r24, Y+33	; 0x21
    8694:	9a a1       	ldd	r25, Y+34	; 0x22
    8696:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
    869a:	8b e4       	ldi	r24, 0x4B	; 75
    869c:	90 e0       	ldi	r25, 0x00	; 0
    869e:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    86a2:	8b a3       	std	Y+35, r24	; 0x23
    86a4:	9c a3       	std	Y+36, r25	; 0x24
    86a6:	1d a2       	std	Y+37, r1	; 0x25
    86a8:	1e a2       	std	Y+38, r1	; 0x26
    86aa:	80 e1       	ldi	r24, 0x10	; 16
    86ac:	9e e0       	ldi	r25, 0x0E	; 14
    86ae:	8f a3       	std	Y+39, r24	; 0x27
    86b0:	98 a7       	std	Y+40, r25	; 0x28
    86b2:	2b a1       	ldd	r18, Y+35	; 0x23
    86b4:	3c a1       	ldd	r19, Y+36	; 0x24
    86b6:	8f a1       	ldd	r24, Y+39	; 0x27
    86b8:	98 a5       	ldd	r25, Y+40	; 0x28
    86ba:	82 17       	cp	r24, r18
    86bc:	93 07       	cpc	r25, r19
    86be:	6c f0       	brlt	.+26     	; 0x86da <_ZN13EepromManager11readNonVolsEv+0x398>
    86c0:	2b a1       	ldd	r18, Y+35	; 0x23
    86c2:	3c a1       	ldd	r19, Y+36	; 0x24
    86c4:	8d a1       	ldd	r24, Y+37	; 0x25
    86c6:	9e a1       	ldd	r25, Y+38	; 0x26
    86c8:	28 17       	cp	r18, r24
    86ca:	39 07       	cpc	r19, r25
    86cc:	1c f4       	brge	.+6      	; 0x86d4 <_ZN13EepromManager11readNonVolsEv+0x392>
    86ce:	8d a1       	ldd	r24, Y+37	; 0x25
    86d0:	9e a1       	ldd	r25, Y+38	; 0x26
    86d2:	05 c0       	rjmp	.+10     	; 0x86de <_ZN13EepromManager11readNonVolsEv+0x39c>
    86d4:	8b a1       	ldd	r24, Y+35	; 0x23
    86d6:	9c a1       	ldd	r25, Y+36	; 0x24
    86d8:	02 c0       	rjmp	.+4      	; 0x86de <_ZN13EepromManager11readNonVolsEv+0x39c>
    86da:	8f a1       	ldd	r24, Y+39	; 0x27
    86dc:	98 a5       	ldd	r25, Y+40	; 0x28
    86de:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    86e2:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
    86e6:	8d e4       	ldi	r24, 0x4D	; 77
    86e8:	90 e0       	ldi	r25, 0x00	; 0
    86ea:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    86ee:	89 a7       	std	Y+41, r24	; 0x29
    86f0:	9a a7       	std	Y+42, r25	; 0x2a
    86f2:	1b a6       	std	Y+43, r1	; 0x2b
    86f4:	1c a6       	std	Y+44, r1	; 0x2c
    86f6:	80 e1       	ldi	r24, 0x10	; 16
    86f8:	9e e0       	ldi	r25, 0x0E	; 14
    86fa:	8d a7       	std	Y+45, r24	; 0x2d
    86fc:	9e a7       	std	Y+46, r25	; 0x2e
    86fe:	29 a5       	ldd	r18, Y+41	; 0x29
    8700:	3a a5       	ldd	r19, Y+42	; 0x2a
    8702:	8d a5       	ldd	r24, Y+45	; 0x2d
    8704:	9e a5       	ldd	r25, Y+46	; 0x2e
    8706:	82 17       	cp	r24, r18
    8708:	93 07       	cpc	r25, r19
    870a:	6c f0       	brlt	.+26     	; 0x8726 <_ZN13EepromManager11readNonVolsEv+0x3e4>
    870c:	29 a5       	ldd	r18, Y+41	; 0x29
    870e:	3a a5       	ldd	r19, Y+42	; 0x2a
    8710:	8b a5       	ldd	r24, Y+43	; 0x2b
    8712:	9c a5       	ldd	r25, Y+44	; 0x2c
    8714:	28 17       	cp	r18, r24
    8716:	39 07       	cpc	r19, r25
    8718:	1c f4       	brge	.+6      	; 0x8720 <_ZN13EepromManager11readNonVolsEv+0x3de>
    871a:	8b a5       	ldd	r24, Y+43	; 0x2b
    871c:	9c a5       	ldd	r25, Y+44	; 0x2c
    871e:	05 c0       	rjmp	.+10     	; 0x872a <_ZN13EepromManager11readNonVolsEv+0x3e8>
    8720:	89 a5       	ldd	r24, Y+41	; 0x29
    8722:	9a a5       	ldd	r25, Y+42	; 0x2a
    8724:	02 c0       	rjmp	.+4      	; 0x872a <_ZN13EepromManager11readNonVolsEv+0x3e8>
    8726:	8d a5       	ldd	r24, Y+45	; 0x2d
    8728:	9e a5       	ldd	r25, Y+46	; 0x2e
    872a:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    872e:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
    8732:	8f e4       	ldi	r24, 0x4F	; 79
    8734:	90 e0       	ldi	r25, 0x00	; 0
    8736:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    873a:	8f a7       	std	Y+47, r24	; 0x2f
    873c:	98 ab       	std	Y+48, r25	; 0x30
    873e:	19 aa       	std	Y+49, r1	; 0x31
    8740:	1a aa       	std	Y+50, r1	; 0x32
    8742:	80 e1       	ldi	r24, 0x10	; 16
    8744:	9e e0       	ldi	r25, 0x0E	; 14
    8746:	8b ab       	std	Y+51, r24	; 0x33
    8748:	9c ab       	std	Y+52, r25	; 0x34
    874a:	2f a5       	ldd	r18, Y+47	; 0x2f
    874c:	38 a9       	ldd	r19, Y+48	; 0x30
    874e:	8b a9       	ldd	r24, Y+51	; 0x33
    8750:	9c a9       	ldd	r25, Y+52	; 0x34
    8752:	82 17       	cp	r24, r18
    8754:	93 07       	cpc	r25, r19
    8756:	6c f0       	brlt	.+26     	; 0x8772 <_ZN13EepromManager11readNonVolsEv+0x430>
    8758:	2f a5       	ldd	r18, Y+47	; 0x2f
    875a:	38 a9       	ldd	r19, Y+48	; 0x30
    875c:	89 a9       	ldd	r24, Y+49	; 0x31
    875e:	9a a9       	ldd	r25, Y+50	; 0x32
    8760:	28 17       	cp	r18, r24
    8762:	39 07       	cpc	r19, r25
    8764:	1c f4       	brge	.+6      	; 0x876c <_ZN13EepromManager11readNonVolsEv+0x42a>
    8766:	89 a9       	ldd	r24, Y+49	; 0x31
    8768:	9a a9       	ldd	r25, Y+50	; 0x32
    876a:	05 c0       	rjmp	.+10     	; 0x8776 <_ZN13EepromManager11readNonVolsEv+0x434>
    876c:	8f a5       	ldd	r24, Y+47	; 0x2f
    876e:	98 a9       	ldd	r25, Y+48	; 0x30
    8770:	02 c0       	rjmp	.+4      	; 0x8776 <_ZN13EepromManager11readNonVolsEv+0x434>
    8772:	8b a9       	ldd	r24, Y+51	; 0x33
    8774:	9c a9       	ldd	r25, Y+52	; 0x34
    8776:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    877a:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);
    877e:	81 e5       	ldi	r24, 0x51	; 81
    8780:	90 e0       	ldi	r25, 0x00	; 0
    8782:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    8786:	8d ab       	std	Y+53, r24	; 0x35
    8788:	9e ab       	std	Y+54, r25	; 0x36
    878a:	1f aa       	std	Y+55, r1	; 0x37
    878c:	18 ae       	std	Y+56, r1	; 0x38
    878e:	80 e1       	ldi	r24, 0x10	; 16
    8790:	9e e0       	ldi	r25, 0x0E	; 14
    8792:	89 af       	std	Y+57, r24	; 0x39
    8794:	9a af       	std	Y+58, r25	; 0x3a
    8796:	2d a9       	ldd	r18, Y+53	; 0x35
    8798:	3e a9       	ldd	r19, Y+54	; 0x36
    879a:	89 ad       	ldd	r24, Y+57	; 0x39
    879c:	9a ad       	ldd	r25, Y+58	; 0x3a
    879e:	82 17       	cp	r24, r18
    87a0:	93 07       	cpc	r25, r19
    87a2:	6c f0       	brlt	.+26     	; 0x87be <_ZN13EepromManager11readNonVolsEv+0x47c>
    87a4:	2d a9       	ldd	r18, Y+53	; 0x35
    87a6:	3e a9       	ldd	r19, Y+54	; 0x36
    87a8:	8f a9       	ldd	r24, Y+55	; 0x37
    87aa:	98 ad       	ldd	r25, Y+56	; 0x38
    87ac:	28 17       	cp	r18, r24
    87ae:	39 07       	cpc	r19, r25
    87b0:	1c f4       	brge	.+6      	; 0x87b8 <_ZN13EepromManager11readNonVolsEv+0x476>
    87b2:	8f a9       	ldd	r24, Y+55	; 0x37
    87b4:	98 ad       	ldd	r25, Y+56	; 0x38
    87b6:	05 c0       	rjmp	.+10     	; 0x87c2 <_ZN13EepromManager11readNonVolsEv+0x480>
    87b8:	8d a9       	ldd	r24, Y+53	; 0x35
    87ba:	9e a9       	ldd	r25, Y+54	; 0x36
    87bc:	02 c0       	rjmp	.+4      	; 0x87c2 <_ZN13EepromManager11readNonVolsEv+0x480>
    87be:	89 ad       	ldd	r24, Y+57	; 0x39
    87c0:	9a ad       	ldd	r25, Y+58	; 0x3a
    87c2:	80 93 15 47 	sts	0x4715, r24	; 0x804715 <g_intra_cycle_delay_time>
    87c6:	90 93 16 47 	sts	0x4716, r25	; 0x804716 <g_intra_cycle_delay_time+0x1>

		failure = false;
    87ca:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    87cc:	89 81       	ldd	r24, Y+1	; 0x01
}
    87ce:	ec 96       	adiw	r28, 0x3c	; 60
    87d0:	cd bf       	out	0x3d, r28	; 61
    87d2:	de bf       	out	0x3e, r29	; 62
    87d4:	df 91       	pop	r29
    87d6:	cf 91       	pop	r28
    87d8:	08 95       	ret

000087da <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    87da:	cf 93       	push	r28
    87dc:	df 93       	push	r29
    87de:	cd b7       	in	r28, 0x3d	; 61
    87e0:	de b7       	in	r29, 0x3e	; 62
    87e2:	2b 97       	sbiw	r28, 0x0b	; 11
    87e4:	cd bf       	out	0x3d, r28	; 61
    87e6:	de bf       	out	0x3e, r29	; 62
    87e8:	8a 87       	std	Y+10, r24	; 0x0a
    87ea:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    87ec:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    87ee:	80 e0       	ldi	r24, 0x00	; 0
    87f0:	90 e0       	ldi	r25, 0x00	; 0
    87f2:	0e 94 19 7c 	call	0xf832	; 0xf832 <eeprom_read_word>
    87f6:	88 87       	std	Y+8, r24	; 0x08
    87f8:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    87fa:	88 85       	ldd	r24, Y+8	; 0x08
    87fc:	99 85       	ldd	r25, Y+9	; 0x09
    87fe:	8e 3c       	cpi	r24, 0xCE	; 206
    8800:	91 05       	cpc	r25, r1
    8802:	09 f4       	brne	.+2      	; 0x8806 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    8804:	2a c1       	rjmp	.+596    	; 0x8a5a <_ZN13EepromManager20initializeEEPROMVarsEv+0x280>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    8806:	84 e1       	ldi	r24, 0x14	; 20
    8808:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    880c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    8810:	68 2f       	mov	r22, r24
    8812:	8d e3       	ldi	r24, 0x3D	; 61
    8814:	90 e0       	ldi	r25, 0x00	; 0
    8816:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    881a:	81 e0       	ldi	r24, 0x01	; 1
    881c:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <g_fox>
			avr_eeprom_write_byte(Fox_setting, g_fox);
    8820:	80 91 17 40 	lds	r24, 0x4017	; 0x804017 <g_fox>
    8824:	68 2f       	mov	r22, r24
    8826:	8e e3       	ldi	r24, 0x3E	; 62
    8828:	90 e0       	ldi	r25, 0x00	; 0
    882a:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    882e:	10 92 17 47 	sts	0x4717, r1	; 0x804717 <g_event_start_epoch>
    8832:	10 92 18 47 	sts	0x4718, r1	; 0x804718 <g_event_start_epoch+0x1>
    8836:	10 92 19 47 	sts	0x4719, r1	; 0x804719 <g_event_start_epoch+0x2>
    883a:	10 92 1a 47 	sts	0x471A, r1	; 0x80471a <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    883e:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <g_event_start_epoch>
    8842:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <g_event_start_epoch+0x1>
    8846:	a0 91 19 47 	lds	r26, 0x4719	; 0x804719 <g_event_start_epoch+0x2>
    884a:	b0 91 1a 47 	lds	r27, 0x471A	; 0x80471a <g_event_start_epoch+0x3>
    884e:	ac 01       	movw	r20, r24
    8850:	bd 01       	movw	r22, r26
    8852:	82 e0       	ldi	r24, 0x02	; 2
    8854:	90 e0       	ldi	r25, 0x00	; 0
    8856:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    885a:	10 92 1b 47 	sts	0x471B, r1	; 0x80471b <g_event_finish_epoch>
    885e:	10 92 1c 47 	sts	0x471C, r1	; 0x80471c <g_event_finish_epoch+0x1>
    8862:	10 92 1d 47 	sts	0x471D, r1	; 0x80471d <g_event_finish_epoch+0x2>
    8866:	10 92 1e 47 	sts	0x471E, r1	; 0x80471e <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    886a:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <g_event_finish_epoch>
    886e:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <g_event_finish_epoch+0x1>
    8872:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <g_event_finish_epoch+0x2>
    8876:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <g_event_finish_epoch+0x3>
    887a:	ac 01       	movw	r20, r24
    887c:	bd 01       	movw	r22, r26
    887e:	86 e0       	ldi	r24, 0x06	; 6
    8880:	90 e0       	ldi	r25, 0x00	; 0
    8882:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    8886:	10 92 3d 47 	sts	0x473D, r1	; 0x80473d <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    888a:	80 91 3d 47 	lds	r24, 0x473D	; 0x80473d <g_utc_offset>
    888e:	68 2f       	mov	r22, r24
    8890:	8f e3       	ldi	r24, 0x3F	; 63
    8892:	90 e0       	ldi	r25, 0x00	; 0
    8894:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    8898:	10 92 fe 46 	sts	0x46FE, r1	; 0x8046fe <g_messages_text+0x15>
			avr_eeprom_write_byte(StationID_text, 0);
    889c:	60 e0       	ldi	r22, 0x00	; 0
    889e:	8a e0       	ldi	r24, 0x0A	; 10
    88a0:	90 e0       	ldi	r25, 0x00	; 0
    88a2:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>

			g_messages_text[PATTERN_TEXT][0] = 'M';
    88a6:	8d e4       	ldi	r24, 0x4D	; 77
    88a8:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
			g_messages_text[PATTERN_TEXT][0] = 'O';
    88ac:	8f e4       	ldi	r24, 0x4F	; 79
    88ae:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <g_messages_text>
			g_messages_text[PATTERN_TEXT][0] = '\0';
    88b2:	10 92 e9 46 	sts	0x46E9, r1	; 0x8046e9 <g_messages_text>
			avr_eeprom_write_byte(Pattern_text, 0);
    88b6:	60 e0       	ldi	r22, 0x00	; 0
    88b8:	8f e1       	ldi	r24, 0x1F	; 31
    88ba:	90 e0       	ldi	r25, 0x00	; 0
    88bc:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    88c0:	81 e5       	ldi	r24, 0x51	; 81
    88c2:	94 e4       	ldi	r25, 0x44	; 68
    88c4:	8d 83       	std	Y+5, r24	; 0x05
    88c6:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    88c8:	84 e3       	ldi	r24, 0x34	; 52
    88ca:	90 e0       	ldi	r25, 0x00	; 0
    88cc:	89 83       	std	Y+1, r24	; 0x01
    88ce:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    88d0:	1b 82       	std	Y+3, r1	; 0x03
    88d2:	1c 82       	std	Y+4, r1	; 0x04
    88d4:	8b 81       	ldd	r24, Y+3	; 0x03
    88d6:	9c 81       	ldd	r25, Y+4	; 0x04
    88d8:	04 97       	sbiw	r24, 0x04	; 4
    88da:	18 f5       	brcc	.+70     	; 0x8922 <_ZN13EepromManager20initializeEEPROMVarsEv+0x148>
			{
				g_unlockCode[j] = *v;
    88dc:	8d 81       	ldd	r24, Y+5	; 0x05
    88de:	9e 81       	ldd	r25, Y+6	; 0x06
    88e0:	fc 01       	movw	r30, r24
    88e2:	20 81       	ld	r18, Z
    88e4:	8b 81       	ldd	r24, Y+3	; 0x03
    88e6:	9c 81       	ldd	r25, Y+4	; 0x04
    88e8:	82 5c       	subi	r24, 0xC2	; 194
    88ea:	98 4b       	sbci	r25, 0xB8	; 184
    88ec:	fc 01       	movw	r30, r24
    88ee:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    88f0:	8d 81       	ldd	r24, Y+5	; 0x05
    88f2:	9e 81       	ldd	r25, Y+6	; 0x06
    88f4:	9c 01       	movw	r18, r24
    88f6:	2f 5f       	subi	r18, 0xFF	; 255
    88f8:	3f 4f       	sbci	r19, 0xFF	; 255
    88fa:	2d 83       	std	Y+5, r18	; 0x05
    88fc:	3e 83       	std	Y+6, r19	; 0x06
    88fe:	fc 01       	movw	r30, r24
    8900:	40 81       	ld	r20, Z
    8902:	89 81       	ldd	r24, Y+1	; 0x01
    8904:	9a 81       	ldd	r25, Y+2	; 0x02
    8906:	9c 01       	movw	r18, r24
    8908:	2f 5f       	subi	r18, 0xFF	; 255
    890a:	3f 4f       	sbci	r19, 0xFF	; 255
    890c:	29 83       	std	Y+1, r18	; 0x01
    890e:	3a 83       	std	Y+2, r19	; 0x02
    8910:	64 2f       	mov	r22, r20
    8912:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
			g_messages_text[PATTERN_TEXT][0] = '\0';
			avr_eeprom_write_byte(Pattern_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    8916:	8b 81       	ldd	r24, Y+3	; 0x03
    8918:	9c 81       	ldd	r25, Y+4	; 0x04
    891a:	01 96       	adiw	r24, 0x01	; 1
    891c:	8b 83       	std	Y+3, r24	; 0x03
    891e:	9c 83       	std	Y+4, r25	; 0x04
    8920:	d9 cf       	rjmp	.-78     	; 0x88d4 <_ZN13EepromManager20initializeEEPROMVarsEv+0xfa>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, 0);
    8922:	89 81       	ldd	r24, Y+1	; 0x01
    8924:	9a 81       	ldd	r25, Y+2	; 0x02
    8926:	60 e0       	ldi	r22, 0x00	; 0
    8928:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    892c:	8b 81       	ldd	r24, Y+3	; 0x03
    892e:	9c 81       	ldd	r25, Y+4	; 0x04
    8930:	82 5c       	subi	r24, 0xC2	; 194
    8932:	98 4b       	sbci	r25, 0xB8	; 184
    8934:	fc 01       	movw	r30, r24
    8936:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    8938:	80 e2       	ldi	r24, 0x20	; 32
    893a:	94 e0       	ldi	r25, 0x04	; 4
    893c:	a6 e3       	ldi	r26, 0x36	; 54
    893e:	b0 e0       	ldi	r27, 0x00	; 0
    8940:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <g_80m_frequency>
    8944:	90 93 2d 40 	sts	0x402D, r25	; 0x80402d <g_80m_frequency+0x1>
    8948:	a0 93 2e 40 	sts	0x402E, r26	; 0x80402e <g_80m_frequency+0x2>
    894c:	b0 93 2f 40 	sts	0x402F, r27	; 0x80402f <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    8950:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_80m_frequency>
    8954:	90 91 2d 40 	lds	r25, 0x402D	; 0x80402d <g_80m_frequency+0x1>
    8958:	a0 91 2e 40 	lds	r26, 0x402E	; 0x80402e <g_80m_frequency+0x2>
    895c:	b0 91 2f 40 	lds	r27, 0x402F	; 0x80402f <g_80m_frequency+0x3>
    8960:	ac 01       	movw	r20, r24
    8962:	bd 01       	movw	r22, r26
    8964:	80 e4       	ldi	r24, 0x40	; 64
    8966:	90 e0       	ldi	r25, 0x00	; 0
    8968:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    896c:	8a ea       	ldi	r24, 0xAA	; 170
    896e:	90 e0       	ldi	r25, 0x00	; 0
    8970:	a0 e0       	ldi	r26, 0x00	; 0
    8972:	b0 e0       	ldi	r27, 0x00	; 0
    8974:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <g_rtty_offset>
    8978:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <g_rtty_offset+0x1>
    897c:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <g_rtty_offset+0x2>
    8980:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    8984:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_80m_frequency>
    8988:	90 91 2d 40 	lds	r25, 0x402D	; 0x80402d <g_80m_frequency+0x1>
    898c:	a0 91 2e 40 	lds	r26, 0x402E	; 0x80402e <g_80m_frequency+0x2>
    8990:	b0 91 2f 40 	lds	r27, 0x402F	; 0x80402f <g_80m_frequency+0x3>
    8994:	ac 01       	movw	r20, r24
    8996:	bd 01       	movw	r22, r26
    8998:	80 e4       	ldi	r24, 0x40	; 64
    899a:	90 e0       	ldi	r25, 0x00	; 0
    899c:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    89a0:	84 ef       	ldi	r24, 0xF4	; 244
    89a2:	91 e0       	ldi	r25, 0x01	; 1
    89a4:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_80m_power_level_mW>
    89a8:	90 93 31 40 	sts	0x4031, r25	; 0x804031 <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    89ac:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_80m_power_level_mW>
    89b0:	90 91 31 40 	lds	r25, 0x4031	; 0x804031 <g_80m_power_level_mW+0x1>
    89b4:	cc 01       	movw	r24, r24
    89b6:	a0 e0       	ldi	r26, 0x00	; 0
    89b8:	b0 e0       	ldi	r27, 0x00	; 0
    89ba:	ac 01       	movw	r20, r24
    89bc:	bd 01       	movw	r22, r26
    89be:	88 e4       	ldi	r24, 0x48	; 72
    89c0:	90 e0       	ldi	r25, 0x00	; 0
    89c2:	0e 94 4f 3e 	call	0x7c9e	; 0x7c9e <_Z22avr_eeprom_write_dwordjm>
			
			g_pattern_codespeed = EEPROM_PATTERN_CODE_SPEED_DEFAULT;
    89c6:	88 e0       	ldi	r24, 0x08	; 8
    89c8:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			avr_eeprom_write_byte(Pattern_Code_Speed, g_pattern_codespeed);
    89cc:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    89d0:	68 2f       	mov	r22, r24
    89d2:	8a e4       	ldi	r24, 0x4A	; 74
    89d4:	90 e0       	ldi	r25, 0x00	; 0
    89d6:	0e 94 ed 3d 	call	0x7bda	; 0x7bda <_Z21avr_eeprom_write_bytejh>
			
			g_off_air_seconds = EEPROM_OFF_AIR_TIME_DEFAULT;
    89da:	80 ef       	ldi	r24, 0xF0	; 240
    89dc:	90 e0       	ldi	r25, 0x00	; 0
    89de:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    89e2:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
			avr_eeprom_write_word(Off_Air_Seconds, g_off_air_seconds);
    89e6:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    89ea:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    89ee:	bc 01       	movw	r22, r24
    89f0:	8b e4       	ldi	r24, 0x4B	; 75
    89f2:	90 e0       	ldi	r25, 0x00	; 0
    89f4:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
			
			g_on_air_seconds = EEPROM_ON_AIR_TIME_DEFAULT;
    89f8:	8c e3       	ldi	r24, 0x3C	; 60
    89fa:	90 e0       	ldi	r25, 0x00	; 0
    89fc:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    8a00:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			avr_eeprom_write_word(On_Air_Seconds, g_on_air_seconds);
    8a04:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    8a08:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    8a0c:	bc 01       	movw	r22, r24
    8a0e:	8d e4       	ldi	r24, 0x4D	; 77
    8a10:	90 e0       	ldi	r25, 0x00	; 0
    8a12:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
			
			g_ID_period_seconds = EEPROM_ID_TIME_INTERVAL_DEFAULT;
    8a16:	8c e2       	ldi	r24, 0x2C	; 44
    8a18:	91 e0       	ldi	r25, 0x01	; 1
    8a1a:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    8a1e:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
			avr_eeprom_write_word(ID_Period_Seconds, g_ID_period_seconds);
    8a22:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    8a26:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    8a2a:	bc 01       	movw	r22, r24
    8a2c:	8f e4       	ldi	r24, 0x4F	; 79
    8a2e:	90 e0       	ldi	r25, 0x00	; 0
    8a30:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
			
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
    8a34:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <g_intra_cycle_delay_time>
    8a38:	10 92 16 47 	sts	0x4716, r1	; 0x804716 <g_intra_cycle_delay_time+0x1>
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);
    8a3c:	80 91 15 47 	lds	r24, 0x4715	; 0x804715 <g_intra_cycle_delay_time>
    8a40:	90 91 16 47 	lds	r25, 0x4716	; 0x804716 <g_intra_cycle_delay_time+0x1>
    8a44:	bc 01       	movw	r22, r24
    8a46:	81 e5       	ldi	r24, 0x51	; 81
    8a48:	90 e0       	ldi	r25, 0x00	; 0
    8a4a:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    8a4e:	6e ec       	ldi	r22, 0xCE	; 206
    8a50:	70 e0       	ldi	r23, 0x00	; 0
    8a52:	80 e0       	ldi	r24, 0x00	; 0
    8a54:	90 e0       	ldi	r25, 0x00	; 0
    8a56:	0e 94 1c 3e 	call	0x7c38	; 0x7c38 <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    8a5a:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    8a5c:	2b 96       	adiw	r28, 0x0b	; 11
    8a5e:	cd bf       	out	0x3d, r28	; 61
    8a60:	de bf       	out	0x3e, r29	; 62
    8a62:	df 91       	pop	r29
    8a64:	cf 91       	pop	r28
    8a66:	08 95       	ret

00008a68 <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    8a68:	0f 93       	push	r16
    8a6a:	1f 93       	push	r17
    8a6c:	cf 93       	push	r28
    8a6e:	df 93       	push	r29
    8a70:	cd b7       	in	r28, 0x3d	; 61
    8a72:	de b7       	in	r29, 0x3e	; 62
    8a74:	62 97       	sbiw	r28, 0x12	; 18
    8a76:	cd bf       	out	0x3d, r28	; 61
    8a78:	de bf       	out	0x3e, r29	; 62
    8a7a:	89 87       	std	Y+9, r24	; 0x09
    8a7c:	9a 87       	std	Y+10, r25	; 0x0a
    8a7e:	4b 87       	std	Y+11, r20	; 0x0b
    8a80:	5c 87       	std	Y+12, r21	; 0x0c
    8a82:	6d 87       	std	Y+13, r22	; 0x0d
    8a84:	7e 87       	std	Y+14, r23	; 0x0e
    8a86:	0f 87       	std	Y+15, r16	; 0x0f
    8a88:	18 8b       	std	Y+16, r17	; 0x10
    8a8a:	29 8b       	std	Y+17, r18	; 0x11
    8a8c:	3a 8b       	std	Y+18, r19	; 0x12
    8a8e:	8f 85       	ldd	r24, Y+15	; 0x0f
    8a90:	98 89       	ldd	r25, Y+16	; 0x10
    8a92:	a9 89       	ldd	r26, Y+17	; 0x11
    8a94:	ba 89       	ldd	r27, Y+18	; 0x12
    8a96:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_SAMPLING_FREQUENCY>
    8a9a:	90 93 5a 47 	sts	0x475A, r25	; 0x80475a <_SAMPLING_FREQUENCY+0x1>
    8a9e:	a0 93 5b 47 	sts	0x475B, r26	; 0x80475b <_SAMPLING_FREQUENCY+0x2>
    8aa2:	b0 93 5c 47 	sts	0x475C, r27	; 0x80475c <_SAMPLING_FREQUENCY+0x3>
    8aa6:	8b 85       	ldd	r24, Y+11	; 0x0b
    8aa8:	9c 85       	ldd	r25, Y+12	; 0x0c
    8aaa:	ad 85       	ldd	r26, Y+13	; 0x0d
    8aac:	be 85       	ldd	r27, Y+14	; 0x0e
    8aae:	89 83       	std	Y+1, r24	; 0x01
    8ab0:	9a 83       	std	Y+2, r25	; 0x02
    8ab2:	ab 83       	std	Y+3, r26	; 0x03
    8ab4:	bc 83       	std	Y+4, r27	; 0x04
    8ab6:	84 e6       	ldi	r24, 0x64	; 100
    8ab8:	90 e0       	ldi	r25, 0x00	; 0
    8aba:	8d 83       	std	Y+5, r24	; 0x05
    8abc:	9e 83       	std	Y+6, r25	; 0x06
    8abe:	81 ed       	ldi	r24, 0xD1	; 209
    8ac0:	90 e0       	ldi	r25, 0x00	; 0
    8ac2:	8f 83       	std	Y+7, r24	; 0x07
    8ac4:	98 87       	std	Y+8, r25	; 0x08
    8ac6:	8f 81       	ldd	r24, Y+7	; 0x07
    8ac8:	98 85       	ldd	r25, Y+8	; 0x08
    8aca:	09 2e       	mov	r0, r25
    8acc:	00 0c       	add	r0, r0
    8ace:	aa 0b       	sbc	r26, r26
    8ad0:	bb 0b       	sbc	r27, r27
    8ad2:	bc 01       	movw	r22, r24
    8ad4:	cd 01       	movw	r24, r26
    8ad6:	0e 94 71 71 	call	0xe2e2	; 0xe2e2 <__floatsisf>
    8ada:	dc 01       	movw	r26, r24
    8adc:	cb 01       	movw	r24, r22
    8ade:	29 81       	ldd	r18, Y+1	; 0x01
    8ae0:	3a 81       	ldd	r19, Y+2	; 0x02
    8ae2:	4b 81       	ldd	r20, Y+3	; 0x03
    8ae4:	5c 81       	ldd	r21, Y+4	; 0x04
    8ae6:	bc 01       	movw	r22, r24
    8ae8:	cd 01       	movw	r24, r26
    8aea:	0e 94 c2 70 	call	0xe184	; 0xe184 <__cmpsf2>
    8aee:	88 23       	and	r24, r24
    8af0:	6c f4       	brge	.+26     	; 0x8b0c <_ZN8GoertzelC1Eff+0xa4>
    8af2:	8f 81       	ldd	r24, Y+7	; 0x07
    8af4:	98 85       	ldd	r25, Y+8	; 0x08
    8af6:	09 2e       	mov	r0, r25
    8af8:	00 0c       	add	r0, r0
    8afa:	aa 0b       	sbc	r26, r26
    8afc:	bb 0b       	sbc	r27, r27
    8afe:	bc 01       	movw	r22, r24
    8b00:	cd 01       	movw	r24, r26
    8b02:	0e 94 71 71 	call	0xe2e2	; 0xe2e2 <__floatsisf>
    8b06:	dc 01       	movw	r26, r24
    8b08:	cb 01       	movw	r24, r22
    8b0a:	27 c0       	rjmp	.+78     	; 0x8b5a <_ZN8GoertzelC1Eff+0xf2>
    8b0c:	8d 81       	ldd	r24, Y+5	; 0x05
    8b0e:	9e 81       	ldd	r25, Y+6	; 0x06
    8b10:	09 2e       	mov	r0, r25
    8b12:	00 0c       	add	r0, r0
    8b14:	aa 0b       	sbc	r26, r26
    8b16:	bb 0b       	sbc	r27, r27
    8b18:	bc 01       	movw	r22, r24
    8b1a:	cd 01       	movw	r24, r26
    8b1c:	0e 94 71 71 	call	0xe2e2	; 0xe2e2 <__floatsisf>
    8b20:	dc 01       	movw	r26, r24
    8b22:	cb 01       	movw	r24, r22
    8b24:	29 81       	ldd	r18, Y+1	; 0x01
    8b26:	3a 81       	ldd	r19, Y+2	; 0x02
    8b28:	4b 81       	ldd	r20, Y+3	; 0x03
    8b2a:	5c 81       	ldd	r21, Y+4	; 0x04
    8b2c:	bc 01       	movw	r22, r24
    8b2e:	cd 01       	movw	r24, r26
    8b30:	0e 94 62 72 	call	0xe4c4	; 0xe4c4 <__gesf2>
    8b34:	18 16       	cp	r1, r24
    8b36:	6c f4       	brge	.+26     	; 0x8b52 <_ZN8GoertzelC1Eff+0xea>
    8b38:	8d 81       	ldd	r24, Y+5	; 0x05
    8b3a:	9e 81       	ldd	r25, Y+6	; 0x06
    8b3c:	09 2e       	mov	r0, r25
    8b3e:	00 0c       	add	r0, r0
    8b40:	aa 0b       	sbc	r26, r26
    8b42:	bb 0b       	sbc	r27, r27
    8b44:	bc 01       	movw	r22, r24
    8b46:	cd 01       	movw	r24, r26
    8b48:	0e 94 71 71 	call	0xe2e2	; 0xe2e2 <__floatsisf>
    8b4c:	dc 01       	movw	r26, r24
    8b4e:	cb 01       	movw	r24, r22
    8b50:	04 c0       	rjmp	.+8      	; 0x8b5a <_ZN8GoertzelC1Eff+0xf2>
    8b52:	89 81       	ldd	r24, Y+1	; 0x01
    8b54:	9a 81       	ldd	r25, Y+2	; 0x02
    8b56:	ab 81       	ldd	r26, Y+3	; 0x03
    8b58:	bc 81       	ldd	r27, Y+4	; 0x04
    8b5a:	bc 01       	movw	r22, r24
    8b5c:	cd 01       	movw	r24, r26
    8b5e:	0e 94 39 71 	call	0xe272	; 0xe272 <__fixsfsi>
    8b62:	dc 01       	movw	r26, r24
    8b64:	cb 01       	movw	r24, r22
    8b66:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_N>
    8b6a:	90 93 5e 47 	sts	0x475E, r25	; 0x80475e <_N+0x1>
    8b6e:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_N>
    8b72:	90 91 5e 47 	lds	r25, 0x475E	; 0x80475e <_N+0x1>
    8b76:	88 0f       	add	r24, r24
    8b78:	99 1f       	adc	r25, r25
    8b7a:	0e 94 90 73 	call	0xe720	; 0xe720 <malloc>
    8b7e:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <testData>
    8b82:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <testData+0x1>
    8b86:	00 00       	nop
    8b88:	62 96       	adiw	r28, 0x12	; 18
    8b8a:	cd bf       	out	0x3d, r28	; 61
    8b8c:	de bf       	out	0x3e, r29	; 62
    8b8e:	df 91       	pop	r29
    8b90:	cf 91       	pop	r28
    8b92:	1f 91       	pop	r17
    8b94:	0f 91       	pop	r16
    8b96:	08 95       	ret

00008b98 <_ZN8GoertzelD1Ev>:
    8b98:	cf 93       	push	r28
    8b9a:	df 93       	push	r29
    8b9c:	00 d0       	rcall	.+0      	; 0x8b9e <_ZN8GoertzelD1Ev+0x6>
    8b9e:	cd b7       	in	r28, 0x3d	; 61
    8ba0:	de b7       	in	r29, 0x3e	; 62
    8ba2:	89 83       	std	Y+1, r24	; 0x01
    8ba4:	9a 83       	std	Y+2, r25	; 0x02
    8ba6:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <testData>
    8baa:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <testData+0x1>
    8bae:	0e 94 28 74 	call	0xe850	; 0xe850 <free>
    8bb2:	00 00       	nop
    8bb4:	0f 90       	pop	r0
    8bb6:	0f 90       	pop	r0
    8bb8:	df 91       	pop	r29
    8bba:	cf 91       	pop	r28
    8bbc:	08 95       	ret

00008bbe <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    8bbe:	cf 93       	push	r28
    8bc0:	df 93       	push	r29
    8bc2:	00 d0       	rcall	.+0      	; 0x8bc4 <_ZN8Goertzel9DataPointEi+0x6>
    8bc4:	00 d0       	rcall	.+0      	; 0x8bc6 <_ZN8Goertzel9DataPointEi+0x8>
    8bc6:	cd b7       	in	r28, 0x3d	; 61
    8bc8:	de b7       	in	r29, 0x3e	; 62
    8bca:	89 83       	std	Y+1, r24	; 0x01
    8bcc:	9a 83       	std	Y+2, r25	; 0x02
    8bce:	6b 83       	std	Y+3, r22	; 0x03
    8bd0:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    8bd2:	80 91 61 47 	lds	r24, 0x4761	; 0x804761 <_samplesReady>
    8bd6:	88 23       	and	r24, r24
    8bd8:	19 f0       	breq	.+6      	; 0x8be0 <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    8bda:	80 91 61 47 	lds	r24, 0x4761	; 0x804761 <_samplesReady>
    8bde:	32 c0       	rjmp	.+100    	; 0x8c44 <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    8be0:	20 91 62 47 	lds	r18, 0x4762	; 0x804762 <testData>
    8be4:	30 91 63 47 	lds	r19, 0x4763	; 0x804763 <testData+0x1>
    8be8:	80 91 5f 47 	lds	r24, 0x475F	; 0x80475f <_index>
    8bec:	90 91 60 47 	lds	r25, 0x4760	; 0x804760 <_index+0x1>
    8bf0:	88 0f       	add	r24, r24
    8bf2:	99 1f       	adc	r25, r25
    8bf4:	82 0f       	add	r24, r18
    8bf6:	93 1f       	adc	r25, r19
    8bf8:	2b 81       	ldd	r18, Y+3	; 0x03
    8bfa:	3c 81       	ldd	r19, Y+4	; 0x04
    8bfc:	fc 01       	movw	r30, r24
    8bfe:	20 83       	st	Z, r18
    8c00:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    8c02:	80 91 5f 47 	lds	r24, 0x475F	; 0x80475f <_index>
    8c06:	90 91 60 47 	lds	r25, 0x4760	; 0x804760 <_index+0x1>
    8c0a:	01 96       	adiw	r24, 0x01	; 1
    8c0c:	80 93 5f 47 	sts	0x475F, r24	; 0x80475f <_index>
    8c10:	90 93 60 47 	sts	0x4760, r25	; 0x804760 <_index+0x1>
	if(_index >= _N)
    8c14:	20 91 5f 47 	lds	r18, 0x475F	; 0x80475f <_index>
    8c18:	30 91 60 47 	lds	r19, 0x4760	; 0x804760 <_index+0x1>
    8c1c:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_N>
    8c20:	90 91 5e 47 	lds	r25, 0x475E	; 0x80475e <_N+0x1>
    8c24:	41 e0       	ldi	r20, 0x01	; 1
    8c26:	28 17       	cp	r18, r24
    8c28:	39 07       	cpc	r19, r25
    8c2a:	0c f4       	brge	.+2      	; 0x8c2e <_ZN8Goertzel9DataPointEi+0x70>
    8c2c:	40 e0       	ldi	r20, 0x00	; 0
    8c2e:	44 23       	and	r20, r20
    8c30:	39 f0       	breq	.+14     	; 0x8c40 <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    8c32:	10 92 5f 47 	sts	0x475F, r1	; 0x80475f <_index>
    8c36:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <_index+0x1>
		_samplesReady = true;
    8c3a:	81 e0       	ldi	r24, 0x01	; 1
    8c3c:	80 93 61 47 	sts	0x4761, r24	; 0x804761 <_samplesReady>
	}

	return(_samplesReady);
    8c40:	80 91 61 47 	lds	r24, 0x4761	; 0x804761 <_samplesReady>
}
    8c44:	24 96       	adiw	r28, 0x04	; 4
    8c46:	cd bf       	out	0x3d, r28	; 61
    8c48:	de bf       	out	0x3e, r29	; 62
    8c4a:	df 91       	pop	r29
    8c4c:	cf 91       	pop	r28
    8c4e:	08 95       	ret

00008c50 <PORTA_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
    8c50:	cf 93       	push	r28
    8c52:	df 93       	push	r29
    8c54:	00 d0       	rcall	.+0      	; 0x8c56 <PORTA_set_pin_level+0x6>
    8c56:	cd b7       	in	r28, 0x3d	; 61
    8c58:	de b7       	in	r29, 0x3e	; 62
    8c5a:	89 83       	std	Y+1, r24	; 0x01
    8c5c:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    8c5e:	8a 81       	ldd	r24, Y+2	; 0x02
    8c60:	88 23       	and	r24, r24
    8c62:	a9 f0       	breq	.+42     	; 0x8c8e <PORTA_set_pin_level+0x3e>
		VPORTA.OUT |= (1 << pin);
    8c64:	20 e0       	ldi	r18, 0x00	; 0
    8c66:	30 e0       	ldi	r19, 0x00	; 0
    8c68:	80 e0       	ldi	r24, 0x00	; 0
    8c6a:	90 e0       	ldi	r25, 0x00	; 0
    8c6c:	fc 01       	movw	r30, r24
    8c6e:	81 81       	ldd	r24, Z+1	; 0x01
    8c70:	68 2f       	mov	r22, r24
    8c72:	89 81       	ldd	r24, Y+1	; 0x01
    8c74:	48 2f       	mov	r20, r24
    8c76:	50 e0       	ldi	r21, 0x00	; 0
    8c78:	81 e0       	ldi	r24, 0x01	; 1
    8c7a:	90 e0       	ldi	r25, 0x00	; 0
    8c7c:	02 c0       	rjmp	.+4      	; 0x8c82 <PORTA_set_pin_level+0x32>
    8c7e:	88 0f       	add	r24, r24
    8c80:	99 1f       	adc	r25, r25
    8c82:	4a 95       	dec	r20
    8c84:	e2 f7       	brpl	.-8      	; 0x8c7e <PORTA_set_pin_level+0x2e>
    8c86:	86 2b       	or	r24, r22
    8c88:	f9 01       	movw	r30, r18
    8c8a:	81 83       	std	Z+1, r24	; 0x01
	} else {
		VPORTA.OUT &= ~(1 << pin);
	}
}
    8c8c:	15 c0       	rjmp	.+42     	; 0x8cb8 <PORTA_set_pin_level+0x68>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    8c8e:	20 e0       	ldi	r18, 0x00	; 0
    8c90:	30 e0       	ldi	r19, 0x00	; 0
    8c92:	80 e0       	ldi	r24, 0x00	; 0
    8c94:	90 e0       	ldi	r25, 0x00	; 0
    8c96:	fc 01       	movw	r30, r24
    8c98:	81 81       	ldd	r24, Z+1	; 0x01
    8c9a:	68 2f       	mov	r22, r24
    8c9c:	89 81       	ldd	r24, Y+1	; 0x01
    8c9e:	48 2f       	mov	r20, r24
    8ca0:	50 e0       	ldi	r21, 0x00	; 0
    8ca2:	81 e0       	ldi	r24, 0x01	; 1
    8ca4:	90 e0       	ldi	r25, 0x00	; 0
    8ca6:	02 c0       	rjmp	.+4      	; 0x8cac <PORTA_set_pin_level+0x5c>
    8ca8:	88 0f       	add	r24, r24
    8caa:	99 1f       	adc	r25, r25
    8cac:	4a 95       	dec	r20
    8cae:	e2 f7       	brpl	.-8      	; 0x8ca8 <PORTA_set_pin_level+0x58>
    8cb0:	80 95       	com	r24
    8cb2:	86 23       	and	r24, r22
    8cb4:	f9 01       	movw	r30, r18
    8cb6:	81 83       	std	Z+1, r24	; 0x01
	}
}
    8cb8:	00 00       	nop
    8cba:	0f 90       	pop	r0
    8cbc:	0f 90       	pop	r0
    8cbe:	df 91       	pop	r29
    8cc0:	cf 91       	pop	r28
    8cc2:	08 95       	ret

00008cc4 <_Z10wifi_powerb>:
#include "huzzah.h"
#include "binio.h"
#include "port.h"

void wifi_power(bool state)
{
    8cc4:	cf 93       	push	r28
    8cc6:	df 93       	push	r29
    8cc8:	1f 92       	push	r1
    8cca:	cd b7       	in	r28, 0x3d	; 61
    8ccc:	de b7       	in	r29, 0x3e	; 62
    8cce:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    8cd0:	89 81       	ldd	r24, Y+1	; 0x01
    8cd2:	88 23       	and	r24, r24
    8cd4:	29 f0       	breq	.+10     	; 0x8ce0 <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    8cd6:	61 e0       	ldi	r22, 0x01	; 1
    8cd8:	86 e0       	ldi	r24, 0x06	; 6
    8cda:	0e 94 28 46 	call	0x8c50	; 0x8c50 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    8cde:	04 c0       	rjmp	.+8      	; 0x8ce8 <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    8ce0:	60 e0       	ldi	r22, 0x00	; 0
    8ce2:	86 e0       	ldi	r24, 0x06	; 6
    8ce4:	0e 94 28 46 	call	0x8c50	; 0x8c50 <PORTA_set_pin_level>
	}
}
    8ce8:	00 00       	nop
    8cea:	0f 90       	pop	r0
    8cec:	df 91       	pop	r29
    8cee:	cf 91       	pop	r28
    8cf0:	08 95       	ret

00008cf2 <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    8cf2:	cf 93       	push	r28
    8cf4:	df 93       	push	r29
    8cf6:	1f 92       	push	r1
    8cf8:	cd b7       	in	r28, 0x3d	; 61
    8cfa:	de b7       	in	r29, 0x3e	; 62
    8cfc:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    8cfe:	89 81       	ldd	r24, Y+1	; 0x01
    8d00:	88 23       	and	r24, r24
    8d02:	29 f0       	breq	.+10     	; 0x8d0e <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    8d04:	60 e0       	ldi	r22, 0x00	; 0
    8d06:	87 e0       	ldi	r24, 0x07	; 7
    8d08:	0e 94 28 46 	call	0x8c50	; 0x8c50 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    8d0c:	04 c0       	rjmp	.+8      	; 0x8d16 <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    8d0e:	61 e0       	ldi	r22, 0x01	; 1
    8d10:	87 e0       	ldi	r24, 0x07	; 7
    8d12:	0e 94 28 46 	call	0x8c50	; 0x8c50 <PORTA_set_pin_level>
	}
}
    8d16:	00 00       	nop
    8d18:	0f 90       	pop	r0
    8d1a:	df 91       	pop	r29
    8d1c:	cf 91       	pop	r28
    8d1e:	08 95       	ret

00008d20 <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    8d20:	cf 93       	push	r28
    8d22:	df 93       	push	r29
    8d24:	cd b7       	in	r28, 0x3d	; 61
    8d26:	de b7       	in	r29, 0x3e	; 62
	return(VPORTA.IN & (1 << WIFI_MODULE_DETECT));
    8d28:	80 e0       	ldi	r24, 0x00	; 0
    8d2a:	90 e0       	ldi	r25, 0x00	; 0
    8d2c:	fc 01       	movw	r30, r24
    8d2e:	82 81       	ldd	r24, Z+2	; 0x02
    8d30:	88 2f       	mov	r24, r24
    8d32:	90 e0       	ldi	r25, 0x00	; 0
    8d34:	88 70       	andi	r24, 0x08	; 8
    8d36:	99 27       	eor	r25, r25
    8d38:	21 e0       	ldi	r18, 0x01	; 1
    8d3a:	89 2b       	or	r24, r25
    8d3c:	09 f4       	brne	.+2      	; 0x8d40 <_Z11wifiPresentv+0x20>
    8d3e:	20 e0       	ldi	r18, 0x00	; 0
    8d40:	82 2f       	mov	r24, r18
}
    8d42:	df 91       	pop	r29
    8d44:	cf 91       	pop	r28
    8d46:	08 95       	ret

00008d48 <_Z11wifiEnabledv>:

bool wifiEnabled(void)
{
    8d48:	cf 93       	push	r28
    8d4a:	df 93       	push	r29
    8d4c:	cd b7       	in	r28, 0x3d	; 61
    8d4e:	de b7       	in	r29, 0x3e	; 62
	if(!(PORTA.OUT & (1 << WIFI_ENABLE))) /* read output setting on power-enable line */
    8d50:	80 e0       	ldi	r24, 0x00	; 0
    8d52:	94 e0       	ldi	r25, 0x04	; 4
    8d54:	fc 01       	movw	r30, r24
    8d56:	84 81       	ldd	r24, Z+4	; 0x04
    8d58:	88 2f       	mov	r24, r24
    8d5a:	90 e0       	ldi	r25, 0x00	; 0
    8d5c:	80 74       	andi	r24, 0x40	; 64
    8d5e:	99 27       	eor	r25, r25
    8d60:	21 e0       	ldi	r18, 0x01	; 1
    8d62:	89 2b       	or	r24, r25
    8d64:	09 f0       	breq	.+2      	; 0x8d68 <_Z11wifiEnabledv+0x20>
    8d66:	20 e0       	ldi	r18, 0x00	; 0
    8d68:	22 23       	and	r18, r18
    8d6a:	11 f0       	breq	.+4      	; 0x8d70 <_Z11wifiEnabledv+0x28>
	{
		return false;
    8d6c:	80 e0       	ldi	r24, 0x00	; 0
    8d6e:	0d c0       	rjmp	.+26     	; 0x8d8a <_Z11wifiEnabledv+0x42>
	}
	
	if(!(PORTA.OUT & (1 << WIFI_RESET))) /* read output setting on reset line */
    8d70:	80 e0       	ldi	r24, 0x00	; 0
    8d72:	94 e0       	ldi	r25, 0x04	; 4
    8d74:	fc 01       	movw	r30, r24
    8d76:	84 81       	ldd	r24, Z+4	; 0x04
    8d78:	80 95       	com	r24
    8d7a:	88 1f       	adc	r24, r24
    8d7c:	88 27       	eor	r24, r24
    8d7e:	88 1f       	adc	r24, r24
    8d80:	88 23       	and	r24, r24
    8d82:	11 f0       	breq	.+4      	; 0x8d88 <_Z11wifiEnabledv+0x40>
	{
		return false;
    8d84:	80 e0       	ldi	r24, 0x00	; 0
    8d86:	01 c0       	rjmp	.+2      	; 0x8d8a <_Z11wifiEnabledv+0x42>
	}

	return true;
    8d88:	81 e0       	ldi	r24, 0x01	; 1
}
    8d8a:	df 91       	pop	r29
    8d8c:	cf 91       	pop	r28
    8d8e:	08 95       	ret

00008d90 <PORTC_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    8d90:	cf 93       	push	r28
    8d92:	df 93       	push	r29
    8d94:	00 d0       	rcall	.+0      	; 0x8d96 <PORTC_set_pin_pull_mode+0x6>
    8d96:	00 d0       	rcall	.+0      	; 0x8d98 <PORTC_set_pin_pull_mode+0x8>
    8d98:	cd b7       	in	r28, 0x3d	; 61
    8d9a:	de b7       	in	r29, 0x3e	; 62
    8d9c:	8b 83       	std	Y+3, r24	; 0x03
    8d9e:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);
    8da0:	8b 81       	ldd	r24, Y+3	; 0x03
    8da2:	88 2f       	mov	r24, r24
    8da4:	90 e0       	ldi	r25, 0x00	; 0
    8da6:	80 5b       	subi	r24, 0xB0	; 176
    8da8:	9b 4f       	sbci	r25, 0xFB	; 251
    8daa:	89 83       	std	Y+1, r24	; 0x01
    8dac:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    8dae:	8c 81       	ldd	r24, Y+4	; 0x04
    8db0:	81 30       	cpi	r24, 0x01	; 1
    8db2:	59 f4       	brne	.+22     	; 0x8dca <PORTC_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    8db4:	89 81       	ldd	r24, Y+1	; 0x01
    8db6:	9a 81       	ldd	r25, Y+2	; 0x02
    8db8:	fc 01       	movw	r30, r24
    8dba:	80 81       	ld	r24, Z
    8dbc:	28 2f       	mov	r18, r24
    8dbe:	28 60       	ori	r18, 0x08	; 8
    8dc0:	89 81       	ldd	r24, Y+1	; 0x01
    8dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    8dc4:	fc 01       	movw	r30, r24
    8dc6:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    8dc8:	0d c0       	rjmp	.+26     	; 0x8de4 <PORTC_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    8dca:	8c 81       	ldd	r24, Y+4	; 0x04
    8dcc:	88 23       	and	r24, r24
    8dce:	51 f4       	brne	.+20     	; 0x8de4 <PORTC_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    8dd0:	89 81       	ldd	r24, Y+1	; 0x01
    8dd2:	9a 81       	ldd	r25, Y+2	; 0x02
    8dd4:	fc 01       	movw	r30, r24
    8dd6:	80 81       	ld	r24, Z
    8dd8:	28 2f       	mov	r18, r24
    8dda:	27 7f       	andi	r18, 0xF7	; 247
    8ddc:	89 81       	ldd	r24, Y+1	; 0x01
    8dde:	9a 81       	ldd	r25, Y+2	; 0x02
    8de0:	fc 01       	movw	r30, r24
    8de2:	20 83       	st	Z, r18
	}
}
    8de4:	00 00       	nop
    8de6:	24 96       	adiw	r28, 0x04	; 4
    8de8:	cd bf       	out	0x3d, r28	; 61
    8dea:	de bf       	out	0x3e, r29	; 62
    8dec:	df 91       	pop	r29
    8dee:	cf 91       	pop	r28
    8df0:	08 95       	ret

00008df2 <I2C_0_Shutdown>:
/************************************************************************/
/* I2C_0                                                               */
/************************************************************************/

void I2C_0_Shutdown(void)
{
    8df2:	cf 93       	push	r28
    8df4:	df 93       	push	r29
    8df6:	cd b7       	in	r28, 0x3d	; 61
    8df8:	de b7       	in	r29, 0x3e	; 62
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    8dfa:	80 e0       	ldi	r24, 0x00	; 0
    8dfc:	99 e0       	ldi	r25, 0x09	; 9
    8dfe:	21 e0       	ldi	r18, 0x01	; 1
    8e00:	fc 01       	movw	r30, r24
    8e02:	25 83       	std	Z+5, r18	; 0x05
	TWI0.MCTRLA = 0;
    8e04:	80 e0       	ldi	r24, 0x00	; 0
    8e06:	99 e0       	ldi	r25, 0x09	; 9
    8e08:	fc 01       	movw	r30, r24
    8e0a:	13 82       	std	Z+3, r1	; 0x03
}
    8e0c:	00 00       	nop
    8e0e:	df 91       	pop	r29
    8e10:	cf 91       	pop	r28
    8e12:	08 95       	ret

00008e14 <I2C_0_Init>:

void I2C_0_Init(void)
{
    8e14:	cf 93       	push	r28
    8e16:	df 93       	push	r29
    8e18:	cd b7       	in	r28, 0x3d	; 61
    8e1a:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PC2/PC3 */
	PORTMUX.TWIROUTEA &= 0x0A;
    8e1c:	80 ee       	ldi	r24, 0xE0	; 224
    8e1e:	95 e0       	ldi	r25, 0x05	; 5
    8e20:	20 ee       	ldi	r18, 0xE0	; 224
    8e22:	35 e0       	ldi	r19, 0x05	; 5
    8e24:	f9 01       	movw	r30, r18
    8e26:	25 81       	ldd	r18, Z+5	; 0x05
    8e28:	2a 70       	andi	r18, 0x0A	; 10
    8e2a:	fc 01       	movw	r30, r24
    8e2c:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x02;
    8e2e:	80 ee       	ldi	r24, 0xE0	; 224
    8e30:	95 e0       	ldi	r25, 0x05	; 5
    8e32:	20 ee       	ldi	r18, 0xE0	; 224
    8e34:	35 e0       	ldi	r19, 0x05	; 5
    8e36:	f9 01       	movw	r30, r18
    8e38:	25 81       	ldd	r18, Z+5	; 0x05
    8e3a:	22 60       	ori	r18, 0x02	; 2
    8e3c:	fc 01       	movw	r30, r24
    8e3e:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI0.MBAUD = TWI0_BAUD((I2C_SCL_FREQ), 0.3);
	TWI0.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    8e40:	80 e0       	ldi	r24, 0x00	; 0
    8e42:	99 e0       	ldi	r25, 0x09	; 9
    8e44:	23 e7       	ldi	r18, 0x73	; 115
    8e46:	fc 01       	movw	r30, r24
    8e48:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI0.MCTRLA = TWI_ENABLE_bm;
    8e4a:	80 e0       	ldi	r24, 0x00	; 0
    8e4c:	99 e0       	ldi	r25, 0x09	; 9
    8e4e:	21 e0       	ldi	r18, 0x01	; 1
    8e50:	fc 01       	movw	r30, r24
    8e52:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI0.MADDR = 0x00;
    8e54:	80 e0       	ldi	r24, 0x00	; 0
    8e56:	99 e0       	ldi	r25, 0x09	; 9
    8e58:	fc 01       	movw	r30, r24
    8e5a:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI0.MDATA = 0x00;
    8e5c:	80 e0       	ldi	r24, 0x00	; 0
    8e5e:	99 e0       	ldi	r25, 0x09	; 9
    8e60:	fc 01       	movw	r30, r24
    8e62:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    8e64:	80 e0       	ldi	r24, 0x00	; 0
    8e66:	99 e0       	ldi	r25, 0x09	; 9
    8e68:	21 e0       	ldi	r18, 0x01	; 1
    8e6a:	fc 01       	movw	r30, r24
    8e6c:	25 83       	std	Z+5, r18	; 0x05
	/* Select I2C pins PC2/PC3 */
	
	PORTC_set_pin_pull_mode(2, PORT_PULL_UP);
    8e6e:	61 e0       	ldi	r22, 0x01	; 1
    8e70:	82 e0       	ldi	r24, 0x02	; 2
    8e72:	0e 94 c8 46 	call	0x8d90	; 0x8d90 <PORTC_set_pin_pull_mode>
	PORTC_set_pin_pull_mode(3, PORT_PULL_UP);
    8e76:	61 e0       	ldi	r22, 0x01	; 1
    8e78:	83 e0       	ldi	r24, 0x03	; 3
    8e7a:	0e 94 c8 46 	call	0x8d90	; 0x8d90 <PORTC_set_pin_pull_mode>
}
    8e7e:	00 00       	nop
    8e80:	df 91       	pop	r29
    8e82:	cf 91       	pop	r28
    8e84:	08 95       	ret

00008e86 <_ZL11i2c_0_WaitWv>:

static uint8_t i2c_0_WaitW(void)
{
    8e86:	cf 93       	push	r28
    8e88:	df 93       	push	r29
    8e8a:	1f 92       	push	r1
    8e8c:	cd b7       	in	r28, 0x3d	; 61
    8e8e:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    8e90:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 50;
    8e92:	82 e3       	ldi	r24, 0x32	; 50
    8e94:	90 e0       	ldi	r25, 0x00	; 0
    8e96:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_i2c0_timeout_ticks>
    8e9a:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    8e9e:	80 e0       	ldi	r24, 0x00	; 0
    8ea0:	99 e0       	ldi	r25, 0x09	; 9
    8ea2:	fc 01       	movw	r30, r24
    8ea4:	85 81       	ldd	r24, Z+5	; 0x05
    8ea6:	88 2f       	mov	r24, r24
    8ea8:	90 e0       	ldi	r25, 0x00	; 0
    8eaa:	80 7c       	andi	r24, 0xC0	; 192
    8eac:	99 27       	eor	r25, r25
    8eae:	21 e0       	ldi	r18, 0x01	; 1
    8eb0:	89 2b       	or	r24, r25
    8eb2:	09 f4       	brne	.+2      	; 0x8eb6 <_ZL11i2c_0_WaitWv+0x30>
    8eb4:	20 e0       	ldi	r18, 0x00	; 0
    8eb6:	22 23       	and	r18, r18
    8eb8:	a1 f0       	breq	.+40     	; 0x8ee2 <_ZL11i2c_0_WaitWv+0x5c>
		{
			if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    8eba:	80 e0       	ldi	r24, 0x00	; 0
    8ebc:	99 e0       	ldi	r25, 0x09	; 9
    8ebe:	fc 01       	movw	r30, r24
    8ec0:	85 81       	ldd	r24, Z+5	; 0x05
    8ec2:	88 2f       	mov	r24, r24
    8ec4:	90 e0       	ldi	r25, 0x00	; 0
    8ec6:	80 71       	andi	r24, 0x10	; 16
    8ec8:	99 27       	eor	r25, r25
    8eca:	21 e0       	ldi	r18, 0x01	; 1
    8ecc:	89 2b       	or	r24, r25
    8ece:	09 f0       	breq	.+2      	; 0x8ed2 <_ZL11i2c_0_WaitWv+0x4c>
    8ed0:	20 e0       	ldi	r18, 0x00	; 0
    8ed2:	22 23       	and	r18, r18
    8ed4:	19 f0       	breq	.+6      	; 0x8edc <_ZL11i2c_0_WaitWv+0x56>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    8ed6:	81 e0       	ldi	r24, 0x01	; 1
    8ed8:	89 83       	std	Y+1, r24	; 0x01
    8eda:	13 c0       	rjmp	.+38     	; 0x8f02 <_ZL11i2c_0_WaitWv+0x7c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    8edc:	82 e0       	ldi	r24, 0x02	; 2
    8ede:	89 83       	std	Y+1, r24	; 0x01
    8ee0:	10 c0       	rjmp	.+32     	; 0x8f02 <_ZL11i2c_0_WaitWv+0x7c>
			}
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    8ee2:	80 e0       	ldi	r24, 0x00	; 0
    8ee4:	99 e0       	ldi	r25, 0x09	; 9
    8ee6:	fc 01       	movw	r30, r24
    8ee8:	85 81       	ldd	r24, Z+5	; 0x05
    8eea:	88 2f       	mov	r24, r24
    8eec:	90 e0       	ldi	r25, 0x00	; 0
    8eee:	8c 70       	andi	r24, 0x0C	; 12
    8ef0:	99 27       	eor	r25, r25
    8ef2:	21 e0       	ldi	r18, 0x01	; 1
    8ef4:	89 2b       	or	r24, r25
    8ef6:	09 f4       	brne	.+2      	; 0x8efa <_ZL11i2c_0_WaitWv+0x74>
    8ef8:	20 e0       	ldi	r18, 0x00	; 0
    8efa:	22 23       	and	r18, r18
    8efc:	11 f0       	breq	.+4      	; 0x8f02 <_ZL11i2c_0_WaitWv+0x7c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    8efe:	84 e0       	ldi	r24, 0x04	; 4
    8f00:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    8f02:	89 81       	ldd	r24, Y+1	; 0x01
    8f04:	88 23       	and	r24, r24
    8f06:	41 f4       	brne	.+16     	; 0x8f18 <_ZL11i2c_0_WaitWv+0x92>
    8f08:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c0_timeout_ticks>
    8f0c:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c0_timeout_ticks+0x1>
    8f10:	89 2b       	or	r24, r25
    8f12:	11 f0       	breq	.+4      	; 0x8f18 <_ZL11i2c_0_WaitWv+0x92>
    8f14:	81 e0       	ldi	r24, 0x01	; 1
    8f16:	01 c0       	rjmp	.+2      	; 0x8f1a <_ZL11i2c_0_WaitWv+0x94>
    8f18:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
	
	do
    8f1a:	88 23       	and	r24, r24
    8f1c:	09 f0       	breq	.+2      	; 0x8f20 <_ZL11i2c_0_WaitWv+0x9a>
    8f1e:	bf cf       	rjmp	.-130    	; 0x8e9e <_ZL11i2c_0_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	if(!g_i2c0_timeout_ticks) 
    8f20:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c0_timeout_ticks>
    8f24:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c0_timeout_ticks+0x1>
    8f28:	21 e0       	ldi	r18, 0x01	; 1
    8f2a:	89 2b       	or	r24, r25
    8f2c:	09 f0       	breq	.+2      	; 0x8f30 <_ZL11i2c_0_WaitWv+0xaa>
    8f2e:	20 e0       	ldi	r18, 0x00	; 0
    8f30:	22 23       	and	r18, r18
    8f32:	11 f0       	breq	.+4      	; 0x8f38 <_ZL11i2c_0_WaitWv+0xb2>
	{
		state = I2C_ERROR;
    8f34:	84 e0       	ldi	r24, 0x04	; 4
    8f36:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return state;
    8f38:	89 81       	ldd	r24, Y+1	; 0x01
}
    8f3a:	0f 90       	pop	r0
    8f3c:	df 91       	pop	r29
    8f3e:	cf 91       	pop	r28
    8f40:	08 95       	ret

00008f42 <_ZL11i2c_0_WaitRv>:

static uint8_t i2c_0_WaitR(void)
{
    8f42:	cf 93       	push	r28
    8f44:	df 93       	push	r29
    8f46:	1f 92       	push	r1
    8f48:	cd b7       	in	r28, 0x3d	; 61
    8f4a:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    8f4c:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 50;
    8f4e:	82 e3       	ldi	r24, 0x32	; 50
    8f50:	90 e0       	ldi	r25, 0x00	; 0
    8f52:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_i2c0_timeout_ticks>
    8f56:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    8f5a:	80 e0       	ldi	r24, 0x00	; 0
    8f5c:	99 e0       	ldi	r25, 0x09	; 9
    8f5e:	fc 01       	movw	r30, r24
    8f60:	85 81       	ldd	r24, Z+5	; 0x05
    8f62:	88 2f       	mov	r24, r24
    8f64:	90 e0       	ldi	r25, 0x00	; 0
    8f66:	80 7c       	andi	r24, 0xC0	; 192
    8f68:	99 27       	eor	r25, r25
    8f6a:	21 e0       	ldi	r18, 0x01	; 1
    8f6c:	89 2b       	or	r24, r25
    8f6e:	09 f4       	brne	.+2      	; 0x8f72 <_ZL11i2c_0_WaitRv+0x30>
    8f70:	20 e0       	ldi	r18, 0x00	; 0
    8f72:	22 23       	and	r18, r18
    8f74:	19 f0       	breq	.+6      	; 0x8f7c <_ZL11i2c_0_WaitRv+0x3a>
		{
			state = I2C_READY;
    8f76:	83 e0       	ldi	r24, 0x03	; 3
    8f78:	89 83       	std	Y+1, r24	; 0x01
    8f7a:	10 c0       	rjmp	.+32     	; 0x8f9c <_ZL11i2c_0_WaitRv+0x5a>
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    8f7c:	80 e0       	ldi	r24, 0x00	; 0
    8f7e:	99 e0       	ldi	r25, 0x09	; 9
    8f80:	fc 01       	movw	r30, r24
    8f82:	85 81       	ldd	r24, Z+5	; 0x05
    8f84:	88 2f       	mov	r24, r24
    8f86:	90 e0       	ldi	r25, 0x00	; 0
    8f88:	8c 70       	andi	r24, 0x0C	; 12
    8f8a:	99 27       	eor	r25, r25
    8f8c:	21 e0       	ldi	r18, 0x01	; 1
    8f8e:	89 2b       	or	r24, r25
    8f90:	09 f4       	brne	.+2      	; 0x8f94 <_ZL11i2c_0_WaitRv+0x52>
    8f92:	20 e0       	ldi	r18, 0x00	; 0
    8f94:	22 23       	and	r18, r18
    8f96:	11 f0       	breq	.+4      	; 0x8f9c <_ZL11i2c_0_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    8f98:	84 e0       	ldi	r24, 0x04	; 4
    8f9a:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    8f9c:	89 81       	ldd	r24, Y+1	; 0x01
    8f9e:	88 23       	and	r24, r24
    8fa0:	41 f4       	brne	.+16     	; 0x8fb2 <_ZL11i2c_0_WaitRv+0x70>
    8fa2:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c0_timeout_ticks>
    8fa6:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c0_timeout_ticks+0x1>
    8faa:	89 2b       	or	r24, r25
    8fac:	11 f0       	breq	.+4      	; 0x8fb2 <_ZL11i2c_0_WaitRv+0x70>
    8fae:	81 e0       	ldi	r24, 0x01	; 1
    8fb0:	01 c0       	rjmp	.+2      	; 0x8fb4 <_ZL11i2c_0_WaitRv+0x72>
    8fb2:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
	
	do
    8fb4:	88 23       	and	r24, r24
    8fb6:	09 f0       	breq	.+2      	; 0x8fba <_ZL11i2c_0_WaitRv+0x78>
    8fb8:	d0 cf       	rjmp	.-96     	; 0x8f5a <_ZL11i2c_0_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    8fba:	89 81       	ldd	r24, Y+1	; 0x01
}
    8fbc:	0f 90       	pop	r0
    8fbe:	df 91       	pop	r29
    8fc0:	cf 91       	pop	r28
    8fc2:	08 95       	ret

00008fc4 <I2C_0_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_0_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    8fc4:	cf 93       	push	r28
    8fc6:	df 93       	push	r29
    8fc8:	cd b7       	in	r28, 0x3d	; 61
    8fca:	de b7       	in	r29, 0x3e	; 62
    8fcc:	26 97       	sbiw	r28, 0x06	; 6
    8fce:	cd bf       	out	0x3d, r28	; 61
    8fd0:	de bf       	out	0x3e, r29	; 62
    8fd2:	8a 83       	std	Y+2, r24	; 0x02
    8fd4:	6b 83       	std	Y+3, r22	; 0x03
    8fd6:	4c 83       	std	Y+4, r20	; 0x04
    8fd8:	5d 83       	std	Y+5, r21	; 0x05
    8fda:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    8fdc:	8f ef       	ldi	r24, 0xFF	; 255
    8fde:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send slave address */
	TWI0.MADDR = slaveAddr;
    8fe0:	80 e0       	ldi	r24, 0x00	; 0
    8fe2:	99 e0       	ldi	r25, 0x09	; 9
    8fe4:	2a 81       	ldd	r18, Y+2	; 0x02
    8fe6:	fc 01       	movw	r30, r24
    8fe8:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    8fea:	0e 94 43 47 	call	0x8e86	; 0x8e86 <_ZL11i2c_0_WaitWv>
    8fee:	98 2f       	mov	r25, r24
    8ff0:	81 e0       	ldi	r24, 0x01	; 1
    8ff2:	91 30       	cpi	r25, 0x01	; 1
    8ff4:	09 f4       	brne	.+2      	; 0x8ff8 <I2C_0_SendData+0x34>
    8ff6:	80 e0       	ldi	r24, 0x00	; 0
    8ff8:	88 23       	and	r24, r24
    8ffa:	11 f0       	breq	.+4      	; 0x9000 <I2C_0_SendData+0x3c>
	{
		return retVal;
    8ffc:	89 81       	ldd	r24, Y+1	; 0x01
    8ffe:	44 c0       	rjmp	.+136    	; 0x9088 <I2C_0_SendData+0xc4>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    9000:	80 e0       	ldi	r24, 0x00	; 0
    9002:	99 e0       	ldi	r25, 0x09	; 9
    9004:	2b 81       	ldd	r18, Y+3	; 0x03
    9006:	fc 01       	movw	r30, r24
    9008:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    900a:	0e 94 43 47 	call	0x8e86	; 0x8e86 <_ZL11i2c_0_WaitWv>
    900e:	98 2f       	mov	r25, r24
    9010:	81 e0       	ldi	r24, 0x01	; 1
    9012:	91 30       	cpi	r25, 0x01	; 1
    9014:	09 f4       	brne	.+2      	; 0x9018 <I2C_0_SendData+0x54>
    9016:	80 e0       	ldi	r24, 0x00	; 0
    9018:	88 23       	and	r24, r24
    901a:	11 f0       	breq	.+4      	; 0x9020 <I2C_0_SendData+0x5c>
	{
		return retVal;
    901c:	89 81       	ldd	r24, Y+1	; 0x01
    901e:	34 c0       	rjmp	.+104    	; 0x9088 <I2C_0_SendData+0xc4>
	}

	retVal = 0;
    9020:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    9022:	8e 81       	ldd	r24, Y+6	; 0x06
    9024:	88 23       	and	r24, r24
    9026:	79 f1       	breq	.+94     	; 0x9086 <I2C_0_SendData+0xc2>
    9028:	8c 81       	ldd	r24, Y+4	; 0x04
    902a:	9d 81       	ldd	r25, Y+5	; 0x05
    902c:	89 2b       	or	r24, r25
    902e:	59 f1       	breq	.+86     	; 0x9086 <I2C_0_SendData+0xc2>
	{
		while(len--)
    9030:	8e 81       	ldd	r24, Y+6	; 0x06
    9032:	9f ef       	ldi	r25, 0xFF	; 255
    9034:	98 0f       	add	r25, r24
    9036:	9e 83       	std	Y+6, r25	; 0x06
    9038:	91 e0       	ldi	r25, 0x01	; 1
    903a:	88 23       	and	r24, r24
    903c:	09 f4       	brne	.+2      	; 0x9040 <I2C_0_SendData+0x7c>
    903e:	90 e0       	ldi	r25, 0x00	; 0
    9040:	99 23       	and	r25, r25
    9042:	09 f1       	breq	.+66     	; 0x9086 <I2C_0_SendData+0xc2>
		{
			TWI0.MDATA = *pData;
    9044:	80 e0       	ldi	r24, 0x00	; 0
    9046:	99 e0       	ldi	r25, 0x09	; 9
    9048:	2c 81       	ldd	r18, Y+4	; 0x04
    904a:	3d 81       	ldd	r19, Y+5	; 0x05
    904c:	f9 01       	movw	r30, r18
    904e:	20 81       	ld	r18, Z
    9050:	fc 01       	movw	r30, r24
    9052:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_0_WaitW() == I2C_ACKED)
    9054:	0e 94 43 47 	call	0x8e86	; 0x8e86 <_ZL11i2c_0_WaitWv>
    9058:	98 2f       	mov	r25, r24
    905a:	81 e0       	ldi	r24, 0x01	; 1
    905c:	91 30       	cpi	r25, 0x01	; 1
    905e:	09 f0       	breq	.+2      	; 0x9062 <I2C_0_SendData+0x9e>
    9060:	80 e0       	ldi	r24, 0x00	; 0
    9062:	88 23       	and	r24, r24
    9064:	79 f0       	breq	.+30     	; 0x9084 <I2C_0_SendData+0xc0>
			{
				retVal++;
    9066:	89 81       	ldd	r24, Y+1	; 0x01
    9068:	8f 5f       	subi	r24, 0xFF	; 255
    906a:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    906c:	8c 81       	ldd	r24, Y+4	; 0x04
    906e:	9d 81       	ldd	r25, Y+5	; 0x05
    9070:	01 96       	adiw	r24, 0x01	; 1
    9072:	8c 83       	std	Y+4, r24	; 0x04
    9074:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_0_EndSession();
    9076:	8e 81       	ldd	r24, Y+6	; 0x06
    9078:	88 23       	and	r24, r24
    907a:	11 f4       	brne	.+4      	; 0x9080 <I2C_0_SendData+0xbc>
    907c:	0e 94 c8 48 	call	0x9190	; 0x9190 <I2C_0_EndSession>
				continue;
    9080:	00 00       	nop
	}

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    9082:	d6 cf       	rjmp	.-84     	; 0x9030 <I2C_0_SendData+0x6c>
				if(!len) I2C_0_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    9084:	00 00       	nop
			}
		}
	}
	
	return retVal;
    9086:	89 81       	ldd	r24, Y+1	; 0x01
}
    9088:	26 96       	adiw	r28, 0x06	; 6
    908a:	cd bf       	out	0x3d, r28	; 61
    908c:	de bf       	out	0x3e, r29	; 62
    908e:	df 91       	pop	r29
    9090:	cf 91       	pop	r28
    9092:	08 95       	ret

00009094 <I2C_0_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_0_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    9094:	cf 93       	push	r28
    9096:	df 93       	push	r29
    9098:	cd b7       	in	r28, 0x3d	; 61
    909a:	de b7       	in	r29, 0x3e	; 62
    909c:	26 97       	sbiw	r28, 0x06	; 6
    909e:	cd bf       	out	0x3d, r28	; 61
    90a0:	de bf       	out	0x3e, r29	; 62
    90a2:	8a 83       	std	Y+2, r24	; 0x02
    90a4:	6b 83       	std	Y+3, r22	; 0x03
    90a6:	4c 83       	std	Y+4, r20	; 0x04
    90a8:	5d 83       	std	Y+5, r21	; 0x05
    90aa:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    90ac:	8f ef       	ldi	r24, 0xFF	; 255
    90ae:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI0.MADDR = slaveAddr;
    90b0:	80 e0       	ldi	r24, 0x00	; 0
    90b2:	99 e0       	ldi	r25, 0x09	; 9
    90b4:	2a 81       	ldd	r18, Y+2	; 0x02
    90b6:	fc 01       	movw	r30, r24
    90b8:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    90ba:	0e 94 43 47 	call	0x8e86	; 0x8e86 <_ZL11i2c_0_WaitWv>
    90be:	98 2f       	mov	r25, r24
    90c0:	81 e0       	ldi	r24, 0x01	; 1
    90c2:	91 30       	cpi	r25, 0x01	; 1
    90c4:	09 f4       	brne	.+2      	; 0x90c8 <I2C_0_GetData+0x34>
    90c6:	80 e0       	ldi	r24, 0x00	; 0
    90c8:	88 23       	and	r24, r24
    90ca:	11 f0       	breq	.+4      	; 0x90d0 <I2C_0_GetData+0x3c>
	{
		return retVal;
    90cc:	89 81       	ldd	r24, Y+1	; 0x01
    90ce:	5a c0       	rjmp	.+180    	; 0x9184 <I2C_0_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    90d0:	80 e0       	ldi	r24, 0x00	; 0
    90d2:	99 e0       	ldi	r25, 0x09	; 9
    90d4:	2b 81       	ldd	r18, Y+3	; 0x03
    90d6:	fc 01       	movw	r30, r24
    90d8:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    90da:	0e 94 43 47 	call	0x8e86	; 0x8e86 <_ZL11i2c_0_WaitWv>
    90de:	98 2f       	mov	r25, r24
    90e0:	81 e0       	ldi	r24, 0x01	; 1
    90e2:	91 30       	cpi	r25, 0x01	; 1
    90e4:	09 f4       	brne	.+2      	; 0x90e8 <I2C_0_GetData+0x54>
    90e6:	80 e0       	ldi	r24, 0x00	; 0
    90e8:	88 23       	and	r24, r24
    90ea:	11 f0       	breq	.+4      	; 0x90f0 <I2C_0_GetData+0x5c>
	{
		return retVal;
    90ec:	89 81       	ldd	r24, Y+1	; 0x01
    90ee:	4a c0       	rjmp	.+148    	; 0x9184 <I2C_0_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI0.MADDR = slaveAddr | 0x01;
    90f0:	80 e0       	ldi	r24, 0x00	; 0
    90f2:	99 e0       	ldi	r25, 0x09	; 9
    90f4:	2a 81       	ldd	r18, Y+2	; 0x02
    90f6:	21 60       	ori	r18, 0x01	; 1
    90f8:	fc 01       	movw	r30, r24
    90fa:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    90fc:	0e 94 43 47 	call	0x8e86	; 0x8e86 <_ZL11i2c_0_WaitWv>
    9100:	98 2f       	mov	r25, r24
    9102:	81 e0       	ldi	r24, 0x01	; 1
    9104:	91 30       	cpi	r25, 0x01	; 1
    9106:	09 f4       	brne	.+2      	; 0x910a <I2C_0_GetData+0x76>
    9108:	80 e0       	ldi	r24, 0x00	; 0
    910a:	88 23       	and	r24, r24
    910c:	11 f0       	breq	.+4      	; 0x9112 <I2C_0_GetData+0x7e>
	{
		return retVal;
    910e:	89 81       	ldd	r24, Y+1	; 0x01
    9110:	39 c0       	rjmp	.+114    	; 0x9184 <I2C_0_GetData+0xf0>
	}
	
	retVal = 0;
    9112:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    9114:	8e 81       	ldd	r24, Y+6	; 0x06
    9116:	88 23       	and	r24, r24
    9118:	a1 f1       	breq	.+104    	; 0x9182 <I2C_0_GetData+0xee>
    911a:	8c 81       	ldd	r24, Y+4	; 0x04
    911c:	9d 81       	ldd	r25, Y+5	; 0x05
    911e:	89 2b       	or	r24, r25
    9120:	81 f1       	breq	.+96     	; 0x9182 <I2C_0_GetData+0xee>
	{
		while(len--)
    9122:	8e 81       	ldd	r24, Y+6	; 0x06
    9124:	9f ef       	ldi	r25, 0xFF	; 255
    9126:	98 0f       	add	r25, r24
    9128:	9e 83       	std	Y+6, r25	; 0x06
    912a:	91 e0       	ldi	r25, 0x01	; 1
    912c:	88 23       	and	r24, r24
    912e:	09 f4       	brne	.+2      	; 0x9132 <I2C_0_GetData+0x9e>
    9130:	90 e0       	ldi	r25, 0x00	; 0
    9132:	99 23       	and	r25, r25
    9134:	31 f1       	breq	.+76     	; 0x9182 <I2C_0_GetData+0xee>
		{
			if(i2c_0_WaitR() == I2C_READY)
    9136:	0e 94 a1 47 	call	0x8f42	; 0x8f42 <_ZL11i2c_0_WaitRv>
    913a:	98 2f       	mov	r25, r24
    913c:	81 e0       	ldi	r24, 0x01	; 1
    913e:	93 30       	cpi	r25, 0x03	; 3
    9140:	09 f0       	breq	.+2      	; 0x9144 <I2C_0_GetData+0xb0>
    9142:	80 e0       	ldi	r24, 0x00	; 0
    9144:	88 23       	and	r24, r24
    9146:	e1 f0       	breq	.+56     	; 0x9180 <I2C_0_GetData+0xec>
			{
				*pData = TWI0.MDATA;
    9148:	80 e0       	ldi	r24, 0x00	; 0
    914a:	99 e0       	ldi	r25, 0x09	; 9
    914c:	fc 01       	movw	r30, r24
    914e:	20 85       	ldd	r18, Z+8	; 0x08
    9150:	8c 81       	ldd	r24, Y+4	; 0x04
    9152:	9d 81       	ldd	r25, Y+5	; 0x05
    9154:	fc 01       	movw	r30, r24
    9156:	20 83       	st	Z, r18
				TWI0.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    9158:	80 e0       	ldi	r24, 0x00	; 0
    915a:	99 e0       	ldi	r25, 0x09	; 9
    915c:	2e 81       	ldd	r18, Y+6	; 0x06
    915e:	22 23       	and	r18, r18
    9160:	11 f4       	brne	.+4      	; 0x9166 <I2C_0_GetData+0xd2>
    9162:	27 e0       	ldi	r18, 0x07	; 7
    9164:	01 c0       	rjmp	.+2      	; 0x9168 <I2C_0_GetData+0xd4>
    9166:	22 e0       	ldi	r18, 0x02	; 2
    9168:	fc 01       	movw	r30, r24
    916a:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    916c:	89 81       	ldd	r24, Y+1	; 0x01
    916e:	8f 5f       	subi	r24, 0xFF	; 255
    9170:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9172:	8c 81       	ldd	r24, Y+4	; 0x04
    9174:	9d 81       	ldd	r25, Y+5	; 0x05
    9176:	01 96       	adiw	r24, 0x01	; 1
    9178:	8c 83       	std	Y+4, r24	; 0x04
    917a:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    917c:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    917e:	d1 cf       	rjmp	.-94     	; 0x9122 <I2C_0_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    9180:	00 00       	nop
		}
	}
	
	return retVal;
    9182:	89 81       	ldd	r24, Y+1	; 0x01
}
    9184:	26 96       	adiw	r28, 0x06	; 6
    9186:	cd bf       	out	0x3d, r28	; 61
    9188:	de bf       	out	0x3e, r29	; 62
    918a:	df 91       	pop	r29
    918c:	cf 91       	pop	r28
    918e:	08 95       	ret

00009190 <I2C_0_EndSession>:

void I2C_0_EndSession(void)
{
    9190:	cf 93       	push	r28
    9192:	df 93       	push	r29
    9194:	cd b7       	in	r28, 0x3d	; 61
    9196:	de b7       	in	r29, 0x3e	; 62
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    9198:	80 e0       	ldi	r24, 0x00	; 0
    919a:	99 e0       	ldi	r25, 0x09	; 9
    919c:	23 e0       	ldi	r18, 0x03	; 3
    919e:	fc 01       	movw	r30, r24
    91a0:	24 83       	std	Z+4, r18	; 0x04
}
    91a2:	00 00       	nop
    91a4:	df 91       	pop	r29
    91a6:	cf 91       	pop	r28
    91a8:	08 95       	ret

000091aa <PORTD_set_pin_level>:
	}
	else
	{
		LED_set_GREEN_level(OFF);
	}
}
    91aa:	cf 93       	push	r28
    91ac:	df 93       	push	r29
    91ae:	00 d0       	rcall	.+0      	; 0x91b0 <PORTD_set_pin_level+0x6>
    91b0:	cd b7       	in	r28, 0x3d	; 61
    91b2:	de b7       	in	r29, 0x3e	; 62
    91b4:	89 83       	std	Y+1, r24	; 0x01
    91b6:	6a 83       	std	Y+2, r22	; 0x02
    91b8:	8a 81       	ldd	r24, Y+2	; 0x02
    91ba:	88 23       	and	r24, r24
    91bc:	a9 f0       	breq	.+42     	; 0x91e8 <PORTD_set_pin_level+0x3e>
    91be:	8c e0       	ldi	r24, 0x0C	; 12
    91c0:	90 e0       	ldi	r25, 0x00	; 0
    91c2:	2c e0       	ldi	r18, 0x0C	; 12
    91c4:	30 e0       	ldi	r19, 0x00	; 0
    91c6:	f9 01       	movw	r30, r18
    91c8:	21 81       	ldd	r18, Z+1	; 0x01
    91ca:	62 2f       	mov	r22, r18
    91cc:	29 81       	ldd	r18, Y+1	; 0x01
    91ce:	42 2f       	mov	r20, r18
    91d0:	50 e0       	ldi	r21, 0x00	; 0
    91d2:	21 e0       	ldi	r18, 0x01	; 1
    91d4:	30 e0       	ldi	r19, 0x00	; 0
    91d6:	02 c0       	rjmp	.+4      	; 0x91dc <PORTD_set_pin_level+0x32>
    91d8:	22 0f       	add	r18, r18
    91da:	33 1f       	adc	r19, r19
    91dc:	4a 95       	dec	r20
    91de:	e2 f7       	brpl	.-8      	; 0x91d8 <PORTD_set_pin_level+0x2e>
    91e0:	26 2b       	or	r18, r22
    91e2:	fc 01       	movw	r30, r24
    91e4:	21 83       	std	Z+1, r18	; 0x01
    91e6:	15 c0       	rjmp	.+42     	; 0x9212 <PORTD_set_pin_level+0x68>
    91e8:	8c e0       	ldi	r24, 0x0C	; 12
    91ea:	90 e0       	ldi	r25, 0x00	; 0
    91ec:	2c e0       	ldi	r18, 0x0C	; 12
    91ee:	30 e0       	ldi	r19, 0x00	; 0
    91f0:	f9 01       	movw	r30, r18
    91f2:	21 81       	ldd	r18, Z+1	; 0x01
    91f4:	62 2f       	mov	r22, r18
    91f6:	29 81       	ldd	r18, Y+1	; 0x01
    91f8:	42 2f       	mov	r20, r18
    91fa:	50 e0       	ldi	r21, 0x00	; 0
    91fc:	21 e0       	ldi	r18, 0x01	; 1
    91fe:	30 e0       	ldi	r19, 0x00	; 0
    9200:	02 c0       	rjmp	.+4      	; 0x9206 <PORTD_set_pin_level+0x5c>
    9202:	22 0f       	add	r18, r18
    9204:	33 1f       	adc	r19, r19
    9206:	4a 95       	dec	r20
    9208:	e2 f7       	brpl	.-8      	; 0x9202 <PORTD_set_pin_level+0x58>
    920a:	20 95       	com	r18
    920c:	26 23       	and	r18, r22
    920e:	fc 01       	movw	r30, r24
    9210:	21 83       	std	Z+1, r18	; 0x01
    9212:	00 00       	nop
    9214:	0f 90       	pop	r0
    9216:	0f 90       	pop	r0
    9218:	df 91       	pop	r29
    921a:	cf 91       	pop	r28
    921c:	08 95       	ret

0000921e <_ZL17LED_set_RED_levelb>:
    921e:	cf 93       	push	r28
    9220:	df 93       	push	r29
    9222:	1f 92       	push	r1
    9224:	cd b7       	in	r28, 0x3d	; 61
    9226:	de b7       	in	r29, 0x3e	; 62
    9228:	89 83       	std	Y+1, r24	; 0x01
    922a:	69 81       	ldd	r22, Y+1	; 0x01
    922c:	82 e0       	ldi	r24, 0x02	; 2
    922e:	0e 94 d5 48 	call	0x91aa	; 0x91aa <PORTD_set_pin_level>
    9232:	00 00       	nop
    9234:	0f 90       	pop	r0
    9236:	df 91       	pop	r29
    9238:	cf 91       	pop	r28
    923a:	08 95       	ret

0000923c <_ZL19LED_set_GREEN_levelb>:
    923c:	cf 93       	push	r28
    923e:	df 93       	push	r29
    9240:	1f 92       	push	r1
    9242:	cd b7       	in	r28, 0x3d	; 61
    9244:	de b7       	in	r29, 0x3e	; 62
    9246:	89 83       	std	Y+1, r24	; 0x01
    9248:	69 81       	ldd	r22, Y+1	; 0x01
    924a:	82 e0       	ldi	r24, 0x02	; 2
    924c:	0e 94 d5 48 	call	0x91aa	; 0x91aa <PORTD_set_pin_level>
    9250:	00 00       	nop
    9252:	0f 90       	pop	r0
    9254:	df 91       	pop	r29
    9256:	cf 91       	pop	r28
    9258:	08 95       	ret

0000925a <_ZN4ledsC1Ev>:
    925a:	cf 93       	push	r28
    925c:	df 93       	push	r29
    925e:	00 d0       	rcall	.+0      	; 0x9260 <_ZN4ledsC1Ev+0x6>
    9260:	cd b7       	in	r28, 0x3d	; 61
    9262:	de b7       	in	r29, 0x3e	; 62
    9264:	89 83       	std	Y+1, r24	; 0x01
    9266:	9a 83       	std	Y+2, r25	; 0x02
    9268:	00 00       	nop
    926a:	0f 90       	pop	r0
    926c:	0f 90       	pop	r0
    926e:	df 91       	pop	r29
    9270:	cf 91       	pop	r28
    9272:	08 95       	ret

00009274 <_ZN4ledsD1Ev>:
    9274:	cf 93       	push	r28
    9276:	df 93       	push	r29
    9278:	00 d0       	rcall	.+0      	; 0x927a <_ZN4ledsD1Ev+0x6>
    927a:	cd b7       	in	r28, 0x3d	; 61
    927c:	de b7       	in	r29, 0x3e	; 62
    927e:	89 83       	std	Y+1, r24	; 0x01
    9280:	9a 83       	std	Y+2, r25	; 0x02
    9282:	00 00       	nop
    9284:	0f 90       	pop	r0
    9286:	0f 90       	pop	r0
    9288:	df 91       	pop	r29
    928a:	cf 91       	pop	r28
    928c:	08 95       	ret

0000928e <__vector_13>:
    928e:	1f 92       	push	r1
    9290:	0f 92       	push	r0
    9292:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    9296:	0f 92       	push	r0
    9298:	11 24       	eor	r1, r1
    929a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    929e:	0f 92       	push	r0
    92a0:	2f 93       	push	r18
    92a2:	3f 93       	push	r19
    92a4:	4f 93       	push	r20
    92a6:	5f 93       	push	r21
    92a8:	6f 93       	push	r22
    92aa:	7f 93       	push	r23
    92ac:	8f 93       	push	r24
    92ae:	9f 93       	push	r25
    92b0:	af 93       	push	r26
    92b2:	bf 93       	push	r27
    92b4:	ef 93       	push	r30
    92b6:	ff 93       	push	r31
    92b8:	cf 93       	push	r28
    92ba:	df 93       	push	r29
    92bc:	cd b7       	in	r28, 0x3d	; 61
    92be:	de b7       	in	r29, 0x3e	; 62
    92c0:	80 91 65 47 	lds	r24, 0x4765	; 0x804765 <_ZL17led_timeout_count>
    92c4:	90 91 66 47 	lds	r25, 0x4766	; 0x804766 <_ZL17led_timeout_count+0x1>
    92c8:	a0 91 67 47 	lds	r26, 0x4767	; 0x804767 <_ZL17led_timeout_count+0x2>
    92cc:	b0 91 68 47 	lds	r27, 0x4768	; 0x804768 <_ZL17led_timeout_count+0x3>
    92d0:	89 2b       	or	r24, r25
    92d2:	8a 2b       	or	r24, r26
    92d4:	8b 2b       	or	r24, r27
    92d6:	21 f4       	brne	.+8      	; 0x92e0 <__vector_13+0x52>
    92d8:	80 91 77 47 	lds	r24, 0x4777	; 0x804777 <_ZL10g_override>
    92dc:	88 23       	and	r24, r24
    92de:	11 f0       	breq	.+4      	; 0x92e4 <__vector_13+0x56>
    92e0:	81 e0       	ldi	r24, 0x01	; 1
    92e2:	01 c0       	rjmp	.+2      	; 0x92e6 <__vector_13+0x58>
    92e4:	80 e0       	ldi	r24, 0x00	; 0
    92e6:	88 23       	and	r24, r24
    92e8:	09 f4       	brne	.+2      	; 0x92ec <__vector_13+0x5e>
    92ea:	1b c1       	rjmp	.+566    	; 0x9522 <__vector_13+0x294>
    92ec:	80 91 65 47 	lds	r24, 0x4765	; 0x804765 <_ZL17led_timeout_count>
    92f0:	90 91 66 47 	lds	r25, 0x4766	; 0x804766 <_ZL17led_timeout_count+0x1>
    92f4:	a0 91 67 47 	lds	r26, 0x4767	; 0x804767 <_ZL17led_timeout_count+0x2>
    92f8:	b0 91 68 47 	lds	r27, 0x4768	; 0x804768 <_ZL17led_timeout_count+0x3>
    92fc:	01 97       	sbiw	r24, 0x01	; 1
    92fe:	a1 09       	sbc	r26, r1
    9300:	b1 09       	sbc	r27, r1
    9302:	80 93 65 47 	sts	0x4765, r24	; 0x804765 <_ZL17led_timeout_count>
    9306:	90 93 66 47 	sts	0x4766, r25	; 0x804766 <_ZL17led_timeout_count+0x1>
    930a:	a0 93 67 47 	sts	0x4767, r26	; 0x804767 <_ZL17led_timeout_count+0x2>
    930e:	b0 93 68 47 	sts	0x4768, r27	; 0x804768 <_ZL17led_timeout_count+0x3>
    9312:	80 e1       	ldi	r24, 0x10	; 16
    9314:	9b e0       	ldi	r25, 0x0B	; 11
    9316:	fc 01       	movw	r30, r24
    9318:	86 81       	ldd	r24, Z+6	; 0x06
    931a:	88 2f       	mov	r24, r24
    931c:	90 e0       	ldi	r25, 0x00	; 0
    931e:	81 70       	andi	r24, 0x01	; 1
    9320:	99 27       	eor	r25, r25
    9322:	21 e0       	ldi	r18, 0x01	; 1
    9324:	89 2b       	or	r24, r25
    9326:	09 f4       	brne	.+2      	; 0x932a <__vector_13+0x9c>
    9328:	20 e0       	ldi	r18, 0x00	; 0
    932a:	22 23       	and	r18, r18
    932c:	09 f4       	brne	.+2      	; 0x9330 <__vector_13+0xa2>
    932e:	08 c1       	rjmp	.+528    	; 0x9540 <__vector_13+0x2b2>
    9330:	80 91 71 47 	lds	r24, 0x4771	; 0x804771 <_ZL15red_blink_count>
    9334:	90 91 72 47 	lds	r25, 0x4772	; 0x804772 <_ZL15red_blink_count+0x1>
    9338:	21 e0       	ldi	r18, 0x01	; 1
    933a:	89 2b       	or	r24, r25
    933c:	09 f4       	brne	.+2      	; 0x9340 <__vector_13+0xb2>
    933e:	20 e0       	ldi	r18, 0x00	; 0
    9340:	22 23       	and	r18, r18
    9342:	09 f4       	brne	.+2      	; 0x9346 <__vector_13+0xb8>
    9344:	6a c0       	rjmp	.+212    	; 0x941a <__vector_13+0x18c>
    9346:	80 91 71 47 	lds	r24, 0x4771	; 0x804771 <_ZL15red_blink_count>
    934a:	90 91 72 47 	lds	r25, 0x4772	; 0x804772 <_ZL15red_blink_count+0x1>
    934e:	21 e0       	ldi	r18, 0x01	; 1
    9350:	02 97       	sbiw	r24, 0x02	; 2
    9352:	0c f4       	brge	.+2      	; 0x9356 <__vector_13+0xc8>
    9354:	20 e0       	ldi	r18, 0x00	; 0
    9356:	22 23       	and	r18, r18
    9358:	69 f0       	breq	.+26     	; 0x9374 <__vector_13+0xe6>
    935a:	81 e0       	ldi	r24, 0x01	; 1
    935c:	0e 94 0f 49 	call	0x921e	; 0x921e <_ZL17LED_set_RED_levelb>
    9360:	80 91 71 47 	lds	r24, 0x4771	; 0x804771 <_ZL15red_blink_count>
    9364:	90 91 72 47 	lds	r25, 0x4772	; 0x804772 <_ZL15red_blink_count+0x1>
    9368:	01 97       	sbiw	r24, 0x01	; 1
    936a:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    936e:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
    9372:	17 c0       	rjmp	.+46     	; 0x93a2 <__vector_13+0x114>
    9374:	80 91 71 47 	lds	r24, 0x4771	; 0x804771 <_ZL15red_blink_count>
    9378:	90 91 72 47 	lds	r25, 0x4772	; 0x804772 <_ZL15red_blink_count+0x1>
    937c:	21 e0       	ldi	r18, 0x01	; 1
    937e:	8f 3f       	cpi	r24, 0xFF	; 255
    9380:	9f 4f       	sbci	r25, 0xFF	; 255
    9382:	0c f0       	brlt	.+2      	; 0x9386 <__vector_13+0xf8>
    9384:	20 e0       	ldi	r18, 0x00	; 0
    9386:	22 23       	and	r18, r18
    9388:	61 f0       	breq	.+24     	; 0x93a2 <__vector_13+0x114>
    938a:	80 e0       	ldi	r24, 0x00	; 0
    938c:	0e 94 0f 49 	call	0x921e	; 0x921e <_ZL17LED_set_RED_levelb>
    9390:	80 91 71 47 	lds	r24, 0x4771	; 0x804771 <_ZL15red_blink_count>
    9394:	90 91 72 47 	lds	r25, 0x4772	; 0x804772 <_ZL15red_blink_count+0x1>
    9398:	01 96       	adiw	r24, 0x01	; 1
    939a:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    939e:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
    93a2:	80 91 71 47 	lds	r24, 0x4771	; 0x804771 <_ZL15red_blink_count>
    93a6:	90 91 72 47 	lds	r25, 0x4772	; 0x804772 <_ZL15red_blink_count+0x1>
    93aa:	21 e0       	ldi	r18, 0x01	; 1
    93ac:	01 97       	sbiw	r24, 0x01	; 1
    93ae:	09 f0       	breq	.+2      	; 0x93b2 <__vector_13+0x124>
    93b0:	20 e0       	ldi	r18, 0x00	; 0
    93b2:	22 23       	and	r18, r18
    93b4:	f9 f0       	breq	.+62     	; 0x93f4 <__vector_13+0x166>
    93b6:	80 91 6b 47 	lds	r24, 0x476B	; 0x80476b <_ZL20red_blink_off_period>
    93ba:	90 91 6c 47 	lds	r25, 0x476C	; 0x80476c <_ZL20red_blink_off_period+0x1>
    93be:	21 e0       	ldi	r18, 0x01	; 1
    93c0:	89 2b       	or	r24, r25
    93c2:	09 f4       	brne	.+2      	; 0x93c6 <__vector_13+0x138>
    93c4:	20 e0       	ldi	r18, 0x00	; 0
    93c6:	22 23       	and	r18, r18
    93c8:	61 f0       	breq	.+24     	; 0x93e2 <__vector_13+0x154>
    93ca:	80 91 6b 47 	lds	r24, 0x476B	; 0x80476b <_ZL20red_blink_off_period>
    93ce:	90 91 6c 47 	lds	r25, 0x476C	; 0x80476c <_ZL20red_blink_off_period+0x1>
    93d2:	91 95       	neg	r25
    93d4:	81 95       	neg	r24
    93d6:	91 09       	sbc	r25, r1
    93d8:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    93dc:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
    93e0:	23 c0       	rjmp	.+70     	; 0x9428 <__vector_13+0x19a>
    93e2:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    93e6:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    93ea:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    93ee:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
    93f2:	1a c0       	rjmp	.+52     	; 0x9428 <__vector_13+0x19a>
    93f4:	80 91 71 47 	lds	r24, 0x4771	; 0x804771 <_ZL15red_blink_count>
    93f8:	90 91 72 47 	lds	r25, 0x4772	; 0x804772 <_ZL15red_blink_count+0x1>
    93fc:	21 e0       	ldi	r18, 0x01	; 1
    93fe:	01 96       	adiw	r24, 0x01	; 1
    9400:	09 f0       	breq	.+2      	; 0x9404 <__vector_13+0x176>
    9402:	20 e0       	ldi	r18, 0x00	; 0
    9404:	22 23       	and	r18, r18
    9406:	81 f0       	breq	.+32     	; 0x9428 <__vector_13+0x19a>
    9408:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    940c:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    9410:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    9414:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
    9418:	07 c0       	rjmp	.+14     	; 0x9428 <__vector_13+0x19a>
    941a:	80 91 75 47 	lds	r24, 0x4775	; 0x804775 <_ZL18red_led_configured>
    941e:	88 23       	and	r24, r24
    9420:	19 f0       	breq	.+6      	; 0x9428 <__vector_13+0x19a>
    9422:	80 e0       	ldi	r24, 0x00	; 0
    9424:	0e 94 0f 49 	call	0x921e	; 0x921e <_ZL17LED_set_RED_levelb>
    9428:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <_ZL17green_blink_count>
    942c:	90 91 74 47 	lds	r25, 0x4774	; 0x804774 <_ZL17green_blink_count+0x1>
    9430:	21 e0       	ldi	r18, 0x01	; 1
    9432:	89 2b       	or	r24, r25
    9434:	09 f4       	brne	.+2      	; 0x9438 <__vector_13+0x1aa>
    9436:	20 e0       	ldi	r18, 0x00	; 0
    9438:	22 23       	and	r18, r18
    943a:	09 f4       	brne	.+2      	; 0x943e <__vector_13+0x1b0>
    943c:	6a c0       	rjmp	.+212    	; 0x9512 <__vector_13+0x284>
    943e:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <_ZL17green_blink_count>
    9442:	90 91 74 47 	lds	r25, 0x4774	; 0x804774 <_ZL17green_blink_count+0x1>
    9446:	21 e0       	ldi	r18, 0x01	; 1
    9448:	02 97       	sbiw	r24, 0x02	; 2
    944a:	0c f4       	brge	.+2      	; 0x944e <__vector_13+0x1c0>
    944c:	20 e0       	ldi	r18, 0x00	; 0
    944e:	22 23       	and	r18, r18
    9450:	69 f0       	breq	.+26     	; 0x946c <__vector_13+0x1de>
    9452:	81 e0       	ldi	r24, 0x01	; 1
    9454:	0e 94 1e 49 	call	0x923c	; 0x923c <_ZL19LED_set_GREEN_levelb>
    9458:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <_ZL17green_blink_count>
    945c:	90 91 74 47 	lds	r25, 0x4774	; 0x804774 <_ZL17green_blink_count+0x1>
    9460:	01 97       	sbiw	r24, 0x01	; 1
    9462:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    9466:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
    946a:	17 c0       	rjmp	.+46     	; 0x949a <__vector_13+0x20c>
    946c:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <_ZL17green_blink_count>
    9470:	90 91 74 47 	lds	r25, 0x4774	; 0x804774 <_ZL17green_blink_count+0x1>
    9474:	21 e0       	ldi	r18, 0x01	; 1
    9476:	8f 3f       	cpi	r24, 0xFF	; 255
    9478:	9f 4f       	sbci	r25, 0xFF	; 255
    947a:	0c f0       	brlt	.+2      	; 0x947e <__vector_13+0x1f0>
    947c:	20 e0       	ldi	r18, 0x00	; 0
    947e:	22 23       	and	r18, r18
    9480:	61 f0       	breq	.+24     	; 0x949a <__vector_13+0x20c>
    9482:	80 e0       	ldi	r24, 0x00	; 0
    9484:	0e 94 1e 49 	call	0x923c	; 0x923c <_ZL19LED_set_GREEN_levelb>
    9488:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <_ZL17green_blink_count>
    948c:	90 91 74 47 	lds	r25, 0x4774	; 0x804774 <_ZL17green_blink_count+0x1>
    9490:	01 96       	adiw	r24, 0x01	; 1
    9492:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    9496:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
    949a:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <_ZL17green_blink_count>
    949e:	90 91 74 47 	lds	r25, 0x4774	; 0x804774 <_ZL17green_blink_count+0x1>
    94a2:	21 e0       	ldi	r18, 0x01	; 1
    94a4:	01 97       	sbiw	r24, 0x01	; 1
    94a6:	09 f0       	breq	.+2      	; 0x94aa <__vector_13+0x21c>
    94a8:	20 e0       	ldi	r18, 0x00	; 0
    94aa:	22 23       	and	r18, r18
    94ac:	f9 f0       	breq	.+62     	; 0x94ec <__vector_13+0x25e>
    94ae:	80 91 6f 47 	lds	r24, 0x476F	; 0x80476f <_ZL22green_blink_off_period>
    94b2:	90 91 70 47 	lds	r25, 0x4770	; 0x804770 <_ZL22green_blink_off_period+0x1>
    94b6:	21 e0       	ldi	r18, 0x01	; 1
    94b8:	89 2b       	or	r24, r25
    94ba:	09 f4       	brne	.+2      	; 0x94be <__vector_13+0x230>
    94bc:	20 e0       	ldi	r18, 0x00	; 0
    94be:	22 23       	and	r18, r18
    94c0:	61 f0       	breq	.+24     	; 0x94da <__vector_13+0x24c>
    94c2:	80 91 6f 47 	lds	r24, 0x476F	; 0x80476f <_ZL22green_blink_off_period>
    94c6:	90 91 70 47 	lds	r25, 0x4770	; 0x804770 <_ZL22green_blink_off_period+0x1>
    94ca:	91 95       	neg	r25
    94cc:	81 95       	neg	r24
    94ce:	91 09       	sbc	r25, r1
    94d0:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    94d4:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
    94d8:	33 c0       	rjmp	.+102    	; 0x9540 <__vector_13+0x2b2>
    94da:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    94de:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    94e2:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    94e6:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
    94ea:	2a c0       	rjmp	.+84     	; 0x9540 <__vector_13+0x2b2>
    94ec:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <_ZL17green_blink_count>
    94f0:	90 91 74 47 	lds	r25, 0x4774	; 0x804774 <_ZL17green_blink_count+0x1>
    94f4:	21 e0       	ldi	r18, 0x01	; 1
    94f6:	01 96       	adiw	r24, 0x01	; 1
    94f8:	09 f0       	breq	.+2      	; 0x94fc <__vector_13+0x26e>
    94fa:	20 e0       	ldi	r18, 0x00	; 0
    94fc:	22 23       	and	r18, r18
    94fe:	01 f1       	breq	.+64     	; 0x9540 <__vector_13+0x2b2>
    9500:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    9504:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    9508:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    950c:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
    9510:	17 c0       	rjmp	.+46     	; 0x9540 <__vector_13+0x2b2>
    9512:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <_ZL20green_led_configured>
    9516:	88 23       	and	r24, r24
    9518:	99 f0       	breq	.+38     	; 0x9540 <__vector_13+0x2b2>
    951a:	80 e0       	ldi	r24, 0x00	; 0
    951c:	0e 94 1e 49 	call	0x923c	; 0x923c <_ZL19LED_set_GREEN_levelb>
    9520:	0f c0       	rjmp	.+30     	; 0x9540 <__vector_13+0x2b2>
    9522:	80 e1       	ldi	r24, 0x10	; 16
    9524:	9b e0       	ldi	r25, 0x0B	; 11
    9526:	20 e1       	ldi	r18, 0x10	; 16
    9528:	3b e0       	ldi	r19, 0x0B	; 11
    952a:	f9 01       	movw	r30, r18
    952c:	25 81       	ldd	r18, Z+5	; 0x05
    952e:	2e 7f       	andi	r18, 0xFE	; 254
    9530:	fc 01       	movw	r30, r24
    9532:	25 83       	std	Z+5, r18	; 0x05
    9534:	80 e0       	ldi	r24, 0x00	; 0
    9536:	0e 94 0f 49 	call	0x921e	; 0x921e <_ZL17LED_set_RED_levelb>
    953a:	80 e0       	ldi	r24, 0x00	; 0
    953c:	0e 94 1e 49 	call	0x923c	; 0x923c <_ZL19LED_set_GREEN_levelb>
    9540:	80 e1       	ldi	r24, 0x10	; 16
    9542:	9b e0       	ldi	r25, 0x0B	; 11
    9544:	23 e0       	ldi	r18, 0x03	; 3
    9546:	fc 01       	movw	r30, r24
    9548:	26 83       	std	Z+6, r18	; 0x06
    954a:	00 00       	nop
    954c:	df 91       	pop	r29
    954e:	cf 91       	pop	r28
    9550:	ff 91       	pop	r31
    9552:	ef 91       	pop	r30
    9554:	bf 91       	pop	r27
    9556:	af 91       	pop	r26
    9558:	9f 91       	pop	r25
    955a:	8f 91       	pop	r24
    955c:	7f 91       	pop	r23
    955e:	6f 91       	pop	r22
    9560:	5f 91       	pop	r21
    9562:	4f 91       	pop	r20
    9564:	3f 91       	pop	r19
    9566:	2f 91       	pop	r18
    9568:	0f 90       	pop	r0
    956a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    956e:	0f 90       	pop	r0
    9570:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    9574:	0f 90       	pop	r0
    9576:	1f 90       	pop	r1
    9578:	18 95       	reti

0000957a <_ZN4leds5resetEv>:
    957a:	cf 93       	push	r28
    957c:	df 93       	push	r29
    957e:	00 d0       	rcall	.+0      	; 0x9580 <_ZN4leds5resetEv+0x6>
    9580:	cd b7       	in	r28, 0x3d	; 61
    9582:	de b7       	in	r29, 0x3e	; 62
    9584:	89 83       	std	Y+1, r24	; 0x01
    9586:	9a 83       	std	Y+2, r25	; 0x02
    9588:	10 92 77 47 	sts	0x4777, r1	; 0x804777 <_ZL10g_override>
    958c:	89 81       	ldd	r24, Y+1	; 0x01
    958e:	9a 81       	ldd	r25, Y+2	; 0x02
    9590:	60 e0       	ldi	r22, 0x00	; 0
    9592:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <_ZN4leds5blinkE7Blink_t>
    9596:	00 00       	nop
    9598:	0f 90       	pop	r0
    959a:	0f 90       	pop	r0
    959c:	df 91       	pop	r29
    959e:	cf 91       	pop	r28
    95a0:	08 95       	ret

000095a2 <_ZN4leds6activeEv>:
    95a2:	cf 93       	push	r28
    95a4:	df 93       	push	r29
    95a6:	00 d0       	rcall	.+0      	; 0x95a8 <_ZN4leds6activeEv+0x6>
    95a8:	cd b7       	in	r28, 0x3d	; 61
    95aa:	de b7       	in	r29, 0x3e	; 62
    95ac:	89 83       	std	Y+1, r24	; 0x01
    95ae:	9a 83       	std	Y+2, r25	; 0x02
    95b0:	80 91 65 47 	lds	r24, 0x4765	; 0x804765 <_ZL17led_timeout_count>
    95b4:	90 91 66 47 	lds	r25, 0x4766	; 0x804766 <_ZL17led_timeout_count+0x1>
    95b8:	a0 91 67 47 	lds	r26, 0x4767	; 0x804767 <_ZL17led_timeout_count+0x2>
    95bc:	b0 91 68 47 	lds	r27, 0x4768	; 0x804768 <_ZL17led_timeout_count+0x3>
    95c0:	89 2b       	or	r24, r25
    95c2:	8a 2b       	or	r24, r26
    95c4:	8b 2b       	or	r24, r27
    95c6:	61 f0       	breq	.+24     	; 0x95e0 <_ZN4leds6activeEv+0x3e>
    95c8:	80 e1       	ldi	r24, 0x10	; 16
    95ca:	9b e0       	ldi	r25, 0x0B	; 11
    95cc:	fc 01       	movw	r30, r24
    95ce:	85 81       	ldd	r24, Z+5	; 0x05
    95d0:	88 2f       	mov	r24, r24
    95d2:	90 e0       	ldi	r25, 0x00	; 0
    95d4:	81 70       	andi	r24, 0x01	; 1
    95d6:	99 27       	eor	r25, r25
    95d8:	89 2b       	or	r24, r25
    95da:	11 f0       	breq	.+4      	; 0x95e0 <_ZN4leds6activeEv+0x3e>
    95dc:	81 e0       	ldi	r24, 0x01	; 1
    95de:	01 c0       	rjmp	.+2      	; 0x95e2 <_ZN4leds6activeEv+0x40>
    95e0:	80 e0       	ldi	r24, 0x00	; 0
    95e2:	0f 90       	pop	r0
    95e4:	0f 90       	pop	r0
    95e6:	df 91       	pop	r29
    95e8:	cf 91       	pop	r28
    95ea:	08 95       	ret

000095ec <_ZN4leds6setRedEb>:
    95ec:	cf 93       	push	r28
    95ee:	df 93       	push	r29
    95f0:	00 d0       	rcall	.+0      	; 0x95f2 <_ZN4leds6setRedEb+0x6>
    95f2:	1f 92       	push	r1
    95f4:	cd b7       	in	r28, 0x3d	; 61
    95f6:	de b7       	in	r29, 0x3e	; 62
    95f8:	89 83       	std	Y+1, r24	; 0x01
    95fa:	9a 83       	std	Y+2, r25	; 0x02
    95fc:	6b 83       	std	Y+3, r22	; 0x03
    95fe:	80 91 77 47 	lds	r24, 0x4777	; 0x804777 <_ZL10g_override>
    9602:	88 23       	and	r24, r24
    9604:	d9 f4       	brne	.+54     	; 0x963c <_ZN4leds6setRedEb+0x50>
    9606:	8b 81       	ldd	r24, Y+3	; 0x03
    9608:	88 23       	and	r24, r24
    960a:	a1 f0       	breq	.+40     	; 0x9634 <_ZN4leds6setRedEb+0x48>
    960c:	80 91 65 47 	lds	r24, 0x4765	; 0x804765 <_ZL17led_timeout_count>
    9610:	90 91 66 47 	lds	r25, 0x4766	; 0x804766 <_ZL17led_timeout_count+0x1>
    9614:	a0 91 67 47 	lds	r26, 0x4767	; 0x804767 <_ZL17led_timeout_count+0x2>
    9618:	b0 91 68 47 	lds	r27, 0x4768	; 0x804768 <_ZL17led_timeout_count+0x3>
    961c:	21 e0       	ldi	r18, 0x01	; 1
    961e:	89 2b       	or	r24, r25
    9620:	8a 2b       	or	r24, r26
    9622:	8b 2b       	or	r24, r27
    9624:	09 f4       	brne	.+2      	; 0x9628 <_ZN4leds6setRedEb+0x3c>
    9626:	20 e0       	ldi	r18, 0x00	; 0
    9628:	22 23       	and	r18, r18
    962a:	49 f0       	breq	.+18     	; 0x963e <_ZN4leds6setRedEb+0x52>
    962c:	81 e0       	ldi	r24, 0x01	; 1
    962e:	0e 94 0f 49 	call	0x921e	; 0x921e <_ZL17LED_set_RED_levelb>
    9632:	05 c0       	rjmp	.+10     	; 0x963e <_ZN4leds6setRedEb+0x52>
    9634:	80 e0       	ldi	r24, 0x00	; 0
    9636:	0e 94 0f 49 	call	0x921e	; 0x921e <_ZL17LED_set_RED_levelb>
    963a:	01 c0       	rjmp	.+2      	; 0x963e <_ZN4leds6setRedEb+0x52>
    963c:	00 00       	nop
    963e:	23 96       	adiw	r28, 0x03	; 3
    9640:	cd bf       	out	0x3d, r28	; 61
    9642:	de bf       	out	0x3e, r29	; 62
    9644:	df 91       	pop	r29
    9646:	cf 91       	pop	r28
    9648:	08 95       	ret

0000964a <_ZN4leds6resumeEv>:

void leds::resume(void)
{
    964a:	cf 93       	push	r28
    964c:	df 93       	push	r29
    964e:	00 d0       	rcall	.+0      	; 0x9650 <_ZN4leds6resumeEv+0x6>
    9650:	cd b7       	in	r28, 0x3d	; 61
    9652:	de b7       	in	r29, 0x3e	; 62
    9654:	89 83       	std	Y+1, r24	; 0x01
    9656:	9a 83       	std	Y+2, r25	; 0x02
	if(!active())
    9658:	89 81       	ldd	r24, Y+1	; 0x01
    965a:	9a 81       	ldd	r25, Y+2	; 0x02
    965c:	0e 94 d1 4a 	call	0x95a2	; 0x95a2 <_ZN4leds6activeEv>
    9660:	98 2f       	mov	r25, r24
    9662:	81 e0       	ldi	r24, 0x01	; 1
    9664:	89 27       	eor	r24, r25
    9666:	88 23       	and	r24, r24
    9668:	a9 f0       	breq	.+42     	; 0x9694 <_ZN4leds6resumeEv+0x4a>
	{
		led_timeout_count = LED_TIMEOUT;
    966a:	80 e6       	ldi	r24, 0x60	; 96
    966c:	9a ee       	ldi	r25, 0xEA	; 234
    966e:	a0 e0       	ldi	r26, 0x00	; 0
    9670:	b0 e0       	ldi	r27, 0x00	; 0
    9672:	80 93 65 47 	sts	0x4765, r24	; 0x804765 <_ZL17led_timeout_count>
    9676:	90 93 66 47 	sts	0x4766, r25	; 0x804766 <_ZL17led_timeout_count+0x1>
    967a:	a0 93 67 47 	sts	0x4767, r26	; 0x804767 <_ZL17led_timeout_count+0x2>
    967e:	b0 93 68 47 	sts	0x4768, r27	; 0x804768 <_ZL17led_timeout_count+0x3>
		TCB1.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    9682:	80 e1       	ldi	r24, 0x10	; 16
    9684:	9b e0       	ldi	r25, 0x0B	; 11
    9686:	20 e1       	ldi	r18, 0x10	; 16
    9688:	3b e0       	ldi	r19, 0x0B	; 11
    968a:	f9 01       	movw	r30, r18
    968c:	25 81       	ldd	r18, Z+5	; 0x05
    968e:	21 60       	ori	r18, 0x01	; 1
    9690:	fc 01       	movw	r30, r24
    9692:	25 83       	std	Z+5, r18	; 0x05
	}
}
    9694:	00 00       	nop
    9696:	0f 90       	pop	r0
    9698:	0f 90       	pop	r0
    969a:	df 91       	pop	r29
    969c:	cf 91       	pop	r28
    969e:	08 95       	ret

000096a0 <_ZN4leds5blinkE7Blink_t>:

void leds::blink(Blink_t blinkMode)
{
    96a0:	cf 93       	push	r28
    96a2:	df 93       	push	r29
    96a4:	00 d0       	rcall	.+0      	; 0x96a6 <_ZN4leds5blinkE7Blink_t+0x6>
    96a6:	1f 92       	push	r1
    96a8:	cd b7       	in	r28, 0x3d	; 61
    96aa:	de b7       	in	r29, 0x3e	; 62
    96ac:	89 83       	std	Y+1, r24	; 0x01
    96ae:	9a 83       	std	Y+2, r25	; 0x02
    96b0:	6b 83       	std	Y+3, r22	; 0x03
	if(g_override) return;
    96b2:	80 91 77 47 	lds	r24, 0x4777	; 0x804777 <_ZL10g_override>
    96b6:	88 23       	and	r24, r24
    96b8:	09 f0       	breq	.+2      	; 0x96bc <_ZN4leds5blinkE7Blink_t+0x1c>
    96ba:	c8 c1       	rjmp	.+912    	; 0x9a4c <_ZN4leds5blinkE7Blink_t+0x3ac>
	
	led_timeout_count = LED_TIMEOUT;
    96bc:	80 e6       	ldi	r24, 0x60	; 96
    96be:	9a ee       	ldi	r25, 0xEA	; 234
    96c0:	a0 e0       	ldi	r26, 0x00	; 0
    96c2:	b0 e0       	ldi	r27, 0x00	; 0
    96c4:	80 93 65 47 	sts	0x4765, r24	; 0x804765 <_ZL17led_timeout_count>
    96c8:	90 93 66 47 	sts	0x4766, r25	; 0x804766 <_ZL17led_timeout_count+0x1>
    96cc:	a0 93 67 47 	sts	0x4767, r26	; 0x804767 <_ZL17led_timeout_count+0x2>
    96d0:	b0 93 68 47 	sts	0x4768, r27	; 0x804768 <_ZL17led_timeout_count+0x3>
	
	if(blinkMode != lastBlinkSetting)
    96d4:	90 91 64 47 	lds	r25, 0x4764	; 0x804764 <_ZL16lastBlinkSetting>
    96d8:	81 e0       	ldi	r24, 0x01	; 1
    96da:	2b 81       	ldd	r18, Y+3	; 0x03
    96dc:	29 17       	cp	r18, r25
    96de:	09 f4       	brne	.+2      	; 0x96e2 <_ZN4leds5blinkE7Blink_t+0x42>
    96e0:	80 e0       	ldi	r24, 0x00	; 0
    96e2:	88 23       	and	r24, r24
    96e4:	09 f4       	brne	.+2      	; 0x96e8 <_ZN4leds5blinkE7Blink_t+0x48>
    96e6:	ae c1       	rjmp	.+860    	; 0x9a44 <_ZN4leds5blinkE7Blink_t+0x3a4>
	{
		TCB1.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    96e8:	80 e1       	ldi	r24, 0x10	; 16
    96ea:	9b e0       	ldi	r25, 0x0B	; 11
    96ec:	20 e1       	ldi	r18, 0x10	; 16
    96ee:	3b e0       	ldi	r19, 0x0B	; 11
    96f0:	f9 01       	movw	r30, r18
    96f2:	25 81       	ldd	r18, Z+5	; 0x05
    96f4:	2e 7f       	andi	r18, 0xFE	; 254
    96f6:	fc 01       	movw	r30, r24
    96f8:	25 83       	std	Z+5, r18	; 0x05

		switch(blinkMode)
    96fa:	8b 81       	ldd	r24, Y+3	; 0x03
    96fc:	88 2f       	mov	r24, r24
    96fe:	90 e0       	ldi	r25, 0x00	; 0
    9700:	09 2e       	mov	r0, r25
    9702:	00 0c       	add	r0, r0
    9704:	aa 0b       	sbc	r26, r26
    9706:	bb 0b       	sbc	r27, r27
    9708:	40 e0       	ldi	r20, 0x00	; 0
    970a:	50 e0       	ldi	r21, 0x00	; 0
    970c:	2d e0       	ldi	r18, 0x0D	; 13
    970e:	30 e0       	ldi	r19, 0x00	; 0
    9710:	84 1b       	sub	r24, r20
    9712:	95 0b       	sbc	r25, r21
    9714:	28 17       	cp	r18, r24
    9716:	39 07       	cpc	r19, r25
    9718:	08 f4       	brcc	.+2      	; 0x971c <_ZN4leds5blinkE7Blink_t+0x7c>
    971a:	7d c1       	rjmp	.+762    	; 0x9a16 <_ZN4leds5blinkE7Blink_t+0x376>
    971c:	8b 54       	subi	r24, 0x4B	; 75
    971e:	9f 4f       	sbci	r25, 0xFF	; 255
    9720:	fc 01       	movw	r30, r24
    9722:	0c 94 4d 73 	jmp	0xe69a	; 0xe69a <__tablejump2__>
		{
			case LEDS_OFF:
			{
				red_blink_count = 0;
    9726:	10 92 71 47 	sts	0x4771, r1	; 0x804771 <_ZL15red_blink_count>
    972a:	10 92 72 47 	sts	0x4772, r1	; 0x804772 <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    972e:	10 92 73 47 	sts	0x4773, r1	; 0x804773 <_ZL17green_blink_count>
    9732:	10 92 74 47 	sts	0x4774, r1	; 0x804774 <_ZL17green_blink_count+0x1>
				LED_set_RED_level(OFF);
    9736:	80 e0       	ldi	r24, 0x00	; 0
    9738:	0e 94 0f 49 	call	0x921e	; 0x921e <_ZL17LED_set_RED_levelb>
				LED_set_GREEN_level(OFF);
    973c:	80 e0       	ldi	r24, 0x00	; 0
    973e:	0e 94 1e 49 	call	0x923c	; 0x923c <_ZL19LED_set_GREEN_levelb>
				red_led_configured = false;
    9742:	10 92 75 47 	sts	0x4775, r1	; 0x804775 <_ZL18red_led_configured>
				green_led_configured = false;
    9746:	10 92 76 47 	sts	0x4776, r1	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    974a:	66 c1       	rjmp	.+716    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_RED_OFF:
			{
				LED_set_RED_level(OFF);
    974c:	80 e0       	ldi	r24, 0x00	; 0
    974e:	0e 94 0f 49 	call	0x921e	; 0x921e <_ZL17LED_set_RED_levelb>
				red_blink_count = 0;
    9752:	10 92 71 47 	sts	0x4771, r1	; 0x804771 <_ZL15red_blink_count>
    9756:	10 92 72 47 	sts	0x4772, r1	; 0x804772 <_ZL15red_blink_count+0x1>
				red_led_configured = false;
    975a:	10 92 75 47 	sts	0x4775, r1	; 0x804775 <_ZL18red_led_configured>
			}
			break;
    975e:	5c c1       	rjmp	.+696    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_GREEN_OFF:
			{
				LED_set_GREEN_level(OFF);
    9760:	80 e0       	ldi	r24, 0x00	; 0
    9762:	0e 94 1e 49 	call	0x923c	; 0x923c <_ZL19LED_set_GREEN_levelb>
				green_blink_count = 0;
    9766:	10 92 73 47 	sts	0x4773, r1	; 0x804773 <_ZL17green_blink_count>
    976a:	10 92 74 47 	sts	0x4774, r1	; 0x804774 <_ZL17green_blink_count+0x1>
				green_led_configured = false;
    976e:	10 92 76 47 	sts	0x4776, r1	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    9772:	52 c1       	rjmp	.+676    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_RED_BLINK_FAST:
			{
				red_blink_on_period = BRIEF_ON;
    9774:	89 e1       	ldi	r24, 0x19	; 25
    9776:	90 e0       	ldi	r25, 0x00	; 0
    9778:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19red_blink_on_period>
    977c:	90 93 6a 47 	sts	0x476A, r25	; 0x80476a <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = BRIEF_OFF;
    9780:	86 e9       	ldi	r24, 0x96	; 150
    9782:	90 e0       	ldi	r25, 0x00	; 0
    9784:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL20red_blink_off_period>
    9788:	90 93 6c 47 	sts	0x476C, r25	; 0x80476c <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;	
    978c:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    9790:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    9794:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    9798:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    979c:	81 e0       	ldi	r24, 0x01	; 1
    979e:	80 93 75 47 	sts	0x4775, r24	; 0x804775 <_ZL18red_led_configured>
			}
			break;
    97a2:	3a c1       	rjmp	.+628    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				green_blink_on_period = BRIEF_ON;
    97a4:	89 e1       	ldi	r24, 0x19	; 25
    97a6:	90 e0       	ldi	r25, 0x00	; 0
    97a8:	80 93 6d 47 	sts	0x476D, r24	; 0x80476d <_ZL21green_blink_on_period>
    97ac:	90 93 6e 47 	sts	0x476E, r25	; 0x80476e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = BRIEF_OFF;	
    97b0:	86 e9       	ldi	r24, 0x96	; 150
    97b2:	90 e0       	ldi	r25, 0x00	; 0
    97b4:	80 93 6f 47 	sts	0x476F, r24	; 0x80476f <_ZL22green_blink_off_period>
    97b8:	90 93 70 47 	sts	0x4770, r25	; 0x804770 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    97bc:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    97c0:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    97c4:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    97c8:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    97cc:	81 e0       	ldi	r24, 0x01	; 1
    97ce:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    97d2:	22 c1       	rjmp	.+580    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_RED_BLINK_SLOW:
			{
				red_blink_on_period = SLOW_ON;
    97d4:	84 ef       	ldi	r24, 0xF4	; 244
    97d6:	91 e0       	ldi	r25, 0x01	; 1
    97d8:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19red_blink_on_period>
    97dc:	90 93 6a 47 	sts	0x476A, r25	; 0x80476a <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    97e0:	84 ef       	ldi	r24, 0xF4	; 244
    97e2:	91 e0       	ldi	r25, 0x01	; 1
    97e4:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL20red_blink_off_period>
    97e8:	90 93 6c 47 	sts	0x476C, r25	; 0x80476c <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    97ec:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    97f0:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    97f4:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    97f8:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    97fc:	81 e0       	ldi	r24, 0x01	; 1
    97fe:	80 93 75 47 	sts	0x4775, r24	; 0x804775 <_ZL18red_led_configured>
			}
			break;
    9802:	0a c1       	rjmp	.+532    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    9804:	84 ef       	ldi	r24, 0xF4	; 244
    9806:	91 e0       	ldi	r25, 0x01	; 1
    9808:	80 93 6d 47 	sts	0x476D, r24	; 0x80476d <_ZL21green_blink_on_period>
    980c:	90 93 6e 47 	sts	0x476E, r25	; 0x80476e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    9810:	84 ef       	ldi	r24, 0xF4	; 244
    9812:	91 e0       	ldi	r25, 0x01	; 1
    9814:	80 93 6f 47 	sts	0x476F, r24	; 0x80476f <_ZL22green_blink_off_period>
    9818:	90 93 70 47 	sts	0x4770, r25	; 0x804770 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    981c:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    9820:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    9824:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    9828:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    982c:	81 e0       	ldi	r24, 0x01	; 1
    982e:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    9832:	f2 c0       	rjmp	.+484    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    9834:	84 ef       	ldi	r24, 0xF4	; 244
    9836:	91 e0       	ldi	r25, 0x01	; 1
    9838:	80 93 6d 47 	sts	0x476D, r24	; 0x80476d <_ZL21green_blink_on_period>
    983c:	90 93 6e 47 	sts	0x476E, r25	; 0x80476e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    9840:	84 ef       	ldi	r24, 0xF4	; 244
    9842:	91 e0       	ldi	r25, 0x01	; 1
    9844:	80 93 6f 47 	sts	0x476F, r24	; 0x80476f <_ZL22green_blink_off_period>
    9848:	90 93 70 47 	sts	0x4770, r25	; 0x804770 <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    984c:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    9850:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    9854:	91 95       	neg	r25
    9856:	81 95       	neg	r24
    9858:	91 09       	sbc	r25, r1
    985a:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    985e:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    9862:	84 ef       	ldi	r24, 0xF4	; 244
    9864:	91 e0       	ldi	r25, 0x01	; 1
    9866:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19red_blink_on_period>
    986a:	90 93 6a 47 	sts	0x476A, r25	; 0x80476a <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    986e:	84 ef       	ldi	r24, 0xF4	; 244
    9870:	91 e0       	ldi	r25, 0x01	; 1
    9872:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL20red_blink_off_period>
    9876:	90 93 6c 47 	sts	0x476C, r25	; 0x80476c <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    987a:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    987e:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    9882:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    9886:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    988a:	81 e0       	ldi	r24, 0x01	; 1
    988c:	80 93 75 47 	sts	0x4775, r24	; 0x804775 <_ZL18red_led_configured>
				green_led_configured = true;			
    9890:	81 e0       	ldi	r24, 0x01	; 1
    9892:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    9896:	c0 c0       	rjmp	.+384    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    9898:	89 e1       	ldi	r24, 0x19	; 25
    989a:	90 e0       	ldi	r25, 0x00	; 0
    989c:	80 93 6d 47 	sts	0x476D, r24	; 0x80476d <_ZL21green_blink_on_period>
    98a0:	90 93 6e 47 	sts	0x476E, r25	; 0x80476e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    98a4:	89 e1       	ldi	r24, 0x19	; 25
    98a6:	90 e0       	ldi	r25, 0x00	; 0
    98a8:	80 93 6f 47 	sts	0x476F, r24	; 0x80476f <_ZL22green_blink_off_period>
    98ac:	90 93 70 47 	sts	0x4770, r25	; 0x804770 <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    98b0:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    98b4:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    98b8:	91 95       	neg	r25
    98ba:	81 95       	neg	r24
    98bc:	91 09       	sbc	r25, r1
    98be:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    98c2:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    98c6:	89 e1       	ldi	r24, 0x19	; 25
    98c8:	90 e0       	ldi	r25, 0x00	; 0
    98ca:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19red_blink_on_period>
    98ce:	90 93 6a 47 	sts	0x476A, r25	; 0x80476a <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    98d2:	89 e1       	ldi	r24, 0x19	; 25
    98d4:	90 e0       	ldi	r25, 0x00	; 0
    98d6:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL20red_blink_off_period>
    98da:	90 93 6c 47 	sts	0x476C, r25	; 0x80476c <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    98de:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    98e2:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    98e6:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    98ea:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    98ee:	81 e0       	ldi	r24, 0x01	; 1
    98f0:	80 93 75 47 	sts	0x4775, r24	; 0x804775 <_ZL18red_led_configured>
				green_led_configured = true;			
    98f4:	81 e0       	ldi	r24, 0x01	; 1
    98f6:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    98fa:	8e c0       	rjmp	.+284    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    98fc:	84 ef       	ldi	r24, 0xF4	; 244
    98fe:	91 e0       	ldi	r25, 0x01	; 1
    9900:	80 93 6d 47 	sts	0x476D, r24	; 0x80476d <_ZL21green_blink_on_period>
    9904:	90 93 6e 47 	sts	0x476E, r25	; 0x80476e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    9908:	84 ef       	ldi	r24, 0xF4	; 244
    990a:	91 e0       	ldi	r25, 0x01	; 1
    990c:	80 93 6f 47 	sts	0x476F, r24	; 0x80476f <_ZL22green_blink_off_period>
    9910:	90 93 70 47 	sts	0x4770, r25	; 0x804770 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    9914:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    9918:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    991c:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    9920:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    9924:	84 ef       	ldi	r24, 0xF4	; 244
    9926:	91 e0       	ldi	r25, 0x01	; 1
    9928:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19red_blink_on_period>
    992c:	90 93 6a 47 	sts	0x476A, r25	; 0x80476a <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    9930:	84 ef       	ldi	r24, 0xF4	; 244
    9932:	91 e0       	ldi	r25, 0x01	; 1
    9934:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL20red_blink_off_period>
    9938:	90 93 6c 47 	sts	0x476C, r25	; 0x80476c <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    993c:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    9940:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    9944:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    9948:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    994c:	81 e0       	ldi	r24, 0x01	; 1
    994e:	80 93 75 47 	sts	0x4775, r24	; 0x804775 <_ZL18red_led_configured>
				green_led_configured = true;			
    9952:	81 e0       	ldi	r24, 0x01	; 1
    9954:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    9958:	5f c0       	rjmp	.+190    	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST_OVERRIDE_ALL:
			{
				g_override = true;
    995a:	81 e0       	ldi	r24, 0x01	; 1
    995c:	80 93 77 47 	sts	0x4777, r24	; 0x804777 <_ZL10g_override>
			}
			/* Intentional fall-thru */
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    9960:	89 e1       	ldi	r24, 0x19	; 25
    9962:	90 e0       	ldi	r25, 0x00	; 0
    9964:	80 93 6d 47 	sts	0x476D, r24	; 0x80476d <_ZL21green_blink_on_period>
    9968:	90 93 6e 47 	sts	0x476E, r25	; 0x80476e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    996c:	89 e1       	ldi	r24, 0x19	; 25
    996e:	90 e0       	ldi	r25, 0x00	; 0
    9970:	80 93 6f 47 	sts	0x476F, r24	; 0x80476f <_ZL22green_blink_off_period>
    9974:	90 93 70 47 	sts	0x4770, r25	; 0x804770 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    9978:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    997c:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    9980:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    9984:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    9988:	89 e1       	ldi	r24, 0x19	; 25
    998a:	90 e0       	ldi	r25, 0x00	; 0
    998c:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19red_blink_on_period>
    9990:	90 93 6a 47 	sts	0x476A, r25	; 0x80476a <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    9994:	89 e1       	ldi	r24, 0x19	; 25
    9996:	90 e0       	ldi	r25, 0x00	; 0
    9998:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL20red_blink_off_period>
    999c:	90 93 6c 47 	sts	0x476C, r25	; 0x80476c <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    99a0:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    99a4:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    99a8:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    99ac:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    99b0:	81 e0       	ldi	r24, 0x01	; 1
    99b2:	80 93 75 47 	sts	0x4775, r24	; 0x804775 <_ZL18red_led_configured>
				green_led_configured = true;			
    99b6:	81 e0       	ldi	r24, 0x01	; 1
    99b8:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    99bc:	2d c0       	rjmp	.+90     	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_RED_ON_CONSTANT:
			{
				red_blink_on_period = SLOW_ON;
    99be:	84 ef       	ldi	r24, 0xF4	; 244
    99c0:	91 e0       	ldi	r25, 0x01	; 1
    99c2:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19red_blink_on_period>
    99c6:	90 93 6a 47 	sts	0x476A, r25	; 0x80476a <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = 0;
    99ca:	10 92 6b 47 	sts	0x476B, r1	; 0x80476b <_ZL20red_blink_off_period>
    99ce:	10 92 6c 47 	sts	0x476C, r1	; 0x80476c <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;
    99d2:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19red_blink_on_period>
    99d6:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL19red_blink_on_period+0x1>
    99da:	80 93 71 47 	sts	0x4771, r24	; 0x804771 <_ZL15red_blink_count>
    99de:	90 93 72 47 	sts	0x4772, r25	; 0x804772 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    99e2:	81 e0       	ldi	r24, 0x01	; 1
    99e4:	80 93 75 47 	sts	0x4775, r24	; 0x804775 <_ZL18red_led_configured>
			}
			break;
    99e8:	17 c0       	rjmp	.+46     	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				green_blink_on_period = SLOW_ON;
    99ea:	84 ef       	ldi	r24, 0xF4	; 244
    99ec:	91 e0       	ldi	r25, 0x01	; 1
    99ee:	80 93 6d 47 	sts	0x476D, r24	; 0x80476d <_ZL21green_blink_on_period>
    99f2:	90 93 6e 47 	sts	0x476E, r25	; 0x80476e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = 0;
    99f6:	10 92 6f 47 	sts	0x476F, r1	; 0x80476f <_ZL22green_blink_off_period>
    99fa:	10 92 70 47 	sts	0x4770, r1	; 0x804770 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;
    99fe:	80 91 6d 47 	lds	r24, 0x476D	; 0x80476d <_ZL21green_blink_on_period>
    9a02:	90 91 6e 47 	lds	r25, 0x476E	; 0x80476e <_ZL21green_blink_on_period+0x1>
    9a06:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <_ZL17green_blink_count>
    9a0a:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    9a0e:	81 e0       	ldi	r24, 0x01	; 1
    9a10:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <_ZL20green_led_configured>
			}
			break;
    9a14:	01 c0       	rjmp	.+2      	; 0x9a18 <_ZN4leds5blinkE7Blink_t+0x378>
			
			default:
			{
				
			}
			break;
    9a16:	00 00       	nop
		}
		
		if(red_led_configured || green_led_configured) 
    9a18:	80 91 75 47 	lds	r24, 0x4775	; 0x804775 <_ZL18red_led_configured>
    9a1c:	88 23       	and	r24, r24
    9a1e:	21 f4       	brne	.+8      	; 0x9a28 <_ZN4leds5blinkE7Blink_t+0x388>
    9a20:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <_ZL20green_led_configured>
    9a24:	88 23       	and	r24, r24
    9a26:	11 f0       	breq	.+4      	; 0x9a2c <_ZN4leds5blinkE7Blink_t+0x38c>
    9a28:	81 e0       	ldi	r24, 0x01	; 1
    9a2a:	01 c0       	rjmp	.+2      	; 0x9a2e <_ZN4leds5blinkE7Blink_t+0x38e>
    9a2c:	80 e0       	ldi	r24, 0x00	; 0
    9a2e:	88 23       	and	r24, r24
    9a30:	49 f0       	breq	.+18     	; 0x9a44 <_ZN4leds5blinkE7Blink_t+0x3a4>
		{
			TCB1.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    9a32:	80 e1       	ldi	r24, 0x10	; 16
    9a34:	9b e0       	ldi	r25, 0x0B	; 11
    9a36:	20 e1       	ldi	r18, 0x10	; 16
    9a38:	3b e0       	ldi	r19, 0x0B	; 11
    9a3a:	f9 01       	movw	r30, r18
    9a3c:	25 81       	ldd	r18, Z+5	; 0x05
    9a3e:	21 60       	ori	r18, 0x01	; 1
    9a40:	fc 01       	movw	r30, r24
    9a42:	25 83       	std	Z+5, r18	; 0x05
		}
	}
	
	lastBlinkSetting = blinkMode;
    9a44:	8b 81       	ldd	r24, Y+3	; 0x03
    9a46:	80 93 64 47 	sts	0x4764, r24	; 0x804764 <_ZL16lastBlinkSetting>
    9a4a:	01 c0       	rjmp	.+2      	; 0x9a4e <_ZN4leds5blinkE7Blink_t+0x3ae>
	}
}

void leds::blink(Blink_t blinkMode)
{
	if(g_override) return;
    9a4c:	00 00       	nop
			TCB1.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
		}
	}
	
	lastBlinkSetting = blinkMode;
}
    9a4e:	23 96       	adiw	r28, 0x03	; 3
    9a50:	cd bf       	out	0x3d, r28	; 61
    9a52:	de bf       	out	0x3e, r29	; 62
    9a54:	df 91       	pop	r29
    9a56:	cf 91       	pop	r28
    9a58:	08 95       	ret

00009a5a <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    9a5a:	cf 93       	push	r28
    9a5c:	df 93       	push	r29
    9a5e:	00 d0       	rcall	.+0      	; 0x9a60 <PORTC_set_pin_pull_mode+0x6>
    9a60:	00 d0       	rcall	.+0      	; 0x9a62 <PORTC_set_pin_pull_mode+0x8>
    9a62:	cd b7       	in	r28, 0x3d	; 61
    9a64:	de b7       	in	r29, 0x3e	; 62
    9a66:	8b 83       	std	Y+3, r24	; 0x03
    9a68:	6c 83       	std	Y+4, r22	; 0x04
    9a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    9a6c:	88 2f       	mov	r24, r24
    9a6e:	90 e0       	ldi	r25, 0x00	; 0
    9a70:	80 5b       	subi	r24, 0xB0	; 176
    9a72:	9b 4f       	sbci	r25, 0xFB	; 251
    9a74:	89 83       	std	Y+1, r24	; 0x01
    9a76:	9a 83       	std	Y+2, r25	; 0x02
    9a78:	8c 81       	ldd	r24, Y+4	; 0x04
    9a7a:	81 30       	cpi	r24, 0x01	; 1
    9a7c:	59 f4       	brne	.+22     	; 0x9a94 <PORTC_set_pin_pull_mode+0x3a>
    9a7e:	89 81       	ldd	r24, Y+1	; 0x01
    9a80:	9a 81       	ldd	r25, Y+2	; 0x02
    9a82:	fc 01       	movw	r30, r24
    9a84:	80 81       	ld	r24, Z
    9a86:	28 2f       	mov	r18, r24
    9a88:	28 60       	ori	r18, 0x08	; 8
    9a8a:	89 81       	ldd	r24, Y+1	; 0x01
    9a8c:	9a 81       	ldd	r25, Y+2	; 0x02
    9a8e:	fc 01       	movw	r30, r24
    9a90:	20 83       	st	Z, r18
    9a92:	0d c0       	rjmp	.+26     	; 0x9aae <PORTC_set_pin_pull_mode+0x54>
    9a94:	8c 81       	ldd	r24, Y+4	; 0x04
    9a96:	88 23       	and	r24, r24
    9a98:	51 f4       	brne	.+20     	; 0x9aae <PORTC_set_pin_pull_mode+0x54>
    9a9a:	89 81       	ldd	r24, Y+1	; 0x01
    9a9c:	9a 81       	ldd	r25, Y+2	; 0x02
    9a9e:	fc 01       	movw	r30, r24
    9aa0:	80 81       	ld	r24, Z
    9aa2:	28 2f       	mov	r18, r24
    9aa4:	27 7f       	andi	r18, 0xF7	; 247
    9aa6:	89 81       	ldd	r24, Y+1	; 0x01
    9aa8:	9a 81       	ldd	r25, Y+2	; 0x02
    9aaa:	fc 01       	movw	r30, r24
    9aac:	20 83       	st	Z, r18
    9aae:	00 00       	nop
    9ab0:	24 96       	adiw	r28, 0x04	; 4
    9ab2:	cd bf       	out	0x3d, r28	; 61
    9ab4:	de bf       	out	0x3e, r29	; 62
    9ab6:	df 91       	pop	r29
    9ab8:	cf 91       	pop	r28
    9aba:	08 95       	ret

00009abc <PORTC_set_pin_dir>:
    9abc:	cf 93       	push	r28
    9abe:	df 93       	push	r29
    9ac0:	00 d0       	rcall	.+0      	; 0x9ac2 <PORTC_set_pin_dir+0x6>
    9ac2:	cd b7       	in	r28, 0x3d	; 61
    9ac4:	de b7       	in	r29, 0x3e	; 62
    9ac6:	89 83       	std	Y+1, r24	; 0x01
    9ac8:	6a 83       	std	Y+2, r22	; 0x02
    9aca:	8a 81       	ldd	r24, Y+2	; 0x02
    9acc:	88 2f       	mov	r24, r24
    9ace:	90 e0       	ldi	r25, 0x00	; 0
    9ad0:	81 30       	cpi	r24, 0x01	; 1
    9ad2:	91 05       	cpc	r25, r1
    9ad4:	e1 f0       	breq	.+56     	; 0x9b0e <PORTC_set_pin_dir+0x52>
    9ad6:	82 30       	cpi	r24, 0x02	; 2
    9ad8:	91 05       	cpc	r25, r1
    9ada:	71 f1       	breq	.+92     	; 0x9b38 <PORTC_set_pin_dir+0x7c>
    9adc:	89 2b       	or	r24, r25
    9ade:	09 f0       	breq	.+2      	; 0x9ae2 <PORTC_set_pin_dir+0x26>
    9ae0:	3b c0       	rjmp	.+118    	; 0x9b58 <PORTC_set_pin_dir+0x9c>
    9ae2:	88 e0       	ldi	r24, 0x08	; 8
    9ae4:	90 e0       	ldi	r25, 0x00	; 0
    9ae6:	28 e0       	ldi	r18, 0x08	; 8
    9ae8:	30 e0       	ldi	r19, 0x00	; 0
    9aea:	f9 01       	movw	r30, r18
    9aec:	20 81       	ld	r18, Z
    9aee:	62 2f       	mov	r22, r18
    9af0:	29 81       	ldd	r18, Y+1	; 0x01
    9af2:	42 2f       	mov	r20, r18
    9af4:	50 e0       	ldi	r21, 0x00	; 0
    9af6:	21 e0       	ldi	r18, 0x01	; 1
    9af8:	30 e0       	ldi	r19, 0x00	; 0
    9afa:	02 c0       	rjmp	.+4      	; 0x9b00 <PORTC_set_pin_dir+0x44>
    9afc:	22 0f       	add	r18, r18
    9afe:	33 1f       	adc	r19, r19
    9b00:	4a 95       	dec	r20
    9b02:	e2 f7       	brpl	.-8      	; 0x9afc <PORTC_set_pin_dir+0x40>
    9b04:	20 95       	com	r18
    9b06:	26 23       	and	r18, r22
    9b08:	fc 01       	movw	r30, r24
    9b0a:	20 83       	st	Z, r18
    9b0c:	25 c0       	rjmp	.+74     	; 0x9b58 <PORTC_set_pin_dir+0x9c>
    9b0e:	88 e0       	ldi	r24, 0x08	; 8
    9b10:	90 e0       	ldi	r25, 0x00	; 0
    9b12:	28 e0       	ldi	r18, 0x08	; 8
    9b14:	30 e0       	ldi	r19, 0x00	; 0
    9b16:	f9 01       	movw	r30, r18
    9b18:	20 81       	ld	r18, Z
    9b1a:	62 2f       	mov	r22, r18
    9b1c:	29 81       	ldd	r18, Y+1	; 0x01
    9b1e:	42 2f       	mov	r20, r18
    9b20:	50 e0       	ldi	r21, 0x00	; 0
    9b22:	21 e0       	ldi	r18, 0x01	; 1
    9b24:	30 e0       	ldi	r19, 0x00	; 0
    9b26:	02 c0       	rjmp	.+4      	; 0x9b2c <PORTC_set_pin_dir+0x70>
    9b28:	22 0f       	add	r18, r18
    9b2a:	33 1f       	adc	r19, r19
    9b2c:	4a 95       	dec	r20
    9b2e:	e2 f7       	brpl	.-8      	; 0x9b28 <PORTC_set_pin_dir+0x6c>
    9b30:	26 2b       	or	r18, r22
    9b32:	fc 01       	movw	r30, r24
    9b34:	20 83       	st	Z, r18
    9b36:	10 c0       	rjmp	.+32     	; 0x9b58 <PORTC_set_pin_dir+0x9c>
    9b38:	89 81       	ldd	r24, Y+1	; 0x01
    9b3a:	88 2f       	mov	r24, r24
    9b3c:	90 e0       	ldi	r25, 0x00	; 0
    9b3e:	80 5b       	subi	r24, 0xB0	; 176
    9b40:	9b 4f       	sbci	r25, 0xFB	; 251
    9b42:	29 81       	ldd	r18, Y+1	; 0x01
    9b44:	22 2f       	mov	r18, r18
    9b46:	30 e0       	ldi	r19, 0x00	; 0
    9b48:	20 5b       	subi	r18, 0xB0	; 176
    9b4a:	3b 4f       	sbci	r19, 0xFB	; 251
    9b4c:	f9 01       	movw	r30, r18
    9b4e:	20 81       	ld	r18, Z
    9b50:	28 60       	ori	r18, 0x08	; 8
    9b52:	fc 01       	movw	r30, r24
    9b54:	20 83       	st	Z, r18
    9b56:	00 00       	nop
    9b58:	00 00       	nop
    9b5a:	0f 90       	pop	r0
    9b5c:	0f 90       	pop	r0
    9b5e:	df 91       	pop	r29
    9b60:	cf 91       	pop	r28
    9b62:	08 95       	ret

00009b64 <PORTC_set_pin_level>:
    9b64:	cf 93       	push	r28
    9b66:	df 93       	push	r29
    9b68:	00 d0       	rcall	.+0      	; 0x9b6a <PORTC_set_pin_level+0x6>
    9b6a:	cd b7       	in	r28, 0x3d	; 61
    9b6c:	de b7       	in	r29, 0x3e	; 62
    9b6e:	89 83       	std	Y+1, r24	; 0x01
    9b70:	6a 83       	std	Y+2, r22	; 0x02
    9b72:	8a 81       	ldd	r24, Y+2	; 0x02
    9b74:	88 23       	and	r24, r24
    9b76:	a9 f0       	breq	.+42     	; 0x9ba2 <PORTC_set_pin_level+0x3e>
    9b78:	88 e0       	ldi	r24, 0x08	; 8
    9b7a:	90 e0       	ldi	r25, 0x00	; 0
    9b7c:	28 e0       	ldi	r18, 0x08	; 8
    9b7e:	30 e0       	ldi	r19, 0x00	; 0
    9b80:	f9 01       	movw	r30, r18
    9b82:	21 81       	ldd	r18, Z+1	; 0x01
    9b84:	62 2f       	mov	r22, r18
    9b86:	29 81       	ldd	r18, Y+1	; 0x01
    9b88:	42 2f       	mov	r20, r18
    9b8a:	50 e0       	ldi	r21, 0x00	; 0
    9b8c:	21 e0       	ldi	r18, 0x01	; 1
    9b8e:	30 e0       	ldi	r19, 0x00	; 0
    9b90:	02 c0       	rjmp	.+4      	; 0x9b96 <PORTC_set_pin_level+0x32>
    9b92:	22 0f       	add	r18, r18
    9b94:	33 1f       	adc	r19, r19
    9b96:	4a 95       	dec	r20
    9b98:	e2 f7       	brpl	.-8      	; 0x9b92 <PORTC_set_pin_level+0x2e>
    9b9a:	26 2b       	or	r18, r22
    9b9c:	fc 01       	movw	r30, r24
    9b9e:	21 83       	std	Z+1, r18	; 0x01
    9ba0:	15 c0       	rjmp	.+42     	; 0x9bcc <PORTC_set_pin_level+0x68>
    9ba2:	88 e0       	ldi	r24, 0x08	; 8
    9ba4:	90 e0       	ldi	r25, 0x00	; 0
    9ba6:	28 e0       	ldi	r18, 0x08	; 8
    9ba8:	30 e0       	ldi	r19, 0x00	; 0
    9baa:	f9 01       	movw	r30, r18
    9bac:	21 81       	ldd	r18, Z+1	; 0x01
    9bae:	62 2f       	mov	r22, r18
    9bb0:	29 81       	ldd	r18, Y+1	; 0x01
    9bb2:	42 2f       	mov	r20, r18
    9bb4:	50 e0       	ldi	r21, 0x00	; 0
    9bb6:	21 e0       	ldi	r18, 0x01	; 1
    9bb8:	30 e0       	ldi	r19, 0x00	; 0
    9bba:	02 c0       	rjmp	.+4      	; 0x9bc0 <PORTC_set_pin_level+0x5c>
    9bbc:	22 0f       	add	r18, r18
    9bbe:	33 1f       	adc	r19, r19
    9bc0:	4a 95       	dec	r20
    9bc2:	e2 f7       	brpl	.-8      	; 0x9bbc <PORTC_set_pin_level+0x58>
    9bc4:	20 95       	com	r18
    9bc6:	26 23       	and	r18, r22
    9bc8:	fc 01       	movw	r30, r24
    9bca:	21 83       	std	Z+1, r18	; 0x01
    9bcc:	00 00       	nop
    9bce:	0f 90       	pop	r0
    9bd0:	0f 90       	pop	r0
    9bd2:	df 91       	pop	r29
    9bd4:	cf 91       	pop	r28
    9bd6:	08 95       	ret

00009bd8 <PC0_set_dir>:
    9bd8:	cf 93       	push	r28
    9bda:	df 93       	push	r29
    9bdc:	1f 92       	push	r1
    9bde:	cd b7       	in	r28, 0x3d	; 61
    9be0:	de b7       	in	r29, 0x3e	; 62
    9be2:	89 83       	std	Y+1, r24	; 0x01
    9be4:	69 81       	ldd	r22, Y+1	; 0x01
    9be6:	80 e0       	ldi	r24, 0x00	; 0
    9be8:	0e 94 5e 4d 	call	0x9abc	; 0x9abc <PORTC_set_pin_dir>
    9bec:	00 00       	nop
    9bee:	0f 90       	pop	r0
    9bf0:	df 91       	pop	r29
    9bf2:	cf 91       	pop	r28
    9bf4:	08 95       	ret

00009bf6 <PC0_set_level>:
    9bf6:	cf 93       	push	r28
    9bf8:	df 93       	push	r29
    9bfa:	1f 92       	push	r1
    9bfc:	cd b7       	in	r28, 0x3d	; 61
    9bfe:	de b7       	in	r29, 0x3e	; 62
    9c00:	89 83       	std	Y+1, r24	; 0x01
    9c02:	69 81       	ldd	r22, Y+1	; 0x01
    9c04:	80 e0       	ldi	r24, 0x00	; 0
    9c06:	0e 94 b2 4d 	call	0x9b64	; 0x9b64 <PORTC_set_pin_level>
    9c0a:	00 00       	nop
    9c0c:	0f 90       	pop	r0
    9c0e:	df 91       	pop	r29
    9c10:	cf 91       	pop	r28
    9c12:	08 95       	ret

00009c14 <PC1_set_pull_mode>:
    9c14:	cf 93       	push	r28
    9c16:	df 93       	push	r29
    9c18:	1f 92       	push	r1
    9c1a:	cd b7       	in	r28, 0x3d	; 61
    9c1c:	de b7       	in	r29, 0x3e	; 62
    9c1e:	89 83       	std	Y+1, r24	; 0x01
    9c20:	69 81       	ldd	r22, Y+1	; 0x01
    9c22:	81 e0       	ldi	r24, 0x01	; 1
    9c24:	0e 94 2d 4d 	call	0x9a5a	; 0x9a5a <PORTC_set_pin_pull_mode>
    9c28:	00 00       	nop
    9c2a:	0f 90       	pop	r0
    9c2c:	df 91       	pop	r29
    9c2e:	cf 91       	pop	r28
    9c30:	08 95       	ret

00009c32 <PC1_set_dir>:
    9c32:	cf 93       	push	r28
    9c34:	df 93       	push	r29
    9c36:	1f 92       	push	r1
    9c38:	cd b7       	in	r28, 0x3d	; 61
    9c3a:	de b7       	in	r29, 0x3e	; 62
    9c3c:	89 83       	std	Y+1, r24	; 0x01
    9c3e:	69 81       	ldd	r22, Y+1	; 0x01
    9c40:	81 e0       	ldi	r24, 0x01	; 1
    9c42:	0e 94 5e 4d 	call	0x9abc	; 0x9abc <PORTC_set_pin_dir>
    9c46:	00 00       	nop
    9c48:	0f 90       	pop	r0
    9c4a:	df 91       	pop	r29
    9c4c:	cf 91       	pop	r28
    9c4e:	08 95       	ret

00009c50 <_Z18nextFullLBTxBufferv>:
    9c50:	cf 93       	push	r28
    9c52:	df 93       	push	r29
    9c54:	00 d0       	rcall	.+0      	; 0x9c56 <_Z18nextFullLBTxBufferv+0x6>
    9c56:	cd b7       	in	r28, 0x3d	; 61
    9c58:	de b7       	in	r29, 0x3e	; 62
    9c5a:	81 e0       	ldi	r24, 0x01	; 1
    9c5c:	89 83       	std	Y+1, r24	; 0x01
    9c5e:	1a 82       	std	Y+2, r1	; 0x02
    9c60:	80 91 39 49 	lds	r24, 0x4939	; 0x804939 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9c64:	28 2f       	mov	r18, r24
    9c66:	30 e0       	ldi	r19, 0x00	; 0
    9c68:	42 e3       	ldi	r20, 0x32	; 50
    9c6a:	42 9f       	mul	r20, r18
    9c6c:	c0 01       	movw	r24, r0
    9c6e:	43 9f       	mul	r20, r19
    9c70:	90 0d       	add	r25, r0
    9c72:	11 24       	eor	r1, r1
    9c74:	85 55       	subi	r24, 0x55	; 85
    9c76:	98 4b       	sbci	r25, 0xB8	; 184
    9c78:	fc 01       	movw	r30, r24
    9c7a:	80 81       	ld	r24, Z
    9c7c:	88 23       	and	r24, r24
    9c7e:	c1 f4       	brne	.+48     	; 0x9cb0 <_Z18nextFullLBTxBufferv+0x60>
    9c80:	8a 81       	ldd	r24, Y+2	; 0x02
    9c82:	8f 5f       	subi	r24, 0xFF	; 255
    9c84:	8a 83       	std	Y+2, r24	; 0x02
    9c86:	81 e0       	ldi	r24, 0x01	; 1
    9c88:	9a 81       	ldd	r25, Y+2	; 0x02
    9c8a:	94 30       	cpi	r25, 0x04	; 4
    9c8c:	08 f4       	brcc	.+2      	; 0x9c90 <_Z18nextFullLBTxBufferv+0x40>
    9c8e:	80 e0       	ldi	r24, 0x00	; 0
    9c90:	88 23       	and	r24, r24
    9c92:	11 f0       	breq	.+4      	; 0x9c98 <_Z18nextFullLBTxBufferv+0x48>
    9c94:	19 82       	std	Y+1, r1	; 0x01
    9c96:	0c c0       	rjmp	.+24     	; 0x9cb0 <_Z18nextFullLBTxBufferv+0x60>
    9c98:	80 91 39 49 	lds	r24, 0x4939	; 0x804939 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9c9c:	8f 5f       	subi	r24, 0xFF	; 255
    9c9e:	80 93 39 49 	sts	0x4939, r24	; 0x804939 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9ca2:	80 91 39 49 	lds	r24, 0x4939	; 0x804939 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9ca6:	84 30       	cpi	r24, 0x04	; 4
    9ca8:	d8 f2       	brcs	.-74     	; 0x9c60 <_Z18nextFullLBTxBufferv+0x10>
    9caa:	10 92 39 49 	sts	0x4939, r1	; 0x804939 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9cae:	d8 cf       	rjmp	.-80     	; 0x9c60 <_Z18nextFullLBTxBufferv+0x10>
    9cb0:	89 81       	ldd	r24, Y+1	; 0x01
    9cb2:	88 23       	and	r24, r24
    9cb4:	69 f0       	breq	.+26     	; 0x9cd0 <_Z18nextFullLBTxBufferv+0x80>
    9cb6:	80 91 39 49 	lds	r24, 0x4939	; 0x804939 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9cba:	28 2f       	mov	r18, r24
    9cbc:	30 e0       	ldi	r19, 0x00	; 0
    9cbe:	42 e3       	ldi	r20, 0x32	; 50
    9cc0:	42 9f       	mul	r20, r18
    9cc2:	c0 01       	movw	r24, r0
    9cc4:	43 9f       	mul	r20, r19
    9cc6:	90 0d       	add	r25, r0
    9cc8:	11 24       	eor	r1, r1
    9cca:	85 55       	subi	r24, 0x55	; 85
    9ccc:	98 4b       	sbci	r25, 0xB8	; 184
    9cce:	02 c0       	rjmp	.+4      	; 0x9cd4 <_Z18nextFullLBTxBufferv+0x84>
    9cd0:	80 e0       	ldi	r24, 0x00	; 0
    9cd2:	90 e0       	ldi	r25, 0x00	; 0
    9cd4:	0f 90       	pop	r0
    9cd6:	0f 90       	pop	r0
    9cd8:	df 91       	pop	r29
    9cda:	cf 91       	pop	r28
    9cdc:	08 95       	ret

00009cde <_Z19nextEmptyLBTxBufferv>:
    9cde:	cf 93       	push	r28
    9ce0:	df 93       	push	r29
    9ce2:	00 d0       	rcall	.+0      	; 0x9ce4 <_Z19nextEmptyLBTxBufferv+0x6>
    9ce4:	cd b7       	in	r28, 0x3d	; 61
    9ce6:	de b7       	in	r29, 0x3e	; 62
    9ce8:	81 e0       	ldi	r24, 0x01	; 1
    9cea:	89 83       	std	Y+1, r24	; 0x01
    9cec:	1a 82       	std	Y+2, r1	; 0x02
    9cee:	80 91 3a 49 	lds	r24, 0x493A	; 0x80493a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9cf2:	28 2f       	mov	r18, r24
    9cf4:	30 e0       	ldi	r19, 0x00	; 0
    9cf6:	42 e3       	ldi	r20, 0x32	; 50
    9cf8:	42 9f       	mul	r20, r18
    9cfa:	c0 01       	movw	r24, r0
    9cfc:	43 9f       	mul	r20, r19
    9cfe:	90 0d       	add	r25, r0
    9d00:	11 24       	eor	r1, r1
    9d02:	85 55       	subi	r24, 0x55	; 85
    9d04:	98 4b       	sbci	r25, 0xB8	; 184
    9d06:	fc 01       	movw	r30, r24
    9d08:	80 81       	ld	r24, Z
    9d0a:	88 23       	and	r24, r24
    9d0c:	c1 f0       	breq	.+48     	; 0x9d3e <_Z19nextEmptyLBTxBufferv+0x60>
    9d0e:	8a 81       	ldd	r24, Y+2	; 0x02
    9d10:	8f 5f       	subi	r24, 0xFF	; 255
    9d12:	8a 83       	std	Y+2, r24	; 0x02
    9d14:	81 e0       	ldi	r24, 0x01	; 1
    9d16:	9a 81       	ldd	r25, Y+2	; 0x02
    9d18:	94 30       	cpi	r25, 0x04	; 4
    9d1a:	08 f4       	brcc	.+2      	; 0x9d1e <_Z19nextEmptyLBTxBufferv+0x40>
    9d1c:	80 e0       	ldi	r24, 0x00	; 0
    9d1e:	88 23       	and	r24, r24
    9d20:	11 f0       	breq	.+4      	; 0x9d26 <_Z19nextEmptyLBTxBufferv+0x48>
    9d22:	19 82       	std	Y+1, r1	; 0x01
    9d24:	0c c0       	rjmp	.+24     	; 0x9d3e <_Z19nextEmptyLBTxBufferv+0x60>
    9d26:	80 91 3a 49 	lds	r24, 0x493A	; 0x80493a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9d2a:	8f 5f       	subi	r24, 0xFF	; 255
    9d2c:	80 93 3a 49 	sts	0x493A, r24	; 0x80493a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9d30:	80 91 3a 49 	lds	r24, 0x493A	; 0x80493a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9d34:	84 30       	cpi	r24, 0x04	; 4
    9d36:	d8 f2       	brcs	.-74     	; 0x9cee <_Z19nextEmptyLBTxBufferv+0x10>
    9d38:	10 92 3a 49 	sts	0x493A, r1	; 0x80493a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9d3c:	d8 cf       	rjmp	.-80     	; 0x9cee <_Z19nextEmptyLBTxBufferv+0x10>
    9d3e:	89 81       	ldd	r24, Y+1	; 0x01
    9d40:	88 23       	and	r24, r24
    9d42:	69 f0       	breq	.+26     	; 0x9d5e <_Z19nextEmptyLBTxBufferv+0x80>
    9d44:	80 91 3a 49 	lds	r24, 0x493A	; 0x80493a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9d48:	28 2f       	mov	r18, r24
    9d4a:	30 e0       	ldi	r19, 0x00	; 0
    9d4c:	42 e3       	ldi	r20, 0x32	; 50
    9d4e:	42 9f       	mul	r20, r18
    9d50:	c0 01       	movw	r24, r0
    9d52:	43 9f       	mul	r20, r19
    9d54:	90 0d       	add	r25, r0
    9d56:	11 24       	eor	r1, r1
    9d58:	85 55       	subi	r24, 0x55	; 85
    9d5a:	98 4b       	sbci	r25, 0xB8	; 184
    9d5c:	02 c0       	rjmp	.+4      	; 0x9d62 <_Z19nextEmptyLBTxBufferv+0x84>
    9d5e:	80 e0       	ldi	r24, 0x00	; 0
    9d60:	90 e0       	ldi	r25, 0x00	; 0
    9d62:	0f 90       	pop	r0
    9d64:	0f 90       	pop	r0
    9d66:	df 91       	pop	r29
    9d68:	cf 91       	pop	r28
    9d6a:	08 95       	ret

00009d6c <_Z19nextEmptyLBRxBufferv>:
    9d6c:	cf 93       	push	r28
    9d6e:	df 93       	push	r29
    9d70:	00 d0       	rcall	.+0      	; 0x9d72 <_Z19nextEmptyLBRxBufferv+0x6>
    9d72:	cd b7       	in	r28, 0x3d	; 61
    9d74:	de b7       	in	r29, 0x3e	; 62
    9d76:	81 e0       	ldi	r24, 0x01	; 1
    9d78:	89 83       	std	Y+1, r24	; 0x01
    9d7a:	1a 82       	std	Y+2, r1	; 0x02
    9d7c:	80 91 3b 49 	lds	r24, 0x493B	; 0x80493b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    9d80:	28 2f       	mov	r18, r24
    9d82:	30 e0       	ldi	r19, 0x00	; 0
    9d84:	42 e4       	ldi	r20, 0x42	; 66
    9d86:	42 9f       	mul	r20, r18
    9d88:	c0 01       	movw	r24, r0
    9d8a:	43 9f       	mul	r20, r19
    9d8c:	90 0d       	add	r25, r0
    9d8e:	11 24       	eor	r1, r1
    9d90:	8c 58       	subi	r24, 0x8C	; 140
    9d92:	97 4b       	sbci	r25, 0xB7	; 183
    9d94:	fc 01       	movw	r30, r24
    9d96:	80 81       	ld	r24, Z
    9d98:	91 81       	ldd	r25, Z+1	; 0x01
    9d9a:	89 2b       	or	r24, r25
    9d9c:	c1 f0       	breq	.+48     	; 0x9dce <_Z19nextEmptyLBRxBufferv+0x62>
    9d9e:	8a 81       	ldd	r24, Y+2	; 0x02
    9da0:	8f 5f       	subi	r24, 0xFF	; 255
    9da2:	8a 83       	std	Y+2, r24	; 0x02
    9da4:	81 e0       	ldi	r24, 0x01	; 1
    9da6:	9a 81       	ldd	r25, Y+2	; 0x02
    9da8:	93 30       	cpi	r25, 0x03	; 3
    9daa:	08 f4       	brcc	.+2      	; 0x9dae <_Z19nextEmptyLBRxBufferv+0x42>
    9dac:	80 e0       	ldi	r24, 0x00	; 0
    9dae:	88 23       	and	r24, r24
    9db0:	11 f0       	breq	.+4      	; 0x9db6 <_Z19nextEmptyLBRxBufferv+0x4a>
    9db2:	19 82       	std	Y+1, r1	; 0x01
    9db4:	0c c0       	rjmp	.+24     	; 0x9dce <_Z19nextEmptyLBRxBufferv+0x62>
    9db6:	80 91 3b 49 	lds	r24, 0x493B	; 0x80493b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    9dba:	8f 5f       	subi	r24, 0xFF	; 255
    9dbc:	80 93 3b 49 	sts	0x493B, r24	; 0x80493b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    9dc0:	80 91 3b 49 	lds	r24, 0x493B	; 0x80493b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    9dc4:	83 30       	cpi	r24, 0x03	; 3
    9dc6:	d0 f2       	brcs	.-76     	; 0x9d7c <_Z19nextEmptyLBRxBufferv+0x10>
    9dc8:	10 92 3b 49 	sts	0x493B, r1	; 0x80493b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    9dcc:	d7 cf       	rjmp	.-82     	; 0x9d7c <_Z19nextEmptyLBRxBufferv+0x10>
    9dce:	89 81       	ldd	r24, Y+1	; 0x01
    9dd0:	88 23       	and	r24, r24
    9dd2:	69 f0       	breq	.+26     	; 0x9dee <_Z19nextEmptyLBRxBufferv+0x82>
    9dd4:	80 91 3b 49 	lds	r24, 0x493B	; 0x80493b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    9dd8:	28 2f       	mov	r18, r24
    9dda:	30 e0       	ldi	r19, 0x00	; 0
    9ddc:	42 e4       	ldi	r20, 0x42	; 66
    9dde:	42 9f       	mul	r20, r18
    9de0:	c0 01       	movw	r24, r0
    9de2:	43 9f       	mul	r20, r19
    9de4:	90 0d       	add	r25, r0
    9de6:	11 24       	eor	r1, r1
    9de8:	8d 58       	subi	r24, 0x8D	; 141
    9dea:	97 4b       	sbci	r25, 0xB7	; 183
    9dec:	02 c0       	rjmp	.+4      	; 0x9df2 <_Z19nextEmptyLBRxBufferv+0x86>
    9dee:	80 e0       	ldi	r24, 0x00	; 0
    9df0:	90 e0       	ldi	r25, 0x00	; 0
    9df2:	0f 90       	pop	r0
    9df4:	0f 90       	pop	r0
    9df6:	df 91       	pop	r29
    9df8:	cf 91       	pop	r28
    9dfa:	08 95       	ret

00009dfc <_Z18nextFullLBRxBufferv>:
    9dfc:	cf 93       	push	r28
    9dfe:	df 93       	push	r29
    9e00:	00 d0       	rcall	.+0      	; 0x9e02 <_Z18nextFullLBRxBufferv+0x6>
    9e02:	cd b7       	in	r28, 0x3d	; 61
    9e04:	de b7       	in	r29, 0x3e	; 62
    9e06:	81 e0       	ldi	r24, 0x01	; 1
    9e08:	89 83       	std	Y+1, r24	; 0x01
    9e0a:	1a 82       	std	Y+2, r1	; 0x02
    9e0c:	80 91 3c 49 	lds	r24, 0x493C	; 0x80493c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    9e10:	28 2f       	mov	r18, r24
    9e12:	30 e0       	ldi	r19, 0x00	; 0
    9e14:	42 e4       	ldi	r20, 0x42	; 66
    9e16:	42 9f       	mul	r20, r18
    9e18:	c0 01       	movw	r24, r0
    9e1a:	43 9f       	mul	r20, r19
    9e1c:	90 0d       	add	r25, r0
    9e1e:	11 24       	eor	r1, r1
    9e20:	8c 58       	subi	r24, 0x8C	; 140
    9e22:	97 4b       	sbci	r25, 0xB7	; 183
    9e24:	fc 01       	movw	r30, r24
    9e26:	80 81       	ld	r24, Z
    9e28:	91 81       	ldd	r25, Z+1	; 0x01
    9e2a:	89 2b       	or	r24, r25
    9e2c:	c1 f4       	brne	.+48     	; 0x9e5e <_Z18nextFullLBRxBufferv+0x62>
    9e2e:	8a 81       	ldd	r24, Y+2	; 0x02
    9e30:	8f 5f       	subi	r24, 0xFF	; 255
    9e32:	8a 83       	std	Y+2, r24	; 0x02
    9e34:	81 e0       	ldi	r24, 0x01	; 1
    9e36:	9a 81       	ldd	r25, Y+2	; 0x02
    9e38:	93 30       	cpi	r25, 0x03	; 3
    9e3a:	08 f4       	brcc	.+2      	; 0x9e3e <_Z18nextFullLBRxBufferv+0x42>
    9e3c:	80 e0       	ldi	r24, 0x00	; 0
    9e3e:	88 23       	and	r24, r24
    9e40:	11 f0       	breq	.+4      	; 0x9e46 <_Z18nextFullLBRxBufferv+0x4a>
    9e42:	19 82       	std	Y+1, r1	; 0x01
    9e44:	0c c0       	rjmp	.+24     	; 0x9e5e <_Z18nextFullLBRxBufferv+0x62>
    9e46:	80 91 3c 49 	lds	r24, 0x493C	; 0x80493c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    9e4a:	8f 5f       	subi	r24, 0xFF	; 255
    9e4c:	80 93 3c 49 	sts	0x493C, r24	; 0x80493c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    9e50:	80 91 3c 49 	lds	r24, 0x493C	; 0x80493c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    9e54:	83 30       	cpi	r24, 0x03	; 3
    9e56:	d0 f2       	brcs	.-76     	; 0x9e0c <_Z18nextFullLBRxBufferv+0x10>
    9e58:	10 92 3c 49 	sts	0x493C, r1	; 0x80493c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    9e5c:	d7 cf       	rjmp	.-82     	; 0x9e0c <_Z18nextFullLBRxBufferv+0x10>
    9e5e:	89 81       	ldd	r24, Y+1	; 0x01
    9e60:	88 23       	and	r24, r24
    9e62:	69 f0       	breq	.+26     	; 0x9e7e <_Z18nextFullLBRxBufferv+0x82>
    9e64:	80 91 3c 49 	lds	r24, 0x493C	; 0x80493c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    9e68:	28 2f       	mov	r18, r24
    9e6a:	30 e0       	ldi	r19, 0x00	; 0
    9e6c:	42 e4       	ldi	r20, 0x42	; 66
    9e6e:	42 9f       	mul	r20, r18
    9e70:	c0 01       	movw	r24, r0
    9e72:	43 9f       	mul	r20, r19
    9e74:	90 0d       	add	r25, r0
    9e76:	11 24       	eor	r1, r1
    9e78:	8d 58       	subi	r24, 0x8D	; 141
    9e7a:	97 4b       	sbci	r25, 0xB7	; 183
    9e7c:	02 c0       	rjmp	.+4      	; 0x9e82 <_Z18nextFullLBRxBufferv+0x86>
    9e7e:	80 e0       	ldi	r24, 0x00	; 0
    9e80:	90 e0       	ldi	r25, 0x00	; 0
    9e82:	0f 90       	pop	r0
    9e84:	0f 90       	pop	r0
    9e86:	df 91       	pop	r29
    9e88:	cf 91       	pop	r28
    9e8a:	08 95       	ret

00009e8c <_Z19linkbusTxInProgressv>:
    9e8c:	cf 93       	push	r28
    9e8e:	df 93       	push	r29
    9e90:	cd b7       	in	r28, 0x3d	; 61
    9e92:	de b7       	in	r29, 0x3e	; 62
    9e94:	80 91 aa 47 	lds	r24, 0x47AA	; 0x8047aa <_ZL17linkbus_tx_active>
    9e98:	df 91       	pop	r29
    9e9a:	cf 91       	pop	r28
    9e9c:	08 95       	ret

00009e9e <_ZL16linkbus_start_txv>:
    9e9e:	cf 93       	push	r28
    9ea0:	df 93       	push	r29
    9ea2:	1f 92       	push	r1
    9ea4:	cd b7       	in	r28, 0x3d	; 61
    9ea6:	de b7       	in	r29, 0x3e	; 62
    9ea8:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <_ZL17linkbus_tx_active>
    9eac:	81 e0       	ldi	r24, 0x01	; 1
    9eae:	89 27       	eor	r24, r25
    9eb0:	89 83       	std	Y+1, r24	; 0x01
    9eb2:	89 81       	ldd	r24, Y+1	; 0x01
    9eb4:	88 23       	and	r24, r24
    9eb6:	61 f0       	breq	.+24     	; 0x9ed0 <_ZL16linkbus_start_txv+0x32>
    9eb8:	81 e0       	ldi	r24, 0x01	; 1
    9eba:	80 93 aa 47 	sts	0x47AA, r24	; 0x8047aa <_ZL17linkbus_tx_active>
    9ebe:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    9ec2:	88 23       	and	r24, r24
    9ec4:	19 f4       	brne	.+6      	; 0x9ecc <_ZL16linkbus_start_txv+0x2e>
    9ec6:	0e 94 57 6c 	call	0xd8ae	; 0xd8ae <USART0_enable_tx>
    9eca:	02 c0       	rjmp	.+4      	; 0x9ed0 <_ZL16linkbus_start_txv+0x32>
    9ecc:	0e 94 b5 6b 	call	0xd76a	; 0xd76a <USART1_enable_tx>
    9ed0:	89 81       	ldd	r24, Y+1	; 0x01
    9ed2:	0f 90       	pop	r0
    9ed4:	df 91       	pop	r29
    9ed6:	cf 91       	pop	r28
    9ed8:	08 95       	ret

00009eda <_Z14linkbus_end_txv>:
    9eda:	cf 93       	push	r28
    9edc:	df 93       	push	r29
    9ede:	cd b7       	in	r28, 0x3d	; 61
    9ee0:	de b7       	in	r29, 0x3e	; 62
    9ee2:	80 91 aa 47 	lds	r24, 0x47AA	; 0x8047aa <_ZL17linkbus_tx_active>
    9ee6:	88 23       	and	r24, r24
    9ee8:	c9 f0       	breq	.+50     	; 0x9f1c <_Z14linkbus_end_txv+0x42>
    9eea:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    9eee:	88 23       	and	r24, r24
    9ef0:	51 f4       	brne	.+20     	; 0x9f06 <_Z14linkbus_end_txv+0x2c>
    9ef2:	80 e0       	ldi	r24, 0x00	; 0
    9ef4:	98 e0       	ldi	r25, 0x08	; 8
    9ef6:	20 e0       	ldi	r18, 0x00	; 0
    9ef8:	38 e0       	ldi	r19, 0x08	; 8
    9efa:	f9 01       	movw	r30, r18
    9efc:	25 81       	ldd	r18, Z+5	; 0x05
    9efe:	2f 7d       	andi	r18, 0xDF	; 223
    9f00:	fc 01       	movw	r30, r24
    9f02:	25 83       	std	Z+5, r18	; 0x05
    9f04:	09 c0       	rjmp	.+18     	; 0x9f18 <_Z14linkbus_end_txv+0x3e>
    9f06:	80 e2       	ldi	r24, 0x20	; 32
    9f08:	98 e0       	ldi	r25, 0x08	; 8
    9f0a:	20 e2       	ldi	r18, 0x20	; 32
    9f0c:	38 e0       	ldi	r19, 0x08	; 8
    9f0e:	f9 01       	movw	r30, r18
    9f10:	25 81       	ldd	r18, Z+5	; 0x05
    9f12:	2f 7d       	andi	r18, 0xDF	; 223
    9f14:	fc 01       	movw	r30, r24
    9f16:	25 83       	std	Z+5, r18	; 0x05
    9f18:	10 92 aa 47 	sts	0x47AA, r1	; 0x8047aa <_ZL17linkbus_tx_active>
    9f1c:	00 00       	nop
    9f1e:	df 91       	pop	r29
    9f20:	cf 91       	pop	r28
    9f22:	08 95       	ret

00009f24 <_ZL21USART1_initializationm>:
    9f24:	cf 93       	push	r28
    9f26:	df 93       	push	r29
    9f28:	00 d0       	rcall	.+0      	; 0x9f2a <_ZL21USART1_initializationm+0x6>
    9f2a:	00 d0       	rcall	.+0      	; 0x9f2c <_ZL21USART1_initializationm+0x8>
    9f2c:	cd b7       	in	r28, 0x3d	; 61
    9f2e:	de b7       	in	r29, 0x3e	; 62
    9f30:	69 83       	std	Y+1, r22	; 0x01
    9f32:	7a 83       	std	Y+2, r23	; 0x02
    9f34:	8b 83       	std	Y+3, r24	; 0x03
    9f36:	9c 83       	std	Y+4, r25	; 0x04
    9f38:	80 e0       	ldi	r24, 0x00	; 0
    9f3a:	0e 94 19 4e 	call	0x9c32	; 0x9c32 <PC1_set_dir>
    9f3e:	80 e0       	ldi	r24, 0x00	; 0
    9f40:	0e 94 0a 4e 	call	0x9c14	; 0x9c14 <PC1_set_pull_mode>
    9f44:	81 e0       	ldi	r24, 0x01	; 1
    9f46:	0e 94 ec 4d 	call	0x9bd8	; 0x9bd8 <PC0_set_dir>
    9f4a:	81 e0       	ldi	r24, 0x01	; 1
    9f4c:	0e 94 fb 4d 	call	0x9bf6	; 0x9bf6 <PC0_set_level>
    9f50:	89 81       	ldd	r24, Y+1	; 0x01
    9f52:	9a 81       	ldd	r25, Y+2	; 0x02
    9f54:	ab 81       	ldd	r26, Y+3	; 0x03
    9f56:	bc 81       	ldd	r27, Y+4	; 0x04
    9f58:	40 e0       	ldi	r20, 0x00	; 0
    9f5a:	bc 01       	movw	r22, r24
    9f5c:	cd 01       	movw	r24, r26
    9f5e:	0e 94 42 6b 	call	0xd684	; 0xd684 <USART1_init>
    9f62:	00 00       	nop
    9f64:	24 96       	adiw	r28, 0x04	; 4
    9f66:	cd bf       	out	0x3d, r28	; 61
    9f68:	de bf       	out	0x3e, r29	; 62
    9f6a:	df 91       	pop	r29
    9f6c:	cf 91       	pop	r28
    9f6e:	08 95       	ret

00009f70 <_ZL21USART0_initializationm>:
    9f70:	cf 93       	push	r28
    9f72:	df 93       	push	r29
    9f74:	00 d0       	rcall	.+0      	; 0x9f76 <_ZL21USART0_initializationm+0x6>
    9f76:	00 d0       	rcall	.+0      	; 0x9f78 <_ZL21USART0_initializationm+0x8>
    9f78:	cd b7       	in	r28, 0x3d	; 61
    9f7a:	de b7       	in	r29, 0x3e	; 62
    9f7c:	69 83       	std	Y+1, r22	; 0x01
    9f7e:	7a 83       	std	Y+2, r23	; 0x02
    9f80:	8b 83       	std	Y+3, r24	; 0x03
    9f82:	9c 83       	std	Y+4, r25	; 0x04
    9f84:	89 81       	ldd	r24, Y+1	; 0x01
    9f86:	9a 81       	ldd	r25, Y+2	; 0x02
    9f88:	ab 81       	ldd	r26, Y+3	; 0x03
    9f8a:	bc 81       	ldd	r27, Y+4	; 0x04
    9f8c:	40 e0       	ldi	r20, 0x00	; 0
    9f8e:	bc 01       	movw	r22, r24
    9f90:	cd 01       	movw	r24, r26
    9f92:	0e 94 eb 6b 	call	0xd7d6	; 0xd7d6 <USART0_init>
    9f96:	00 00       	nop
    9f98:	24 96       	adiw	r28, 0x04	; 4
    9f9a:	cd bf       	out	0x3d, r28	; 61
    9f9c:	de bf       	out	0x3e, r29	; 62
    9f9e:	df 91       	pop	r29
    9fa0:	cf 91       	pop	r28
    9fa2:	08 95       	ret

00009fa4 <_Z12linkbus_initm14USART_Number_t>:
    9fa4:	cf 93       	push	r28
    9fa6:	df 93       	push	r29
    9fa8:	cd b7       	in	r28, 0x3d	; 61
    9faa:	de b7       	in	r29, 0x3e	; 62
    9fac:	27 97       	sbiw	r28, 0x07	; 7
    9fae:	cd bf       	out	0x3d, r28	; 61
    9fb0:	de bf       	out	0x3e, r29	; 62
    9fb2:	6b 83       	std	Y+3, r22	; 0x03
    9fb4:	7c 83       	std	Y+4, r23	; 0x04
    9fb6:	8d 83       	std	Y+5, r24	; 0x05
    9fb8:	9e 83       	std	Y+6, r25	; 0x06
    9fba:	4f 83       	std	Y+7, r20	; 0x07
    9fbc:	46 ec       	ldi	r20, 0xC6	; 198
    9fbe:	50 e0       	ldi	r21, 0x00	; 0
    9fc0:	60 e0       	ldi	r22, 0x00	; 0
    9fc2:	70 e0       	ldi	r23, 0x00	; 0
    9fc4:	83 e7       	ldi	r24, 0x73	; 115
    9fc6:	98 e4       	ldi	r25, 0x48	; 72
    9fc8:	0e 94 02 75 	call	0xea04	; 0xea04 <memset>
    9fcc:	19 82       	std	Y+1, r1	; 0x01
    9fce:	1a 82       	std	Y+2, r1	; 0x02
    9fd0:	89 81       	ldd	r24, Y+1	; 0x01
    9fd2:	9a 81       	ldd	r25, Y+2	; 0x02
    9fd4:	04 97       	sbiw	r24, 0x04	; 4
    9fd6:	94 f4       	brge	.+36     	; 0x9ffc <_Z12linkbus_initm14USART_Number_t+0x58>
    9fd8:	29 81       	ldd	r18, Y+1	; 0x01
    9fda:	3a 81       	ldd	r19, Y+2	; 0x02
    9fdc:	42 e3       	ldi	r20, 0x32	; 50
    9fde:	42 9f       	mul	r20, r18
    9fe0:	c0 01       	movw	r24, r0
    9fe2:	43 9f       	mul	r20, r19
    9fe4:	90 0d       	add	r25, r0
    9fe6:	11 24       	eor	r1, r1
    9fe8:	85 55       	subi	r24, 0x55	; 85
    9fea:	98 4b       	sbci	r25, 0xB8	; 184
    9fec:	fc 01       	movw	r30, r24
    9fee:	10 82       	st	Z, r1
    9ff0:	89 81       	ldd	r24, Y+1	; 0x01
    9ff2:	9a 81       	ldd	r25, Y+2	; 0x02
    9ff4:	01 96       	adiw	r24, 0x01	; 1
    9ff6:	89 83       	std	Y+1, r24	; 0x01
    9ff8:	9a 83       	std	Y+2, r25	; 0x02
    9ffa:	ea cf       	rjmp	.-44     	; 0x9fd0 <_Z12linkbus_initm14USART_Number_t+0x2c>
    9ffc:	8f 81       	ldd	r24, Y+7	; 0x07
    9ffe:	86 30       	cpi	r24, 0x06	; 6
    a000:	21 f4       	brne	.+8      	; 0xa00a <_Z12linkbus_initm14USART_Number_t+0x66>
    a002:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a006:	87 30       	cpi	r24, 0x07	; 7
    a008:	b9 f4       	brne	.+46     	; 0xa038 <_Z12linkbus_initm14USART_Number_t+0x94>
    a00a:	8f 81       	ldd	r24, Y+7	; 0x07
    a00c:	88 23       	and	r24, r24
    a00e:	49 f4       	brne	.+18     	; 0xa022 <_Z12linkbus_initm14USART_Number_t+0x7e>
    a010:	8b 81       	ldd	r24, Y+3	; 0x03
    a012:	9c 81       	ldd	r25, Y+4	; 0x04
    a014:	ad 81       	ldd	r26, Y+5	; 0x05
    a016:	be 81       	ldd	r27, Y+6	; 0x06
    a018:	bc 01       	movw	r22, r24
    a01a:	cd 01       	movw	r24, r26
    a01c:	0e 94 b8 4f 	call	0x9f70	; 0x9f70 <_ZL21USART0_initializationm>
    a020:	08 c0       	rjmp	.+16     	; 0xa032 <_Z12linkbus_initm14USART_Number_t+0x8e>
    a022:	8b 81       	ldd	r24, Y+3	; 0x03
    a024:	9c 81       	ldd	r25, Y+4	; 0x04
    a026:	ad 81       	ldd	r26, Y+5	; 0x05
    a028:	be 81       	ldd	r27, Y+6	; 0x06
    a02a:	bc 01       	movw	r22, r24
    a02c:	cd 01       	movw	r24, r26
    a02e:	0e 94 92 4f 	call	0x9f24	; 0x9f24 <_ZL21USART1_initializationm>
    a032:	8f 81       	ldd	r24, Y+7	; 0x07
    a034:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_linkbus_usart_number>
    a038:	10 92 21 40 	sts	0x4021, r1	; 0x804021 <_ZL14g_bus_disabled>
    a03c:	00 00       	nop
    a03e:	27 96       	adiw	r28, 0x07	; 7
    a040:	cd bf       	out	0x3d, r28	; 61
    a042:	de bf       	out	0x3e, r29	; 62
    a044:	df 91       	pop	r29
    a046:	cf 91       	pop	r28
    a048:	08 95       	ret

0000a04a <_Z15linkbus_disablev>:
    a04a:	cf 93       	push	r28
    a04c:	df 93       	push	r29
    a04e:	1f 92       	push	r1
    a050:	cd b7       	in	r28, 0x3d	; 61
    a052:	de b7       	in	r29, 0x3e	; 62
    a054:	81 e0       	ldi	r24, 0x01	; 1
    a056:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <_ZL14g_bus_disabled>
    a05a:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a05e:	88 23       	and	r24, r24
    a060:	19 f4       	brne	.+6      	; 0xa068 <_Z15linkbus_disablev+0x1e>
    a062:	0e 94 71 6c 	call	0xd8e2	; 0xd8e2 <USART0_disable>
    a066:	02 c0       	rjmp	.+4      	; 0xa06c <_Z15linkbus_disablev+0x22>
    a068:	0e 94 cf 6b 	call	0xd79e	; 0xd79e <USART1_disable>
    a06c:	0e 94 6d 4f 	call	0x9eda	; 0x9eda <_Z14linkbus_end_txv>
    a070:	46 ec       	ldi	r20, 0xC6	; 198
    a072:	50 e0       	ldi	r21, 0x00	; 0
    a074:	60 e0       	ldi	r22, 0x00	; 0
    a076:	70 e0       	ldi	r23, 0x00	; 0
    a078:	83 e7       	ldi	r24, 0x73	; 115
    a07a:	98 e4       	ldi	r25, 0x48	; 72
    a07c:	0e 94 02 75 	call	0xea04	; 0xea04 <memset>
    a080:	19 82       	std	Y+1, r1	; 0x01
    a082:	89 81       	ldd	r24, Y+1	; 0x01
    a084:	84 30       	cpi	r24, 0x04	; 4
    a086:	88 f4       	brcc	.+34     	; 0xa0aa <_Z15linkbus_disablev+0x60>
    a088:	89 81       	ldd	r24, Y+1	; 0x01
    a08a:	28 2f       	mov	r18, r24
    a08c:	30 e0       	ldi	r19, 0x00	; 0
    a08e:	42 e3       	ldi	r20, 0x32	; 50
    a090:	42 9f       	mul	r20, r18
    a092:	c0 01       	movw	r24, r0
    a094:	43 9f       	mul	r20, r19
    a096:	90 0d       	add	r25, r0
    a098:	11 24       	eor	r1, r1
    a09a:	85 55       	subi	r24, 0x55	; 85
    a09c:	98 4b       	sbci	r25, 0xB8	; 184
    a09e:	fc 01       	movw	r30, r24
    a0a0:	10 82       	st	Z, r1
    a0a2:	89 81       	ldd	r24, Y+1	; 0x01
    a0a4:	8f 5f       	subi	r24, 0xFF	; 255
    a0a6:	89 83       	std	Y+1, r24	; 0x01
    a0a8:	ec cf       	rjmp	.-40     	; 0xa082 <_Z15linkbus_disablev+0x38>
    a0aa:	00 00       	nop
    a0ac:	0f 90       	pop	r0
    a0ae:	df 91       	pop	r29
    a0b0:	cf 91       	pop	r28
    a0b2:	08 95       	ret

0000a0b4 <_Z14linkbus_enablev>:
    a0b4:	cf 93       	push	r28
    a0b6:	df 93       	push	r29
    a0b8:	1f 92       	push	r1
    a0ba:	cd b7       	in	r28, 0x3d	; 61
    a0bc:	de b7       	in	r29, 0x3e	; 62
    a0be:	10 92 21 40 	sts	0x4021, r1	; 0x804021 <_ZL14g_bus_disabled>
    a0c2:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a0c6:	88 23       	and	r24, r24
    a0c8:	19 f4       	brne	.+6      	; 0xa0d0 <_Z14linkbus_enablev+0x1c>
    a0ca:	0e 94 46 6c 	call	0xd88c	; 0xd88c <USART0_enable>
    a0ce:	02 c0       	rjmp	.+4      	; 0xa0d4 <_Z14linkbus_enablev+0x20>
    a0d0:	0e 94 a4 6b 	call	0xd748	; 0xd748 <USART1_enable>
    a0d4:	46 ec       	ldi	r20, 0xC6	; 198
    a0d6:	50 e0       	ldi	r21, 0x00	; 0
    a0d8:	60 e0       	ldi	r22, 0x00	; 0
    a0da:	70 e0       	ldi	r23, 0x00	; 0
    a0dc:	83 e7       	ldi	r24, 0x73	; 115
    a0de:	98 e4       	ldi	r25, 0x48	; 72
    a0e0:	0e 94 02 75 	call	0xea04	; 0xea04 <memset>
    a0e4:	19 82       	std	Y+1, r1	; 0x01
    a0e6:	89 81       	ldd	r24, Y+1	; 0x01
    a0e8:	84 30       	cpi	r24, 0x04	; 4
    a0ea:	88 f4       	brcc	.+34     	; 0xa10e <_Z14linkbus_enablev+0x5a>
    a0ec:	89 81       	ldd	r24, Y+1	; 0x01
    a0ee:	28 2f       	mov	r18, r24
    a0f0:	30 e0       	ldi	r19, 0x00	; 0
    a0f2:	42 e3       	ldi	r20, 0x32	; 50
    a0f4:	42 9f       	mul	r20, r18
    a0f6:	c0 01       	movw	r24, r0
    a0f8:	43 9f       	mul	r20, r19
    a0fa:	90 0d       	add	r25, r0
    a0fc:	11 24       	eor	r1, r1
    a0fe:	85 55       	subi	r24, 0x55	; 85
    a100:	98 4b       	sbci	r25, 0xB8	; 184
    a102:	fc 01       	movw	r30, r24
    a104:	10 82       	st	Z, r1
    a106:	89 81       	ldd	r24, Y+1	; 0x01
    a108:	8f 5f       	subi	r24, 0xFF	; 255
    a10a:	89 83       	std	Y+1, r24	; 0x01
    a10c:	ec cf       	rjmp	.-40     	; 0xa0e6 <_Z14linkbus_enablev+0x32>
    a10e:	00 00       	nop
    a110:	0f 90       	pop	r0
    a112:	df 91       	pop	r29
    a114:	cf 91       	pop	r28
    a116:	08 95       	ret

0000a118 <_Z12lb_send_textPc>:
    a118:	cf 93       	push	r28
    a11a:	df 93       	push	r29
    a11c:	cd b7       	in	r28, 0x3d	; 61
    a11e:	de b7       	in	r29, 0x3e	; 62
    a120:	27 97       	sbiw	r28, 0x07	; 7
    a122:	cd bf       	out	0x3d, r28	; 61
    a124:	de bf       	out	0x3e, r29	; 62
    a126:	8e 83       	std	Y+6, r24	; 0x06
    a128:	9f 83       	std	Y+7, r25	; 0x07
    a12a:	81 e0       	ldi	r24, 0x01	; 1
    a12c:	89 83       	std	Y+1, r24	; 0x01
    a12e:	88 ec       	ldi	r24, 0xC8	; 200
    a130:	90 e0       	ldi	r25, 0x00	; 0
    a132:	8a 83       	std	Y+2, r24	; 0x02
    a134:	9b 83       	std	Y+3, r25	; 0x03
    a136:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZL14g_bus_disabled>
    a13a:	88 23       	and	r24, r24
    a13c:	11 f0       	breq	.+4      	; 0xa142 <_Z12lb_send_textPc+0x2a>
    a13e:	89 81       	ldd	r24, Y+1	; 0x01
    a140:	42 c0       	rjmp	.+132    	; 0xa1c6 <_Z12lb_send_textPc+0xae>
    a142:	8e 81       	ldd	r24, Y+6	; 0x06
    a144:	9f 81       	ldd	r25, Y+7	; 0x07
    a146:	89 2b       	or	r24, r25
    a148:	e9 f1       	breq	.+122    	; 0xa1c4 <_Z12lb_send_textPc+0xac>
    a14a:	0e 94 6f 4e 	call	0x9cde	; 0x9cde <_Z19nextEmptyLBTxBufferv>
    a14e:	8c 83       	std	Y+4, r24	; 0x04
    a150:	9d 83       	std	Y+5, r25	; 0x05
    a152:	8c 81       	ldd	r24, Y+4	; 0x04
    a154:	9d 81       	ldd	r25, Y+5	; 0x05
    a156:	89 2b       	or	r24, r25
    a158:	01 f5       	brne	.+64     	; 0xa19a <_Z12lb_send_textPc+0x82>
    a15a:	8a 81       	ldd	r24, Y+2	; 0x02
    a15c:	9b 81       	ldd	r25, Y+3	; 0x03
    a15e:	89 2b       	or	r24, r25
    a160:	e1 f0       	breq	.+56     	; 0xa19a <_Z12lb_send_textPc+0x82>
    a162:	0e 94 46 4f 	call	0x9e8c	; 0x9e8c <_Z19linkbusTxInProgressv>
    a166:	88 23       	and	r24, r24
    a168:	31 f0       	breq	.+12     	; 0xa176 <_Z12lb_send_textPc+0x5e>
    a16a:	8a 81       	ldd	r24, Y+2	; 0x02
    a16c:	9b 81       	ldd	r25, Y+3	; 0x03
    a16e:	89 2b       	or	r24, r25
    a170:	11 f0       	breq	.+4      	; 0xa176 <_Z12lb_send_textPc+0x5e>
    a172:	81 e0       	ldi	r24, 0x01	; 1
    a174:	01 c0       	rjmp	.+2      	; 0xa178 <_Z12lb_send_textPc+0x60>
    a176:	80 e0       	ldi	r24, 0x00	; 0
    a178:	88 23       	and	r24, r24
    a17a:	51 f0       	breq	.+20     	; 0xa190 <_Z12lb_send_textPc+0x78>
    a17c:	8a 81       	ldd	r24, Y+2	; 0x02
    a17e:	9b 81       	ldd	r25, Y+3	; 0x03
    a180:	89 2b       	or	r24, r25
    a182:	79 f3       	breq	.-34     	; 0xa162 <_Z12lb_send_textPc+0x4a>
    a184:	8a 81       	ldd	r24, Y+2	; 0x02
    a186:	9b 81       	ldd	r25, Y+3	; 0x03
    a188:	01 97       	sbiw	r24, 0x01	; 1
    a18a:	8a 83       	std	Y+2, r24	; 0x02
    a18c:	9b 83       	std	Y+3, r25	; 0x03
    a18e:	e9 cf       	rjmp	.-46     	; 0xa162 <_Z12lb_send_textPc+0x4a>
    a190:	0e 94 6f 4e 	call	0x9cde	; 0x9cde <_Z19nextEmptyLBTxBufferv>
    a194:	8c 83       	std	Y+4, r24	; 0x04
    a196:	9d 83       	std	Y+5, r25	; 0x05
    a198:	dc cf       	rjmp	.-72     	; 0xa152 <_Z12lb_send_textPc+0x3a>
    a19a:	8c 81       	ldd	r24, Y+4	; 0x04
    a19c:	9d 81       	ldd	r25, Y+5	; 0x05
    a19e:	89 2b       	or	r24, r25
    a1a0:	89 f0       	breq	.+34     	; 0xa1c4 <_Z12lb_send_textPc+0xac>
    a1a2:	8f 81       	ldd	r24, Y+7	; 0x07
    a1a4:	8f 93       	push	r24
    a1a6:	8e 81       	ldd	r24, Y+6	; 0x06
    a1a8:	8f 93       	push	r24
    a1aa:	8d 81       	ldd	r24, Y+5	; 0x05
    a1ac:	8f 93       	push	r24
    a1ae:	8c 81       	ldd	r24, Y+4	; 0x04
    a1b0:	8f 93       	push	r24
    a1b2:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    a1b6:	0f 90       	pop	r0
    a1b8:	0f 90       	pop	r0
    a1ba:	0f 90       	pop	r0
    a1bc:	0f 90       	pop	r0
    a1be:	0e 94 4f 4f 	call	0x9e9e	; 0x9e9e <_ZL16linkbus_start_txv>
    a1c2:	19 82       	std	Y+1, r1	; 0x01
    a1c4:	89 81       	ldd	r24, Y+1	; 0x01
    a1c6:	27 96       	adiw	r28, 0x07	; 7
    a1c8:	cd bf       	out	0x3d, r28	; 61
    a1ca:	de bf       	out	0x3e, r29	; 62
    a1cc:	df 91       	pop	r29
    a1ce:	cf 91       	pop	r28
    a1d0:	08 95       	ret

0000a1d2 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    a1d2:	cf 93       	push	r28
    a1d4:	df 93       	push	r29
    a1d6:	cd b7       	in	r28, 0x3d	; 61
    a1d8:	de b7       	in	r29, 0x3e	; 62
    a1da:	27 97       	sbiw	r28, 0x07	; 7
    a1dc:	cd bf       	out	0x3d, r28	; 61
    a1de:	de bf       	out	0x3e, r29	; 62
    a1e0:	8b 83       	std	Y+3, r24	; 0x03
    a1e2:	6c 83       	std	Y+4, r22	; 0x04
    a1e4:	7d 83       	std	Y+5, r23	; 0x05
    a1e6:	4e 83       	std	Y+6, r20	; 0x06
    a1e8:	5f 83       	std	Y+7, r21	; 0x07
    a1ea:	84 e2       	ldi	r24, 0x24	; 36
    a1ec:	89 83       	std	Y+1, r24	; 0x01
    a1ee:	8b e3       	ldi	r24, 0x3B	; 59
    a1f0:	8a 83       	std	Y+2, r24	; 0x02
    a1f2:	8b 81       	ldd	r24, Y+3	; 0x03
    a1f4:	83 30       	cpi	r24, 0x03	; 3
    a1f6:	19 f4       	brne	.+6      	; 0xa1fe <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    a1f8:	81 e2       	ldi	r24, 0x21	; 33
    a1fa:	89 83       	std	Y+1, r24	; 0x01
    a1fc:	05 c0       	rjmp	.+10     	; 0xa208 <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    a1fe:	8b 81       	ldd	r24, Y+3	; 0x03
    a200:	82 30       	cpi	r24, 0x02	; 2
    a202:	11 f4       	brne	.+4      	; 0xa208 <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    a204:	8f e3       	ldi	r24, 0x3F	; 63
    a206:	8a 83       	std	Y+2, r24	; 0x02
    a208:	8a 81       	ldd	r24, Y+2	; 0x02
    a20a:	28 2f       	mov	r18, r24
    a20c:	30 e0       	ldi	r19, 0x00	; 0
    a20e:	89 81       	ldd	r24, Y+1	; 0x01
    a210:	88 2f       	mov	r24, r24
    a212:	90 e0       	ldi	r25, 0x00	; 0
    a214:	43 2f       	mov	r20, r19
    a216:	4f 93       	push	r20
    a218:	2f 93       	push	r18
    a21a:	2f 81       	ldd	r18, Y+7	; 0x07
    a21c:	2f 93       	push	r18
    a21e:	2e 81       	ldd	r18, Y+6	; 0x06
    a220:	2f 93       	push	r18
    a222:	2d 81       	ldd	r18, Y+5	; 0x05
    a224:	2f 93       	push	r18
    a226:	2c 81       	ldd	r18, Y+4	; 0x04
    a228:	2f 93       	push	r18
    a22a:	29 2f       	mov	r18, r25
    a22c:	2f 93       	push	r18
    a22e:	8f 93       	push	r24
    a230:	86 e5       	ldi	r24, 0x56	; 86
    a232:	94 e4       	ldi	r25, 0x44	; 68
    a234:	89 2f       	mov	r24, r25
    a236:	8f 93       	push	r24
    a238:	86 e5       	ldi	r24, 0x56	; 86
    a23a:	94 e4       	ldi	r25, 0x44	; 68
    a23c:	8f 93       	push	r24
    a23e:	88 e7       	ldi	r24, 0x78	; 120
    a240:	97 e4       	ldi	r25, 0x47	; 71
    a242:	89 2f       	mov	r24, r25
    a244:	8f 93       	push	r24
    a246:	88 e7       	ldi	r24, 0x78	; 120
    a248:	97 e4       	ldi	r25, 0x47	; 71
    a24a:	8f 93       	push	r24
    a24c:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    a250:	8d b7       	in	r24, 0x3d	; 61
    a252:	9e b7       	in	r25, 0x3e	; 62
    a254:	0c 96       	adiw	r24, 0x0c	; 12
    a256:	cd bf       	out	0x3d, r28	; 61
    a258:	de bf       	out	0x3e, r29	; 62
    a25a:	88 e7       	ldi	r24, 0x78	; 120
    a25c:	97 e4       	ldi	r25, 0x47	; 71
    a25e:	0e 94 8c 50 	call	0xa118	; 0xa118 <_Z12lb_send_textPc>
    a262:	00 00       	nop
    a264:	27 96       	adiw	r28, 0x07	; 7
    a266:	cd bf       	out	0x3d, r28	; 61
    a268:	de bf       	out	0x3e, r29	; 62
    a26a:	df 91       	pop	r29
    a26c:	cf 91       	pop	r28
    a26e:	08 95       	ret

0000a270 <_Z16lb_broadcast_strPKcS0_>:


void lb_broadcast_str(const char* data, const char* str)
{
    a270:	cf 93       	push	r28
    a272:	df 93       	push	r29
    a274:	00 d0       	rcall	.+0      	; 0xa276 <_Z16lb_broadcast_strPKcS0_+0x6>
    a276:	00 d0       	rcall	.+0      	; 0xa278 <_Z16lb_broadcast_strPKcS0_+0x8>
    a278:	cd b7       	in	r28, 0x3d	; 61
    a27a:	de b7       	in	r29, 0x3e	; 62
    a27c:	89 83       	std	Y+1, r24	; 0x01
    a27e:	9a 83       	std	Y+2, r25	; 0x02
    a280:	6b 83       	std	Y+3, r22	; 0x03
    a282:	7c 83       	std	Y+4, r23	; 0x04
	if(str)
    a284:	8b 81       	ldd	r24, Y+3	; 0x03
    a286:	9c 81       	ldd	r25, Y+4	; 0x04
    a288:	89 2b       	or	r24, r25
    a28a:	e9 f0       	breq	.+58     	; 0xa2c6 <_Z16lb_broadcast_strPKcS0_+0x56>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, data);
    a28c:	8a 81       	ldd	r24, Y+2	; 0x02
    a28e:	8f 93       	push	r24
    a290:	89 81       	ldd	r24, Y+1	; 0x01
    a292:	8f 93       	push	r24
    a294:	8c 81       	ldd	r24, Y+4	; 0x04
    a296:	8f 93       	push	r24
    a298:	8b 81       	ldd	r24, Y+3	; 0x03
    a29a:	8f 93       	push	r24
    a29c:	86 e6       	ldi	r24, 0x66	; 102
    a29e:	94 e4       	ldi	r25, 0x44	; 68
    a2a0:	89 2f       	mov	r24, r25
    a2a2:	8f 93       	push	r24
    a2a4:	86 e6       	ldi	r24, 0x66	; 102
    a2a6:	94 e4       	ldi	r25, 0x44	; 68
    a2a8:	8f 93       	push	r24
    a2aa:	88 e7       	ldi	r24, 0x78	; 120
    a2ac:	97 e4       	ldi	r25, 0x47	; 71
    a2ae:	89 2f       	mov	r24, r25
    a2b0:	8f 93       	push	r24
    a2b2:	88 e7       	ldi	r24, 0x78	; 120
    a2b4:	97 e4       	ldi	r25, 0x47	; 71
    a2b6:	8f 93       	push	r24
    a2b8:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    a2bc:	8d b7       	in	r24, 0x3d	; 61
    a2be:	9e b7       	in	r25, 0x3e	; 62
    a2c0:	08 96       	adiw	r24, 0x08	; 8
    a2c2:	cd bf       	out	0x3d, r28	; 61
    a2c4:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    a2c6:	80 91 78 47 	lds	r24, 0x4778	; 0x804778 <_ZL13g_tempMsgBuff>
    a2ca:	88 23       	and	r24, r24
    a2cc:	21 f0       	breq	.+8      	; 0xa2d6 <_Z16lb_broadcast_strPKcS0_+0x66>
    a2ce:	88 e7       	ldi	r24, 0x78	; 120
    a2d0:	97 e4       	ldi	r25, 0x47	; 71
    a2d2:	0e 94 8c 50 	call	0xa118	; 0xa118 <_Z12lb_send_textPc>
}
    a2d6:	00 00       	nop
    a2d8:	24 96       	adiw	r28, 0x04	; 4
    a2da:	cd bf       	out	0x3d, r28	; 61
    a2dc:	de bf       	out	0x3e, r29	; 62
    a2de:	df 91       	pop	r29
    a2e0:	cf 91       	pop	r28
    a2e2:	08 95       	ret

0000a2e4 <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    a2e4:	cf 93       	push	r28
    a2e6:	df 93       	push	r29
    a2e8:	cd b7       	in	r28, 0x3d	; 61
    a2ea:	de b7       	in	r29, 0x3e	; 62
    a2ec:	28 97       	sbiw	r28, 0x08	; 8
    a2ee:	cd bf       	out	0x3d, r28	; 61
    a2f0:	de bf       	out	0x3e, r29	; 62
    a2f2:	8b 83       	std	Y+3, r24	; 0x03
    a2f4:	9c 83       	std	Y+4, r25	; 0x04
    a2f6:	6d 83       	std	Y+5, r22	; 0x05
    a2f8:	7e 83       	std	Y+6, r23	; 0x06
    a2fa:	4f 83       	std	Y+7, r20	; 0x07
    a2fc:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = true;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    a2fe:	8b 81       	ldd	r24, Y+3	; 0x03
    a300:	9c 81       	ldd	r25, Y+4	; 0x04
    a302:	89 2b       	or	r24, r25
    a304:	09 f4       	brne	.+2      	; 0xa308 <_Z9makeMorsePcPbS0_+0x24>
    a306:	4a c0       	rjmp	.+148    	; 0xa39c <_Z9makeMorsePcPbS0_+0xb8>
	{
		holdKeyDown = false;
    a308:	10 92 3d 49 	sts	0x493D, r1	; 0x80493d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    a30c:	8d 81       	ldd	r24, Y+5	; 0x05
    a30e:	9e 81       	ldd	r25, Y+6	; 0x06
    a310:	89 2b       	or	r24, r25
    a312:	31 f0       	breq	.+12     	; 0xa320 <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    a314:	8d 81       	ldd	r24, Y+5	; 0x05
    a316:	9e 81       	ldd	r25, Y+6	; 0x06
    a318:	fc 01       	movw	r30, r24
    a31a:	80 81       	ld	r24, Z
    a31c:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    a320:	8b 81       	ldd	r24, Y+3	; 0x03
    a322:	9c 81       	ldd	r25, Y+4	; 0x04
    a324:	fc 01       	movw	r30, r24
    a326:	80 81       	ld	r24, Z
    a328:	88 23       	and	r24, r24
    a32a:	21 f1       	breq	.+72     	; 0xa374 <_Z9makeMorsePcPbS0_+0x90>
		{
			str = s;
    a32c:	8b 81       	ldd	r24, Y+3	; 0x03
    a32e:	9c 81       	ldd	r25, Y+4	; 0x04
    a330:	80 93 3e 49 	sts	0x493E, r24	; 0x80493e <_ZZ9makeMorsePcPbS0_E3str>
    a334:	90 93 3f 49 	sts	0x493F, r25	; 0x80493f <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = ' ';
    a338:	80 e2       	ldi	r24, 0x20	; 32
    a33a:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    a33e:	80 91 3e 49 	lds	r24, 0x493E	; 0x80493e <_ZZ9makeMorsePcPbS0_E3str>
    a342:	90 91 3f 49 	lds	r25, 0x493F	; 0x80493f <_ZZ9makeMorsePcPbS0_E3str+0x1>
    a346:	fc 01       	movw	r30, r24
    a348:	80 81       	ld	r24, Z
    a34a:	0e 94 1a 53 	call	0xa634	; 0xa634 <_Z12getMorseCharc>
    a34e:	a8 2f       	mov	r26, r24
    a350:	cb 01       	movw	r24, r22
    a352:	80 93 40 49 	sts	0x4940, r24	; 0x804940 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    a356:	90 93 41 49 	sts	0x4941, r25	; 0x804941 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a35a:	a0 93 42 49 	sts	0x4942, r26	; 0x804942 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    a35e:	10 92 43 49 	sts	0x4943, r1	; 0x804943 <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    a362:	10 92 44 49 	sts	0x4944, r1	; 0x804944 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    a366:	10 92 45 49 	sts	0x4945, r1	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    a36a:	10 92 46 49 	sts	0x4946, r1	; 0x804946 <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    a36e:	10 92 25 40 	sts	0x4025, r1	; 0x804025 <_ZZ9makeMorsePcPbS0_E15completedString>
    a372:	10 c0       	rjmp	.+32     	; 0xa394 <_Z9makeMorsePcPbS0_+0xb0>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    a374:	10 92 3e 49 	sts	0x493E, r1	; 0x80493e <_ZZ9makeMorsePcPbS0_E3str>
    a378:	10 92 3f 49 	sts	0x493F, r1	; 0x80493f <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    a37c:	81 e0       	ldi	r24, 0x01	; 1
    a37e:	80 93 25 40 	sts	0x4025, r24	; 0x804025 <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    a382:	8f 81       	ldd	r24, Y+7	; 0x07
    a384:	98 85       	ldd	r25, Y+8	; 0x08
    a386:	89 2b       	or	r24, r25
    a388:	29 f0       	breq	.+10     	; 0xa394 <_Z9makeMorsePcPbS0_+0xb0>
			{
				*finished = true;
    a38a:	8f 81       	ldd	r24, Y+7	; 0x07
    a38c:	98 85       	ldd	r25, Y+8	; 0x08
    a38e:	21 e0       	ldi	r18, 0x01	; 1
    a390:	fc 01       	movw	r30, r24
    a392:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    a394:	10 92 47 49 	sts	0x4947, r1	; 0x804947 <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    a398:	80 e0       	ldi	r24, 0x00	; 0
    a39a:	f6 c0       	rjmp	.+492    	; 0xa588 <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else if(str)
    a39c:	80 91 3e 49 	lds	r24, 0x493E	; 0x80493e <_ZZ9makeMorsePcPbS0_E3str>
    a3a0:	90 91 3f 49 	lds	r25, 0x493F	; 0x80493f <_ZZ9makeMorsePcPbS0_E3str+0x1>
    a3a4:	89 2b       	or	r24, r25
    a3a6:	09 f4       	brne	.+2      	; 0xa3aa <_Z9makeMorsePcPbS0_+0xc6>
    a3a8:	dd c0       	rjmp	.+442    	; 0xa564 <_Z9makeMorsePcPbS0_+0x280>
	{
		if(repeating)
    a3aa:	8d 81       	ldd	r24, Y+5	; 0x05
    a3ac:	9e 81       	ldd	r25, Y+6	; 0x06
    a3ae:	89 2b       	or	r24, r25
    a3b0:	31 f0       	breq	.+12     	; 0xa3be <_Z9makeMorsePcPbS0_+0xda>
		{
			*repeating = repeat;
    a3b2:	20 91 23 40 	lds	r18, 0x4023	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
    a3b6:	8d 81       	ldd	r24, Y+5	; 0x05
    a3b8:	9e 81       	ldd	r25, Y+6	; 0x06
    a3ba:	fc 01       	movw	r30, r24
    a3bc:	20 83       	st	Z, r18
		}

		if(completedString)
    a3be:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <_ZZ9makeMorsePcPbS0_E15completedString>
    a3c2:	88 23       	and	r24, r24
    a3c4:	69 f0       	breq	.+26     	; 0xa3e0 <_Z9makeMorsePcPbS0_+0xfc>
		{
			if(finished)
    a3c6:	8f 81       	ldd	r24, Y+7	; 0x07
    a3c8:	98 85       	ldd	r25, Y+8	; 0x08
    a3ca:	89 2b       	or	r24, r25
    a3cc:	39 f0       	breq	.+14     	; 0xa3dc <_Z9makeMorsePcPbS0_+0xf8>
			{
				*finished = true;
    a3ce:	8f 81       	ldd	r24, Y+7	; 0x07
    a3d0:	98 85       	ldd	r25, Y+8	; 0x08
    a3d2:	21 e0       	ldi	r18, 0x01	; 1
    a3d4:	fc 01       	movw	r30, r24
    a3d6:	20 83       	st	Z, r18
				holdKeyDown = false;
    a3d8:	10 92 3d 49 	sts	0x493D, r1	; 0x80493d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    a3dc:	80 e0       	ldi	r24, 0x00	; 0
    a3de:	d4 c0       	rjmp	.+424    	; 0xa588 <_Z9makeMorsePcPbS0_+0x2a4>
		}

		if(elementIndex)
    a3e0:	80 91 45 49 	lds	r24, 0x4945	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a3e4:	88 23       	and	r24, r24
    a3e6:	31 f0       	breq	.+12     	; 0xa3f4 <_Z9makeMorsePcPbS0_+0x110>
		{
			elementIndex--;
    a3e8:	80 91 45 49 	lds	r24, 0x4945	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a3ec:	81 50       	subi	r24, 0x01	; 1
    a3ee:	80 93 45 49 	sts	0x4945, r24	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a3f2:	ae c0       	rjmp	.+348    	; 0xa550 <_Z9makeMorsePcPbS0_+0x26c>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    a3f4:	80 91 47 49 	lds	r24, 0x4947	; 0x804947 <_ZZ9makeMorsePcPbS0_E9carrierOn>
    a3f8:	88 23       	and	r24, r24
    a3fa:	a1 f0       	breq	.+40     	; 0xa424 <_Z9makeMorsePcPbS0_+0x140>
    a3fc:	90 91 3d 49 	lds	r25, 0x493D	; 0x80493d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    a400:	81 e0       	ldi	r24, 0x01	; 1
    a402:	89 27       	eor	r24, r25
    a404:	88 23       	and	r24, r24
    a406:	71 f0       	breq	.+28     	; 0xa424 <_Z9makeMorsePcPbS0_+0x140>
		{
			carrierOn = false;
    a408:	10 92 47 49 	sts	0x4947, r1	; 0x804947 <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    a40c:	80 91 46 49 	lds	r24, 0x4946	; 0x804946 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    a410:	88 23       	and	r24, r24
    a412:	09 f4       	brne	.+2      	; 0xa416 <_Z9makeMorsePcPbS0_+0x132>
    a414:	9d c0       	rjmp	.+314    	; 0xa550 <_Z9makeMorsePcPbS0_+0x26c>
			{
				elementIndex = addedSpace;
    a416:	80 91 46 49 	lds	r24, 0x4946	; 0x804946 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    a41a:	80 93 45 49 	sts	0x4945, r24	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    a41e:	10 92 46 49 	sts	0x4946, r1	; 0x804946 <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    a422:	96 c0       	rjmp	.+300    	; 0xa550 <_Z9makeMorsePcPbS0_+0x26c>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    a424:	90 91 41 49 	lds	r25, 0x4941	; 0x804941 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a428:	80 91 44 49 	lds	r24, 0x4944	; 0x804944 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    a42c:	89 17       	cp	r24, r25
    a42e:	08 f4       	brcc	.+2      	; 0xa432 <_Z9makeMorsePcPbS0_+0x14e>
    a430:	4a c0       	rjmp	.+148    	; 0xa4c6 <_Z9makeMorsePcPbS0_+0x1e2>
			{
				c = (*(str + ++charIndex));
    a432:	20 91 3e 49 	lds	r18, 0x493E	; 0x80493e <_ZZ9makeMorsePcPbS0_E3str>
    a436:	30 91 3f 49 	lds	r19, 0x493F	; 0x80493f <_ZZ9makeMorsePcPbS0_E3str+0x1>
    a43a:	80 91 43 49 	lds	r24, 0x4943	; 0x804943 <_ZZ9makeMorsePcPbS0_E9charIndex>
    a43e:	8f 5f       	subi	r24, 0xFF	; 255
    a440:	80 93 43 49 	sts	0x4943, r24	; 0x804943 <_ZZ9makeMorsePcPbS0_E9charIndex>
    a444:	80 91 43 49 	lds	r24, 0x4943	; 0x804943 <_ZZ9makeMorsePcPbS0_E9charIndex>
    a448:	88 2f       	mov	r24, r24
    a44a:	90 e0       	ldi	r25, 0x00	; 0
    a44c:	82 0f       	add	r24, r18
    a44e:	93 1f       	adc	r25, r19
    a450:	fc 01       	movw	r30, r24
    a452:	80 81       	ld	r24, Z
    a454:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    a458:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    a45c:	88 23       	and	r24, r24
    a45e:	29 f5       	brne	.+74     	; 0xa4aa <_Z9makeMorsePcPbS0_+0x1c6>
				{
					if(repeat)
    a460:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
    a464:	88 23       	and	r24, r24
    a466:	59 f0       	breq	.+22     	; 0xa47e <_Z9makeMorsePcPbS0_+0x19a>
					{
						c = *str;
    a468:	80 91 3e 49 	lds	r24, 0x493E	; 0x80493e <_ZZ9makeMorsePcPbS0_E3str>
    a46c:	90 91 3f 49 	lds	r25, 0x493F	; 0x80493f <_ZZ9makeMorsePcPbS0_E3str+0x1>
    a470:	fc 01       	movw	r30, r24
    a472:	80 81       	ld	r24, Z
    a474:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    a478:	10 92 43 49 	sts	0x4943, r1	; 0x804943 <_ZZ9makeMorsePcPbS0_E9charIndex>
    a47c:	16 c0       	rjmp	.+44     	; 0xa4aa <_Z9makeMorsePcPbS0_+0x1c6>
					}
					else
					{
						str = NULL;
    a47e:	10 92 3e 49 	sts	0x493E, r1	; 0x80493e <_ZZ9makeMorsePcPbS0_E3str>
    a482:	10 92 3f 49 	sts	0x493F, r1	; 0x80493f <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    a486:	10 92 47 49 	sts	0x4947, r1	; 0x804947 <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    a48a:	81 e0       	ldi	r24, 0x01	; 1
    a48c:	80 93 25 40 	sts	0x4025, r24	; 0x804025 <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    a490:	8f 81       	ldd	r24, Y+7	; 0x07
    a492:	98 85       	ldd	r25, Y+8	; 0x08
    a494:	89 2b       	or	r24, r25
    a496:	29 f0       	breq	.+10     	; 0xa4a2 <_Z9makeMorsePcPbS0_+0x1be>
						{
							*finished = true;
    a498:	8f 81       	ldd	r24, Y+7	; 0x07
    a49a:	98 85       	ldd	r25, Y+8	; 0x08
    a49c:	21 e0       	ldi	r18, 0x01	; 1
    a49e:	fc 01       	movw	r30, r24
    a4a0:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    a4a2:	10 92 3d 49 	sts	0x493D, r1	; 0x80493d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    a4a6:	80 e0       	ldi	r24, 0x00	; 0
    a4a8:	6f c0       	rjmp	.+222    	; 0xa588 <_Z9makeMorsePcPbS0_+0x2a4>
					}
				}

				morseInProgress = getMorseChar(c);
    a4aa:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    a4ae:	0e 94 1a 53 	call	0xa634	; 0xa634 <_Z12getMorseCharc>
    a4b2:	a8 2f       	mov	r26, r24
    a4b4:	cb 01       	movw	r24, r22
    a4b6:	80 93 40 49 	sts	0x4940, r24	; 0x804940 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    a4ba:	90 93 41 49 	sts	0x4941, r25	; 0x804941 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a4be:	a0 93 42 49 	sts	0x4942, r26	; 0x804942 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    a4c2:	10 92 44 49 	sts	0x4944, r1	; 0x804944 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    a4c6:	80 91 40 49 	lds	r24, 0x4940	; 0x804940 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    a4ca:	8d 3f       	cpi	r24, 0xFD	; 253
    a4cc:	70 f5       	brcc	.+92     	; 0xa52a <_Z9makeMorsePcPbS0_+0x246>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    a4ce:	80 91 40 49 	lds	r24, 0x4940	; 0x804940 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    a4d2:	88 2f       	mov	r24, r24
    a4d4:	90 e0       	ldi	r25, 0x00	; 0
    a4d6:	20 91 44 49 	lds	r18, 0x4944	; 0x804944 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    a4da:	31 e0       	ldi	r19, 0x01	; 1
    a4dc:	32 0f       	add	r19, r18
    a4de:	30 93 44 49 	sts	0x4944, r19	; 0x804944 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    a4e2:	22 2f       	mov	r18, r18
    a4e4:	30 e0       	ldi	r19, 0x00	; 0
    a4e6:	02 c0       	rjmp	.+4      	; 0xa4ec <_Z9makeMorsePcPbS0_+0x208>
    a4e8:	95 95       	asr	r25
    a4ea:	87 95       	ror	r24
    a4ec:	2a 95       	dec	r18
    a4ee:	e2 f7       	brpl	.-8      	; 0xa4e8 <_Z9makeMorsePcPbS0_+0x204>
    a4f0:	81 70       	andi	r24, 0x01	; 1
    a4f2:	99 27       	eor	r25, r25
    a4f4:	21 e0       	ldi	r18, 0x01	; 1
    a4f6:	89 2b       	or	r24, r25
    a4f8:	09 f4       	brne	.+2      	; 0xa4fc <_Z9makeMorsePcPbS0_+0x218>
    a4fa:	20 e0       	ldi	r18, 0x00	; 0
    a4fc:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    a4fe:	89 81       	ldd	r24, Y+1	; 0x01
    a500:	88 23       	and	r24, r24
    a502:	21 f0       	breq	.+8      	; 0xa50c <_Z9makeMorsePcPbS0_+0x228>
				{
					elementIndex = 2;
    a504:	82 e0       	ldi	r24, 0x02	; 2
    a506:	80 93 45 49 	sts	0x4945, r24	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a50a:	02 c0       	rjmp	.+4      	; 0xa510 <_Z9makeMorsePcPbS0_+0x22c>
				}
				else
				{
					elementIndex = 0;
    a50c:	10 92 45 49 	sts	0x4945, r1	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    a510:	81 e0       	ldi	r24, 0x01	; 1
    a512:	80 93 47 49 	sts	0x4947, r24	; 0x804947 <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    a516:	90 91 41 49 	lds	r25, 0x4941	; 0x804941 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a51a:	80 91 44 49 	lds	r24, 0x4944	; 0x804944 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    a51e:	89 17       	cp	r24, r25
    a520:	b8 f0       	brcs	.+46     	; 0xa550 <_Z9makeMorsePcPbS0_+0x26c>
				{
					addedSpace = 2;
    a522:	82 e0       	ldi	r24, 0x02	; 2
    a524:	80 93 46 49 	sts	0x4946, r24	; 0x804946 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    a528:	13 c0       	rjmp	.+38     	; 0xa550 <_Z9makeMorsePcPbS0_+0x26c>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    a52a:	80 91 41 49 	lds	r24, 0x4941	; 0x804941 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a52e:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    a530:	8f ef       	ldi	r24, 0xFF	; 255
    a532:	80 93 44 49 	sts	0x4944, r24	; 0x804944 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    a536:	10 92 47 49 	sts	0x4947, r1	; 0x804947 <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    a53a:	8a 81       	ldd	r24, Y+2	; 0x02
    a53c:	84 30       	cpi	r24, 0x04	; 4
    a53e:	30 f0       	brcs	.+12     	; 0xa54c <_Z9makeMorsePcPbS0_+0x268>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    a540:	80 91 41 49 	lds	r24, 0x4941	; 0x804941 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a544:	84 50       	subi	r24, 0x04	; 4
    a546:	80 93 45 49 	sts	0x4945, r24	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a54a:	02 c0       	rjmp	.+4      	; 0xa550 <_Z9makeMorsePcPbS0_+0x26c>
				}
				else
				{
					elementIndex = 0;
    a54c:	10 92 45 49 	sts	0x4945, r1	; 0x804945 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    a550:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    a554:	8c 33       	cpi	r24, 0x3C	; 60
    a556:	21 f4       	brne	.+8      	; 0xa560 <_Z9makeMorsePcPbS0_+0x27c>
		{
			holdKeyDown = true;
    a558:	81 e0       	ldi	r24, 0x01	; 1
    a55a:	80 93 3d 49 	sts	0x493D, r24	; 0x80493d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    a55e:	02 c0       	rjmp	.+4      	; 0xa564 <_Z9makeMorsePcPbS0_+0x280>
		}
		else
		{
			holdKeyDown = false;
    a560:	10 92 3d 49 	sts	0x493D, r1	; 0x80493d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    a564:	8f 81       	ldd	r24, Y+7	; 0x07
    a566:	98 85       	ldd	r25, Y+8	; 0x08
    a568:	89 2b       	or	r24, r25
    a56a:	31 f0       	breq	.+12     	; 0xa578 <_Z9makeMorsePcPbS0_+0x294>
	{
		*finished = completedString;
    a56c:	20 91 25 40 	lds	r18, 0x4025	; 0x804025 <_ZZ9makeMorsePcPbS0_E15completedString>
    a570:	8f 81       	ldd	r24, Y+7	; 0x07
    a572:	98 85       	ldd	r25, Y+8	; 0x08
    a574:	fc 01       	movw	r30, r24
    a576:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    a578:	80 91 3d 49 	lds	r24, 0x493D	; 0x80493d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    a57c:	88 23       	and	r24, r24
    a57e:	11 f0       	breq	.+4      	; 0xa584 <_Z9makeMorsePcPbS0_+0x2a0>
	{
		return(true);
    a580:	81 e0       	ldi	r24, 0x01	; 1
    a582:	02 c0       	rjmp	.+4      	; 0xa588 <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else
	{
		return( carrierOn);
    a584:	80 91 47 49 	lds	r24, 0x4947	; 0x804947 <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    a588:	28 96       	adiw	r28, 0x08	; 8
    a58a:	cd bf       	out	0x3d, r28	; 61
    a58c:	de bf       	out	0x3e, r29	; 62
    a58e:	df 91       	pop	r29
    a590:	cf 91       	pop	r28
    a592:	08 95       	ret

0000a594 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    a594:	cf 93       	push	r28
    a596:	df 93       	push	r29
    a598:	cd b7       	in	r28, 0x3d	; 61
    a59a:	de b7       	in	r29, 0x3e	; 62
    a59c:	2b 97       	sbiw	r28, 0x0b	; 11
    a59e:	cd bf       	out	0x3d, r28	; 61
    a5a0:	de bf       	out	0x3e, r29	; 62
    a5a2:	88 87       	std	Y+8, r24	; 0x08
    a5a4:	99 87       	std	Y+9, r25	; 0x09
    a5a6:	6a 87       	std	Y+10, r22	; 0x0a
    a5a8:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    a5aa:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    a5ac:	1a 82       	std	Y+2, r1	; 0x02
    a5ae:	1b 82       	std	Y+3, r1	; 0x03
    a5b0:	8a 81       	ldd	r24, Y+2	; 0x02
    a5b2:	9b 81       	ldd	r25, Y+3	; 0x03
    a5b4:	44 97       	sbiw	r24, 0x14	; 20
    a5b6:	2c f5       	brge	.+74     	; 0xa602 <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    a5b8:	8a 81       	ldd	r24, Y+2	; 0x02
    a5ba:	9b 81       	ldd	r25, Y+3	; 0x03
    a5bc:	28 85       	ldd	r18, Y+8	; 0x08
    a5be:	39 85       	ldd	r19, Y+9	; 0x09
    a5c0:	82 0f       	add	r24, r18
    a5c2:	93 1f       	adc	r25, r19
    a5c4:	fc 01       	movw	r30, r24
    a5c6:	80 81       	ld	r24, Z
    a5c8:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    a5ca:	8c 81       	ldd	r24, Y+4	; 0x04
    a5cc:	88 23       	and	r24, r24
    a5ce:	c1 f0       	breq	.+48     	; 0xa600 <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    a5d0:	8c 81       	ldd	r24, Y+4	; 0x04
    a5d2:	0e 94 1a 53 	call	0xa634	; 0xa634 <_Z12getMorseCharc>
    a5d6:	a8 2f       	mov	r26, r24
    a5d8:	cb 01       	movw	r24, r22
    a5da:	8d 83       	std	Y+5, r24	; 0x05
    a5dc:	9e 83       	std	Y+6, r25	; 0x06
    a5de:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    a5e0:	8d 81       	ldd	r24, Y+5	; 0x05
    a5e2:	8d 3f       	cpi	r24, 0xFD	; 253
    a5e4:	18 f4       	brcc	.+6      	; 0xa5ec <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    a5e6:	89 81       	ldd	r24, Y+1	; 0x01
    a5e8:	8d 5f       	subi	r24, 0xFD	; 253
    a5ea:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    a5ec:	8f 81       	ldd	r24, Y+7	; 0x07
    a5ee:	99 81       	ldd	r25, Y+1	; 0x01
    a5f0:	89 0f       	add	r24, r25
    a5f2:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    a5f4:	8a 81       	ldd	r24, Y+2	; 0x02
    a5f6:	9b 81       	ldd	r25, Y+3	; 0x03
    a5f8:	01 96       	adiw	r24, 0x01	; 1
    a5fa:	8a 83       	std	Y+2, r24	; 0x02
    a5fc:	9b 83       	std	Y+3, r25	; 0x03
    a5fe:	d8 cf       	rjmp	.-80     	; 0xa5b0 <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    a600:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    a602:	89 81       	ldd	r24, Y+1	; 0x01
    a604:	28 2f       	mov	r18, r24
    a606:	30 e0       	ldi	r19, 0x00	; 0
    a608:	80 eb       	ldi	r24, 0xB0	; 176
    a60a:	94 e0       	ldi	r25, 0x04	; 4
    a60c:	4a 85       	ldd	r20, Y+10	; 0x0a
    a60e:	5b 85       	ldd	r21, Y+11	; 0x0b
    a610:	ba 01       	movw	r22, r20
    a612:	0e 94 e4 72 	call	0xe5c8	; 0xe5c8 <__udivmodhi4>
    a616:	cb 01       	movw	r24, r22
    a618:	ac 01       	movw	r20, r24
    a61a:	24 9f       	mul	r18, r20
    a61c:	c0 01       	movw	r24, r0
    a61e:	25 9f       	mul	r18, r21
    a620:	90 0d       	add	r25, r0
    a622:	34 9f       	mul	r19, r20
    a624:	90 0d       	add	r25, r0
    a626:	11 24       	eor	r1, r1
}
    a628:	2b 96       	adiw	r28, 0x0b	; 11
    a62a:	cd bf       	out	0x3d, r28	; 61
    a62c:	de bf       	out	0x3e, r29	; 62
    a62e:	df 91       	pop	r29
    a630:	cf 91       	pop	r28
    a632:	08 95       	ret

0000a634 <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    a634:	cf 93       	push	r28
    a636:	df 93       	push	r29
    a638:	00 d0       	rcall	.+0      	; 0xa63a <_Z12getMorseCharc+0x6>
    a63a:	00 d0       	rcall	.+0      	; 0xa63c <_Z12getMorseCharc+0x8>
    a63c:	cd b7       	in	r28, 0x3d	; 61
    a63e:	de b7       	in	r29, 0x3e	; 62
    a640:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    a642:	8c 81       	ldd	r24, Y+4	; 0x04
    a644:	88 2f       	mov	r24, r24
    a646:	90 e0       	ldi	r25, 0x00	; 0
    a648:	09 2e       	mov	r0, r25
    a64a:	00 0c       	add	r0, r0
    a64c:	aa 0b       	sbc	r26, r26
    a64e:	bb 0b       	sbc	r27, r27
    a650:	40 e2       	ldi	r20, 0x20	; 32
    a652:	50 e0       	ldi	r21, 0x00	; 0
    a654:	2e e5       	ldi	r18, 0x5E	; 94
    a656:	30 e0       	ldi	r19, 0x00	; 0
    a658:	84 1b       	sub	r24, r20
    a65a:	95 0b       	sbc	r25, r21
    a65c:	28 17       	cp	r18, r24
    a65e:	39 07       	cpc	r19, r25
    a660:	08 f4       	brcc	.+2      	; 0xa664 <_Z12getMorseCharc+0x30>
    a662:	96 c1       	rjmp	.+812    	; 0xa990 <_Z12getMorseCharc+0x35c>
    a664:	8d 53       	subi	r24, 0x3D	; 61
    a666:	9f 4f       	sbci	r25, 0xFF	; 255
    a668:	fc 01       	movw	r30, r24
    a66a:	0c 94 4d 73 	jmp	0xe69a	; 0xe69a <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    a66e:	82 e0       	ldi	r24, 0x02	; 2
    a670:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    a672:	82 e0       	ldi	r24, 0x02	; 2
    a674:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    a676:	85 e0       	ldi	r24, 0x05	; 5
    a678:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a67a:	8e c1       	rjmp	.+796    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    a67c:	81 e0       	ldi	r24, 0x01	; 1
    a67e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a680:	84 e0       	ldi	r24, 0x04	; 4
    a682:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a684:	89 e0       	ldi	r24, 0x09	; 9
    a686:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a688:	87 c1       	rjmp	.+782    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    a68a:	85 e0       	ldi	r24, 0x05	; 5
    a68c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a68e:	84 e0       	ldi	r24, 0x04	; 4
    a690:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a692:	8b e0       	ldi	r24, 0x0B	; 11
    a694:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a696:	80 c1       	rjmp	.+768    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    a698:	81 e0       	ldi	r24, 0x01	; 1
    a69a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a69c:	83 e0       	ldi	r24, 0x03	; 3
    a69e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    a6a0:	87 e0       	ldi	r24, 0x07	; 7
    a6a2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a6a4:	79 c1       	rjmp	.+754    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    a6a6:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    a6a8:	81 e0       	ldi	r24, 0x01	; 1
    a6aa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    a6ac:	81 e0       	ldi	r24, 0x01	; 1
    a6ae:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a6b0:	73 c1       	rjmp	.+742    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    a6b2:	84 e0       	ldi	r24, 0x04	; 4
    a6b4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a6b6:	84 e0       	ldi	r24, 0x04	; 4
    a6b8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a6ba:	89 e0       	ldi	r24, 0x09	; 9
    a6bc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a6be:	6c c1       	rjmp	.+728    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    a6c0:	83 e0       	ldi	r24, 0x03	; 3
    a6c2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a6c4:	83 e0       	ldi	r24, 0x03	; 3
    a6c6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a6c8:	89 e0       	ldi	r24, 0x09	; 9
    a6ca:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a6cc:	65 c1       	rjmp	.+714    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    a6ce:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    a6d0:	84 e0       	ldi	r24, 0x04	; 4
    a6d2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    a6d4:	87 e0       	ldi	r24, 0x07	; 7
    a6d6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a6d8:	5f c1       	rjmp	.+702    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    a6da:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    a6dc:	82 e0       	ldi	r24, 0x02	; 2
    a6de:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    a6e0:	83 e0       	ldi	r24, 0x03	; 3
    a6e2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a6e4:	59 c1       	rjmp	.+690    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    a6e6:	8e e0       	ldi	r24, 0x0E	; 14
    a6e8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a6ea:	84 e0       	ldi	r24, 0x04	; 4
    a6ec:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a6ee:	8d e0       	ldi	r24, 0x0D	; 13
    a6f0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a6f2:	52 c1       	rjmp	.+676    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    a6f4:	85 e0       	ldi	r24, 0x05	; 5
    a6f6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a6f8:	83 e0       	ldi	r24, 0x03	; 3
    a6fa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a6fc:	89 e0       	ldi	r24, 0x09	; 9
    a6fe:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a700:	4b c1       	rjmp	.+662    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    a702:	82 e0       	ldi	r24, 0x02	; 2
    a704:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a706:	84 e0       	ldi	r24, 0x04	; 4
    a708:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a70a:	89 e0       	ldi	r24, 0x09	; 9
    a70c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a70e:	44 c1       	rjmp	.+648    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    a710:	83 e0       	ldi	r24, 0x03	; 3
    a712:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    a714:	82 e0       	ldi	r24, 0x02	; 2
    a716:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    a718:	87 e0       	ldi	r24, 0x07	; 7
    a71a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a71c:	3d c1       	rjmp	.+634    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    a71e:	81 e0       	ldi	r24, 0x01	; 1
    a720:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    a722:	82 e0       	ldi	r24, 0x02	; 2
    a724:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    a726:	85 e0       	ldi	r24, 0x05	; 5
    a728:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a72a:	36 c1       	rjmp	.+620    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    a72c:	87 e0       	ldi	r24, 0x07	; 7
    a72e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a730:	83 e0       	ldi	r24, 0x03	; 3
    a732:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a734:	8b e0       	ldi	r24, 0x0B	; 11
    a736:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a738:	2f c1       	rjmp	.+606    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    a73a:	86 e0       	ldi	r24, 0x06	; 6
    a73c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a73e:	84 e0       	ldi	r24, 0x04	; 4
    a740:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a742:	8b e0       	ldi	r24, 0x0B	; 11
    a744:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a746:	28 c1       	rjmp	.+592    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    a748:	8b e0       	ldi	r24, 0x0B	; 11
    a74a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a74c:	84 e0       	ldi	r24, 0x04	; 4
    a74e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a750:	8d e0       	ldi	r24, 0x0D	; 13
    a752:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a754:	21 c1       	rjmp	.+578    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    a756:	82 e0       	ldi	r24, 0x02	; 2
    a758:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a75a:	83 e0       	ldi	r24, 0x03	; 3
    a75c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    a75e:	87 e0       	ldi	r24, 0x07	; 7
    a760:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a762:	1a c1       	rjmp	.+564    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    a764:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    a766:	83 e0       	ldi	r24, 0x03	; 3
    a768:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    a76a:	85 e0       	ldi	r24, 0x05	; 5
    a76c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a76e:	14 c1       	rjmp	.+552    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    a770:	81 e0       	ldi	r24, 0x01	; 1
    a772:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    a774:	81 e0       	ldi	r24, 0x01	; 1
    a776:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    a778:	83 e0       	ldi	r24, 0x03	; 3
    a77a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a77c:	0d c1       	rjmp	.+538    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    a77e:	84 e0       	ldi	r24, 0x04	; 4
    a780:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a782:	83 e0       	ldi	r24, 0x03	; 3
    a784:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    a786:	87 e0       	ldi	r24, 0x07	; 7
    a788:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a78a:	06 c1       	rjmp	.+524    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    a78c:	88 e0       	ldi	r24, 0x08	; 8
    a78e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a790:	84 e0       	ldi	r24, 0x04	; 4
    a792:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a794:	89 e0       	ldi	r24, 0x09	; 9
    a796:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a798:	ff c0       	rjmp	.+510    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    a79a:	86 e0       	ldi	r24, 0x06	; 6
    a79c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a79e:	83 e0       	ldi	r24, 0x03	; 3
    a7a0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a7a2:	89 e0       	ldi	r24, 0x09	; 9
    a7a4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a7a6:	f8 c0       	rjmp	.+496    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    a7a8:	89 e0       	ldi	r24, 0x09	; 9
    a7aa:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a7ac:	84 e0       	ldi	r24, 0x04	; 4
    a7ae:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a7b0:	8b e0       	ldi	r24, 0x0B	; 11
    a7b2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a7b4:	f1 c0       	rjmp	.+482    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    a7b6:	8d e0       	ldi	r24, 0x0D	; 13
    a7b8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a7ba:	84 e0       	ldi	r24, 0x04	; 4
    a7bc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a7be:	8d e0       	ldi	r24, 0x0D	; 13
    a7c0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a7c2:	ea c0       	rjmp	.+468    	; 0xa998 <_Z12getMorseCharc+0x364>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    a7c4:	83 e0       	ldi	r24, 0x03	; 3
    a7c6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a7c8:	84 e0       	ldi	r24, 0x04	; 4
    a7ca:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a7cc:	8b e0       	ldi	r24, 0x0B	; 11
    a7ce:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a7d0:	e3 c0       	rjmp	.+454    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    a7d2:	8f e1       	ldi	r24, 0x1F	; 31
    a7d4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a7d6:	85 e0       	ldi	r24, 0x05	; 5
    a7d8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    a7da:	83 e1       	ldi	r24, 0x13	; 19
    a7dc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a7de:	dc c0       	rjmp	.+440    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    a7e0:	8e e1       	ldi	r24, 0x1E	; 30
    a7e2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a7e4:	85 e0       	ldi	r24, 0x05	; 5
    a7e6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    a7e8:	81 e1       	ldi	r24, 0x11	; 17
    a7ea:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a7ec:	d5 c0       	rjmp	.+426    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    a7ee:	8c e1       	ldi	r24, 0x1C	; 28
    a7f0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a7f2:	85 e0       	ldi	r24, 0x05	; 5
    a7f4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    a7f6:	8f e0       	ldi	r24, 0x0F	; 15
    a7f8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a7fa:	ce c0       	rjmp	.+412    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    a7fc:	88 e1       	ldi	r24, 0x18	; 24
    a7fe:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a800:	85 e0       	ldi	r24, 0x05	; 5
    a802:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a804:	8d e0       	ldi	r24, 0x0D	; 13
    a806:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a808:	c7 c0       	rjmp	.+398    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    a80a:	80 e1       	ldi	r24, 0x10	; 16
    a80c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a80e:	85 e0       	ldi	r24, 0x05	; 5
    a810:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a812:	8b e0       	ldi	r24, 0x0B	; 11
    a814:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a816:	c0 c0       	rjmp	.+384    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    a818:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    a81a:	85 e0       	ldi	r24, 0x05	; 5
    a81c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a81e:	89 e0       	ldi	r24, 0x09	; 9
    a820:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a822:	ba c0       	rjmp	.+372    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    a824:	81 e0       	ldi	r24, 0x01	; 1
    a826:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a828:	85 e0       	ldi	r24, 0x05	; 5
    a82a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a82c:	8b e0       	ldi	r24, 0x0B	; 11
    a82e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a830:	b3 c0       	rjmp	.+358    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    a832:	83 e0       	ldi	r24, 0x03	; 3
    a834:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a836:	85 e0       	ldi	r24, 0x05	; 5
    a838:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a83a:	8d e0       	ldi	r24, 0x0D	; 13
    a83c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a83e:	ac c0       	rjmp	.+344    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    a840:	87 e0       	ldi	r24, 0x07	; 7
    a842:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a844:	85 e0       	ldi	r24, 0x05	; 5
    a846:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    a848:	8f e0       	ldi	r24, 0x0F	; 15
    a84a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a84c:	a5 c0       	rjmp	.+330    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    a84e:	8f e0       	ldi	r24, 0x0F	; 15
    a850:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a852:	85 e0       	ldi	r24, 0x05	; 5
    a854:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    a856:	81 e1       	ldi	r24, 0x11	; 17
    a858:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a85a:	9e c0       	rjmp	.+316    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    a85c:	8a e2       	ldi	r24, 0x2A	; 42
    a85e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a860:	86 e0       	ldi	r24, 0x06	; 6
    a862:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    a864:	81 e1       	ldi	r24, 0x11	; 17
    a866:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a868:	97 c0       	rjmp	.+302    	; 0xa998 <_Z12getMorseCharc+0x364>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    a86a:	83 e3       	ldi	r24, 0x33	; 51
    a86c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a86e:	86 e0       	ldi	r24, 0x06	; 6
    a870:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    a872:	83 e1       	ldi	r24, 0x13	; 19
    a874:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a876:	90 c0       	rjmp	.+288    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    a878:	8c e0       	ldi	r24, 0x0C	; 12
    a87a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a87c:	86 e0       	ldi	r24, 0x06	; 6
    a87e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    a880:	8f e0       	ldi	r24, 0x0F	; 15
    a882:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a884:	89 c0       	rjmp	.+274    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    a886:	8e e1       	ldi	r24, 0x1E	; 30
    a888:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a88a:	86 e0       	ldi	r24, 0x06	; 6
    a88c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    a88e:	83 e1       	ldi	r24, 0x13	; 19
    a890:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a892:	82 c0       	rjmp	.+260    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    a894:	85 e3       	ldi	r24, 0x35	; 53
    a896:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a898:	86 e0       	ldi	r24, 0x06	; 6
    a89a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    a89c:	83 e1       	ldi	r24, 0x13	; 19
    a89e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a8a0:	7b c0       	rjmp	.+246    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    a8a2:	89 e0       	ldi	r24, 0x09	; 9
    a8a4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a8a6:	85 e0       	ldi	r24, 0x05	; 5
    a8a8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a8aa:	8d e0       	ldi	r24, 0x0D	; 13
    a8ac:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a8ae:	74 c0       	rjmp	.+232    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    a8b0:	8d e0       	ldi	r24, 0x0D	; 13
    a8b2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a8b4:	85 e0       	ldi	r24, 0x05	; 5
    a8b6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    a8b8:	8f e0       	ldi	r24, 0x0F	; 15
    a8ba:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a8bc:	6d c0       	rjmp	.+218    	; 0xa998 <_Z12getMorseCharc+0x364>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    a8be:	8d e2       	ldi	r24, 0x2D	; 45
    a8c0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a8c2:	86 e0       	ldi	r24, 0x06	; 6
    a8c4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    a8c6:	83 e1       	ldi	r24, 0x13	; 19
    a8c8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a8ca:	66 c0       	rjmp	.+204    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    a8cc:	82 e0       	ldi	r24, 0x02	; 2
    a8ce:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a8d0:	85 e0       	ldi	r24, 0x05	; 5
    a8d2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a8d4:	8b e0       	ldi	r24, 0x0B	; 11
    a8d6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a8d8:	5f c0       	rjmp	.+190    	; 0xa998 <_Z12getMorseCharc+0x364>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    a8da:	87 e0       	ldi	r24, 0x07	; 7
    a8dc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a8de:	86 e0       	ldi	r24, 0x06	; 6
    a8e0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    a8e2:	81 e1       	ldi	r24, 0x11	; 17
    a8e4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a8e6:	58 c0       	rjmp	.+176    	; 0xa998 <_Z12getMorseCharc+0x364>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    a8e8:	85 e1       	ldi	r24, 0x15	; 21
    a8ea:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a8ec:	86 e0       	ldi	r24, 0x06	; 6
    a8ee:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    a8f0:	8c e0       	ldi	r24, 0x0C	; 12
    a8f2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a8f4:	51 c0       	rjmp	.+162    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    a8f6:	81 e1       	ldi	r24, 0x11	; 17
    a8f8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a8fa:	85 e0       	ldi	r24, 0x05	; 5
    a8fc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a8fe:	8d e0       	ldi	r24, 0x0D	; 13
    a900:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a902:	4a c0       	rjmp	.+148    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '+': /* AR */
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    a904:	8a e0       	ldi	r24, 0x0A	; 10
    a906:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a908:	85 e0       	ldi	r24, 0x05	; 5
    a90a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a90c:	8d e0       	ldi	r24, 0x0D	; 13
    a90e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a910:	43 c0       	rjmp	.+134    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '~': /* SK */
		{
			morse.pattern = 0x28;   /* 0010 1000; */
    a912:	88 e2       	ldi	r24, 0x28	; 40
    a914:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a916:	86 e0       	ldi	r24, 0x06	; 6
    a918:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    a91a:	8f e0       	ldi	r24, 0x0F	; 15
    a91c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a91e:	3c c0       	rjmp	.+120    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    a920:	81 e2       	ldi	r24, 0x21	; 33
    a922:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a924:	86 e0       	ldi	r24, 0x06	; 6
    a926:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    a928:	8f e0       	ldi	r24, 0x0F	; 15
    a92a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a92c:	35 c0       	rjmp	.+106    	; 0xa998 <_Z12getMorseCharc+0x364>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    a92e:	8c e2       	ldi	r24, 0x2C	; 44
    a930:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a932:	86 e0       	ldi	r24, 0x06	; 6
    a934:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    a936:	81 e1       	ldi	r24, 0x11	; 17
    a938:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a93a:	2e c0       	rjmp	.+92     	; 0xa998 <_Z12getMorseCharc+0x364>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    a93c:	82 e1       	ldi	r24, 0x12	; 18
    a93e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a940:	86 e0       	ldi	r24, 0x06	; 6
    a942:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    a944:	8f e0       	ldi	r24, 0x0F	; 15
    a946:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a948:	27 c0       	rjmp	.+78     	; 0xa998 <_Z12getMorseCharc+0x364>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    a94a:	88 e4       	ldi	r24, 0x48	; 72
    a94c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    a94e:	87 e0       	ldi	r24, 0x07	; 7
    a950:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    a952:	81 e1       	ldi	r24, 0x11	; 17
    a954:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a956:	20 c0       	rjmp	.+64     	; 0xa998 <_Z12getMorseCharc+0x364>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    a958:	86 e1       	ldi	r24, 0x16	; 22
    a95a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    a95c:	86 e0       	ldi	r24, 0x06	; 6
    a95e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    a960:	81 e1       	ldi	r24, 0x11	; 17
    a962:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a964:	19 c0       	rjmp	.+50     	; 0xa998 <_Z12getMorseCharc+0x364>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    a966:	8f ef       	ldi	r24, 0xFF	; 255
    a968:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    a96a:	87 e0       	ldi	r24, 0x07	; 7
    a96c:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    a96e:	84 e0       	ldi	r24, 0x04	; 4
    a970:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a972:	12 c0       	rjmp	.+36     	; 0xa998 <_Z12getMorseCharc+0x364>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    a974:	8e ef       	ldi	r24, 0xFE	; 254
    a976:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    a978:	87 e0       	ldi	r24, 0x07	; 7
    a97a:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    a97c:	87 e0       	ldi	r24, 0x07	; 7
    a97e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a980:	0b c0       	rjmp	.+22     	; 0xa998 <_Z12getMorseCharc+0x364>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    a982:	8f e1       	ldi	r24, 0x1F	; 31
    a984:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    a986:	85 e0       	ldi	r24, 0x05	; 5
    a988:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    a98a:	83 e1       	ldi	r24, 0x13	; 19
    a98c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a98e:	04 c0       	rjmp	.+8      	; 0xa998 <_Z12getMorseCharc+0x364>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    a990:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    a992:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    a994:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    a996:	00 00       	nop
	}

	return( morse);
    a998:	89 81       	ldd	r24, Y+1	; 0x01
    a99a:	9a 81       	ldd	r25, Y+2	; 0x02
    a99c:	ab 81       	ldd	r26, Y+3	; 0x03
}
    a99e:	bc 01       	movw	r22, r24
    a9a0:	8a 2f       	mov	r24, r26
    a9a2:	24 96       	adiw	r28, 0x04	; 4
    a9a4:	cd bf       	out	0x3d, r28	; 61
    a9a6:	de bf       	out	0x3e, r29	; 62
    a9a8:	df 91       	pop	r29
    a9aa:	cf 91       	pop	r28
    a9ac:	08 95       	ret

0000a9ae <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    a9ae:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    a9b0:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    a9b2:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    a9b4:	40 83       	st	Z, r20
	ret                             // Return to caller
    a9b6:	08 95       	ret

0000a9b8 <RTC_init>:

#include "defs.h"
#include "rtc.h"

void RTC_init(void)
{
    a9b8:	cf 93       	push	r28
    a9ba:	df 93       	push	r29
    a9bc:	cd b7       	in	r28, 0x3d	; 61
    a9be:	de b7       	in	r29, 0x3e	; 62
    while (RTC.STATUS > 0) { /* Wait for all registers to be synchronized */
    a9c0:	80 e4       	ldi	r24, 0x40	; 64
    a9c2:	91 e0       	ldi	r25, 0x01	; 1
    a9c4:	fc 01       	movw	r30, r24
    a9c6:	91 81       	ldd	r25, Z+1	; 0x01
    a9c8:	81 e0       	ldi	r24, 0x01	; 1
    a9ca:	99 23       	and	r25, r25
    a9cc:	09 f4       	brne	.+2      	; 0xa9d0 <RTC_init+0x18>
    a9ce:	80 e0       	ldi	r24, 0x00	; 0
    a9d0:	88 23       	and	r24, r24
    a9d2:	09 f0       	breq	.+2      	; 0xa9d6 <RTC_init+0x1e>
    a9d4:	f5 cf       	rjmp	.-22     	; 0xa9c0 <RTC_init+0x8>
    }
    //Compare 
    RTC.CMP = 0x00;
    a9d6:	80 e4       	ldi	r24, 0x40	; 64
    a9d8:	91 e0       	ldi	r25, 0x01	; 1
    a9da:	fc 01       	movw	r30, r24
    a9dc:	14 86       	std	Z+12, r1	; 0x0c
    a9de:	15 86       	std	Z+13, r1	; 0x0d

    //Count
    RTC.CNT = 0x00;
    a9e0:	80 e4       	ldi	r24, 0x40	; 64
    a9e2:	91 e0       	ldi	r25, 0x01	; 1
    a9e4:	fc 01       	movw	r30, r24
    a9e6:	10 86       	std	Z+8, r1	; 0x08
    a9e8:	11 86       	std	Z+9, r1	; 0x09

    //Period
    RTC.PER = 32767;
    a9ea:	80 e4       	ldi	r24, 0x40	; 64
    a9ec:	91 e0       	ldi	r25, 0x01	; 1
    a9ee:	2f ef       	ldi	r18, 0xFF	; 255
    a9f0:	3f e7       	ldi	r19, 0x7F	; 127
    a9f2:	fc 01       	movw	r30, r24
    a9f4:	22 87       	std	Z+10, r18	; 0x0a
    a9f6:	33 87       	std	Z+11, r19	; 0x0b

    //Clock selection: XOSC32K
    RTC.CLKSEL = 0x02;
    a9f8:	80 e4       	ldi	r24, 0x40	; 64
    a9fa:	91 e0       	ldi	r25, 0x01	; 1
    a9fc:	22 e0       	ldi	r18, 0x02	; 2
    a9fe:	fc 01       	movw	r30, r24
    aa00:	27 83       	std	Z+7, r18	; 0x07

    //CMP disabled; OVF enabled; 
    RTC.INTCTRL = 0x01;
    aa02:	80 e4       	ldi	r24, 0x40	; 64
    aa04:	91 e0       	ldi	r25, 0x01	; 1
    aa06:	21 e0       	ldi	r18, 0x01	; 1
    aa08:	fc 01       	movw	r30, r24
    aa0a:	22 83       	std	Z+2, r18	; 0x02

    //RUNSTDBY disabled; PRESCALER DIV1; CORREN disabled; RTCEN enabled; 
    RTC.CTRLA = 0x01;
    aa0c:	80 e4       	ldi	r24, 0x40	; 64
    aa0e:	91 e0       	ldi	r25, 0x01	; 1
    aa10:	21 e0       	ldi	r18, 0x01	; 1
    aa12:	fc 01       	movw	r30, r24
    aa14:	20 83       	st	Z, r18
    
    while (RTC.PITSTATUS > 0) { /* Wait for all register to be synchronized */
    aa16:	80 e4       	ldi	r24, 0x40	; 64
    aa18:	91 e0       	ldi	r25, 0x01	; 1
    aa1a:	fc 01       	movw	r30, r24
    aa1c:	91 89       	ldd	r25, Z+17	; 0x11
    aa1e:	81 e0       	ldi	r24, 0x01	; 1
    aa20:	99 23       	and	r25, r25
    aa22:	09 f4       	brne	.+2      	; 0xaa26 <RTC_init+0x6e>
    aa24:	80 e0       	ldi	r24, 0x00	; 0
    aa26:	88 23       	and	r24, r24
    aa28:	09 f0       	breq	.+2      	; 0xaa2c <RTC_init+0x74>
    aa2a:	f5 cf       	rjmp	.-22     	; 0xaa16 <RTC_init+0x5e>
    }
    //PI disabled; 
    RTC.PITINTCTRL = 0x00;    
    aa2c:	80 e4       	ldi	r24, 0x40	; 64
    aa2e:	91 e0       	ldi	r25, 0x01	; 1
    aa30:	fc 01       	movw	r30, r24
    aa32:	12 8a       	std	Z+18, r1	; 0x12
}
    aa34:	00 00       	nop
    aa36:	df 91       	pop	r29
    aa38:	cf 91       	pop	r28
    aa3a:	08 95       	ret

0000aa3c <RTC_init_backup>:

void RTC_init_backup(void)
{
    aa3c:	cf 93       	push	r28
    aa3e:	df 93       	push	r29
    aa40:	cd b7       	in	r28, 0x3d	; 61
    aa42:	de b7       	in	r29, 0x3e	; 62
    while (RTC.STATUS > 0) { /* Wait for all registers to be synchronized */
    aa44:	80 e4       	ldi	r24, 0x40	; 64
    aa46:	91 e0       	ldi	r25, 0x01	; 1
    aa48:	fc 01       	movw	r30, r24
    aa4a:	91 81       	ldd	r25, Z+1	; 0x01
    aa4c:	81 e0       	ldi	r24, 0x01	; 1
    aa4e:	99 23       	and	r25, r25
    aa50:	09 f4       	brne	.+2      	; 0xaa54 <RTC_init_backup+0x18>
    aa52:	80 e0       	ldi	r24, 0x00	; 0
    aa54:	88 23       	and	r24, r24
    aa56:	09 f0       	breq	.+2      	; 0xaa5a <RTC_init_backup+0x1e>
    aa58:	f5 cf       	rjmp	.-22     	; 0xaa44 <RTC_init_backup+0x8>
    }
    //Compare 
    RTC.CMP = 0x00;
    aa5a:	80 e4       	ldi	r24, 0x40	; 64
    aa5c:	91 e0       	ldi	r25, 0x01	; 1
    aa5e:	fc 01       	movw	r30, r24
    aa60:	14 86       	std	Z+12, r1	; 0x0c
    aa62:	15 86       	std	Z+13, r1	; 0x0d

    //Count
    RTC.CNT = 0x00;
    aa64:	80 e4       	ldi	r24, 0x40	; 64
    aa66:	91 e0       	ldi	r25, 0x01	; 1
    aa68:	fc 01       	movw	r30, r24
    aa6a:	10 86       	std	Z+8, r1	; 0x08
    aa6c:	11 86       	std	Z+9, r1	; 0x09

    //Period
    RTC.PER = 32767;
    aa6e:	80 e4       	ldi	r24, 0x40	; 64
    aa70:	91 e0       	ldi	r25, 0x01	; 1
    aa72:	2f ef       	ldi	r18, 0xFF	; 255
    aa74:	3f e7       	ldi	r19, 0x7F	; 127
    aa76:	fc 01       	movw	r30, r24
    aa78:	22 87       	std	Z+10, r18	; 0x0a
    aa7a:	33 87       	std	Z+11, r19	; 0x0b

    //Clock selection: OSC32K
    RTC.CLKSEL = 0x00;
    aa7c:	80 e4       	ldi	r24, 0x40	; 64
    aa7e:	91 e0       	ldi	r25, 0x01	; 1
    aa80:	fc 01       	movw	r30, r24
    aa82:	17 82       	std	Z+7, r1	; 0x07

    //CMP disabled; OVF enabled; 
    RTC.INTCTRL = 0x01;
    aa84:	80 e4       	ldi	r24, 0x40	; 64
    aa86:	91 e0       	ldi	r25, 0x01	; 1
    aa88:	21 e0       	ldi	r18, 0x01	; 1
    aa8a:	fc 01       	movw	r30, r24
    aa8c:	22 83       	std	Z+2, r18	; 0x02

    //RUNSTDBY disabled; PRESCALER DIV1; CORREN disabled; RTCEN enabled; 
    RTC.CTRLA = 0x01;
    aa8e:	80 e4       	ldi	r24, 0x40	; 64
    aa90:	91 e0       	ldi	r25, 0x01	; 1
    aa92:	21 e0       	ldi	r18, 0x01	; 1
    aa94:	fc 01       	movw	r30, r24
    aa96:	20 83       	st	Z, r18
    
    while (RTC.PITSTATUS > 0) { /* Wait for all register to be synchronized */
    aa98:	80 e4       	ldi	r24, 0x40	; 64
    aa9a:	91 e0       	ldi	r25, 0x01	; 1
    aa9c:	fc 01       	movw	r30, r24
    aa9e:	91 89       	ldd	r25, Z+17	; 0x11
    aaa0:	81 e0       	ldi	r24, 0x01	; 1
    aaa2:	99 23       	and	r25, r25
    aaa4:	09 f4       	brne	.+2      	; 0xaaa8 <RTC_init_backup+0x6c>
    aaa6:	80 e0       	ldi	r24, 0x00	; 0
    aaa8:	88 23       	and	r24, r24
    aaaa:	09 f0       	breq	.+2      	; 0xaaae <RTC_init_backup+0x72>
    aaac:	f5 cf       	rjmp	.-22     	; 0xaa98 <RTC_init_backup+0x5c>
    }
    //PI disabled; 
    RTC.PITINTCTRL = 0x00;    
    aaae:	80 e4       	ldi	r24, 0x40	; 64
    aab0:	91 e0       	ldi	r25, 0x01	; 1
    aab2:	fc 01       	movw	r30, r24
    aab4:	12 8a       	std	Z+18, r1	; 0x12
}
    aab6:	00 00       	nop
    aab8:	df 91       	pop	r29
    aaba:	cf 91       	pop	r28
    aabc:	08 95       	ret

0000aabe <PORTA_set_pin_pull_mode>:

	for(bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}
}
    aabe:	cf 93       	push	r28
    aac0:	df 93       	push	r29
    aac2:	00 d0       	rcall	.+0      	; 0xaac4 <PORTA_set_pin_pull_mode+0x6>
    aac4:	00 d0       	rcall	.+0      	; 0xaac6 <PORTA_set_pin_pull_mode+0x8>
    aac6:	cd b7       	in	r28, 0x3d	; 61
    aac8:	de b7       	in	r29, 0x3e	; 62
    aaca:	8b 83       	std	Y+3, r24	; 0x03
    aacc:	6c 83       	std	Y+4, r22	; 0x04
    aace:	8b 81       	ldd	r24, Y+3	; 0x03
    aad0:	88 2f       	mov	r24, r24
    aad2:	90 e0       	ldi	r25, 0x00	; 0
    aad4:	80 5f       	subi	r24, 0xF0	; 240
    aad6:	9b 4f       	sbci	r25, 0xFB	; 251
    aad8:	89 83       	std	Y+1, r24	; 0x01
    aada:	9a 83       	std	Y+2, r25	; 0x02
    aadc:	8c 81       	ldd	r24, Y+4	; 0x04
    aade:	81 30       	cpi	r24, 0x01	; 1
    aae0:	59 f4       	brne	.+22     	; 0xaaf8 <PORTA_set_pin_pull_mode+0x3a>
    aae2:	89 81       	ldd	r24, Y+1	; 0x01
    aae4:	9a 81       	ldd	r25, Y+2	; 0x02
    aae6:	fc 01       	movw	r30, r24
    aae8:	80 81       	ld	r24, Z
    aaea:	28 2f       	mov	r18, r24
    aaec:	28 60       	ori	r18, 0x08	; 8
    aaee:	89 81       	ldd	r24, Y+1	; 0x01
    aaf0:	9a 81       	ldd	r25, Y+2	; 0x02
    aaf2:	fc 01       	movw	r30, r24
    aaf4:	20 83       	st	Z, r18
    aaf6:	0d c0       	rjmp	.+26     	; 0xab12 <PORTA_set_pin_pull_mode+0x54>
    aaf8:	8c 81       	ldd	r24, Y+4	; 0x04
    aafa:	88 23       	and	r24, r24
    aafc:	51 f4       	brne	.+20     	; 0xab12 <PORTA_set_pin_pull_mode+0x54>
    aafe:	89 81       	ldd	r24, Y+1	; 0x01
    ab00:	9a 81       	ldd	r25, Y+2	; 0x02
    ab02:	fc 01       	movw	r30, r24
    ab04:	80 81       	ld	r24, Z
    ab06:	28 2f       	mov	r18, r24
    ab08:	27 7f       	andi	r18, 0xF7	; 247
    ab0a:	89 81       	ldd	r24, Y+1	; 0x01
    ab0c:	9a 81       	ldd	r25, Y+2	; 0x02
    ab0e:	fc 01       	movw	r30, r24
    ab10:	20 83       	st	Z, r18
    ab12:	00 00       	nop
    ab14:	24 96       	adiw	r28, 0x04	; 4
    ab16:	cd bf       	out	0x3d, r28	; 61
    ab18:	de bf       	out	0x3e, r29	; 62
    ab1a:	df 91       	pop	r29
    ab1c:	cf 91       	pop	r28
    ab1e:	08 95       	ret

0000ab20 <PORTA_set_pin_dir>:
    ab20:	cf 93       	push	r28
    ab22:	df 93       	push	r29
    ab24:	00 d0       	rcall	.+0      	; 0xab26 <PORTA_set_pin_dir+0x6>
    ab26:	cd b7       	in	r28, 0x3d	; 61
    ab28:	de b7       	in	r29, 0x3e	; 62
    ab2a:	89 83       	std	Y+1, r24	; 0x01
    ab2c:	6a 83       	std	Y+2, r22	; 0x02
    ab2e:	8a 81       	ldd	r24, Y+2	; 0x02
    ab30:	88 2f       	mov	r24, r24
    ab32:	90 e0       	ldi	r25, 0x00	; 0
    ab34:	81 30       	cpi	r24, 0x01	; 1
    ab36:	91 05       	cpc	r25, r1
    ab38:	e1 f0       	breq	.+56     	; 0xab72 <PORTA_set_pin_dir+0x52>
    ab3a:	82 30       	cpi	r24, 0x02	; 2
    ab3c:	91 05       	cpc	r25, r1
    ab3e:	71 f1       	breq	.+92     	; 0xab9c <PORTA_set_pin_dir+0x7c>
    ab40:	89 2b       	or	r24, r25
    ab42:	09 f0       	breq	.+2      	; 0xab46 <PORTA_set_pin_dir+0x26>
    ab44:	3b c0       	rjmp	.+118    	; 0xabbc <PORTA_set_pin_dir+0x9c>
    ab46:	20 e0       	ldi	r18, 0x00	; 0
    ab48:	30 e0       	ldi	r19, 0x00	; 0
    ab4a:	80 e0       	ldi	r24, 0x00	; 0
    ab4c:	90 e0       	ldi	r25, 0x00	; 0
    ab4e:	fc 01       	movw	r30, r24
    ab50:	80 81       	ld	r24, Z
    ab52:	68 2f       	mov	r22, r24
    ab54:	89 81       	ldd	r24, Y+1	; 0x01
    ab56:	48 2f       	mov	r20, r24
    ab58:	50 e0       	ldi	r21, 0x00	; 0
    ab5a:	81 e0       	ldi	r24, 0x01	; 1
    ab5c:	90 e0       	ldi	r25, 0x00	; 0
    ab5e:	02 c0       	rjmp	.+4      	; 0xab64 <PORTA_set_pin_dir+0x44>
    ab60:	88 0f       	add	r24, r24
    ab62:	99 1f       	adc	r25, r25
    ab64:	4a 95       	dec	r20
    ab66:	e2 f7       	brpl	.-8      	; 0xab60 <PORTA_set_pin_dir+0x40>
    ab68:	80 95       	com	r24
    ab6a:	86 23       	and	r24, r22
    ab6c:	f9 01       	movw	r30, r18
    ab6e:	80 83       	st	Z, r24
    ab70:	25 c0       	rjmp	.+74     	; 0xabbc <PORTA_set_pin_dir+0x9c>
    ab72:	20 e0       	ldi	r18, 0x00	; 0
    ab74:	30 e0       	ldi	r19, 0x00	; 0
    ab76:	80 e0       	ldi	r24, 0x00	; 0
    ab78:	90 e0       	ldi	r25, 0x00	; 0
    ab7a:	fc 01       	movw	r30, r24
    ab7c:	80 81       	ld	r24, Z
    ab7e:	68 2f       	mov	r22, r24
    ab80:	89 81       	ldd	r24, Y+1	; 0x01
    ab82:	48 2f       	mov	r20, r24
    ab84:	50 e0       	ldi	r21, 0x00	; 0
    ab86:	81 e0       	ldi	r24, 0x01	; 1
    ab88:	90 e0       	ldi	r25, 0x00	; 0
    ab8a:	02 c0       	rjmp	.+4      	; 0xab90 <PORTA_set_pin_dir+0x70>
    ab8c:	88 0f       	add	r24, r24
    ab8e:	99 1f       	adc	r25, r25
    ab90:	4a 95       	dec	r20
    ab92:	e2 f7       	brpl	.-8      	; 0xab8c <PORTA_set_pin_dir+0x6c>
    ab94:	86 2b       	or	r24, r22
    ab96:	f9 01       	movw	r30, r18
    ab98:	80 83       	st	Z, r24
    ab9a:	10 c0       	rjmp	.+32     	; 0xabbc <PORTA_set_pin_dir+0x9c>
    ab9c:	89 81       	ldd	r24, Y+1	; 0x01
    ab9e:	88 2f       	mov	r24, r24
    aba0:	90 e0       	ldi	r25, 0x00	; 0
    aba2:	80 5f       	subi	r24, 0xF0	; 240
    aba4:	9b 4f       	sbci	r25, 0xFB	; 251
    aba6:	29 81       	ldd	r18, Y+1	; 0x01
    aba8:	22 2f       	mov	r18, r18
    abaa:	30 e0       	ldi	r19, 0x00	; 0
    abac:	20 5f       	subi	r18, 0xF0	; 240
    abae:	3b 4f       	sbci	r19, 0xFB	; 251
    abb0:	f9 01       	movw	r30, r18
    abb2:	20 81       	ld	r18, Z
    abb4:	28 60       	ori	r18, 0x08	; 8
    abb6:	fc 01       	movw	r30, r24
    abb8:	20 83       	st	Z, r18
    abba:	00 00       	nop
    abbc:	00 00       	nop
    abbe:	0f 90       	pop	r0
    abc0:	0f 90       	pop	r0
    abc2:	df 91       	pop	r29
    abc4:	cf 91       	pop	r28
    abc6:	08 95       	ret

0000abc8 <PORTA_set_pin_level>:
    abc8:	cf 93       	push	r28
    abca:	df 93       	push	r29
    abcc:	00 d0       	rcall	.+0      	; 0xabce <PORTA_set_pin_level+0x6>
    abce:	cd b7       	in	r28, 0x3d	; 61
    abd0:	de b7       	in	r29, 0x3e	; 62
    abd2:	89 83       	std	Y+1, r24	; 0x01
    abd4:	6a 83       	std	Y+2, r22	; 0x02
    abd6:	8a 81       	ldd	r24, Y+2	; 0x02
    abd8:	88 23       	and	r24, r24
    abda:	a9 f0       	breq	.+42     	; 0xac06 <PORTA_set_pin_level+0x3e>
    abdc:	20 e0       	ldi	r18, 0x00	; 0
    abde:	30 e0       	ldi	r19, 0x00	; 0
    abe0:	80 e0       	ldi	r24, 0x00	; 0
    abe2:	90 e0       	ldi	r25, 0x00	; 0
    abe4:	fc 01       	movw	r30, r24
    abe6:	81 81       	ldd	r24, Z+1	; 0x01
    abe8:	68 2f       	mov	r22, r24
    abea:	89 81       	ldd	r24, Y+1	; 0x01
    abec:	48 2f       	mov	r20, r24
    abee:	50 e0       	ldi	r21, 0x00	; 0
    abf0:	81 e0       	ldi	r24, 0x01	; 1
    abf2:	90 e0       	ldi	r25, 0x00	; 0
    abf4:	02 c0       	rjmp	.+4      	; 0xabfa <PORTA_set_pin_level+0x32>
    abf6:	88 0f       	add	r24, r24
    abf8:	99 1f       	adc	r25, r25
    abfa:	4a 95       	dec	r20
    abfc:	e2 f7       	brpl	.-8      	; 0xabf6 <PORTA_set_pin_level+0x2e>
    abfe:	86 2b       	or	r24, r22
    ac00:	f9 01       	movw	r30, r18
    ac02:	81 83       	std	Z+1, r24	; 0x01
    ac04:	15 c0       	rjmp	.+42     	; 0xac30 <PORTA_set_pin_level+0x68>
    ac06:	20 e0       	ldi	r18, 0x00	; 0
    ac08:	30 e0       	ldi	r19, 0x00	; 0
    ac0a:	80 e0       	ldi	r24, 0x00	; 0
    ac0c:	90 e0       	ldi	r25, 0x00	; 0
    ac0e:	fc 01       	movw	r30, r24
    ac10:	81 81       	ldd	r24, Z+1	; 0x01
    ac12:	68 2f       	mov	r22, r24
    ac14:	89 81       	ldd	r24, Y+1	; 0x01
    ac16:	48 2f       	mov	r20, r24
    ac18:	50 e0       	ldi	r21, 0x00	; 0
    ac1a:	81 e0       	ldi	r24, 0x01	; 1
    ac1c:	90 e0       	ldi	r25, 0x00	; 0
    ac1e:	02 c0       	rjmp	.+4      	; 0xac24 <PORTA_set_pin_level+0x5c>
    ac20:	88 0f       	add	r24, r24
    ac22:	99 1f       	adc	r25, r25
    ac24:	4a 95       	dec	r20
    ac26:	e2 f7       	brpl	.-8      	; 0xac20 <PORTA_set_pin_level+0x58>
    ac28:	80 95       	com	r24
    ac2a:	86 23       	and	r24, r22
    ac2c:	f9 01       	movw	r30, r18
    ac2e:	81 83       	std	Z+1, r24	; 0x01
    ac30:	00 00       	nop
    ac32:	0f 90       	pop	r0
    ac34:	0f 90       	pop	r0
    ac36:	df 91       	pop	r29
    ac38:	cf 91       	pop	r28
    ac3a:	08 95       	ret

0000ac3c <PORTC_set_pin_pull_mode>:
    ac3c:	cf 93       	push	r28
    ac3e:	df 93       	push	r29
    ac40:	00 d0       	rcall	.+0      	; 0xac42 <PORTC_set_pin_pull_mode+0x6>
    ac42:	00 d0       	rcall	.+0      	; 0xac44 <PORTC_set_pin_pull_mode+0x8>
    ac44:	cd b7       	in	r28, 0x3d	; 61
    ac46:	de b7       	in	r29, 0x3e	; 62
    ac48:	8b 83       	std	Y+3, r24	; 0x03
    ac4a:	6c 83       	std	Y+4, r22	; 0x04
    ac4c:	8b 81       	ldd	r24, Y+3	; 0x03
    ac4e:	88 2f       	mov	r24, r24
    ac50:	90 e0       	ldi	r25, 0x00	; 0
    ac52:	80 5b       	subi	r24, 0xB0	; 176
    ac54:	9b 4f       	sbci	r25, 0xFB	; 251
    ac56:	89 83       	std	Y+1, r24	; 0x01
    ac58:	9a 83       	std	Y+2, r25	; 0x02
    ac5a:	8c 81       	ldd	r24, Y+4	; 0x04
    ac5c:	81 30       	cpi	r24, 0x01	; 1
    ac5e:	59 f4       	brne	.+22     	; 0xac76 <PORTC_set_pin_pull_mode+0x3a>
    ac60:	89 81       	ldd	r24, Y+1	; 0x01
    ac62:	9a 81       	ldd	r25, Y+2	; 0x02
    ac64:	fc 01       	movw	r30, r24
    ac66:	80 81       	ld	r24, Z
    ac68:	28 2f       	mov	r18, r24
    ac6a:	28 60       	ori	r18, 0x08	; 8
    ac6c:	89 81       	ldd	r24, Y+1	; 0x01
    ac6e:	9a 81       	ldd	r25, Y+2	; 0x02
    ac70:	fc 01       	movw	r30, r24
    ac72:	20 83       	st	Z, r18
    ac74:	0d c0       	rjmp	.+26     	; 0xac90 <PORTC_set_pin_pull_mode+0x54>
    ac76:	8c 81       	ldd	r24, Y+4	; 0x04
    ac78:	88 23       	and	r24, r24
    ac7a:	51 f4       	brne	.+20     	; 0xac90 <PORTC_set_pin_pull_mode+0x54>
    ac7c:	89 81       	ldd	r24, Y+1	; 0x01
    ac7e:	9a 81       	ldd	r25, Y+2	; 0x02
    ac80:	fc 01       	movw	r30, r24
    ac82:	80 81       	ld	r24, Z
    ac84:	28 2f       	mov	r18, r24
    ac86:	27 7f       	andi	r18, 0xF7	; 247
    ac88:	89 81       	ldd	r24, Y+1	; 0x01
    ac8a:	9a 81       	ldd	r25, Y+2	; 0x02
    ac8c:	fc 01       	movw	r30, r24
    ac8e:	20 83       	st	Z, r18
    ac90:	00 00       	nop
    ac92:	24 96       	adiw	r28, 0x04	; 4
    ac94:	cd bf       	out	0x3d, r28	; 61
    ac96:	de bf       	out	0x3e, r29	; 62
    ac98:	df 91       	pop	r29
    ac9a:	cf 91       	pop	r28
    ac9c:	08 95       	ret

0000ac9e <PORTC_set_pin_dir>:
    ac9e:	cf 93       	push	r28
    aca0:	df 93       	push	r29
    aca2:	00 d0       	rcall	.+0      	; 0xaca4 <PORTC_set_pin_dir+0x6>
    aca4:	cd b7       	in	r28, 0x3d	; 61
    aca6:	de b7       	in	r29, 0x3e	; 62
    aca8:	89 83       	std	Y+1, r24	; 0x01
    acaa:	6a 83       	std	Y+2, r22	; 0x02
    acac:	8a 81       	ldd	r24, Y+2	; 0x02
    acae:	88 2f       	mov	r24, r24
    acb0:	90 e0       	ldi	r25, 0x00	; 0
    acb2:	81 30       	cpi	r24, 0x01	; 1
    acb4:	91 05       	cpc	r25, r1
    acb6:	e1 f0       	breq	.+56     	; 0xacf0 <PORTC_set_pin_dir+0x52>
    acb8:	82 30       	cpi	r24, 0x02	; 2
    acba:	91 05       	cpc	r25, r1
    acbc:	71 f1       	breq	.+92     	; 0xad1a <PORTC_set_pin_dir+0x7c>
    acbe:	89 2b       	or	r24, r25
    acc0:	09 f0       	breq	.+2      	; 0xacc4 <PORTC_set_pin_dir+0x26>
    acc2:	3b c0       	rjmp	.+118    	; 0xad3a <PORTC_set_pin_dir+0x9c>
    acc4:	88 e0       	ldi	r24, 0x08	; 8
    acc6:	90 e0       	ldi	r25, 0x00	; 0
    acc8:	28 e0       	ldi	r18, 0x08	; 8
    acca:	30 e0       	ldi	r19, 0x00	; 0
    accc:	f9 01       	movw	r30, r18
    acce:	20 81       	ld	r18, Z
    acd0:	62 2f       	mov	r22, r18
    acd2:	29 81       	ldd	r18, Y+1	; 0x01
    acd4:	42 2f       	mov	r20, r18
    acd6:	50 e0       	ldi	r21, 0x00	; 0
    acd8:	21 e0       	ldi	r18, 0x01	; 1
    acda:	30 e0       	ldi	r19, 0x00	; 0
    acdc:	02 c0       	rjmp	.+4      	; 0xace2 <PORTC_set_pin_dir+0x44>
    acde:	22 0f       	add	r18, r18
    ace0:	33 1f       	adc	r19, r19
    ace2:	4a 95       	dec	r20
    ace4:	e2 f7       	brpl	.-8      	; 0xacde <PORTC_set_pin_dir+0x40>
    ace6:	20 95       	com	r18
    ace8:	26 23       	and	r18, r22
    acea:	fc 01       	movw	r30, r24
    acec:	20 83       	st	Z, r18
    acee:	25 c0       	rjmp	.+74     	; 0xad3a <PORTC_set_pin_dir+0x9c>
    acf0:	88 e0       	ldi	r24, 0x08	; 8
    acf2:	90 e0       	ldi	r25, 0x00	; 0
    acf4:	28 e0       	ldi	r18, 0x08	; 8
    acf6:	30 e0       	ldi	r19, 0x00	; 0
    acf8:	f9 01       	movw	r30, r18
    acfa:	20 81       	ld	r18, Z
    acfc:	62 2f       	mov	r22, r18
    acfe:	29 81       	ldd	r18, Y+1	; 0x01
    ad00:	42 2f       	mov	r20, r18
    ad02:	50 e0       	ldi	r21, 0x00	; 0
    ad04:	21 e0       	ldi	r18, 0x01	; 1
    ad06:	30 e0       	ldi	r19, 0x00	; 0
    ad08:	02 c0       	rjmp	.+4      	; 0xad0e <PORTC_set_pin_dir+0x70>
    ad0a:	22 0f       	add	r18, r18
    ad0c:	33 1f       	adc	r19, r19
    ad0e:	4a 95       	dec	r20
    ad10:	e2 f7       	brpl	.-8      	; 0xad0a <PORTC_set_pin_dir+0x6c>
    ad12:	26 2b       	or	r18, r22
    ad14:	fc 01       	movw	r30, r24
    ad16:	20 83       	st	Z, r18
    ad18:	10 c0       	rjmp	.+32     	; 0xad3a <PORTC_set_pin_dir+0x9c>
    ad1a:	89 81       	ldd	r24, Y+1	; 0x01
    ad1c:	88 2f       	mov	r24, r24
    ad1e:	90 e0       	ldi	r25, 0x00	; 0
    ad20:	80 5b       	subi	r24, 0xB0	; 176
    ad22:	9b 4f       	sbci	r25, 0xFB	; 251
    ad24:	29 81       	ldd	r18, Y+1	; 0x01
    ad26:	22 2f       	mov	r18, r18
    ad28:	30 e0       	ldi	r19, 0x00	; 0
    ad2a:	20 5b       	subi	r18, 0xB0	; 176
    ad2c:	3b 4f       	sbci	r19, 0xFB	; 251
    ad2e:	f9 01       	movw	r30, r18
    ad30:	20 81       	ld	r18, Z
    ad32:	28 60       	ori	r18, 0x08	; 8
    ad34:	fc 01       	movw	r30, r24
    ad36:	20 83       	st	Z, r18
    ad38:	00 00       	nop
    ad3a:	00 00       	nop
    ad3c:	0f 90       	pop	r0
    ad3e:	0f 90       	pop	r0
    ad40:	df 91       	pop	r29
    ad42:	cf 91       	pop	r28
    ad44:	08 95       	ret

0000ad46 <PORTC_set_pin_level>:
    ad46:	cf 93       	push	r28
    ad48:	df 93       	push	r29
    ad4a:	00 d0       	rcall	.+0      	; 0xad4c <PORTC_set_pin_level+0x6>
    ad4c:	cd b7       	in	r28, 0x3d	; 61
    ad4e:	de b7       	in	r29, 0x3e	; 62
    ad50:	89 83       	std	Y+1, r24	; 0x01
    ad52:	6a 83       	std	Y+2, r22	; 0x02
    ad54:	8a 81       	ldd	r24, Y+2	; 0x02
    ad56:	88 23       	and	r24, r24
    ad58:	a9 f0       	breq	.+42     	; 0xad84 <PORTC_set_pin_level+0x3e>
    ad5a:	88 e0       	ldi	r24, 0x08	; 8
    ad5c:	90 e0       	ldi	r25, 0x00	; 0
    ad5e:	28 e0       	ldi	r18, 0x08	; 8
    ad60:	30 e0       	ldi	r19, 0x00	; 0
    ad62:	f9 01       	movw	r30, r18
    ad64:	21 81       	ldd	r18, Z+1	; 0x01
    ad66:	62 2f       	mov	r22, r18
    ad68:	29 81       	ldd	r18, Y+1	; 0x01
    ad6a:	42 2f       	mov	r20, r18
    ad6c:	50 e0       	ldi	r21, 0x00	; 0
    ad6e:	21 e0       	ldi	r18, 0x01	; 1
    ad70:	30 e0       	ldi	r19, 0x00	; 0
    ad72:	02 c0       	rjmp	.+4      	; 0xad78 <PORTC_set_pin_level+0x32>
    ad74:	22 0f       	add	r18, r18
    ad76:	33 1f       	adc	r19, r19
    ad78:	4a 95       	dec	r20
    ad7a:	e2 f7       	brpl	.-8      	; 0xad74 <PORTC_set_pin_level+0x2e>
    ad7c:	26 2b       	or	r18, r22
    ad7e:	fc 01       	movw	r30, r24
    ad80:	21 83       	std	Z+1, r18	; 0x01
    ad82:	15 c0       	rjmp	.+42     	; 0xadae <PORTC_set_pin_level+0x68>
    ad84:	88 e0       	ldi	r24, 0x08	; 8
    ad86:	90 e0       	ldi	r25, 0x00	; 0
    ad88:	28 e0       	ldi	r18, 0x08	; 8
    ad8a:	30 e0       	ldi	r19, 0x00	; 0
    ad8c:	f9 01       	movw	r30, r18
    ad8e:	21 81       	ldd	r18, Z+1	; 0x01
    ad90:	62 2f       	mov	r22, r18
    ad92:	29 81       	ldd	r18, Y+1	; 0x01
    ad94:	42 2f       	mov	r20, r18
    ad96:	50 e0       	ldi	r21, 0x00	; 0
    ad98:	21 e0       	ldi	r18, 0x01	; 1
    ad9a:	30 e0       	ldi	r19, 0x00	; 0
    ad9c:	02 c0       	rjmp	.+4      	; 0xada2 <PORTC_set_pin_level+0x5c>
    ad9e:	22 0f       	add	r18, r18
    ada0:	33 1f       	adc	r19, r19
    ada2:	4a 95       	dec	r20
    ada4:	e2 f7       	brpl	.-8      	; 0xad9e <PORTC_set_pin_level+0x58>
    ada6:	20 95       	com	r18
    ada8:	26 23       	and	r18, r22
    adaa:	fc 01       	movw	r30, r24
    adac:	21 83       	std	Z+1, r18	; 0x01
    adae:	00 00       	nop
    adb0:	0f 90       	pop	r0
    adb2:	0f 90       	pop	r0
    adb4:	df 91       	pop	r29
    adb6:	cf 91       	pop	r28
    adb8:	08 95       	ret

0000adba <PA4_set_dir>:
    adba:	cf 93       	push	r28
    adbc:	df 93       	push	r29
    adbe:	1f 92       	push	r1
    adc0:	cd b7       	in	r28, 0x3d	; 61
    adc2:	de b7       	in	r29, 0x3e	; 62
    adc4:	89 83       	std	Y+1, r24	; 0x01
    adc6:	69 81       	ldd	r22, Y+1	; 0x01
    adc8:	84 e0       	ldi	r24, 0x04	; 4
    adca:	0e 94 90 55 	call	0xab20	; 0xab20 <PORTA_set_pin_dir>
    adce:	00 00       	nop
    add0:	0f 90       	pop	r0
    add2:	df 91       	pop	r29
    add4:	cf 91       	pop	r28
    add6:	08 95       	ret

0000add8 <PA4_set_level>:
    add8:	cf 93       	push	r28
    adda:	df 93       	push	r29
    addc:	1f 92       	push	r1
    adde:	cd b7       	in	r28, 0x3d	; 61
    ade0:	de b7       	in	r29, 0x3e	; 62
    ade2:	89 83       	std	Y+1, r24	; 0x01
    ade4:	69 81       	ldd	r22, Y+1	; 0x01
    ade6:	84 e0       	ldi	r24, 0x04	; 4
    ade8:	0e 94 e4 55 	call	0xabc8	; 0xabc8 <PORTA_set_pin_level>
    adec:	00 00       	nop
    adee:	0f 90       	pop	r0
    adf0:	df 91       	pop	r29
    adf2:	cf 91       	pop	r28
    adf4:	08 95       	ret

0000adf6 <PA5_set_pull_mode>:
    adf6:	cf 93       	push	r28
    adf8:	df 93       	push	r29
    adfa:	1f 92       	push	r1
    adfc:	cd b7       	in	r28, 0x3d	; 61
    adfe:	de b7       	in	r29, 0x3e	; 62
    ae00:	89 83       	std	Y+1, r24	; 0x01
    ae02:	69 81       	ldd	r22, Y+1	; 0x01
    ae04:	85 e0       	ldi	r24, 0x05	; 5
    ae06:	0e 94 5f 55 	call	0xaabe	; 0xaabe <PORTA_set_pin_pull_mode>
    ae0a:	00 00       	nop
    ae0c:	0f 90       	pop	r0
    ae0e:	df 91       	pop	r29
    ae10:	cf 91       	pop	r28
    ae12:	08 95       	ret

0000ae14 <PA5_set_dir>:
    ae14:	cf 93       	push	r28
    ae16:	df 93       	push	r29
    ae18:	1f 92       	push	r1
    ae1a:	cd b7       	in	r28, 0x3d	; 61
    ae1c:	de b7       	in	r29, 0x3e	; 62
    ae1e:	89 83       	std	Y+1, r24	; 0x01
    ae20:	69 81       	ldd	r22, Y+1	; 0x01
    ae22:	85 e0       	ldi	r24, 0x05	; 5
    ae24:	0e 94 90 55 	call	0xab20	; 0xab20 <PORTA_set_pin_dir>
    ae28:	00 00       	nop
    ae2a:	0f 90       	pop	r0
    ae2c:	df 91       	pop	r29
    ae2e:	cf 91       	pop	r28
    ae30:	08 95       	ret

0000ae32 <PC0_set_dir>:
    ae32:	cf 93       	push	r28
    ae34:	df 93       	push	r29
    ae36:	1f 92       	push	r1
    ae38:	cd b7       	in	r28, 0x3d	; 61
    ae3a:	de b7       	in	r29, 0x3e	; 62
    ae3c:	89 83       	std	Y+1, r24	; 0x01
    ae3e:	69 81       	ldd	r22, Y+1	; 0x01
    ae40:	80 e0       	ldi	r24, 0x00	; 0
    ae42:	0e 94 4f 56 	call	0xac9e	; 0xac9e <PORTC_set_pin_dir>
    ae46:	00 00       	nop
    ae48:	0f 90       	pop	r0
    ae4a:	df 91       	pop	r29
    ae4c:	cf 91       	pop	r28
    ae4e:	08 95       	ret

0000ae50 <PC0_set_level>:
    ae50:	cf 93       	push	r28
    ae52:	df 93       	push	r29
    ae54:	1f 92       	push	r1
    ae56:	cd b7       	in	r28, 0x3d	; 61
    ae58:	de b7       	in	r29, 0x3e	; 62
    ae5a:	89 83       	std	Y+1, r24	; 0x01
    ae5c:	69 81       	ldd	r22, Y+1	; 0x01
    ae5e:	80 e0       	ldi	r24, 0x00	; 0
    ae60:	0e 94 a3 56 	call	0xad46	; 0xad46 <PORTC_set_pin_level>
    ae64:	00 00       	nop
    ae66:	0f 90       	pop	r0
    ae68:	df 91       	pop	r29
    ae6a:	cf 91       	pop	r28
    ae6c:	08 95       	ret

0000ae6e <PC1_set_pull_mode>:
    ae6e:	cf 93       	push	r28
    ae70:	df 93       	push	r29
    ae72:	1f 92       	push	r1
    ae74:	cd b7       	in	r28, 0x3d	; 61
    ae76:	de b7       	in	r29, 0x3e	; 62
    ae78:	89 83       	std	Y+1, r24	; 0x01
    ae7a:	69 81       	ldd	r22, Y+1	; 0x01
    ae7c:	81 e0       	ldi	r24, 0x01	; 1
    ae7e:	0e 94 1e 56 	call	0xac3c	; 0xac3c <PORTC_set_pin_pull_mode>
    ae82:	00 00       	nop
    ae84:	0f 90       	pop	r0
    ae86:	df 91       	pop	r29
    ae88:	cf 91       	pop	r28
    ae8a:	08 95       	ret

0000ae8c <PC1_set_dir>:
    ae8c:	cf 93       	push	r28
    ae8e:	df 93       	push	r29
    ae90:	1f 92       	push	r1
    ae92:	cd b7       	in	r28, 0x3d	; 61
    ae94:	de b7       	in	r29, 0x3e	; 62
    ae96:	89 83       	std	Y+1, r24	; 0x01
    ae98:	69 81       	ldd	r22, Y+1	; 0x01
    ae9a:	81 e0       	ldi	r24, 0x01	; 1
    ae9c:	0e 94 4f 56 	call	0xac9e	; 0xac9e <PORTC_set_pin_dir>
    aea0:	00 00       	nop
    aea2:	0f 90       	pop	r0
    aea4:	df 91       	pop	r29
    aea6:	cf 91       	pop	r28
    aea8:	08 95       	ret

0000aeaa <nextFullSBTxBuffer>:
    aeaa:	cf 93       	push	r28
    aeac:	df 93       	push	r29
    aeae:	00 d0       	rcall	.+0      	; 0xaeb0 <nextFullSBTxBuffer+0x6>
    aeb0:	cd b7       	in	r28, 0x3d	; 61
    aeb2:	de b7       	in	r29, 0x3e	; 62
    aeb4:	81 e0       	ldi	r24, 0x01	; 1
    aeb6:	89 83       	std	Y+1, r24	; 0x01
    aeb8:	1a 82       	std	Y+2, r1	; 0x02
    aeba:	80 91 74 4a 	lds	r24, 0x4A74	; 0x804a74 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    aebe:	28 2f       	mov	r18, r24
    aec0:	30 e0       	ldi	r19, 0x00	; 0
    aec2:	49 e2       	ldi	r20, 0x29	; 41
    aec4:	42 9f       	mul	r20, r18
    aec6:	c0 01       	movw	r24, r0
    aec8:	43 9f       	mul	r20, r19
    aeca:	90 0d       	add	r25, r0
    aecc:	11 24       	eor	r1, r1
    aece:	85 58       	subi	r24, 0x85	; 133
    aed0:	96 4b       	sbci	r25, 0xB6	; 182
    aed2:	fc 01       	movw	r30, r24
    aed4:	90 81       	ld	r25, Z
    aed6:	81 e0       	ldi	r24, 0x01	; 1
    aed8:	99 23       	and	r25, r25
    aeda:	09 f0       	breq	.+2      	; 0xaede <nextFullSBTxBuffer+0x34>
    aedc:	80 e0       	ldi	r24, 0x00	; 0
    aede:	88 23       	and	r24, r24
    aee0:	c1 f0       	breq	.+48     	; 0xaf12 <nextFullSBTxBuffer+0x68>
    aee2:	8a 81       	ldd	r24, Y+2	; 0x02
    aee4:	8f 5f       	subi	r24, 0xFF	; 255
    aee6:	8a 83       	std	Y+2, r24	; 0x02
    aee8:	81 e0       	ldi	r24, 0x01	; 1
    aeea:	9a 81       	ldd	r25, Y+2	; 0x02
    aeec:	93 30       	cpi	r25, 0x03	; 3
    aeee:	08 f4       	brcc	.+2      	; 0xaef2 <nextFullSBTxBuffer+0x48>
    aef0:	80 e0       	ldi	r24, 0x00	; 0
    aef2:	88 23       	and	r24, r24
    aef4:	11 f0       	breq	.+4      	; 0xaefa <nextFullSBTxBuffer+0x50>
    aef6:	19 82       	std	Y+1, r1	; 0x01
    aef8:	0c c0       	rjmp	.+24     	; 0xaf12 <nextFullSBTxBuffer+0x68>
    aefa:	80 91 74 4a 	lds	r24, 0x4A74	; 0x804a74 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    aefe:	8f 5f       	subi	r24, 0xFF	; 255
    af00:	80 93 74 4a 	sts	0x4A74, r24	; 0x804a74 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    af04:	80 91 74 4a 	lds	r24, 0x4A74	; 0x804a74 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    af08:	83 30       	cpi	r24, 0x03	; 3
    af0a:	b8 f2       	brcs	.-82     	; 0xaeba <nextFullSBTxBuffer+0x10>
    af0c:	10 92 74 4a 	sts	0x4A74, r1	; 0x804a74 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    af10:	d4 cf       	rjmp	.-88     	; 0xaeba <nextFullSBTxBuffer+0x10>
    af12:	89 81       	ldd	r24, Y+1	; 0x01
    af14:	88 23       	and	r24, r24
    af16:	69 f0       	breq	.+26     	; 0xaf32 <nextFullSBTxBuffer+0x88>
    af18:	80 91 74 4a 	lds	r24, 0x4A74	; 0x804a74 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    af1c:	28 2f       	mov	r18, r24
    af1e:	30 e0       	ldi	r19, 0x00	; 0
    af20:	49 e2       	ldi	r20, 0x29	; 41
    af22:	42 9f       	mul	r20, r18
    af24:	c0 01       	movw	r24, r0
    af26:	43 9f       	mul	r20, r19
    af28:	90 0d       	add	r25, r0
    af2a:	11 24       	eor	r1, r1
    af2c:	85 58       	subi	r24, 0x85	; 133
    af2e:	96 4b       	sbci	r25, 0xB6	; 182
    af30:	02 c0       	rjmp	.+4      	; 0xaf36 <nextFullSBTxBuffer+0x8c>
    af32:	80 e0       	ldi	r24, 0x00	; 0
    af34:	90 e0       	ldi	r25, 0x00	; 0
    af36:	0f 90       	pop	r0
    af38:	0f 90       	pop	r0
    af3a:	df 91       	pop	r29
    af3c:	cf 91       	pop	r28
    af3e:	08 95       	ret

0000af40 <nextEmptySBTxBuffer>:
    af40:	cf 93       	push	r28
    af42:	df 93       	push	r29
    af44:	00 d0       	rcall	.+0      	; 0xaf46 <nextEmptySBTxBuffer+0x6>
    af46:	cd b7       	in	r28, 0x3d	; 61
    af48:	de b7       	in	r29, 0x3e	; 62
    af4a:	81 e0       	ldi	r24, 0x01	; 1
    af4c:	89 83       	std	Y+1, r24	; 0x01
    af4e:	1a 82       	std	Y+2, r1	; 0x02
    af50:	80 91 75 4a 	lds	r24, 0x4A75	; 0x804a75 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    af54:	28 2f       	mov	r18, r24
    af56:	30 e0       	ldi	r19, 0x00	; 0
    af58:	49 e2       	ldi	r20, 0x29	; 41
    af5a:	42 9f       	mul	r20, r18
    af5c:	c0 01       	movw	r24, r0
    af5e:	43 9f       	mul	r20, r19
    af60:	90 0d       	add	r25, r0
    af62:	11 24       	eor	r1, r1
    af64:	85 58       	subi	r24, 0x85	; 133
    af66:	96 4b       	sbci	r25, 0xB6	; 182
    af68:	fc 01       	movw	r30, r24
    af6a:	90 81       	ld	r25, Z
    af6c:	81 e0       	ldi	r24, 0x01	; 1
    af6e:	99 23       	and	r25, r25
    af70:	09 f4       	brne	.+2      	; 0xaf74 <nextEmptySBTxBuffer+0x34>
    af72:	80 e0       	ldi	r24, 0x00	; 0
    af74:	88 23       	and	r24, r24
    af76:	c1 f0       	breq	.+48     	; 0xafa8 <nextEmptySBTxBuffer+0x68>
    af78:	8a 81       	ldd	r24, Y+2	; 0x02
    af7a:	8f 5f       	subi	r24, 0xFF	; 255
    af7c:	8a 83       	std	Y+2, r24	; 0x02
    af7e:	81 e0       	ldi	r24, 0x01	; 1
    af80:	9a 81       	ldd	r25, Y+2	; 0x02
    af82:	93 30       	cpi	r25, 0x03	; 3
    af84:	08 f4       	brcc	.+2      	; 0xaf88 <nextEmptySBTxBuffer+0x48>
    af86:	80 e0       	ldi	r24, 0x00	; 0
    af88:	88 23       	and	r24, r24
    af8a:	11 f0       	breq	.+4      	; 0xaf90 <nextEmptySBTxBuffer+0x50>
    af8c:	19 82       	std	Y+1, r1	; 0x01
    af8e:	0c c0       	rjmp	.+24     	; 0xafa8 <nextEmptySBTxBuffer+0x68>
    af90:	80 91 75 4a 	lds	r24, 0x4A75	; 0x804a75 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    af94:	8f 5f       	subi	r24, 0xFF	; 255
    af96:	80 93 75 4a 	sts	0x4A75, r24	; 0x804a75 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    af9a:	80 91 75 4a 	lds	r24, 0x4A75	; 0x804a75 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    af9e:	83 30       	cpi	r24, 0x03	; 3
    afa0:	b8 f2       	brcs	.-82     	; 0xaf50 <nextEmptySBTxBuffer+0x10>
    afa2:	10 92 75 4a 	sts	0x4A75, r1	; 0x804a75 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    afa6:	d4 cf       	rjmp	.-88     	; 0xaf50 <nextEmptySBTxBuffer+0x10>
    afa8:	89 81       	ldd	r24, Y+1	; 0x01
    afaa:	88 23       	and	r24, r24
    afac:	69 f0       	breq	.+26     	; 0xafc8 <nextEmptySBTxBuffer+0x88>
    afae:	80 91 75 4a 	lds	r24, 0x4A75	; 0x804a75 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    afb2:	28 2f       	mov	r18, r24
    afb4:	30 e0       	ldi	r19, 0x00	; 0
    afb6:	49 e2       	ldi	r20, 0x29	; 41
    afb8:	42 9f       	mul	r20, r18
    afba:	c0 01       	movw	r24, r0
    afbc:	43 9f       	mul	r20, r19
    afbe:	90 0d       	add	r25, r0
    afc0:	11 24       	eor	r1, r1
    afc2:	85 58       	subi	r24, 0x85	; 133
    afc4:	96 4b       	sbci	r25, 0xB6	; 182
    afc6:	02 c0       	rjmp	.+4      	; 0xafcc <nextEmptySBTxBuffer+0x8c>
    afc8:	80 e0       	ldi	r24, 0x00	; 0
    afca:	90 e0       	ldi	r25, 0x00	; 0
    afcc:	0f 90       	pop	r0
    afce:	0f 90       	pop	r0
    afd0:	df 91       	pop	r29
    afd2:	cf 91       	pop	r28
    afd4:	08 95       	ret

0000afd6 <nextEmptySBRxBuffer>:
    afd6:	cf 93       	push	r28
    afd8:	df 93       	push	r29
    afda:	00 d0       	rcall	.+0      	; 0xafdc <nextEmptySBRxBuffer+0x6>
    afdc:	cd b7       	in	r28, 0x3d	; 61
    afde:	de b7       	in	r29, 0x3e	; 62
    afe0:	81 e0       	ldi	r24, 0x01	; 1
    afe2:	89 83       	std	Y+1, r24	; 0x01
    afe4:	1a 82       	std	Y+2, r1	; 0x02
    afe6:	80 91 76 4a 	lds	r24, 0x4A76	; 0x804a76 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    afea:	28 2f       	mov	r18, r24
    afec:	30 e0       	ldi	r19, 0x00	; 0
    afee:	4f e3       	ldi	r20, 0x3F	; 63
    aff0:	42 9f       	mul	r20, r18
    aff2:	c0 01       	movw	r24, r0
    aff4:	43 9f       	mul	r20, r19
    aff6:	90 0d       	add	r25, r0
    aff8:	11 24       	eor	r1, r1
    affa:	89 50       	subi	r24, 0x09	; 9
    affc:	96 4b       	sbci	r25, 0xB6	; 182
    affe:	fc 01       	movw	r30, r24
    b000:	80 81       	ld	r24, Z
    b002:	91 81       	ldd	r25, Z+1	; 0x01
    b004:	21 e0       	ldi	r18, 0x01	; 1
    b006:	89 2b       	or	r24, r25
    b008:	09 f4       	brne	.+2      	; 0xb00c <nextEmptySBRxBuffer+0x36>
    b00a:	20 e0       	ldi	r18, 0x00	; 0
    b00c:	22 23       	and	r18, r18
    b00e:	c1 f0       	breq	.+48     	; 0xb040 <nextEmptySBRxBuffer+0x6a>
    b010:	8a 81       	ldd	r24, Y+2	; 0x02
    b012:	8f 5f       	subi	r24, 0xFF	; 255
    b014:	8a 83       	std	Y+2, r24	; 0x02
    b016:	81 e0       	ldi	r24, 0x01	; 1
    b018:	9a 81       	ldd	r25, Y+2	; 0x02
    b01a:	92 30       	cpi	r25, 0x02	; 2
    b01c:	08 f4       	brcc	.+2      	; 0xb020 <nextEmptySBRxBuffer+0x4a>
    b01e:	80 e0       	ldi	r24, 0x00	; 0
    b020:	88 23       	and	r24, r24
    b022:	11 f0       	breq	.+4      	; 0xb028 <nextEmptySBRxBuffer+0x52>
    b024:	19 82       	std	Y+1, r1	; 0x01
    b026:	0c c0       	rjmp	.+24     	; 0xb040 <nextEmptySBRxBuffer+0x6a>
    b028:	80 91 76 4a 	lds	r24, 0x4A76	; 0x804a76 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b02c:	8f 5f       	subi	r24, 0xFF	; 255
    b02e:	80 93 76 4a 	sts	0x4A76, r24	; 0x804a76 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b032:	80 91 76 4a 	lds	r24, 0x4A76	; 0x804a76 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b036:	82 30       	cpi	r24, 0x02	; 2
    b038:	b0 f2       	brcs	.-84     	; 0xafe6 <nextEmptySBRxBuffer+0x10>
    b03a:	10 92 76 4a 	sts	0x4A76, r1	; 0x804a76 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b03e:	d3 cf       	rjmp	.-90     	; 0xafe6 <nextEmptySBRxBuffer+0x10>
    b040:	89 81       	ldd	r24, Y+1	; 0x01
    b042:	88 23       	and	r24, r24
    b044:	69 f0       	breq	.+26     	; 0xb060 <nextEmptySBRxBuffer+0x8a>
    b046:	80 91 76 4a 	lds	r24, 0x4A76	; 0x804a76 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b04a:	28 2f       	mov	r18, r24
    b04c:	30 e0       	ldi	r19, 0x00	; 0
    b04e:	4f e3       	ldi	r20, 0x3F	; 63
    b050:	42 9f       	mul	r20, r18
    b052:	c0 01       	movw	r24, r0
    b054:	43 9f       	mul	r20, r19
    b056:	90 0d       	add	r25, r0
    b058:	11 24       	eor	r1, r1
    b05a:	8a 50       	subi	r24, 0x0A	; 10
    b05c:	96 4b       	sbci	r25, 0xB6	; 182
    b05e:	02 c0       	rjmp	.+4      	; 0xb064 <nextEmptySBRxBuffer+0x8e>
    b060:	80 e0       	ldi	r24, 0x00	; 0
    b062:	90 e0       	ldi	r25, 0x00	; 0
    b064:	0f 90       	pop	r0
    b066:	0f 90       	pop	r0
    b068:	df 91       	pop	r29
    b06a:	cf 91       	pop	r28
    b06c:	08 95       	ret

0000b06e <nextFullSBRxBuffer>:
    b06e:	cf 93       	push	r28
    b070:	df 93       	push	r29
    b072:	00 d0       	rcall	.+0      	; 0xb074 <nextFullSBRxBuffer+0x6>
    b074:	cd b7       	in	r28, 0x3d	; 61
    b076:	de b7       	in	r29, 0x3e	; 62
    b078:	81 e0       	ldi	r24, 0x01	; 1
    b07a:	89 83       	std	Y+1, r24	; 0x01
    b07c:	1a 82       	std	Y+2, r1	; 0x02
    b07e:	80 91 77 4a 	lds	r24, 0x4A77	; 0x804a77 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b082:	28 2f       	mov	r18, r24
    b084:	30 e0       	ldi	r19, 0x00	; 0
    b086:	4f e3       	ldi	r20, 0x3F	; 63
    b088:	42 9f       	mul	r20, r18
    b08a:	c0 01       	movw	r24, r0
    b08c:	43 9f       	mul	r20, r19
    b08e:	90 0d       	add	r25, r0
    b090:	11 24       	eor	r1, r1
    b092:	89 50       	subi	r24, 0x09	; 9
    b094:	96 4b       	sbci	r25, 0xB6	; 182
    b096:	fc 01       	movw	r30, r24
    b098:	80 81       	ld	r24, Z
    b09a:	91 81       	ldd	r25, Z+1	; 0x01
    b09c:	21 e0       	ldi	r18, 0x01	; 1
    b09e:	89 2b       	or	r24, r25
    b0a0:	09 f0       	breq	.+2      	; 0xb0a4 <nextFullSBRxBuffer+0x36>
    b0a2:	20 e0       	ldi	r18, 0x00	; 0
    b0a4:	22 23       	and	r18, r18
    b0a6:	c1 f0       	breq	.+48     	; 0xb0d8 <nextFullSBRxBuffer+0x6a>
    b0a8:	8a 81       	ldd	r24, Y+2	; 0x02
    b0aa:	8f 5f       	subi	r24, 0xFF	; 255
    b0ac:	8a 83       	std	Y+2, r24	; 0x02
    b0ae:	81 e0       	ldi	r24, 0x01	; 1
    b0b0:	9a 81       	ldd	r25, Y+2	; 0x02
    b0b2:	92 30       	cpi	r25, 0x02	; 2
    b0b4:	08 f4       	brcc	.+2      	; 0xb0b8 <nextFullSBRxBuffer+0x4a>
    b0b6:	80 e0       	ldi	r24, 0x00	; 0
    b0b8:	88 23       	and	r24, r24
    b0ba:	11 f0       	breq	.+4      	; 0xb0c0 <nextFullSBRxBuffer+0x52>
    b0bc:	19 82       	std	Y+1, r1	; 0x01
    b0be:	0c c0       	rjmp	.+24     	; 0xb0d8 <nextFullSBRxBuffer+0x6a>
    b0c0:	80 91 77 4a 	lds	r24, 0x4A77	; 0x804a77 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b0c4:	8f 5f       	subi	r24, 0xFF	; 255
    b0c6:	80 93 77 4a 	sts	0x4A77, r24	; 0x804a77 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b0ca:	80 91 77 4a 	lds	r24, 0x4A77	; 0x804a77 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b0ce:	82 30       	cpi	r24, 0x02	; 2
    b0d0:	b0 f2       	brcs	.-84     	; 0xb07e <nextFullSBRxBuffer+0x10>
    b0d2:	10 92 77 4a 	sts	0x4A77, r1	; 0x804a77 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b0d6:	d3 cf       	rjmp	.-90     	; 0xb07e <nextFullSBRxBuffer+0x10>
    b0d8:	89 81       	ldd	r24, Y+1	; 0x01
    b0da:	88 23       	and	r24, r24
    b0dc:	69 f0       	breq	.+26     	; 0xb0f8 <nextFullSBRxBuffer+0x8a>
    b0de:	80 91 77 4a 	lds	r24, 0x4A77	; 0x804a77 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b0e2:	28 2f       	mov	r18, r24
    b0e4:	30 e0       	ldi	r19, 0x00	; 0
    b0e6:	4f e3       	ldi	r20, 0x3F	; 63
    b0e8:	42 9f       	mul	r20, r18
    b0ea:	c0 01       	movw	r24, r0
    b0ec:	43 9f       	mul	r20, r19
    b0ee:	90 0d       	add	r25, r0
    b0f0:	11 24       	eor	r1, r1
    b0f2:	8a 50       	subi	r24, 0x0A	; 10
    b0f4:	96 4b       	sbci	r25, 0xB6	; 182
    b0f6:	02 c0       	rjmp	.+4      	; 0xb0fc <nextFullSBRxBuffer+0x8e>
    b0f8:	80 e0       	ldi	r24, 0x00	; 0
    b0fa:	90 e0       	ldi	r25, 0x00	; 0
    b0fc:	0f 90       	pop	r0
    b0fe:	0f 90       	pop	r0
    b100:	df 91       	pop	r29
    b102:	cf 91       	pop	r28
    b104:	08 95       	ret

0000b106 <serialbusTxInProgress>:
    b106:	cf 93       	push	r28
    b108:	df 93       	push	r29
    b10a:	cd b7       	in	r28, 0x3d	; 61
    b10c:	de b7       	in	r29, 0x3e	; 62
    b10e:	80 91 7a 49 	lds	r24, 0x497A	; 0x80497a <_ZL19serialbus_tx_active>
    b112:	df 91       	pop	r29
    b114:	cf 91       	pop	r28
    b116:	08 95       	ret

0000b118 <_Z18serialbus_start_txv>:
    b118:	cf 93       	push	r28
    b11a:	df 93       	push	r29
    b11c:	1f 92       	push	r1
    b11e:	cd b7       	in	r28, 0x3d	; 61
    b120:	de b7       	in	r29, 0x3e	; 62
    b122:	90 91 7a 49 	lds	r25, 0x497A	; 0x80497a <_ZL19serialbus_tx_active>
    b126:	81 e0       	ldi	r24, 0x01	; 1
    b128:	89 27       	eor	r24, r25
    b12a:	89 83       	std	Y+1, r24	; 0x01
    b12c:	89 81       	ldd	r24, Y+1	; 0x01
    b12e:	88 23       	and	r24, r24
    b130:	61 f0       	breq	.+24     	; 0xb14a <_Z18serialbus_start_txv+0x32>
    b132:	81 e0       	ldi	r24, 0x01	; 1
    b134:	80 93 7a 49 	sts	0x497A, r24	; 0x80497a <_ZL19serialbus_tx_active>
    b138:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_serialbus_usart_number>
    b13c:	88 23       	and	r24, r24
    b13e:	19 f4       	brne	.+6      	; 0xb146 <_Z18serialbus_start_txv+0x2e>
    b140:	0e 94 57 6c 	call	0xd8ae	; 0xd8ae <USART0_enable_tx>
    b144:	02 c0       	rjmp	.+4      	; 0xb14a <_Z18serialbus_start_txv+0x32>
    b146:	0e 94 b5 6b 	call	0xd76a	; 0xd76a <USART1_enable_tx>
    b14a:	89 81       	ldd	r24, Y+1	; 0x01
    b14c:	0f 90       	pop	r0
    b14e:	df 91       	pop	r29
    b150:	cf 91       	pop	r28
    b152:	08 95       	ret

0000b154 <serialbus_end_tx>:
    b154:	cf 93       	push	r28
    b156:	df 93       	push	r29
    b158:	cd b7       	in	r28, 0x3d	; 61
    b15a:	de b7       	in	r29, 0x3e	; 62
    b15c:	80 91 7a 49 	lds	r24, 0x497A	; 0x80497a <_ZL19serialbus_tx_active>
    b160:	88 23       	and	r24, r24
    b162:	c9 f0       	breq	.+50     	; 0xb196 <serialbus_end_tx+0x42>
    b164:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_serialbus_usart_number>
    b168:	88 23       	and	r24, r24
    b16a:	51 f4       	brne	.+20     	; 0xb180 <serialbus_end_tx+0x2c>
    b16c:	80 e0       	ldi	r24, 0x00	; 0
    b16e:	98 e0       	ldi	r25, 0x08	; 8
    b170:	20 e0       	ldi	r18, 0x00	; 0
    b172:	38 e0       	ldi	r19, 0x08	; 8
    b174:	f9 01       	movw	r30, r18
    b176:	25 81       	ldd	r18, Z+5	; 0x05
    b178:	2f 7d       	andi	r18, 0xDF	; 223
    b17a:	fc 01       	movw	r30, r24
    b17c:	25 83       	std	Z+5, r18	; 0x05
    b17e:	09 c0       	rjmp	.+18     	; 0xb192 <serialbus_end_tx+0x3e>
    b180:	80 e2       	ldi	r24, 0x20	; 32
    b182:	98 e0       	ldi	r25, 0x08	; 8
    b184:	20 e2       	ldi	r18, 0x20	; 32
    b186:	38 e0       	ldi	r19, 0x08	; 8
    b188:	f9 01       	movw	r30, r18
    b18a:	25 81       	ldd	r18, Z+5	; 0x05
    b18c:	2f 7d       	andi	r18, 0xDF	; 223
    b18e:	fc 01       	movw	r30, r24
    b190:	25 83       	std	Z+5, r18	; 0x05
    b192:	10 92 7a 49 	sts	0x497A, r1	; 0x80497a <_ZL19serialbus_tx_active>
    b196:	00 00       	nop
    b198:	df 91       	pop	r29
    b19a:	cf 91       	pop	r28
    b19c:	08 95       	ret

0000b19e <_ZL21USART1_initializationm>:
    b19e:	cf 93       	push	r28
    b1a0:	df 93       	push	r29
    b1a2:	00 d0       	rcall	.+0      	; 0xb1a4 <_ZL21USART1_initializationm+0x6>
    b1a4:	00 d0       	rcall	.+0      	; 0xb1a6 <_ZL21USART1_initializationm+0x8>
    b1a6:	cd b7       	in	r28, 0x3d	; 61
    b1a8:	de b7       	in	r29, 0x3e	; 62
    b1aa:	69 83       	std	Y+1, r22	; 0x01
    b1ac:	7a 83       	std	Y+2, r23	; 0x02
    b1ae:	8b 83       	std	Y+3, r24	; 0x03
    b1b0:	9c 83       	std	Y+4, r25	; 0x04
    b1b2:	80 e0       	ldi	r24, 0x00	; 0
    b1b4:	0e 94 46 57 	call	0xae8c	; 0xae8c <PC1_set_dir>
    b1b8:	80 e0       	ldi	r24, 0x00	; 0
    b1ba:	0e 94 37 57 	call	0xae6e	; 0xae6e <PC1_set_pull_mode>
    b1be:	81 e0       	ldi	r24, 0x01	; 1
    b1c0:	0e 94 19 57 	call	0xae32	; 0xae32 <PC0_set_dir>
    b1c4:	81 e0       	ldi	r24, 0x01	; 1
    b1c6:	0e 94 28 57 	call	0xae50	; 0xae50 <PC0_set_level>
    b1ca:	89 81       	ldd	r24, Y+1	; 0x01
    b1cc:	9a 81       	ldd	r25, Y+2	; 0x02
    b1ce:	ab 81       	ldd	r26, Y+3	; 0x03
    b1d0:	bc 81       	ldd	r27, Y+4	; 0x04
    b1d2:	40 e0       	ldi	r20, 0x00	; 0
    b1d4:	bc 01       	movw	r22, r24
    b1d6:	cd 01       	movw	r24, r26
    b1d8:	0e 94 42 6b 	call	0xd684	; 0xd684 <USART1_init>
    b1dc:	00 00       	nop
    b1de:	24 96       	adiw	r28, 0x04	; 4
    b1e0:	cd bf       	out	0x3d, r28	; 61
    b1e2:	de bf       	out	0x3e, r29	; 62
    b1e4:	df 91       	pop	r29
    b1e6:	cf 91       	pop	r28
    b1e8:	08 95       	ret

0000b1ea <_ZL21USART0_initializationm>:
    b1ea:	cf 93       	push	r28
    b1ec:	df 93       	push	r29
    b1ee:	00 d0       	rcall	.+0      	; 0xb1f0 <_ZL21USART0_initializationm+0x6>
    b1f0:	00 d0       	rcall	.+0      	; 0xb1f2 <_ZL21USART0_initializationm+0x8>
    b1f2:	cd b7       	in	r28, 0x3d	; 61
    b1f4:	de b7       	in	r29, 0x3e	; 62
    b1f6:	69 83       	std	Y+1, r22	; 0x01
    b1f8:	7a 83       	std	Y+2, r23	; 0x02
    b1fa:	8b 83       	std	Y+3, r24	; 0x03
    b1fc:	9c 83       	std	Y+4, r25	; 0x04
    b1fe:	80 e0       	ldi	r24, 0x00	; 0
    b200:	0e 94 0a 57 	call	0xae14	; 0xae14 <PA5_set_dir>
    b204:	80 e0       	ldi	r24, 0x00	; 0
    b206:	0e 94 fb 56 	call	0xadf6	; 0xadf6 <PA5_set_pull_mode>
    b20a:	81 e0       	ldi	r24, 0x01	; 1
    b20c:	0e 94 dd 56 	call	0xadba	; 0xadba <PA4_set_dir>
    b210:	81 e0       	ldi	r24, 0x01	; 1
    b212:	0e 94 ec 56 	call	0xadd8	; 0xadd8 <PA4_set_level>
    b216:	89 81       	ldd	r24, Y+1	; 0x01
    b218:	9a 81       	ldd	r25, Y+2	; 0x02
    b21a:	ab 81       	ldd	r26, Y+3	; 0x03
    b21c:	bc 81       	ldd	r27, Y+4	; 0x04
    b21e:	40 e0       	ldi	r20, 0x00	; 0
    b220:	bc 01       	movw	r22, r24
    b222:	cd 01       	movw	r24, r26
    b224:	0e 94 eb 6b 	call	0xd7d6	; 0xd7d6 <USART0_init>
    b228:	00 00       	nop
    b22a:	24 96       	adiw	r28, 0x04	; 4
    b22c:	cd bf       	out	0x3d, r28	; 61
    b22e:	de bf       	out	0x3e, r29	; 62
    b230:	df 91       	pop	r29
    b232:	cf 91       	pop	r28
    b234:	08 95       	ret

0000b236 <serialbus_init>:
    b236:	cf 93       	push	r28
    b238:	df 93       	push	r29
    b23a:	cd b7       	in	r28, 0x3d	; 61
    b23c:	de b7       	in	r29, 0x3e	; 62
    b23e:	27 97       	sbiw	r28, 0x07	; 7
    b240:	cd bf       	out	0x3d, r28	; 61
    b242:	de bf       	out	0x3e, r29	; 62
    b244:	6b 83       	std	Y+3, r22	; 0x03
    b246:	7c 83       	std	Y+4, r23	; 0x04
    b248:	8d 83       	std	Y+5, r24	; 0x05
    b24a:	9e 83       	std	Y+6, r25	; 0x06
    b24c:	4f 83       	std	Y+7, r20	; 0x07
    b24e:	4f e3       	ldi	r20, 0x3F	; 63
    b250:	50 e0       	ldi	r21, 0x00	; 0
    b252:	60 e0       	ldi	r22, 0x00	; 0
    b254:	70 e0       	ldi	r23, 0x00	; 0
    b256:	86 ef       	ldi	r24, 0xF6	; 246
    b258:	99 e4       	ldi	r25, 0x49	; 73
    b25a:	0e 94 02 75 	call	0xea04	; 0xea04 <memset>
    b25e:	19 82       	std	Y+1, r1	; 0x01
    b260:	1a 82       	std	Y+2, r1	; 0x02
    b262:	89 81       	ldd	r24, Y+1	; 0x01
    b264:	9a 81       	ldd	r25, Y+2	; 0x02
    b266:	03 97       	sbiw	r24, 0x03	; 3
    b268:	94 f4       	brge	.+36     	; 0xb28e <serialbus_init+0x58>
    b26a:	29 81       	ldd	r18, Y+1	; 0x01
    b26c:	3a 81       	ldd	r19, Y+2	; 0x02
    b26e:	49 e2       	ldi	r20, 0x29	; 41
    b270:	42 9f       	mul	r20, r18
    b272:	c0 01       	movw	r24, r0
    b274:	43 9f       	mul	r20, r19
    b276:	90 0d       	add	r25, r0
    b278:	11 24       	eor	r1, r1
    b27a:	85 58       	subi	r24, 0x85	; 133
    b27c:	96 4b       	sbci	r25, 0xB6	; 182
    b27e:	fc 01       	movw	r30, r24
    b280:	10 82       	st	Z, r1
    b282:	89 81       	ldd	r24, Y+1	; 0x01
    b284:	9a 81       	ldd	r25, Y+2	; 0x02
    b286:	01 96       	adiw	r24, 0x01	; 1
    b288:	89 83       	std	Y+1, r24	; 0x01
    b28a:	9a 83       	std	Y+2, r25	; 0x02
    b28c:	ea cf       	rjmp	.-44     	; 0xb262 <serialbus_init+0x2c>
    b28e:	8f 81       	ldd	r24, Y+7	; 0x07
    b290:	86 30       	cpi	r24, 0x06	; 6
    b292:	21 f4       	brne	.+8      	; 0xb29c <serialbus_init+0x66>
    b294:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_serialbus_usart_number>
    b298:	87 30       	cpi	r24, 0x07	; 7
    b29a:	b9 f4       	brne	.+46     	; 0xb2ca <serialbus_init+0x94>
    b29c:	8f 81       	ldd	r24, Y+7	; 0x07
    b29e:	88 23       	and	r24, r24
    b2a0:	49 f4       	brne	.+18     	; 0xb2b4 <serialbus_init+0x7e>
    b2a2:	8b 81       	ldd	r24, Y+3	; 0x03
    b2a4:	9c 81       	ldd	r25, Y+4	; 0x04
    b2a6:	ad 81       	ldd	r26, Y+5	; 0x05
    b2a8:	be 81       	ldd	r27, Y+6	; 0x06
    b2aa:	bc 01       	movw	r22, r24
    b2ac:	cd 01       	movw	r24, r26
    b2ae:	0e 94 f5 58 	call	0xb1ea	; 0xb1ea <_ZL21USART0_initializationm>
    b2b2:	08 c0       	rjmp	.+16     	; 0xb2c4 <serialbus_init+0x8e>
    b2b4:	8b 81       	ldd	r24, Y+3	; 0x03
    b2b6:	9c 81       	ldd	r25, Y+4	; 0x04
    b2b8:	ad 81       	ldd	r26, Y+5	; 0x05
    b2ba:	be 81       	ldd	r27, Y+6	; 0x06
    b2bc:	bc 01       	movw	r22, r24
    b2be:	cd 01       	movw	r24, r26
    b2c0:	0e 94 cf 58 	call	0xb19e	; 0xb19e <_ZL21USART1_initializationm>
    b2c4:	8f 81       	ldd	r24, Y+7	; 0x07
    b2c6:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <g_serialbus_usart_number>
    b2ca:	10 92 27 40 	sts	0x4027, r1	; 0x804027 <_ZL14g_bus_disabled>
    b2ce:	00 00       	nop
    b2d0:	27 96       	adiw	r28, 0x07	; 7
    b2d2:	cd bf       	out	0x3d, r28	; 61
    b2d4:	de bf       	out	0x3e, r29	; 62
    b2d6:	df 91       	pop	r29
    b2d8:	cf 91       	pop	r28
    b2da:	08 95       	ret

0000b2dc <_Z19serialbus_send_textPc>:


bool serialbus_send_text(char* text)
{
    b2dc:	cf 93       	push	r28
    b2de:	df 93       	push	r29
    b2e0:	cd b7       	in	r28, 0x3d	; 61
    b2e2:	de b7       	in	r29, 0x3e	; 62
    b2e4:	27 97       	sbiw	r28, 0x07	; 7
    b2e6:	cd bf       	out	0x3d, r28	; 61
    b2e8:	de bf       	out	0x3e, r29	; 62
    b2ea:	8e 83       	std	Y+6, r24	; 0x06
    b2ec:	9f 83       	std	Y+7, r25	; 0x07
	bool err = true;
    b2ee:	81 e0       	ldi	r24, 0x01	; 1
    b2f0:	89 83       	std	Y+1, r24	; 0x01
	uint16_t tries = 200;
    b2f2:	88 ec       	ldi	r24, 0xC8	; 200
    b2f4:	90 e0       	ldi	r25, 0x00	; 0
    b2f6:	8a 83       	std	Y+2, r24	; 0x02
    b2f8:	9b 83       	std	Y+3, r25	; 0x03

	if(g_bus_disabled)
    b2fa:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL14g_bus_disabled>
    b2fe:	88 23       	and	r24, r24
    b300:	11 f0       	breq	.+4      	; 0xb306 <_Z19serialbus_send_textPc+0x2a>
	{
		return( err);
    b302:	89 81       	ldd	r24, Y+1	; 0x01
    b304:	42 c0       	rjmp	.+132    	; 0xb38a <_Z19serialbus_send_textPc+0xae>
	}

	if(text)
    b306:	8e 81       	ldd	r24, Y+6	; 0x06
    b308:	9f 81       	ldd	r25, Y+7	; 0x07
    b30a:	89 2b       	or	r24, r25
    b30c:	e9 f1       	breq	.+122    	; 0xb388 <_Z19serialbus_send_textPc+0xac>
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();
    b30e:	0e 94 a0 57 	call	0xaf40	; 0xaf40 <nextEmptySBTxBuffer>
    b312:	8c 83       	std	Y+4, r24	; 0x04
    b314:	9d 83       	std	Y+5, r25	; 0x05

		while(!buff && tries)
    b316:	8c 81       	ldd	r24, Y+4	; 0x04
    b318:	9d 81       	ldd	r25, Y+5	; 0x05
    b31a:	89 2b       	or	r24, r25
    b31c:	01 f5       	brne	.+64     	; 0xb35e <_Z19serialbus_send_textPc+0x82>
    b31e:	8a 81       	ldd	r24, Y+2	; 0x02
    b320:	9b 81       	ldd	r25, Y+3	; 0x03
    b322:	89 2b       	or	r24, r25
    b324:	e1 f0       	breq	.+56     	; 0xb35e <_Z19serialbus_send_textPc+0x82>
		{
			while(serialbusTxInProgress() && tries)
    b326:	0e 94 83 58 	call	0xb106	; 0xb106 <serialbusTxInProgress>
    b32a:	88 23       	and	r24, r24
    b32c:	31 f0       	breq	.+12     	; 0xb33a <_Z19serialbus_send_textPc+0x5e>
    b32e:	8a 81       	ldd	r24, Y+2	; 0x02
    b330:	9b 81       	ldd	r25, Y+3	; 0x03
    b332:	89 2b       	or	r24, r25
    b334:	11 f0       	breq	.+4      	; 0xb33a <_Z19serialbus_send_textPc+0x5e>
    b336:	81 e0       	ldi	r24, 0x01	; 1
    b338:	01 c0       	rjmp	.+2      	; 0xb33c <_Z19serialbus_send_textPc+0x60>
    b33a:	80 e0       	ldi	r24, 0x00	; 0
    b33c:	88 23       	and	r24, r24
    b33e:	51 f0       	breq	.+20     	; 0xb354 <_Z19serialbus_send_textPc+0x78>
			{
				if(tries)
    b340:	8a 81       	ldd	r24, Y+2	; 0x02
    b342:	9b 81       	ldd	r25, Y+3	; 0x03
    b344:	89 2b       	or	r24, r25
    b346:	79 f3       	breq	.-34     	; 0xb326 <_Z19serialbus_send_textPc+0x4a>
				{
					tries--;    /* wait until transmit finishes */
    b348:	8a 81       	ldd	r24, Y+2	; 0x02
    b34a:	9b 81       	ldd	r25, Y+3	; 0x03
    b34c:	01 97       	sbiw	r24, 0x01	; 1
    b34e:	8a 83       	std	Y+2, r24	; 0x02
    b350:	9b 83       	std	Y+3, r25	; 0x03
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
		{
			while(serialbusTxInProgress() && tries)
    b352:	e9 cf       	rjmp	.-46     	; 0xb326 <_Z19serialbus_send_textPc+0x4a>
				if(tries)
				{
					tries--;    /* wait until transmit finishes */
				}
			}
			buff = nextEmptySBTxBuffer();
    b354:	0e 94 a0 57 	call	0xaf40	; 0xaf40 <nextEmptySBTxBuffer>
    b358:	8c 83       	std	Y+4, r24	; 0x04
    b35a:	9d 83       	std	Y+5, r25	; 0x05

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    b35c:	dc cf       	rjmp	.-72     	; 0xb316 <_Z19serialbus_send_textPc+0x3a>
				}
			}
			buff = nextEmptySBTxBuffer();
		}

		if(buff)
    b35e:	8c 81       	ldd	r24, Y+4	; 0x04
    b360:	9d 81       	ldd	r25, Y+5	; 0x05
    b362:	89 2b       	or	r24, r25
    b364:	89 f0       	breq	.+34     	; 0xb388 <_Z19serialbus_send_textPc+0xac>
		{
			sprintf(*buff, text);
    b366:	8f 81       	ldd	r24, Y+7	; 0x07
    b368:	8f 93       	push	r24
    b36a:	8e 81       	ldd	r24, Y+6	; 0x06
    b36c:	8f 93       	push	r24
    b36e:	8d 81       	ldd	r24, Y+5	; 0x05
    b370:	8f 93       	push	r24
    b372:	8c 81       	ldd	r24, Y+4	; 0x04
    b374:	8f 93       	push	r24
    b376:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    b37a:	0f 90       	pop	r0
    b37c:	0f 90       	pop	r0
    b37e:	0f 90       	pop	r0
    b380:	0f 90       	pop	r0

			serialbus_start_tx();
    b382:	0e 94 8c 58 	call	0xb118	; 0xb118 <_Z18serialbus_start_txv>
			err = false;
    b386:	19 82       	std	Y+1, r1	; 0x01
		}
	}

	return(err);
    b388:	89 81       	ldd	r24, Y+1	; 0x01
}
    b38a:	27 96       	adiw	r28, 0x07	; 7
    b38c:	cd bf       	out	0x3d, r28	; 61
    b38e:	de bf       	out	0x3e, r29	; 62
    b390:	df 91       	pop	r29
    b392:	cf 91       	pop	r28
    b394:	08 95       	ret

0000b396 <sb_send_NewPrompt>:
/***********************************************************************************
 *  Support for creating and sending various Terminal Mode Serialbus messages is provided below.
 ************************************************************************************/

void sb_send_NewPrompt(void)
{
    b396:	cf 93       	push	r28
    b398:	df 93       	push	r29
    b39a:	cd b7       	in	r28, 0x3d	; 61
    b39c:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    b39e:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL14g_bus_disabled>
    b3a2:	88 23       	and	r24, r24
    b3a4:	39 f4       	brne	.+14     	; 0xb3b4 <sb_send_NewPrompt+0x1e>
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    b3a6:	83 ee       	ldi	r24, 0xE3	; 227
    b3a8:	95 e4       	ldi	r25, 0x45	; 69
    b3aa:	0e 94 6e 59 	call	0xb2dc	; 0xb2dc <_Z19serialbus_send_textPc>
    b3ae:	88 23       	and	r24, r24
    b3b0:	11 f0       	breq	.+4      	; 0xb3b6 <sb_send_NewPrompt+0x20>
    b3b2:	f9 cf       	rjmp	.-14     	; 0xb3a6 <sb_send_NewPrompt+0x10>

void sb_send_NewPrompt(void)
{
	if(g_bus_disabled)
	{
		return;
    b3b4:	00 00       	nop

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    b3b6:	df 91       	pop	r29
    b3b8:	cf 91       	pop	r28
    b3ba:	08 95       	ret

0000b3bc <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    b3bc:	cf 93       	push	r28
    b3be:	df 93       	push	r29
    b3c0:	cd b7       	in	r28, 0x3d	; 61
    b3c2:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    b3c4:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL14g_bus_disabled>
    b3c8:	88 23       	and	r24, r24
    b3ca:	29 f4       	brne	.+10     	; 0xb3d6 <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    b3cc:	81 ee       	ldi	r24, 0xE1	; 225
    b3ce:	95 e4       	ldi	r25, 0x45	; 69
    b3d0:	0e 94 6e 59 	call	0xb2dc	; 0xb2dc <_Z19serialbus_send_textPc>
    b3d4:	01 c0       	rjmp	.+2      	; 0xb3d8 <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    b3d6:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    b3d8:	df 91       	pop	r29
    b3da:	cf 91       	pop	r28
    b3dc:	08 95       	ret

0000b3de <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    b3de:	cf 93       	push	r28
    b3e0:	df 93       	push	r29
    b3e2:	1f 92       	push	r1
    b3e4:	cd b7       	in	r28, 0x3d	; 61
    b3e6:	de b7       	in	r29, 0x3e	; 62
    b3e8:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    b3ea:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL14g_bus_disabled>
    b3ee:	88 23       	and	r24, r24
    b3f0:	51 f4       	brne	.+20     	; 0xb406 <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    b3f2:	89 81       	ldd	r24, Y+1	; 0x01
    b3f4:	80 93 48 49 	sts	0x4948, r24	; 0x804948 <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    b3f8:	10 92 49 49 	sts	0x4949, r1	; 0x804949 <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    b3fc:	88 e4       	ldi	r24, 0x48	; 72
    b3fe:	99 e4       	ldi	r25, 0x49	; 73
    b400:	0e 94 6e 59 	call	0xb2dc	; 0xb2dc <_Z19serialbus_send_textPc>
    b404:	01 c0       	rjmp	.+2      	; 0xb408 <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    b406:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    b408:	0f 90       	pop	r0
    b40a:	df 91       	pop	r29
    b40c:	cf 91       	pop	r28
    b40e:	08 95       	ret

0000b410 <sb_send_string>:

bool sb_send_string(char* str)
{
    b410:	cf 93       	push	r28
    b412:	df 93       	push	r29
    b414:	cd b7       	in	r28, 0x3d	; 61
    b416:	de b7       	in	r29, 0x3e	; 62
    b418:	e8 97       	sbiw	r28, 0x38	; 56
    b41a:	cd bf       	out	0x3d, r28	; 61
    b41c:	de bf       	out	0x3e, r29	; 62
    b41e:	8f ab       	std	Y+55, r24	; 0x37
    b420:	98 af       	std	Y+56, r25	; 0x38
	char buf[SERIALBUS_MAX_TX_MSG_LENGTH+1];
	bool err = false;
    b422:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t length, lengthToSend, lengthSent=0;
    b424:	19 82       	std	Y+1, r1	; 0x01
    b426:	1a 82       	std	Y+2, r1	; 0x02
	bool done = false;
    b428:	1c 82       	std	Y+4, r1	; 0x04

	if(g_bus_disabled)
    b42a:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL14g_bus_disabled>
    b42e:	88 23       	and	r24, r24
    b430:	11 f0       	breq	.+4      	; 0xb436 <sb_send_string+0x26>
	{
		return( true);
    b432:	81 e0       	ldi	r24, 0x01	; 1
    b434:	70 c0       	rjmp	.+224    	; 0xb516 <sb_send_string+0x106>
	}

	if(str == NULL)
    b436:	8f a9       	ldd	r24, Y+55	; 0x37
    b438:	98 ad       	ldd	r25, Y+56	; 0x38
    b43a:	89 2b       	or	r24, r25
    b43c:	11 f4       	brne	.+4      	; 0xb442 <sb_send_string+0x32>
	{
		return( true);
    b43e:	81 e0       	ldi	r24, 0x01	; 1
    b440:	6a c0       	rjmp	.+212    	; 0xb516 <sb_send_string+0x106>
	}

	if(!*str)
    b442:	8f a9       	ldd	r24, Y+55	; 0x37
    b444:	98 ad       	ldd	r25, Y+56	; 0x38
    b446:	fc 01       	movw	r30, r24
    b448:	80 81       	ld	r24, Z
    b44a:	88 23       	and	r24, r24
    b44c:	11 f4       	brne	.+4      	; 0xb452 <sb_send_string+0x42>
	{
		return(true);
    b44e:	81 e0       	ldi	r24, 0x01	; 1
    b450:	62 c0       	rjmp	.+196    	; 0xb516 <sb_send_string+0x106>
	}

	length = strlen(str);
    b452:	8f a9       	ldd	r24, Y+55	; 0x37
    b454:	98 ad       	ldd	r25, Y+56	; 0x38
    b456:	0e 94 2f 75 	call	0xea5e	; 0xea5e <strlen>
    b45a:	8d 83       	std	Y+5, r24	; 0x05
    b45c:	9e 83       	std	Y+6, r25	; 0x06

	do
	{
		lengthToSend = MIN(length-lengthSent, (uint16_t)SERIALBUS_MAX_TX_MSG_LENGTH);
    b45e:	2d 81       	ldd	r18, Y+5	; 0x05
    b460:	3e 81       	ldd	r19, Y+6	; 0x06
    b462:	89 81       	ldd	r24, Y+1	; 0x01
    b464:	9a 81       	ldd	r25, Y+2	; 0x02
    b466:	a9 01       	movw	r20, r18
    b468:	48 1b       	sub	r20, r24
    b46a:	59 0b       	sbc	r21, r25
    b46c:	ca 01       	movw	r24, r20
    b46e:	8f 83       	std	Y+7, r24	; 0x07
    b470:	98 87       	std	Y+8, r25	; 0x08
    b472:	89 e2       	ldi	r24, 0x29	; 41
    b474:	90 e0       	ldi	r25, 0x00	; 0
    b476:	89 87       	std	Y+9, r24	; 0x09
    b478:	9a 87       	std	Y+10, r25	; 0x0a
    b47a:	2f 81       	ldd	r18, Y+7	; 0x07
    b47c:	38 85       	ldd	r19, Y+8	; 0x08
    b47e:	89 85       	ldd	r24, Y+9	; 0x09
    b480:	9a 85       	ldd	r25, Y+10	; 0x0a
    b482:	28 17       	cp	r18, r24
    b484:	39 07       	cpc	r19, r25
    b486:	18 f4       	brcc	.+6      	; 0xb48e <sb_send_string+0x7e>
    b488:	8f 81       	ldd	r24, Y+7	; 0x07
    b48a:	98 85       	ldd	r25, Y+8	; 0x08
    b48c:	02 c0       	rjmp	.+4      	; 0xb492 <sb_send_string+0x82>
    b48e:	89 85       	ldd	r24, Y+9	; 0x09
    b490:	9a 85       	ldd	r25, Y+10	; 0x0a
    b492:	8b 87       	std	Y+11, r24	; 0x0b
    b494:	9c 87       	std	Y+12, r25	; 0x0c
		strncpy(buf, &str[lengthSent], lengthToSend);
    b496:	2f a9       	ldd	r18, Y+55	; 0x37
    b498:	38 ad       	ldd	r19, Y+56	; 0x38
    b49a:	89 81       	ldd	r24, Y+1	; 0x01
    b49c:	9a 81       	ldd	r25, Y+2	; 0x02
    b49e:	28 0f       	add	r18, r24
    b4a0:	39 1f       	adc	r19, r25
    b4a2:	4b 85       	ldd	r20, Y+11	; 0x0b
    b4a4:	5c 85       	ldd	r21, Y+12	; 0x0c
    b4a6:	ce 01       	movw	r24, r28
    b4a8:	0d 96       	adiw	r24, 0x0d	; 13
    b4aa:	b9 01       	movw	r22, r18
    b4ac:	0e 94 38 75 	call	0xea70	; 0xea70 <strncpy>

		buf[lengthToSend] = '\0';
    b4b0:	9e 01       	movw	r18, r28
    b4b2:	23 5f       	subi	r18, 0xF3	; 243
    b4b4:	3f 4f       	sbci	r19, 0xFF	; 255
    b4b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    b4b8:	9c 85       	ldd	r25, Y+12	; 0x0c
    b4ba:	82 0f       	add	r24, r18
    b4bc:	93 1f       	adc	r25, r19
    b4be:	fc 01       	movw	r30, r24
    b4c0:	10 82       	st	Z, r1
		err = serialbus_send_text(buf);
    b4c2:	ce 01       	movw	r24, r28
    b4c4:	0d 96       	adiw	r24, 0x0d	; 13
    b4c6:	0e 94 6e 59 	call	0xb2dc	; 0xb2dc <_Z19serialbus_send_textPc>
    b4ca:	8b 83       	std	Y+3, r24	; 0x03
		
		if(!err)
    b4cc:	9b 81       	ldd	r25, Y+3	; 0x03
    b4ce:	81 e0       	ldi	r24, 0x01	; 1
    b4d0:	89 27       	eor	r24, r25
    b4d2:	88 23       	and	r24, r24
    b4d4:	29 f0       	breq	.+10     	; 0xb4e0 <sb_send_string+0xd0>
		{
			while(serialbusTxInProgress())
    b4d6:	0e 94 83 58 	call	0xb106	; 0xb106 <serialbusTxInProgress>
    b4da:	88 23       	and	r24, r24
    b4dc:	09 f0       	breq	.+2      	; 0xb4e0 <sb_send_string+0xd0>
    b4de:	fb cf       	rjmp	.-10     	; 0xb4d6 <sb_send_string+0xc6>
			{
				;
			}
		}

		lengthSent += lengthToSend;
    b4e0:	29 81       	ldd	r18, Y+1	; 0x01
    b4e2:	3a 81       	ldd	r19, Y+2	; 0x02
    b4e4:	8b 85       	ldd	r24, Y+11	; 0x0b
    b4e6:	9c 85       	ldd	r25, Y+12	; 0x0c
    b4e8:	82 0f       	add	r24, r18
    b4ea:	93 1f       	adc	r25, r19
    b4ec:	89 83       	std	Y+1, r24	; 0x01
    b4ee:	9a 83       	std	Y+2, r25	; 0x02
		done = err || (lengthSent >= length);
    b4f0:	8b 81       	ldd	r24, Y+3	; 0x03
    b4f2:	88 23       	and	r24, r24
    b4f4:	39 f4       	brne	.+14     	; 0xb504 <sb_send_string+0xf4>
    b4f6:	29 81       	ldd	r18, Y+1	; 0x01
    b4f8:	3a 81       	ldd	r19, Y+2	; 0x02
    b4fa:	8d 81       	ldd	r24, Y+5	; 0x05
    b4fc:	9e 81       	ldd	r25, Y+6	; 0x06
    b4fe:	28 17       	cp	r18, r24
    b500:	39 07       	cpc	r19, r25
    b502:	10 f0       	brcs	.+4      	; 0xb508 <sb_send_string+0xf8>
    b504:	81 e0       	ldi	r24, 0x01	; 1
    b506:	01 c0       	rjmp	.+2      	; 0xb50a <sb_send_string+0xfa>
    b508:	80 e0       	ldi	r24, 0x00	; 0
    b50a:	8c 83       	std	Y+4, r24	; 0x04
	}while(!done);
    b50c:	8c 81       	ldd	r24, Y+4	; 0x04
    b50e:	88 23       	and	r24, r24
    b510:	09 f4       	brne	.+2      	; 0xb514 <sb_send_string+0x104>
		return(true);
	}

	length = strlen(str);

	do
    b512:	a5 cf       	rjmp	.-182    	; 0xb45e <sb_send_string+0x4e>

		lengthSent += lengthToSend;
		done = err || (lengthSent >= length);
	}while(!done);

	return( err);
    b514:	8b 81       	ldd	r24, Y+3	; 0x03
}
    b516:	e8 96       	adiw	r28, 0x38	; 56
    b518:	cd bf       	out	0x3d, r28	; 61
    b51a:	de bf       	out	0x3e, r29	; 62
    b51c:	df 91       	pop	r29
    b51e:	cf 91       	pop	r28
    b520:	08 95       	ret

0000b522 <si5351_shutdown_comms>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    b522:	cf 93       	push	r28
    b524:	df 93       	push	r29
    b526:	cd b7       	in	r28, 0x3d	; 61
    b528:	de b7       	in	r29, 0x3e	; 62
    b52a:	0e 94 f9 46 	call	0x8df2	; 0x8df2 <I2C_0_Shutdown>
    b52e:	00 00       	nop
    b530:	df 91       	pop	r29
    b532:	cf 91       	pop	r28
    b534:	08 95       	ret

0000b536 <si5351_start_comms>:
    b536:	cf 93       	push	r28
    b538:	df 93       	push	r29
    b53a:	cd b7       	in	r28, 0x3d	; 61
    b53c:	de b7       	in	r29, 0x3e	; 62
    b53e:	0e 94 0a 47 	call	0x8e14	; 0x8e14 <I2C_0_Init>
    b542:	00 00       	nop
    b544:	df 91       	pop	r29
    b546:	cf 91       	pop	r28
    b548:	08 95       	ret

0000b54a <si5351_init>:
    b54a:	cf 93       	push	r28
    b54c:	df 93       	push	r29
    b54e:	cd b7       	in	r28, 0x3d	; 61
    b550:	de b7       	in	r29, 0x3e	; 62
    b552:	28 97       	sbiw	r28, 0x08	; 8
    b554:	cd bf       	out	0x3d, r28	; 61
    b556:	de bf       	out	0x3e, r29	; 62
    b558:	8c 83       	std	Y+4, r24	; 0x04
    b55a:	4d 83       	std	Y+5, r20	; 0x05
    b55c:	5e 83       	std	Y+6, r21	; 0x06
    b55e:	6f 83       	std	Y+7, r22	; 0x07
    b560:	78 87       	std	Y+8, r23	; 0x08
    b562:	0e 94 0a 47 	call	0x8e14	; 0x8e14 <I2C_0_Init>
    b566:	10 92 78 4a 	sts	0x4A78, r1	; 0x804a78 <_ZL8freqVCOB>
    b56a:	10 92 79 4a 	sts	0x4A79, r1	; 0x804a79 <_ZL8freqVCOB+0x1>
    b56e:	10 92 7a 4a 	sts	0x4A7A, r1	; 0x804a7a <_ZL8freqVCOB+0x2>
    b572:	10 92 7b 4a 	sts	0x4A7B, r1	; 0x804a7b <_ZL8freqVCOB+0x3>
    b576:	80 e4       	ldi	r24, 0x40	; 64
    b578:	98 e7       	ldi	r25, 0x78	; 120
    b57a:	ad e7       	ldi	r26, 0x7D	; 125
    b57c:	b1 e0       	ldi	r27, 0x01	; 1
    b57e:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <_ZL9xtal_freq>
    b582:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <_ZL9xtal_freq+0x1>
    b586:	a0 93 2a 40 	sts	0x402A, r26	; 0x80402a <_ZL9xtal_freq+0x2>
    b58a:	b0 93 2b 40 	sts	0x402B, r27	; 0x80402b <_ZL9xtal_freq+0x3>
    b58e:	10 92 7c 4a 	sts	0x4A7C, r1	; 0x804a7c <_ZL17enabledClocksMask>
    b592:	8f ef       	ldi	r24, 0xFF	; 255
    b594:	8a 83       	std	Y+2, r24	; 0x02
    b596:	ce 01       	movw	r24, r28
    b598:	02 96       	adiw	r24, 0x02	; 2
    b59a:	41 e0       	ldi	r20, 0x01	; 1
    b59c:	bc 01       	movw	r22, r24
    b59e:	83 e0       	ldi	r24, 0x03	; 3
    b5a0:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b5a4:	80 93 8a 4a 	sts	0x4A8A, r24	; 0x804a8a <_ZZ11si5351_initE3err>
    b5a8:	80 91 8a 4a 	lds	r24, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b5ac:	88 23       	and	r24, r24
    b5ae:	19 f0       	breq	.+6      	; 0xb5b6 <si5351_init+0x6c>
    b5b0:	80 91 8a 4a 	lds	r24, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b5b4:	92 c0       	rjmp	.+292    	; 0xb6da <si5351_init+0x190>
    b5b6:	8c ec       	ldi	r24, 0xCC	; 204
    b5b8:	8a 83       	std	Y+2, r24	; 0x02
    b5ba:	ce 01       	movw	r24, r28
    b5bc:	02 96       	adiw	r24, 0x02	; 2
    b5be:	41 e0       	ldi	r20, 0x01	; 1
    b5c0:	bc 01       	movw	r22, r24
    b5c2:	80 e1       	ldi	r24, 0x10	; 16
    b5c4:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b5c8:	98 2f       	mov	r25, r24
    b5ca:	80 91 8a 4a 	lds	r24, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b5ce:	89 2b       	or	r24, r25
    b5d0:	80 93 8a 4a 	sts	0x4A8A, r24	; 0x804a8a <_ZZ11si5351_initE3err>
    b5d4:	ce 01       	movw	r24, r28
    b5d6:	02 96       	adiw	r24, 0x02	; 2
    b5d8:	41 e0       	ldi	r20, 0x01	; 1
    b5da:	bc 01       	movw	r22, r24
    b5dc:	81 e1       	ldi	r24, 0x11	; 17
    b5de:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b5e2:	98 2f       	mov	r25, r24
    b5e4:	80 91 8a 4a 	lds	r24, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b5e8:	89 2b       	or	r24, r25
    b5ea:	80 93 8a 4a 	sts	0x4A8A, r24	; 0x804a8a <_ZZ11si5351_initE3err>
    b5ee:	ce 01       	movw	r24, r28
    b5f0:	02 96       	adiw	r24, 0x02	; 2
    b5f2:	41 e0       	ldi	r20, 0x01	; 1
    b5f4:	bc 01       	movw	r22, r24
    b5f6:	82 e1       	ldi	r24, 0x12	; 18
    b5f8:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b5fc:	98 2f       	mov	r25, r24
    b5fe:	80 91 8a 4a 	lds	r24, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b602:	89 2b       	or	r24, r25
    b604:	80 93 8a 4a 	sts	0x4A8A, r24	; 0x804a8a <_ZZ11si5351_initE3err>
    b608:	82 e1       	ldi	r24, 0x12	; 18
    b60a:	89 83       	std	Y+1, r24	; 0x01
    b60c:	99 81       	ldd	r25, Y+1	; 0x01
    b60e:	8c 81       	ldd	r24, Y+4	; 0x04
    b610:	89 2b       	or	r24, r25
    b612:	89 83       	std	Y+1, r24	; 0x01
    b614:	89 81       	ldd	r24, Y+1	; 0x01
    b616:	8a 83       	std	Y+2, r24	; 0x02
    b618:	ce 01       	movw	r24, r28
    b61a:	02 96       	adiw	r24, 0x02	; 2
    b61c:	41 e0       	ldi	r20, 0x01	; 1
    b61e:	bc 01       	movw	r22, r24
    b620:	87 eb       	ldi	r24, 0xB7	; 183
    b622:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b626:	98 2f       	mov	r25, r24
    b628:	80 91 8a 4a 	lds	r24, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b62c:	89 2b       	or	r24, r25
    b62e:	80 93 8a 4a 	sts	0x4A8A, r24	; 0x804a8a <_ZZ11si5351_initE3err>
    b632:	8d 81       	ldd	r24, Y+5	; 0x05
    b634:	9e 81       	ldd	r25, Y+6	; 0x06
    b636:	af 81       	ldd	r26, Y+7	; 0x07
    b638:	b8 85       	ldd	r27, Y+8	; 0x08
    b63a:	89 2b       	or	r24, r25
    b63c:	8a 2b       	or	r24, r26
    b63e:	8b 2b       	or	r24, r27
    b640:	41 f4       	brne	.+16     	; 0xb652 <si5351_init+0x108>
    b642:	80 e4       	ldi	r24, 0x40	; 64
    b644:	98 e7       	ldi	r25, 0x78	; 120
    b646:	ad e7       	ldi	r26, 0x7D	; 125
    b648:	b1 e0       	ldi	r27, 0x01	; 1
    b64a:	8d 83       	std	Y+5, r24	; 0x05
    b64c:	9e 83       	std	Y+6, r25	; 0x06
    b64e:	af 83       	std	Y+7, r26	; 0x07
    b650:	b8 87       	std	Y+8, r27	; 0x08
    b652:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <_ZL9xtal_freq>
    b656:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <_ZL9xtal_freq+0x1>
    b65a:	a0 91 2a 40 	lds	r26, 0x402A	; 0x80402a <_ZL9xtal_freq+0x2>
    b65e:	b0 91 2b 40 	lds	r27, 0x402B	; 0x80402b <_ZL9xtal_freq+0x3>
    b662:	2d 81       	ldd	r18, Y+5	; 0x05
    b664:	3e 81       	ldd	r19, Y+6	; 0x06
    b666:	4f 81       	ldd	r20, Y+7	; 0x07
    b668:	58 85       	ldd	r21, Y+8	; 0x08
    b66a:	28 17       	cp	r18, r24
    b66c:	39 07       	cpc	r19, r25
    b66e:	4a 07       	cpc	r20, r26
    b670:	5b 07       	cpc	r21, r27
    b672:	59 f1       	breq	.+86     	; 0xb6ca <si5351_init+0x180>
    b674:	ce 01       	movw	r24, r28
    b676:	02 96       	adiw	r24, 0x02	; 2
    b678:	41 e0       	ldi	r20, 0x01	; 1
    b67a:	bc 01       	movw	r22, r24
    b67c:	8f e0       	ldi	r24, 0x0F	; 15
    b67e:	0e 94 db 62 	call	0xc5b6	; 0xc5b6 <_Z16si5351_read_bulkhPhh>
    b682:	88 23       	and	r24, r24
    b684:	11 f0       	breq	.+4      	; 0xb68a <si5351_init+0x140>
    b686:	81 e0       	ldi	r24, 0x01	; 1
    b688:	28 c0       	rjmp	.+80     	; 0xb6da <si5351_init+0x190>
    b68a:	8a 81       	ldd	r24, Y+2	; 0x02
    b68c:	89 83       	std	Y+1, r24	; 0x01
    b68e:	89 81       	ldd	r24, Y+1	; 0x01
    b690:	8f 73       	andi	r24, 0x3F	; 63
    b692:	89 83       	std	Y+1, r24	; 0x01
    b694:	8d 81       	ldd	r24, Y+5	; 0x05
    b696:	9e 81       	ldd	r25, Y+6	; 0x06
    b698:	af 81       	ldd	r26, Y+7	; 0x07
    b69a:	b8 85       	ldd	r27, Y+8	; 0x08
    b69c:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <_ZL9xtal_freq>
    b6a0:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <_ZL9xtal_freq+0x1>
    b6a4:	a0 93 2a 40 	sts	0x402A, r26	; 0x80402a <_ZL9xtal_freq+0x2>
    b6a8:	b0 93 2b 40 	sts	0x402B, r27	; 0x80402b <_ZL9xtal_freq+0x3>
    b6ac:	89 81       	ldd	r24, Y+1	; 0x01
    b6ae:	8a 83       	std	Y+2, r24	; 0x02
    b6b0:	ce 01       	movw	r24, r28
    b6b2:	02 96       	adiw	r24, 0x02	; 2
    b6b4:	41 e0       	ldi	r20, 0x01	; 1
    b6b6:	bc 01       	movw	r22, r24
    b6b8:	8f e0       	ldi	r24, 0x0F	; 15
    b6ba:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b6be:	98 2f       	mov	r25, r24
    b6c0:	80 91 8a 4a 	lds	r24, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b6c4:	89 2b       	or	r24, r25
    b6c6:	80 93 8a 4a 	sts	0x4A8A, r24	; 0x804a8a <_ZZ11si5351_initE3err>
    b6ca:	90 91 8a 4a 	lds	r25, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b6ce:	81 e0       	ldi	r24, 0x01	; 1
    b6d0:	89 27       	eor	r24, r25
    b6d2:	80 93 89 4a 	sts	0x4A89, r24	; 0x804a89 <g_si5351_initialized>
    b6d6:	80 91 8a 4a 	lds	r24, 0x4A8A	; 0x804a8a <_ZZ11si5351_initE3err>
    b6da:	28 96       	adiw	r28, 0x08	; 8
    b6dc:	cd bf       	out	0x3d, r28	; 61
    b6de:	de bf       	out	0x3e, r29	; 62
    b6e0:	df 91       	pop	r29
    b6e2:	cf 91       	pop	r28
    b6e4:	08 95       	ret

0000b6e6 <si5351_set_freq>:
    b6e6:	8f 92       	push	r8
    b6e8:	af 92       	push	r10
    b6ea:	cf 92       	push	r12
    b6ec:	df 92       	push	r13
    b6ee:	ef 92       	push	r14
    b6f0:	ff 92       	push	r15
    b6f2:	0f 93       	push	r16
    b6f4:	1f 93       	push	r17
    b6f6:	cf 93       	push	r28
    b6f8:	df 93       	push	r29
    b6fa:	cd b7       	in	r28, 0x3d	; 61
    b6fc:	de b7       	in	r29, 0x3e	; 62
    b6fe:	6d 97       	sbiw	r28, 0x1d	; 29
    b700:	cd bf       	out	0x3d, r28	; 61
    b702:	de bf       	out	0x3e, r29	; 62
    b704:	68 8f       	std	Y+24, r22	; 0x18
    b706:	79 8f       	std	Y+25, r23	; 0x19
    b708:	8a 8f       	std	Y+26, r24	; 0x1a
    b70a:	9b 8f       	std	Y+27, r25	; 0x1b
    b70c:	4c 8f       	std	Y+28, r20	; 0x1c
    b70e:	2d 8f       	std	Y+29, r18	; 0x1d
    b710:	19 82       	std	Y+1, r1	; 0x01
    b712:	1a 82       	std	Y+2, r1	; 0x02
    b714:	1b 82       	std	Y+3, r1	; 0x03
    b716:	1c 82       	std	Y+4, r1	; 0x04
    b718:	1f 82       	std	Y+7, r1	; 0x07
    b71a:	1c 8a       	std	Y+20, r1	; 0x14
    b71c:	1d 8a       	std	Y+21, r1	; 0x15
    b71e:	90 91 89 4a 	lds	r25, 0x4A89	; 0x804a89 <g_si5351_initialized>
    b722:	81 e0       	ldi	r24, 0x01	; 1
    b724:	89 27       	eor	r24, r25
    b726:	88 23       	and	r24, r24
    b728:	11 f0       	breq	.+4      	; 0xb72e <si5351_set_freq+0x48>
    b72a:	81 e0       	ldi	r24, 0x01	; 1
    b72c:	6f c1       	rjmp	.+734    	; 0xba0c <si5351_set_freq+0x326>
    b72e:	88 8d       	ldd	r24, Y+24	; 0x18
    b730:	99 8d       	ldd	r25, Y+25	; 0x19
    b732:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b734:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b736:	80 34       	cpi	r24, 0x40	; 64
    b738:	92 44       	sbci	r25, 0x42	; 66
    b73a:	af 40       	sbci	r26, 0x0F	; 15
    b73c:	b1 05       	cpc	r27, r1
    b73e:	08 f1       	brcs	.+66     	; 0xb782 <si5351_set_freq+0x9c>
    b740:	88 8d       	ldd	r24, Y+24	; 0x18
    b742:	99 8d       	ldd	r25, Y+25	; 0x19
    b744:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b746:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b748:	24 e6       	ldi	r18, 0x64	; 100
    b74a:	30 e0       	ldi	r19, 0x00	; 0
    b74c:	40 e0       	ldi	r20, 0x00	; 0
    b74e:	50 e0       	ldi	r21, 0x00	; 0
    b750:	bc 01       	movw	r22, r24
    b752:	cd 01       	movw	r24, r26
    b754:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    b758:	da 01       	movw	r26, r20
    b75a:	c9 01       	movw	r24, r18
    b75c:	88 8f       	std	Y+24, r24	; 0x18
    b75e:	99 8f       	std	Y+25, r25	; 0x19
    b760:	aa 8f       	std	Y+26, r26	; 0x1a
    b762:	bb 8f       	std	Y+27, r27	; 0x1b
    b764:	28 8d       	ldd	r18, Y+24	; 0x18
    b766:	39 8d       	ldd	r19, Y+25	; 0x19
    b768:	4a 8d       	ldd	r20, Y+26	; 0x1a
    b76a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    b76c:	84 e6       	ldi	r24, 0x64	; 100
    b76e:	90 e0       	ldi	r25, 0x00	; 0
    b770:	dc 01       	movw	r26, r24
    b772:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <__muluhisi3>
    b776:	dc 01       	movw	r26, r24
    b778:	cb 01       	movw	r24, r22
    b77a:	88 8f       	std	Y+24, r24	; 0x18
    b77c:	99 8f       	std	Y+25, r25	; 0x19
    b77e:	aa 8f       	std	Y+26, r26	; 0x1a
    b780:	bb 8f       	std	Y+27, r27	; 0x1b
    b782:	8c 8d       	ldd	r24, Y+28	; 0x1c
    b784:	88 2f       	mov	r24, r24
    b786:	90 e0       	ldi	r25, 0x00	; 0
    b788:	81 30       	cpi	r24, 0x01	; 1
    b78a:	91 05       	cpc	r25, r1
    b78c:	e9 f0       	breq	.+58     	; 0xb7c8 <si5351_set_freq+0xe2>
    b78e:	82 30       	cpi	r24, 0x02	; 2
    b790:	91 05       	cpc	r25, r1
    b792:	09 f4       	brne	.+2      	; 0xb796 <si5351_set_freq+0xb0>
    b794:	3f c0       	rjmp	.+126    	; 0xb814 <si5351_set_freq+0x12e>
    b796:	89 2b       	or	r24, r25
    b798:	09 f0       	breq	.+2      	; 0xb79c <si5351_set_freq+0xb6>
    b79a:	62 c0       	rjmp	.+196    	; 0xb860 <si5351_set_freq+0x17a>
    b79c:	80 91 7c 4a 	lds	r24, 0x4A7C	; 0x804a7c <_ZL17enabledClocksMask>
    b7a0:	81 60       	ori	r24, 0x01	; 1
    b7a2:	80 93 7c 4a 	sts	0x4A7C, r24	; 0x804a7c <_ZL17enabledClocksMask>
    b7a6:	80 e1       	ldi	r24, 0x10	; 16
    b7a8:	8e 83       	std	Y+6, r24	; 0x06
    b7aa:	81 e0       	ldi	r24, 0x01	; 1
    b7ac:	8d 83       	std	Y+5, r24	; 0x05
    b7ae:	88 8d       	ldd	r24, Y+24	; 0x18
    b7b0:	99 8d       	ldd	r25, Y+25	; 0x19
    b7b2:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b7b4:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b7b6:	80 93 7d 4a 	sts	0x4A7D, r24	; 0x804a7d <_ZL9clock_out>
    b7ba:	90 93 7e 4a 	sts	0x4A7E, r25	; 0x804a7e <_ZL9clock_out+0x1>
    b7be:	a0 93 7f 4a 	sts	0x4A7F, r26	; 0x804a7f <_ZL9clock_out+0x2>
    b7c2:	b0 93 80 4a 	sts	0x4A80, r27	; 0x804a80 <_ZL9clock_out+0x3>
    b7c6:	4e c0       	rjmp	.+156    	; 0xb864 <si5351_set_freq+0x17e>
    b7c8:	80 91 7c 4a 	lds	r24, 0x4A7C	; 0x804a7c <_ZL17enabledClocksMask>
    b7cc:	82 60       	ori	r24, 0x02	; 2
    b7ce:	80 93 7c 4a 	sts	0x4A7C, r24	; 0x804a7c <_ZL17enabledClocksMask>
    b7d2:	81 e1       	ldi	r24, 0x11	; 17
    b7d4:	8e 83       	std	Y+6, r24	; 0x06
    b7d6:	80 91 7c 4a 	lds	r24, 0x4A7C	; 0x804a7c <_ZL17enabledClocksMask>
    b7da:	80 95       	com	r24
    b7dc:	8a 6f       	ori	r24, 0xFA	; 250
    b7de:	8e 8b       	std	Y+22, r24	; 0x16
    b7e0:	ce 01       	movw	r24, r28
    b7e2:	46 96       	adiw	r24, 0x16	; 22
    b7e4:	41 e0       	ldi	r20, 0x01	; 1
    b7e6:	bc 01       	movw	r22, r24
    b7e8:	83 e0       	ldi	r24, 0x03	; 3
    b7ea:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b7ee:	88 23       	and	r24, r24
    b7f0:	11 f0       	breq	.+4      	; 0xb7f6 <si5351_set_freq+0x110>
    b7f2:	81 e0       	ldi	r24, 0x01	; 1
    b7f4:	0b c1       	rjmp	.+534    	; 0xba0c <si5351_set_freq+0x326>
    b7f6:	82 e0       	ldi	r24, 0x02	; 2
    b7f8:	8d 83       	std	Y+5, r24	; 0x05
    b7fa:	88 8d       	ldd	r24, Y+24	; 0x18
    b7fc:	99 8d       	ldd	r25, Y+25	; 0x19
    b7fe:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b800:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b802:	80 93 81 4a 	sts	0x4A81, r24	; 0x804a81 <_ZL9clock_out+0x4>
    b806:	90 93 82 4a 	sts	0x4A82, r25	; 0x804a82 <_ZL9clock_out+0x5>
    b80a:	a0 93 83 4a 	sts	0x4A83, r26	; 0x804a83 <_ZL9clock_out+0x6>
    b80e:	b0 93 84 4a 	sts	0x4A84, r27	; 0x804a84 <_ZL9clock_out+0x7>
    b812:	28 c0       	rjmp	.+80     	; 0xb864 <si5351_set_freq+0x17e>
    b814:	80 91 7c 4a 	lds	r24, 0x4A7C	; 0x804a7c <_ZL17enabledClocksMask>
    b818:	84 60       	ori	r24, 0x04	; 4
    b81a:	80 93 7c 4a 	sts	0x4A7C, r24	; 0x804a7c <_ZL17enabledClocksMask>
    b81e:	82 e1       	ldi	r24, 0x12	; 18
    b820:	8e 83       	std	Y+6, r24	; 0x06
    b822:	80 91 7c 4a 	lds	r24, 0x4A7C	; 0x804a7c <_ZL17enabledClocksMask>
    b826:	80 95       	com	r24
    b828:	8c 6f       	ori	r24, 0xFC	; 252
    b82a:	8e 8b       	std	Y+22, r24	; 0x16
    b82c:	ce 01       	movw	r24, r28
    b82e:	46 96       	adiw	r24, 0x16	; 22
    b830:	41 e0       	ldi	r20, 0x01	; 1
    b832:	bc 01       	movw	r22, r24
    b834:	83 e0       	ldi	r24, 0x03	; 3
    b836:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b83a:	88 23       	and	r24, r24
    b83c:	11 f0       	breq	.+4      	; 0xb842 <si5351_set_freq+0x15c>
    b83e:	81 e0       	ldi	r24, 0x01	; 1
    b840:	e5 c0       	rjmp	.+458    	; 0xba0c <si5351_set_freq+0x326>
    b842:	82 e0       	ldi	r24, 0x02	; 2
    b844:	8d 83       	std	Y+5, r24	; 0x05
    b846:	88 8d       	ldd	r24, Y+24	; 0x18
    b848:	99 8d       	ldd	r25, Y+25	; 0x19
    b84a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b84c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b84e:	80 93 85 4a 	sts	0x4A85, r24	; 0x804a85 <_ZL9clock_out+0x8>
    b852:	90 93 86 4a 	sts	0x4A86, r25	; 0x804a86 <_ZL9clock_out+0x9>
    b856:	a0 93 87 4a 	sts	0x4A87, r26	; 0x804a87 <_ZL9clock_out+0xa>
    b85a:	b0 93 88 4a 	sts	0x4A88, r27	; 0x804a88 <_ZL9clock_out+0xb>
    b85e:	02 c0       	rjmp	.+4      	; 0xb864 <si5351_set_freq+0x17e>
    b860:	81 e0       	ldi	r24, 0x01	; 1
    b862:	d4 c0       	rjmp	.+424    	; 0xba0c <si5351_set_freq+0x326>
    b864:	8d 81       	ldd	r24, Y+5	; 0x05
    b866:	81 30       	cpi	r24, 0x01	; 1
    b868:	61 f0       	breq	.+24     	; 0xb882 <si5351_set_freq+0x19c>
    b86a:	80 91 78 4a 	lds	r24, 0x4A78	; 0x804a78 <_ZL8freqVCOB>
    b86e:	90 91 79 4a 	lds	r25, 0x4A79	; 0x804a79 <_ZL8freqVCOB+0x1>
    b872:	a0 91 7a 4a 	lds	r26, 0x4A7A	; 0x804a7a <_ZL8freqVCOB+0x2>
    b876:	b0 91 7b 4a 	lds	r27, 0x4A7B	; 0x804a7b <_ZL8freqVCOB+0x3>
    b87a:	89 2b       	or	r24, r25
    b87c:	8a 2b       	or	r24, r26
    b87e:	8b 2b       	or	r24, r27
    b880:	c9 f4       	brne	.+50     	; 0xb8b4 <si5351_set_freq+0x1ce>
    b882:	be 01       	movw	r22, r28
    b884:	6b 5e       	subi	r22, 0xEB	; 235
    b886:	7f 4f       	sbci	r23, 0xFF	; 255
    b888:	9e 01       	movw	r18, r28
    b88a:	2c 5e       	subi	r18, 0xEC	; 236
    b88c:	3f 4f       	sbci	r19, 0xFF	; 255
    b88e:	ae 01       	movw	r20, r28
    b890:	48 5f       	subi	r20, 0xF8	; 248
    b892:	5f 4f       	sbci	r21, 0xFF	; 255
    b894:	88 8d       	ldd	r24, Y+24	; 0x18
    b896:	99 8d       	ldd	r25, Y+25	; 0x19
    b898:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b89a:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b89c:	8b 01       	movw	r16, r22
    b89e:	bc 01       	movw	r22, r24
    b8a0:	cd 01       	movw	r24, r26
    b8a2:	0e 94 1e 60 	call	0xc03c	; 0xc03c <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    b8a6:	dc 01       	movw	r26, r24
    b8a8:	cb 01       	movw	r24, r22
    b8aa:	89 83       	std	Y+1, r24	; 0x01
    b8ac:	9a 83       	std	Y+2, r25	; 0x02
    b8ae:	ab 83       	std	Y+3, r26	; 0x03
    b8b0:	bc 83       	std	Y+4, r27	; 0x04
    b8b2:	18 c0       	rjmp	.+48     	; 0xb8e4 <si5351_set_freq+0x1fe>
    b8b4:	be 01       	movw	r22, r28
    b8b6:	6b 5e       	subi	r22, 0xEB	; 235
    b8b8:	7f 4f       	sbci	r23, 0xFF	; 255
    b8ba:	9e 01       	movw	r18, r28
    b8bc:	2c 5e       	subi	r18, 0xEC	; 236
    b8be:	3f 4f       	sbci	r19, 0xFF	; 255
    b8c0:	ae 01       	movw	r20, r28
    b8c2:	48 5f       	subi	r20, 0xF8	; 248
    b8c4:	5f 4f       	sbci	r21, 0xFF	; 255
    b8c6:	88 8d       	ldd	r24, Y+24	; 0x18
    b8c8:	99 8d       	ldd	r25, Y+25	; 0x19
    b8ca:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b8cc:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b8ce:	8b 01       	movw	r16, r22
    b8d0:	bc 01       	movw	r22, r24
    b8d2:	cd 01       	movw	r24, r26
    b8d4:	0e 94 28 61 	call	0xc250	; 0xc250 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    b8d8:	dc 01       	movw	r26, r24
    b8da:	cb 01       	movw	r24, r22
    b8dc:	88 8f       	std	Y+24, r24	; 0x18
    b8de:	99 8f       	std	Y+25, r25	; 0x19
    b8e0:	aa 8f       	std	Y+26, r26	; 0x1a
    b8e2:	bb 8f       	std	Y+27, r27	; 0x1b
    b8e4:	6d 81       	ldd	r22, Y+5	; 0x05
    b8e6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    b8e8:	0e 94 0d 63 	call	0xc61a	; 0xc61a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    b8ec:	88 23       	and	r24, r24
    b8ee:	11 f0       	breq	.+4      	; 0xb8f4 <si5351_set_freq+0x20e>
    b8f0:	81 e0       	ldi	r24, 0x01	; 1
    b8f2:	8c c0       	rjmp	.+280    	; 0xba0c <si5351_set_freq+0x326>
    b8f4:	8d 89       	ldd	r24, Y+21	; 0x15
    b8f6:	9c 89       	ldd	r25, Y+20	; 0x14
    b8f8:	8f 93       	push	r24
    b8fa:	8f 80       	ldd	r8, Y+7	; 0x07
    b8fc:	a9 2e       	mov	r10, r25
    b8fe:	c8 84       	ldd	r12, Y+8	; 0x08
    b900:	d9 84       	ldd	r13, Y+9	; 0x09
    b902:	ea 84       	ldd	r14, Y+10	; 0x0a
    b904:	fb 84       	ldd	r15, Y+11	; 0x0b
    b906:	0c 85       	ldd	r16, Y+12	; 0x0c
    b908:	1d 85       	ldd	r17, Y+13	; 0x0d
    b90a:	2e 85       	ldd	r18, Y+14	; 0x0e
    b90c:	3f 85       	ldd	r19, Y+15	; 0x0f
    b90e:	48 89       	ldd	r20, Y+16	; 0x10
    b910:	59 89       	ldd	r21, Y+17	; 0x11
    b912:	6a 89       	ldd	r22, Y+18	; 0x12
    b914:	7b 89       	ldd	r23, Y+19	; 0x13
    b916:	8c 8d       	ldd	r24, Y+28	; 0x1c
    b918:	0e 94 4a 63 	call	0xc694	; 0xc694 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    b91c:	0f 90       	pop	r0
    b91e:	88 23       	and	r24, r24
    b920:	11 f0       	breq	.+4      	; 0xb926 <si5351_set_freq+0x240>
    b922:	81 e0       	ldi	r24, 0x01	; 1
    b924:	73 c0       	rjmp	.+230    	; 0xba0c <si5351_set_freq+0x326>
    b926:	89 81       	ldd	r24, Y+1	; 0x01
    b928:	9a 81       	ldd	r25, Y+2	; 0x02
    b92a:	ab 81       	ldd	r26, Y+3	; 0x03
    b92c:	bc 81       	ldd	r27, Y+4	; 0x04
    b92e:	89 2b       	or	r24, r25
    b930:	8a 2b       	or	r24, r26
    b932:	8b 2b       	or	r24, r27
    b934:	49 f0       	breq	.+18     	; 0xb948 <si5351_set_freq+0x262>
    b936:	89 81       	ldd	r24, Y+1	; 0x01
    b938:	9a 81       	ldd	r25, Y+2	; 0x02
    b93a:	ab 81       	ldd	r26, Y+3	; 0x03
    b93c:	bc 81       	ldd	r27, Y+4	; 0x04
    b93e:	4d 81       	ldd	r20, Y+5	; 0x05
    b940:	bc 01       	movw	r22, r24
    b942:	cd 01       	movw	r24, r26
    b944:	0e 94 bc 5d 	call	0xbb78	; 0xbb78 <_Z7set_pllm10si5351_pll>
    b948:	8d 8d       	ldd	r24, Y+29	; 0x1d
    b94a:	88 23       	and	r24, r24
    b94c:	71 f0       	breq	.+28     	; 0xb96a <si5351_set_freq+0x284>
    b94e:	80 91 7c 4a 	lds	r24, 0x4A7C	; 0x804a7c <_ZL17enabledClocksMask>
    b952:	8e 8b       	std	Y+22, r24	; 0x16
    b954:	ce 01       	movw	r24, r28
    b956:	46 96       	adiw	r24, 0x16	; 22
    b958:	41 e0       	ldi	r20, 0x01	; 1
    b95a:	bc 01       	movw	r22, r24
    b95c:	83 e0       	ldi	r24, 0x03	; 3
    b95e:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b962:	88 23       	and	r24, r24
    b964:	89 f0       	breq	.+34     	; 0xb988 <si5351_set_freq+0x2a2>
    b966:	81 e0       	ldi	r24, 0x01	; 1
    b968:	51 c0       	rjmp	.+162    	; 0xba0c <si5351_set_freq+0x326>
    b96a:	80 91 7c 4a 	lds	r24, 0x4A7C	; 0x804a7c <_ZL17enabledClocksMask>
    b96e:	80 95       	com	r24
    b970:	8e 8b       	std	Y+22, r24	; 0x16
    b972:	ce 01       	movw	r24, r28
    b974:	46 96       	adiw	r24, 0x16	; 22
    b976:	41 e0       	ldi	r20, 0x01	; 1
    b978:	bc 01       	movw	r22, r24
    b97a:	83 e0       	ldi	r24, 0x03	; 3
    b97c:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b980:	88 23       	and	r24, r24
    b982:	11 f0       	breq	.+4      	; 0xb988 <si5351_set_freq+0x2a2>
    b984:	81 e0       	ldi	r24, 0x01	; 1
    b986:	42 c0       	rjmp	.+132    	; 0xba0c <si5351_set_freq+0x326>
    b988:	8d 81       	ldd	r24, Y+5	; 0x05
    b98a:	81 30       	cpi	r24, 0x01	; 1
    b98c:	69 f4       	brne	.+26     	; 0xb9a8 <si5351_set_freq+0x2c2>
    b98e:	8c e4       	ldi	r24, 0x4C	; 76
    b990:	8e 8b       	std	Y+22, r24	; 0x16
    b992:	ce 01       	movw	r24, r28
    b994:	46 96       	adiw	r24, 0x16	; 22
    b996:	41 e0       	ldi	r20, 0x01	; 1
    b998:	bc 01       	movw	r22, r24
    b99a:	8e 81       	ldd	r24, Y+6	; 0x06
    b99c:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b9a0:	88 23       	and	r24, r24
    b9a2:	99 f1       	breq	.+102    	; 0xba0a <si5351_set_freq+0x324>
    b9a4:	81 e0       	ldi	r24, 0x01	; 1
    b9a6:	32 c0       	rjmp	.+100    	; 0xba0c <si5351_set_freq+0x326>
    b9a8:	8c 89       	ldd	r24, Y+20	; 0x14
    b9aa:	88 23       	and	r24, r24
    b9ac:	69 f0       	breq	.+26     	; 0xb9c8 <si5351_set_freq+0x2e2>
    b9ae:	8c e6       	ldi	r24, 0x6C	; 108
    b9b0:	8e 8b       	std	Y+22, r24	; 0x16
    b9b2:	ce 01       	movw	r24, r28
    b9b4:	46 96       	adiw	r24, 0x16	; 22
    b9b6:	41 e0       	ldi	r20, 0x01	; 1
    b9b8:	bc 01       	movw	r22, r24
    b9ba:	8e 81       	ldd	r24, Y+6	; 0x06
    b9bc:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b9c0:	88 23       	and	r24, r24
    b9c2:	79 f0       	breq	.+30     	; 0xb9e2 <si5351_set_freq+0x2fc>
    b9c4:	81 e0       	ldi	r24, 0x01	; 1
    b9c6:	22 c0       	rjmp	.+68     	; 0xba0c <si5351_set_freq+0x326>
    b9c8:	8c e2       	ldi	r24, 0x2C	; 44
    b9ca:	8e 8b       	std	Y+22, r24	; 0x16
    b9cc:	ce 01       	movw	r24, r28
    b9ce:	46 96       	adiw	r24, 0x16	; 22
    b9d0:	41 e0       	ldi	r20, 0x01	; 1
    b9d2:	bc 01       	movw	r22, r24
    b9d4:	8e 81       	ldd	r24, Y+6	; 0x06
    b9d6:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    b9da:	88 23       	and	r24, r24
    b9dc:	11 f0       	breq	.+4      	; 0xb9e2 <si5351_set_freq+0x2fc>
    b9de:	81 e0       	ldi	r24, 0x01	; 1
    b9e0:	15 c0       	rjmp	.+42     	; 0xba0c <si5351_set_freq+0x326>
    b9e2:	89 81       	ldd	r24, Y+1	; 0x01
    b9e4:	9a 81       	ldd	r25, Y+2	; 0x02
    b9e6:	ab 81       	ldd	r26, Y+3	; 0x03
    b9e8:	bc 81       	ldd	r27, Y+4	; 0x04
    b9ea:	89 2b       	or	r24, r25
    b9ec:	8a 2b       	or	r24, r26
    b9ee:	8b 2b       	or	r24, r27
    b9f0:	61 f0       	breq	.+24     	; 0xba0a <si5351_set_freq+0x324>
    b9f2:	89 81       	ldd	r24, Y+1	; 0x01
    b9f4:	9a 81       	ldd	r25, Y+2	; 0x02
    b9f6:	ab 81       	ldd	r26, Y+3	; 0x03
    b9f8:	bc 81       	ldd	r27, Y+4	; 0x04
    b9fa:	80 93 78 4a 	sts	0x4A78, r24	; 0x804a78 <_ZL8freqVCOB>
    b9fe:	90 93 79 4a 	sts	0x4A79, r25	; 0x804a79 <_ZL8freqVCOB+0x1>
    ba02:	a0 93 7a 4a 	sts	0x4A7A, r26	; 0x804a7a <_ZL8freqVCOB+0x2>
    ba06:	b0 93 7b 4a 	sts	0x4A7B, r27	; 0x804a7b <_ZL8freqVCOB+0x3>
    ba0a:	80 e0       	ldi	r24, 0x00	; 0
    ba0c:	6d 96       	adiw	r28, 0x1d	; 29
    ba0e:	cd bf       	out	0x3d, r28	; 61
    ba10:	de bf       	out	0x3e, r29	; 62
    ba12:	df 91       	pop	r29
    ba14:	cf 91       	pop	r28
    ba16:	1f 91       	pop	r17
    ba18:	0f 91       	pop	r16
    ba1a:	ff 90       	pop	r15
    ba1c:	ef 90       	pop	r14
    ba1e:	df 90       	pop	r13
    ba20:	cf 90       	pop	r12
    ba22:	af 90       	pop	r10
    ba24:	8f 90       	pop	r8
    ba26:	08 95       	ret

0000ba28 <si5351_clock_enable>:
    ba28:	cf 93       	push	r28
    ba2a:	df 93       	push	r29
    ba2c:	cd b7       	in	r28, 0x3d	; 61
    ba2e:	de b7       	in	r29, 0x3e	; 62
    ba30:	25 97       	sbiw	r28, 0x05	; 5
    ba32:	cd bf       	out	0x3d, r28	; 61
    ba34:	de bf       	out	0x3e, r29	; 62
    ba36:	8c 83       	std	Y+4, r24	; 0x04
    ba38:	6d 83       	std	Y+5, r22	; 0x05
    ba3a:	ce 01       	movw	r24, r28
    ba3c:	02 96       	adiw	r24, 0x02	; 2
    ba3e:	41 e0       	ldi	r20, 0x01	; 1
    ba40:	bc 01       	movw	r22, r24
    ba42:	83 e0       	ldi	r24, 0x03	; 3
    ba44:	0e 94 db 62 	call	0xc5b6	; 0xc5b6 <_Z16si5351_read_bulkhPhh>
    ba48:	88 23       	and	r24, r24
    ba4a:	11 f0       	breq	.+4      	; 0xba50 <si5351_clock_enable+0x28>
    ba4c:	8c ef       	ldi	r24, 0xFC	; 252
    ba4e:	31 c0       	rjmp	.+98     	; 0xbab2 <si5351_clock_enable+0x8a>
    ba50:	8a 81       	ldd	r24, Y+2	; 0x02
    ba52:	89 83       	std	Y+1, r24	; 0x01
    ba54:	8d 81       	ldd	r24, Y+5	; 0x05
    ba56:	88 23       	and	r24, r24
    ba58:	81 f0       	breq	.+32     	; 0xba7a <si5351_clock_enable+0x52>
    ba5a:	8c 81       	ldd	r24, Y+4	; 0x04
    ba5c:	28 2f       	mov	r18, r24
    ba5e:	30 e0       	ldi	r19, 0x00	; 0
    ba60:	81 e0       	ldi	r24, 0x01	; 1
    ba62:	90 e0       	ldi	r25, 0x00	; 0
    ba64:	02 c0       	rjmp	.+4      	; 0xba6a <si5351_clock_enable+0x42>
    ba66:	88 0f       	add	r24, r24
    ba68:	99 1f       	adc	r25, r25
    ba6a:	2a 95       	dec	r18
    ba6c:	e2 f7       	brpl	.-8      	; 0xba66 <si5351_clock_enable+0x3e>
    ba6e:	98 2f       	mov	r25, r24
    ba70:	90 95       	com	r25
    ba72:	89 81       	ldd	r24, Y+1	; 0x01
    ba74:	89 23       	and	r24, r25
    ba76:	89 83       	std	Y+1, r24	; 0x01
    ba78:	0e c0       	rjmp	.+28     	; 0xba96 <si5351_clock_enable+0x6e>
    ba7a:	8c 81       	ldd	r24, Y+4	; 0x04
    ba7c:	28 2f       	mov	r18, r24
    ba7e:	30 e0       	ldi	r19, 0x00	; 0
    ba80:	81 e0       	ldi	r24, 0x01	; 1
    ba82:	90 e0       	ldi	r25, 0x00	; 0
    ba84:	02 c0       	rjmp	.+4      	; 0xba8a <si5351_clock_enable+0x62>
    ba86:	88 0f       	add	r24, r24
    ba88:	99 1f       	adc	r25, r25
    ba8a:	2a 95       	dec	r18
    ba8c:	e2 f7       	brpl	.-8      	; 0xba86 <si5351_clock_enable+0x5e>
    ba8e:	98 2f       	mov	r25, r24
    ba90:	89 81       	ldd	r24, Y+1	; 0x01
    ba92:	89 2b       	or	r24, r25
    ba94:	89 83       	std	Y+1, r24	; 0x01
    ba96:	89 81       	ldd	r24, Y+1	; 0x01
    ba98:	8a 83       	std	Y+2, r24	; 0x02
    ba9a:	ce 01       	movw	r24, r28
    ba9c:	02 96       	adiw	r24, 0x02	; 2
    ba9e:	41 e0       	ldi	r20, 0x01	; 1
    baa0:	bc 01       	movw	r22, r24
    baa2:	83 e0       	ldi	r24, 0x03	; 3
    baa4:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    baa8:	88 23       	and	r24, r24
    baaa:	11 f0       	breq	.+4      	; 0xbab0 <si5351_clock_enable+0x88>
    baac:	8c ef       	ldi	r24, 0xFC	; 252
    baae:	01 c0       	rjmp	.+2      	; 0xbab2 <si5351_clock_enable+0x8a>
    bab0:	80 e0       	ldi	r24, 0x00	; 0
    bab2:	25 96       	adiw	r28, 0x05	; 5
    bab4:	cd bf       	out	0x3d, r28	; 61
    bab6:	de bf       	out	0x3e, r29	; 62
    bab8:	df 91       	pop	r29
    baba:	cf 91       	pop	r28
    babc:	08 95       	ret

0000babe <si5351_drive_strength>:
    babe:	cf 93       	push	r28
    bac0:	df 93       	push	r29
    bac2:	cd b7       	in	r28, 0x3d	; 61
    bac4:	de b7       	in	r29, 0x3e	; 62
    bac6:	26 97       	sbiw	r28, 0x06	; 6
    bac8:	cd bf       	out	0x3d, r28	; 61
    baca:	de bf       	out	0x3e, r29	; 62
    bacc:	8d 83       	std	Y+5, r24	; 0x05
    bace:	6e 83       	std	Y+6, r22	; 0x06
    bad0:	83 e0       	ldi	r24, 0x03	; 3
    bad2:	8a 83       	std	Y+2, r24	; 0x02
    bad4:	8d 81       	ldd	r24, Y+5	; 0x05
    bad6:	20 e1       	ldi	r18, 0x10	; 16
    bad8:	28 0f       	add	r18, r24
    bada:	ce 01       	movw	r24, r28
    badc:	03 96       	adiw	r24, 0x03	; 3
    bade:	41 e0       	ldi	r20, 0x01	; 1
    bae0:	bc 01       	movw	r22, r24
    bae2:	82 2f       	mov	r24, r18
    bae4:	0e 94 db 62 	call	0xc5b6	; 0xc5b6 <_Z16si5351_read_bulkhPhh>
    bae8:	88 23       	and	r24, r24
    baea:	11 f0       	breq	.+4      	; 0xbaf0 <si5351_drive_strength+0x32>
    baec:	8b ef       	ldi	r24, 0xFB	; 251
    baee:	3e c0       	rjmp	.+124    	; 0xbb6c <si5351_drive_strength+0xae>
    baf0:	8b 81       	ldd	r24, Y+3	; 0x03
    baf2:	89 83       	std	Y+1, r24	; 0x01
    baf4:	8e 81       	ldd	r24, Y+6	; 0x06
    baf6:	88 2f       	mov	r24, r24
    baf8:	90 e0       	ldi	r25, 0x00	; 0
    bafa:	81 30       	cpi	r24, 0x01	; 1
    bafc:	91 05       	cpc	r25, r1
    bafe:	81 f0       	breq	.+32     	; 0xbb20 <si5351_drive_strength+0x62>
    bb00:	82 30       	cpi	r24, 0x02	; 2
    bb02:	91 05       	cpc	r25, r1
    bb04:	1c f4       	brge	.+6      	; 0xbb0c <si5351_drive_strength+0x4e>
    bb06:	89 2b       	or	r24, r25
    bb08:	39 f0       	breq	.+14     	; 0xbb18 <si5351_drive_strength+0x5a>
    bb0a:	1f c0       	rjmp	.+62     	; 0xbb4a <si5351_drive_strength+0x8c>
    bb0c:	82 30       	cpi	r24, 0x02	; 2
    bb0e:	91 05       	cpc	r25, r1
    bb10:	71 f0       	breq	.+28     	; 0xbb2e <si5351_drive_strength+0x70>
    bb12:	03 97       	sbiw	r24, 0x03	; 3
    bb14:	99 f0       	breq	.+38     	; 0xbb3c <si5351_drive_strength+0x7e>
    bb16:	19 c0       	rjmp	.+50     	; 0xbb4a <si5351_drive_strength+0x8c>
    bb18:	89 81       	ldd	r24, Y+1	; 0x01
    bb1a:	8c 7f       	andi	r24, 0xFC	; 252
    bb1c:	89 83       	std	Y+1, r24	; 0x01
    bb1e:	15 c0       	rjmp	.+42     	; 0xbb4a <si5351_drive_strength+0x8c>
    bb20:	89 81       	ldd	r24, Y+1	; 0x01
    bb22:	8c 7f       	andi	r24, 0xFC	; 252
    bb24:	89 83       	std	Y+1, r24	; 0x01
    bb26:	89 81       	ldd	r24, Y+1	; 0x01
    bb28:	81 60       	ori	r24, 0x01	; 1
    bb2a:	89 83       	std	Y+1, r24	; 0x01
    bb2c:	0e c0       	rjmp	.+28     	; 0xbb4a <si5351_drive_strength+0x8c>
    bb2e:	89 81       	ldd	r24, Y+1	; 0x01
    bb30:	8c 7f       	andi	r24, 0xFC	; 252
    bb32:	89 83       	std	Y+1, r24	; 0x01
    bb34:	89 81       	ldd	r24, Y+1	; 0x01
    bb36:	82 60       	ori	r24, 0x02	; 2
    bb38:	89 83       	std	Y+1, r24	; 0x01
    bb3a:	07 c0       	rjmp	.+14     	; 0xbb4a <si5351_drive_strength+0x8c>
    bb3c:	89 81       	ldd	r24, Y+1	; 0x01
    bb3e:	8c 7f       	andi	r24, 0xFC	; 252
    bb40:	89 83       	std	Y+1, r24	; 0x01
    bb42:	89 81       	ldd	r24, Y+1	; 0x01
    bb44:	83 60       	ori	r24, 0x03	; 3
    bb46:	89 83       	std	Y+1, r24	; 0x01
    bb48:	00 00       	nop
    bb4a:	89 81       	ldd	r24, Y+1	; 0x01
    bb4c:	8b 83       	std	Y+3, r24	; 0x03
    bb4e:	8d 81       	ldd	r24, Y+5	; 0x05
    bb50:	20 e1       	ldi	r18, 0x10	; 16
    bb52:	28 0f       	add	r18, r24
    bb54:	ce 01       	movw	r24, r28
    bb56:	03 96       	adiw	r24, 0x03	; 3
    bb58:	41 e0       	ldi	r20, 0x01	; 1
    bb5a:	bc 01       	movw	r22, r24
    bb5c:	82 2f       	mov	r24, r18
    bb5e:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    bb62:	88 23       	and	r24, r24
    bb64:	11 f0       	breq	.+4      	; 0xbb6a <si5351_drive_strength+0xac>
    bb66:	8b ef       	ldi	r24, 0xFB	; 251
    bb68:	01 c0       	rjmp	.+2      	; 0xbb6c <si5351_drive_strength+0xae>
    bb6a:	80 e0       	ldi	r24, 0x00	; 0
    bb6c:	26 96       	adiw	r28, 0x06	; 6
    bb6e:	cd bf       	out	0x3d, r28	; 61
    bb70:	de bf       	out	0x3e, r29	; 62
    bb72:	df 91       	pop	r29
    bb74:	cf 91       	pop	r28
    bb76:	08 95       	ret

0000bb78 <_Z7set_pllm10si5351_pll>:
    bb78:	cf 93       	push	r28
    bb7a:	df 93       	push	r29
    bb7c:	cd b7       	in	r28, 0x3d	; 61
    bb7e:	de b7       	in	r29, 0x3e	; 62
    bb80:	6c 97       	sbiw	r28, 0x1c	; 28
    bb82:	cd bf       	out	0x3d, r28	; 61
    bb84:	de bf       	out	0x3e, r29	; 62
    bb86:	68 8f       	std	Y+24, r22	; 0x18
    bb88:	79 8f       	std	Y+25, r23	; 0x19
    bb8a:	8a 8f       	std	Y+26, r24	; 0x1a
    bb8c:	9b 8f       	std	Y+27, r25	; 0x1b
    bb8e:	4c 8f       	std	Y+28, r20	; 0x1c
    bb90:	9e 01       	movw	r18, r28
    bb92:	2e 5f       	subi	r18, 0xFE	; 254
    bb94:	3f 4f       	sbci	r19, 0xFF	; 255
    bb96:	88 8d       	ldd	r24, Y+24	; 0x18
    bb98:	99 8d       	ldd	r25, Y+25	; 0x19
    bb9a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    bb9c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    bb9e:	a9 01       	movw	r20, r18
    bba0:	bc 01       	movw	r22, r24
    bba2:	cd 01       	movw	r24, r26
    bba4:	0e 94 85 5e 	call	0xbd0a	; 0xbd0a <_Z8pll_calcmP13u_si5351_regs>
    bba8:	88 23       	and	r24, r24
    bbaa:	11 f0       	breq	.+4      	; 0xbbb0 <_Z7set_pllm10si5351_pll+0x38>
    bbac:	81 e0       	ldi	r24, 0x01	; 1
    bbae:	a7 c0       	rjmp	.+334    	; 0xbcfe <_Z7set_pllm10si5351_pll+0x186>
    bbb0:	19 82       	std	Y+1, r1	; 0x01
    bbb2:	89 81       	ldd	r24, Y+1	; 0x01
    bbb4:	91 e0       	ldi	r25, 0x01	; 1
    bbb6:	98 0f       	add	r25, r24
    bbb8:	99 83       	std	Y+1, r25	; 0x01
    bbba:	88 2f       	mov	r24, r24
    bbbc:	90 e0       	ldi	r25, 0x00	; 0
    bbbe:	4b 85       	ldd	r20, Y+11	; 0x0b
    bbc0:	9e 01       	movw	r18, r28
    bbc2:	22 5f       	subi	r18, 0xF2	; 242
    bbc4:	3f 4f       	sbci	r19, 0xFF	; 255
    bbc6:	82 0f       	add	r24, r18
    bbc8:	93 1f       	adc	r25, r19
    bbca:	fc 01       	movw	r30, r24
    bbcc:	40 83       	st	Z, r20
    bbce:	89 81       	ldd	r24, Y+1	; 0x01
    bbd0:	91 e0       	ldi	r25, 0x01	; 1
    bbd2:	98 0f       	add	r25, r24
    bbd4:	99 83       	std	Y+1, r25	; 0x01
    bbd6:	88 2f       	mov	r24, r24
    bbd8:	90 e0       	ldi	r25, 0x00	; 0
    bbda:	4a 85       	ldd	r20, Y+10	; 0x0a
    bbdc:	9e 01       	movw	r18, r28
    bbde:	22 5f       	subi	r18, 0xF2	; 242
    bbe0:	3f 4f       	sbci	r19, 0xFF	; 255
    bbe2:	82 0f       	add	r24, r18
    bbe4:	93 1f       	adc	r25, r19
    bbe6:	fc 01       	movw	r30, r24
    bbe8:	40 83       	st	Z, r20
    bbea:	89 81       	ldd	r24, Y+1	; 0x01
    bbec:	91 e0       	ldi	r25, 0x01	; 1
    bbee:	98 0f       	add	r25, r24
    bbf0:	99 83       	std	Y+1, r25	; 0x01
    bbf2:	88 2f       	mov	r24, r24
    bbf4:	90 e0       	ldi	r25, 0x00	; 0
    bbf6:	2c 81       	ldd	r18, Y+4	; 0x04
    bbf8:	42 2f       	mov	r20, r18
    bbfa:	43 70       	andi	r20, 0x03	; 3
    bbfc:	9e 01       	movw	r18, r28
    bbfe:	22 5f       	subi	r18, 0xF2	; 242
    bc00:	3f 4f       	sbci	r19, 0xFF	; 255
    bc02:	82 0f       	add	r24, r18
    bc04:	93 1f       	adc	r25, r19
    bc06:	fc 01       	movw	r30, r24
    bc08:	40 83       	st	Z, r20
    bc0a:	89 81       	ldd	r24, Y+1	; 0x01
    bc0c:	91 e0       	ldi	r25, 0x01	; 1
    bc0e:	98 0f       	add	r25, r24
    bc10:	99 83       	std	Y+1, r25	; 0x01
    bc12:	88 2f       	mov	r24, r24
    bc14:	90 e0       	ldi	r25, 0x00	; 0
    bc16:	4b 81       	ldd	r20, Y+3	; 0x03
    bc18:	9e 01       	movw	r18, r28
    bc1a:	22 5f       	subi	r18, 0xF2	; 242
    bc1c:	3f 4f       	sbci	r19, 0xFF	; 255
    bc1e:	82 0f       	add	r24, r18
    bc20:	93 1f       	adc	r25, r19
    bc22:	fc 01       	movw	r30, r24
    bc24:	40 83       	st	Z, r20
    bc26:	89 81       	ldd	r24, Y+1	; 0x01
    bc28:	91 e0       	ldi	r25, 0x01	; 1
    bc2a:	98 0f       	add	r25, r24
    bc2c:	99 83       	std	Y+1, r25	; 0x01
    bc2e:	88 2f       	mov	r24, r24
    bc30:	90 e0       	ldi	r25, 0x00	; 0
    bc32:	4a 81       	ldd	r20, Y+2	; 0x02
    bc34:	9e 01       	movw	r18, r28
    bc36:	22 5f       	subi	r18, 0xF2	; 242
    bc38:	3f 4f       	sbci	r19, 0xFF	; 255
    bc3a:	82 0f       	add	r24, r18
    bc3c:	93 1f       	adc	r25, r19
    bc3e:	fc 01       	movw	r30, r24
    bc40:	40 83       	st	Z, r20
    bc42:	89 81       	ldd	r24, Y+1	; 0x01
    bc44:	88 2f       	mov	r24, r24
    bc46:	90 e0       	ldi	r25, 0x00	; 0
    bc48:	2c 85       	ldd	r18, Y+12	; 0x0c
    bc4a:	42 2f       	mov	r20, r18
    bc4c:	42 95       	swap	r20
    bc4e:	40 7f       	andi	r20, 0xF0	; 240
    bc50:	9e 01       	movw	r18, r28
    bc52:	22 5f       	subi	r18, 0xF2	; 242
    bc54:	3f 4f       	sbci	r19, 0xFF	; 255
    bc56:	82 0f       	add	r24, r18
    bc58:	93 1f       	adc	r25, r19
    bc5a:	fc 01       	movw	r30, r24
    bc5c:	40 83       	st	Z, r20
    bc5e:	29 81       	ldd	r18, Y+1	; 0x01
    bc60:	81 e0       	ldi	r24, 0x01	; 1
    bc62:	82 0f       	add	r24, r18
    bc64:	89 83       	std	Y+1, r24	; 0x01
    bc66:	82 2f       	mov	r24, r18
    bc68:	90 e0       	ldi	r25, 0x00	; 0
    bc6a:	22 2f       	mov	r18, r18
    bc6c:	30 e0       	ldi	r19, 0x00	; 0
    bc6e:	ae 01       	movw	r20, r28
    bc70:	42 5f       	subi	r20, 0xF2	; 242
    bc72:	5f 4f       	sbci	r21, 0xFF	; 255
    bc74:	24 0f       	add	r18, r20
    bc76:	35 1f       	adc	r19, r21
    bc78:	f9 01       	movw	r30, r18
    bc7a:	30 81       	ld	r19, Z
    bc7c:	28 85       	ldd	r18, Y+8	; 0x08
    bc7e:	2f 70       	andi	r18, 0x0F	; 15
    bc80:	43 2f       	mov	r20, r19
    bc82:	42 0f       	add	r20, r18
    bc84:	9e 01       	movw	r18, r28
    bc86:	22 5f       	subi	r18, 0xF2	; 242
    bc88:	3f 4f       	sbci	r19, 0xFF	; 255
    bc8a:	82 0f       	add	r24, r18
    bc8c:	93 1f       	adc	r25, r19
    bc8e:	fc 01       	movw	r30, r24
    bc90:	40 83       	st	Z, r20
    bc92:	89 81       	ldd	r24, Y+1	; 0x01
    bc94:	91 e0       	ldi	r25, 0x01	; 1
    bc96:	98 0f       	add	r25, r24
    bc98:	99 83       	std	Y+1, r25	; 0x01
    bc9a:	88 2f       	mov	r24, r24
    bc9c:	90 e0       	ldi	r25, 0x00	; 0
    bc9e:	4f 81       	ldd	r20, Y+7	; 0x07
    bca0:	9e 01       	movw	r18, r28
    bca2:	22 5f       	subi	r18, 0xF2	; 242
    bca4:	3f 4f       	sbci	r19, 0xFF	; 255
    bca6:	82 0f       	add	r24, r18
    bca8:	93 1f       	adc	r25, r19
    bcaa:	fc 01       	movw	r30, r24
    bcac:	40 83       	st	Z, r20
    bcae:	89 81       	ldd	r24, Y+1	; 0x01
    bcb0:	91 e0       	ldi	r25, 0x01	; 1
    bcb2:	98 0f       	add	r25, r24
    bcb4:	99 83       	std	Y+1, r25	; 0x01
    bcb6:	88 2f       	mov	r24, r24
    bcb8:	90 e0       	ldi	r25, 0x00	; 0
    bcba:	4e 81       	ldd	r20, Y+6	; 0x06
    bcbc:	9e 01       	movw	r18, r28
    bcbe:	22 5f       	subi	r18, 0xF2	; 242
    bcc0:	3f 4f       	sbci	r19, 0xFF	; 255
    bcc2:	82 0f       	add	r24, r18
    bcc4:	93 1f       	adc	r25, r19
    bcc6:	fc 01       	movw	r30, r24
    bcc8:	40 83       	st	Z, r20
    bcca:	8c 8d       	ldd	r24, Y+28	; 0x1c
    bccc:	81 30       	cpi	r24, 0x01	; 1
    bcce:	59 f4       	brne	.+22     	; 0xbce6 <_Z7set_pllm10si5351_pll+0x16e>
    bcd0:	ce 01       	movw	r24, r28
    bcd2:	0e 96       	adiw	r24, 0x0e	; 14
    bcd4:	49 81       	ldd	r20, Y+1	; 0x01
    bcd6:	bc 01       	movw	r22, r24
    bcd8:	8a e1       	ldi	r24, 0x1A	; 26
    bcda:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    bcde:	88 23       	and	r24, r24
    bce0:	69 f0       	breq	.+26     	; 0xbcfc <_Z7set_pllm10si5351_pll+0x184>
    bce2:	81 e0       	ldi	r24, 0x01	; 1
    bce4:	0c c0       	rjmp	.+24     	; 0xbcfe <_Z7set_pllm10si5351_pll+0x186>
    bce6:	ce 01       	movw	r24, r28
    bce8:	0e 96       	adiw	r24, 0x0e	; 14
    bcea:	49 81       	ldd	r20, Y+1	; 0x01
    bcec:	bc 01       	movw	r22, r24
    bcee:	82 e2       	ldi	r24, 0x22	; 34
    bcf0:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    bcf4:	88 23       	and	r24, r24
    bcf6:	11 f0       	breq	.+4      	; 0xbcfc <_Z7set_pllm10si5351_pll+0x184>
    bcf8:	81 e0       	ldi	r24, 0x01	; 1
    bcfa:	01 c0       	rjmp	.+2      	; 0xbcfe <_Z7set_pllm10si5351_pll+0x186>
    bcfc:	80 e0       	ldi	r24, 0x00	; 0
    bcfe:	6c 96       	adiw	r28, 0x1c	; 28
    bd00:	cd bf       	out	0x3d, r28	; 61
    bd02:	de bf       	out	0x3e, r29	; 62
    bd04:	df 91       	pop	r29
    bd06:	cf 91       	pop	r28
    bd08:	08 95       	ret

0000bd0a <_Z8pll_calcmP13u_si5351_regs>:
    bd0a:	cf 93       	push	r28
    bd0c:	df 93       	push	r29
    bd0e:	cd b7       	in	r28, 0x3d	; 61
    bd10:	de b7       	in	r29, 0x3e	; 62
    bd12:	6e 97       	sbiw	r28, 0x1e	; 30
    bd14:	cd bf       	out	0x3d, r28	; 61
    bd16:	de bf       	out	0x3e, r29	; 62
    bd18:	69 8f       	std	Y+25, r22	; 0x19
    bd1a:	7a 8f       	std	Y+26, r23	; 0x1a
    bd1c:	8b 8f       	std	Y+27, r24	; 0x1b
    bd1e:	9c 8f       	std	Y+28, r25	; 0x1c
    bd20:	4d 8f       	std	Y+29, r20	; 0x1d
    bd22:	5e 8f       	std	Y+30, r21	; 0x1e
    bd24:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <_ZL9xtal_freq>
    bd28:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <_ZL9xtal_freq+0x1>
    bd2c:	a0 91 2a 40 	lds	r26, 0x402A	; 0x80402a <_ZL9xtal_freq+0x2>
    bd30:	b0 91 2b 40 	lds	r27, 0x402B	; 0x80402b <_ZL9xtal_freq+0x3>
    bd34:	89 83       	std	Y+1, r24	; 0x01
    bd36:	9a 83       	std	Y+2, r25	; 0x02
    bd38:	ab 83       	std	Y+3, r26	; 0x03
    bd3a:	bc 83       	std	Y+4, r27	; 0x04
    bd3c:	89 8d       	ldd	r24, Y+25	; 0x19
    bd3e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bd40:	ab 8d       	ldd	r26, Y+27	; 0x1b
    bd42:	bc 8d       	ldd	r27, Y+28	; 0x1c
    bd44:	29 81       	ldd	r18, Y+1	; 0x01
    bd46:	3a 81       	ldd	r19, Y+2	; 0x02
    bd48:	4b 81       	ldd	r20, Y+3	; 0x03
    bd4a:	5c 81       	ldd	r21, Y+4	; 0x04
    bd4c:	bc 01       	movw	r22, r24
    bd4e:	cd 01       	movw	r24, r26
    bd50:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    bd54:	da 01       	movw	r26, r20
    bd56:	c9 01       	movw	r24, r18
    bd58:	8d 83       	std	Y+5, r24	; 0x05
    bd5a:	9e 83       	std	Y+6, r25	; 0x06
    bd5c:	af 83       	std	Y+7, r26	; 0x07
    bd5e:	b8 87       	std	Y+8, r27	; 0x08
    bd60:	89 8d       	ldd	r24, Y+25	; 0x19
    bd62:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bd64:	ab 8d       	ldd	r26, Y+27	; 0x1b
    bd66:	bc 8d       	ldd	r27, Y+28	; 0x1c
    bd68:	29 81       	ldd	r18, Y+1	; 0x01
    bd6a:	3a 81       	ldd	r19, Y+2	; 0x02
    bd6c:	4b 81       	ldd	r20, Y+3	; 0x03
    bd6e:	5c 81       	ldd	r21, Y+4	; 0x04
    bd70:	bc 01       	movw	r22, r24
    bd72:	cd 01       	movw	r24, r26
    bd74:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    bd78:	dc 01       	movw	r26, r24
    bd7a:	cb 01       	movw	r24, r22
    bd7c:	89 8b       	std	Y+17, r24	; 0x11
    bd7e:	9a 8b       	std	Y+18, r25	; 0x12
    bd80:	ab 8b       	std	Y+19, r26	; 0x13
    bd82:	bc 8b       	std	Y+20, r27	; 0x14
    bd84:	89 81       	ldd	r24, Y+1	; 0x01
    bd86:	9a 81       	ldd	r25, Y+2	; 0x02
    bd88:	ab 81       	ldd	r26, Y+3	; 0x03
    bd8a:	bc 81       	ldd	r27, Y+4	; 0x04
    bd8c:	8d 8b       	std	Y+21, r24	; 0x15
    bd8e:	9e 8b       	std	Y+22, r25	; 0x16
    bd90:	af 8b       	std	Y+23, r26	; 0x17
    bd92:	b8 8f       	std	Y+24, r27	; 0x18
    bd94:	9e 01       	movw	r18, r28
    bd96:	2b 5e       	subi	r18, 0xEB	; 235
    bd98:	3f 4f       	sbci	r19, 0xFF	; 255
    bd9a:	ce 01       	movw	r24, r28
    bd9c:	41 96       	adiw	r24, 0x11	; 17
    bd9e:	b9 01       	movw	r22, r18
    bda0:	0e 94 6b 5f 	call	0xbed6	; 0xbed6 <_Z13reduce_by_gcdPmS_>
    bda4:	89 89       	ldd	r24, Y+17	; 0x11
    bda6:	9a 89       	ldd	r25, Y+18	; 0x12
    bda8:	ab 89       	ldd	r26, Y+19	; 0x13
    bdaa:	bc 89       	ldd	r27, Y+20	; 0x14
    bdac:	88 0f       	add	r24, r24
    bdae:	99 1f       	adc	r25, r25
    bdb0:	aa 1f       	adc	r26, r26
    bdb2:	bb 1f       	adc	r27, r27
    bdb4:	88 0f       	add	r24, r24
    bdb6:	99 1f       	adc	r25, r25
    bdb8:	aa 1f       	adc	r26, r26
    bdba:	bb 1f       	adc	r27, r27
    bdbc:	88 0f       	add	r24, r24
    bdbe:	99 1f       	adc	r25, r25
    bdc0:	aa 1f       	adc	r26, r26
    bdc2:	bb 1f       	adc	r27, r27
    bdc4:	88 0f       	add	r24, r24
    bdc6:	99 1f       	adc	r25, r25
    bdc8:	aa 1f       	adc	r26, r26
    bdca:	bb 1f       	adc	r27, r27
    bdcc:	88 0f       	add	r24, r24
    bdce:	99 1f       	adc	r25, r25
    bdd0:	aa 1f       	adc	r26, r26
    bdd2:	bb 1f       	adc	r27, r27
    bdd4:	88 0f       	add	r24, r24
    bdd6:	99 1f       	adc	r25, r25
    bdd8:	aa 1f       	adc	r26, r26
    bdda:	bb 1f       	adc	r27, r27
    bddc:	88 0f       	add	r24, r24
    bdde:	99 1f       	adc	r25, r25
    bde0:	aa 1f       	adc	r26, r26
    bde2:	bb 1f       	adc	r27, r27
    bde4:	89 87       	std	Y+9, r24	; 0x09
    bde6:	9a 87       	std	Y+10, r25	; 0x0a
    bde8:	ab 87       	std	Y+11, r26	; 0x0b
    bdea:	bc 87       	std	Y+12, r27	; 0x0c
    bdec:	2d 89       	ldd	r18, Y+21	; 0x15
    bdee:	3e 89       	ldd	r19, Y+22	; 0x16
    bdf0:	4f 89       	ldd	r20, Y+23	; 0x17
    bdf2:	58 8d       	ldd	r21, Y+24	; 0x18
    bdf4:	89 85       	ldd	r24, Y+9	; 0x09
    bdf6:	9a 85       	ldd	r25, Y+10	; 0x0a
    bdf8:	ab 85       	ldd	r26, Y+11	; 0x0b
    bdfa:	bc 85       	ldd	r27, Y+12	; 0x0c
    bdfc:	bc 01       	movw	r22, r24
    bdfe:	cd 01       	movw	r24, r26
    be00:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    be04:	da 01       	movw	r26, r20
    be06:	c9 01       	movw	r24, r18
    be08:	8d 87       	std	Y+13, r24	; 0x0d
    be0a:	9e 87       	std	Y+14, r25	; 0x0e
    be0c:	af 87       	std	Y+15, r26	; 0x0f
    be0e:	b8 8b       	std	Y+16, r27	; 0x10
    be10:	8d 81       	ldd	r24, Y+5	; 0x05
    be12:	9e 81       	ldd	r25, Y+6	; 0x06
    be14:	af 81       	ldd	r26, Y+7	; 0x07
    be16:	b8 85       	ldd	r27, Y+8	; 0x08
    be18:	88 0f       	add	r24, r24
    be1a:	99 1f       	adc	r25, r25
    be1c:	aa 1f       	adc	r26, r26
    be1e:	bb 1f       	adc	r27, r27
    be20:	88 0f       	add	r24, r24
    be22:	99 1f       	adc	r25, r25
    be24:	aa 1f       	adc	r26, r26
    be26:	bb 1f       	adc	r27, r27
    be28:	88 0f       	add	r24, r24
    be2a:	99 1f       	adc	r25, r25
    be2c:	aa 1f       	adc	r26, r26
    be2e:	bb 1f       	adc	r27, r27
    be30:	88 0f       	add	r24, r24
    be32:	99 1f       	adc	r25, r25
    be34:	aa 1f       	adc	r26, r26
    be36:	bb 1f       	adc	r27, r27
    be38:	88 0f       	add	r24, r24
    be3a:	99 1f       	adc	r25, r25
    be3c:	aa 1f       	adc	r26, r26
    be3e:	bb 1f       	adc	r27, r27
    be40:	88 0f       	add	r24, r24
    be42:	99 1f       	adc	r25, r25
    be44:	aa 1f       	adc	r26, r26
    be46:	bb 1f       	adc	r27, r27
    be48:	88 0f       	add	r24, r24
    be4a:	99 1f       	adc	r25, r25
    be4c:	aa 1f       	adc	r26, r26
    be4e:	bb 1f       	adc	r27, r27
    be50:	9c 01       	movw	r18, r24
    be52:	ad 01       	movw	r20, r26
    be54:	8d 85       	ldd	r24, Y+13	; 0x0d
    be56:	9e 85       	ldd	r25, Y+14	; 0x0e
    be58:	af 85       	ldd	r26, Y+15	; 0x0f
    be5a:	b8 89       	ldd	r27, Y+16	; 0x10
    be5c:	82 0f       	add	r24, r18
    be5e:	93 1f       	adc	r25, r19
    be60:	a4 1f       	adc	r26, r20
    be62:	b5 1f       	adc	r27, r21
    be64:	92 50       	subi	r25, 0x02	; 2
    be66:	a1 09       	sbc	r26, r1
    be68:	b1 09       	sbc	r27, r1
    be6a:	2d 8d       	ldd	r18, Y+29	; 0x1d
    be6c:	3e 8d       	ldd	r19, Y+30	; 0x1e
    be6e:	f9 01       	movw	r30, r18
    be70:	80 83       	st	Z, r24
    be72:	91 83       	std	Z+1, r25	; 0x01
    be74:	a2 83       	std	Z+2, r26	; 0x02
    be76:	b3 83       	std	Z+3, r27	; 0x03
    be78:	2d 89       	ldd	r18, Y+21	; 0x15
    be7a:	3e 89       	ldd	r19, Y+22	; 0x16
    be7c:	4f 89       	ldd	r20, Y+23	; 0x17
    be7e:	58 8d       	ldd	r21, Y+24	; 0x18
    be80:	8d 85       	ldd	r24, Y+13	; 0x0d
    be82:	9e 85       	ldd	r25, Y+14	; 0x0e
    be84:	af 85       	ldd	r26, Y+15	; 0x0f
    be86:	b8 89       	ldd	r27, Y+16	; 0x10
    be88:	bc 01       	movw	r22, r24
    be8a:	cd 01       	movw	r24, r26
    be8c:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    be90:	9b 01       	movw	r18, r22
    be92:	ac 01       	movw	r20, r24
    be94:	89 85       	ldd	r24, Y+9	; 0x09
    be96:	9a 85       	ldd	r25, Y+10	; 0x0a
    be98:	ab 85       	ldd	r26, Y+11	; 0x0b
    be9a:	bc 85       	ldd	r27, Y+12	; 0x0c
    be9c:	82 1b       	sub	r24, r18
    be9e:	93 0b       	sbc	r25, r19
    bea0:	a4 0b       	sbc	r26, r20
    bea2:	b5 0b       	sbc	r27, r21
    bea4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    bea6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    bea8:	f9 01       	movw	r30, r18
    beaa:	84 83       	std	Z+4, r24	; 0x04
    beac:	95 83       	std	Z+5, r25	; 0x05
    beae:	a6 83       	std	Z+6, r26	; 0x06
    beb0:	b7 83       	std	Z+7, r27	; 0x07
    beb2:	8d 89       	ldd	r24, Y+21	; 0x15
    beb4:	9e 89       	ldd	r25, Y+22	; 0x16
    beb6:	af 89       	ldd	r26, Y+23	; 0x17
    beb8:	b8 8d       	ldd	r27, Y+24	; 0x18
    beba:	2d 8d       	ldd	r18, Y+29	; 0x1d
    bebc:	3e 8d       	ldd	r19, Y+30	; 0x1e
    bebe:	f9 01       	movw	r30, r18
    bec0:	80 87       	std	Z+8, r24	; 0x08
    bec2:	91 87       	std	Z+9, r25	; 0x09
    bec4:	a2 87       	std	Z+10, r26	; 0x0a
    bec6:	b3 87       	std	Z+11, r27	; 0x0b
    bec8:	80 e0       	ldi	r24, 0x00	; 0
    beca:	6e 96       	adiw	r28, 0x1e	; 30
    becc:	cd bf       	out	0x3d, r28	; 61
    bece:	de bf       	out	0x3e, r29	; 62
    bed0:	df 91       	pop	r29
    bed2:	cf 91       	pop	r28
    bed4:	08 95       	ret

0000bed6 <_Z13reduce_by_gcdPmS_>:
    bed6:	cf 93       	push	r28
    bed8:	df 93       	push	r29
    beda:	cd b7       	in	r28, 0x3d	; 61
    bedc:	de b7       	in	r29, 0x3e	; 62
    bede:	60 97       	sbiw	r28, 0x10	; 16
    bee0:	cd bf       	out	0x3d, r28	; 61
    bee2:	de bf       	out	0x3e, r29	; 62
    bee4:	8d 87       	std	Y+13, r24	; 0x0d
    bee6:	9e 87       	std	Y+14, r25	; 0x0e
    bee8:	6f 87       	std	Y+15, r22	; 0x0f
    beea:	78 8b       	std	Y+16, r23	; 0x10
    beec:	8d 85       	ldd	r24, Y+13	; 0x0d
    beee:	9e 85       	ldd	r25, Y+14	; 0x0e
    bef0:	fc 01       	movw	r30, r24
    bef2:	80 81       	ld	r24, Z
    bef4:	91 81       	ldd	r25, Z+1	; 0x01
    bef6:	a2 81       	ldd	r26, Z+2	; 0x02
    bef8:	b3 81       	ldd	r27, Z+3	; 0x03
    befa:	89 87       	std	Y+9, r24	; 0x09
    befc:	9a 87       	std	Y+10, r25	; 0x0a
    befe:	ab 87       	std	Y+11, r26	; 0x0b
    bf00:	bc 87       	std	Y+12, r27	; 0x0c
    bf02:	8f 85       	ldd	r24, Y+15	; 0x0f
    bf04:	98 89       	ldd	r25, Y+16	; 0x10
    bf06:	fc 01       	movw	r30, r24
    bf08:	80 81       	ld	r24, Z
    bf0a:	91 81       	ldd	r25, Z+1	; 0x01
    bf0c:	a2 81       	ldd	r26, Z+2	; 0x02
    bf0e:	b3 81       	ldd	r27, Z+3	; 0x03
    bf10:	8d 83       	std	Y+5, r24	; 0x05
    bf12:	9e 83       	std	Y+6, r25	; 0x06
    bf14:	af 83       	std	Y+7, r26	; 0x07
    bf16:	b8 87       	std	Y+8, r27	; 0x08
    bf18:	89 85       	ldd	r24, Y+9	; 0x09
    bf1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    bf1c:	ab 85       	ldd	r26, Y+11	; 0x0b
    bf1e:	bc 85       	ldd	r27, Y+12	; 0x0c
    bf20:	89 2b       	or	r24, r25
    bf22:	8a 2b       	or	r24, r26
    bf24:	8b 2b       	or	r24, r27
    bf26:	09 f4       	brne	.+2      	; 0xbf2a <_Z13reduce_by_gcdPmS_+0x54>
    bf28:	80 c0       	rjmp	.+256    	; 0xc02a <_Z13reduce_by_gcdPmS_+0x154>
    bf2a:	8d 81       	ldd	r24, Y+5	; 0x05
    bf2c:	9e 81       	ldd	r25, Y+6	; 0x06
    bf2e:	af 81       	ldd	r26, Y+7	; 0x07
    bf30:	b8 85       	ldd	r27, Y+8	; 0x08
    bf32:	89 2b       	or	r24, r25
    bf34:	8a 2b       	or	r24, r26
    bf36:	8b 2b       	or	r24, r27
    bf38:	09 f4       	brne	.+2      	; 0xbf3c <_Z13reduce_by_gcdPmS_+0x66>
    bf3a:	77 c0       	rjmp	.+238    	; 0xc02a <_Z13reduce_by_gcdPmS_+0x154>
    bf3c:	89 85       	ldd	r24, Y+9	; 0x09
    bf3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    bf40:	ab 85       	ldd	r26, Y+11	; 0x0b
    bf42:	bc 85       	ldd	r27, Y+12	; 0x0c
    bf44:	2d 81       	ldd	r18, Y+5	; 0x05
    bf46:	3e 81       	ldd	r19, Y+6	; 0x06
    bf48:	4f 81       	ldd	r20, Y+7	; 0x07
    bf4a:	58 85       	ldd	r21, Y+8	; 0x08
    bf4c:	bc 01       	movw	r22, r24
    bf4e:	cd 01       	movw	r24, r26
    bf50:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    bf54:	dc 01       	movw	r26, r24
    bf56:	cb 01       	movw	r24, r22
    bf58:	89 83       	std	Y+1, r24	; 0x01
    bf5a:	9a 83       	std	Y+2, r25	; 0x02
    bf5c:	ab 83       	std	Y+3, r26	; 0x03
    bf5e:	bc 83       	std	Y+4, r27	; 0x04
    bf60:	89 81       	ldd	r24, Y+1	; 0x01
    bf62:	9a 81       	ldd	r25, Y+2	; 0x02
    bf64:	ab 81       	ldd	r26, Y+3	; 0x03
    bf66:	bc 81       	ldd	r27, Y+4	; 0x04
    bf68:	89 2b       	or	r24, r25
    bf6a:	8a 2b       	or	r24, r26
    bf6c:	8b 2b       	or	r24, r27
    bf6e:	19 f1       	breq	.+70     	; 0xbfb6 <_Z13reduce_by_gcdPmS_+0xe0>
    bf70:	8d 81       	ldd	r24, Y+5	; 0x05
    bf72:	9e 81       	ldd	r25, Y+6	; 0x06
    bf74:	af 81       	ldd	r26, Y+7	; 0x07
    bf76:	b8 85       	ldd	r27, Y+8	; 0x08
    bf78:	89 87       	std	Y+9, r24	; 0x09
    bf7a:	9a 87       	std	Y+10, r25	; 0x0a
    bf7c:	ab 87       	std	Y+11, r26	; 0x0b
    bf7e:	bc 87       	std	Y+12, r27	; 0x0c
    bf80:	89 81       	ldd	r24, Y+1	; 0x01
    bf82:	9a 81       	ldd	r25, Y+2	; 0x02
    bf84:	ab 81       	ldd	r26, Y+3	; 0x03
    bf86:	bc 81       	ldd	r27, Y+4	; 0x04
    bf88:	8d 83       	std	Y+5, r24	; 0x05
    bf8a:	9e 83       	std	Y+6, r25	; 0x06
    bf8c:	af 83       	std	Y+7, r26	; 0x07
    bf8e:	b8 87       	std	Y+8, r27	; 0x08
    bf90:	89 85       	ldd	r24, Y+9	; 0x09
    bf92:	9a 85       	ldd	r25, Y+10	; 0x0a
    bf94:	ab 85       	ldd	r26, Y+11	; 0x0b
    bf96:	bc 85       	ldd	r27, Y+12	; 0x0c
    bf98:	2d 81       	ldd	r18, Y+5	; 0x05
    bf9a:	3e 81       	ldd	r19, Y+6	; 0x06
    bf9c:	4f 81       	ldd	r20, Y+7	; 0x07
    bf9e:	58 85       	ldd	r21, Y+8	; 0x08
    bfa0:	bc 01       	movw	r22, r24
    bfa2:	cd 01       	movw	r24, r26
    bfa4:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    bfa8:	dc 01       	movw	r26, r24
    bfaa:	cb 01       	movw	r24, r22
    bfac:	89 83       	std	Y+1, r24	; 0x01
    bfae:	9a 83       	std	Y+2, r25	; 0x02
    bfb0:	ab 83       	std	Y+3, r26	; 0x03
    bfb2:	bc 83       	std	Y+4, r27	; 0x04
    bfb4:	d5 cf       	rjmp	.-86     	; 0xbf60 <_Z13reduce_by_gcdPmS_+0x8a>
    bfb6:	8d 81       	ldd	r24, Y+5	; 0x05
    bfb8:	9e 81       	ldd	r25, Y+6	; 0x06
    bfba:	af 81       	ldd	r26, Y+7	; 0x07
    bfbc:	b8 85       	ldd	r27, Y+8	; 0x08
    bfbe:	02 97       	sbiw	r24, 0x02	; 2
    bfc0:	a1 05       	cpc	r26, r1
    bfc2:	b1 05       	cpc	r27, r1
    bfc4:	a0 f1       	brcs	.+104    	; 0xc02e <_Z13reduce_by_gcdPmS_+0x158>
    bfc6:	8d 85       	ldd	r24, Y+13	; 0x0d
    bfc8:	9e 85       	ldd	r25, Y+14	; 0x0e
    bfca:	fc 01       	movw	r30, r24
    bfcc:	80 81       	ld	r24, Z
    bfce:	91 81       	ldd	r25, Z+1	; 0x01
    bfd0:	a2 81       	ldd	r26, Z+2	; 0x02
    bfd2:	b3 81       	ldd	r27, Z+3	; 0x03
    bfd4:	2d 81       	ldd	r18, Y+5	; 0x05
    bfd6:	3e 81       	ldd	r19, Y+6	; 0x06
    bfd8:	4f 81       	ldd	r20, Y+7	; 0x07
    bfda:	58 85       	ldd	r21, Y+8	; 0x08
    bfdc:	bc 01       	movw	r22, r24
    bfde:	cd 01       	movw	r24, r26
    bfe0:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    bfe4:	da 01       	movw	r26, r20
    bfe6:	c9 01       	movw	r24, r18
    bfe8:	2d 85       	ldd	r18, Y+13	; 0x0d
    bfea:	3e 85       	ldd	r19, Y+14	; 0x0e
    bfec:	f9 01       	movw	r30, r18
    bfee:	80 83       	st	Z, r24
    bff0:	91 83       	std	Z+1, r25	; 0x01
    bff2:	a2 83       	std	Z+2, r26	; 0x02
    bff4:	b3 83       	std	Z+3, r27	; 0x03
    bff6:	8f 85       	ldd	r24, Y+15	; 0x0f
    bff8:	98 89       	ldd	r25, Y+16	; 0x10
    bffa:	fc 01       	movw	r30, r24
    bffc:	80 81       	ld	r24, Z
    bffe:	91 81       	ldd	r25, Z+1	; 0x01
    c000:	a2 81       	ldd	r26, Z+2	; 0x02
    c002:	b3 81       	ldd	r27, Z+3	; 0x03
    c004:	2d 81       	ldd	r18, Y+5	; 0x05
    c006:	3e 81       	ldd	r19, Y+6	; 0x06
    c008:	4f 81       	ldd	r20, Y+7	; 0x07
    c00a:	58 85       	ldd	r21, Y+8	; 0x08
    c00c:	bc 01       	movw	r22, r24
    c00e:	cd 01       	movw	r24, r26
    c010:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    c014:	da 01       	movw	r26, r20
    c016:	c9 01       	movw	r24, r18
    c018:	2f 85       	ldd	r18, Y+15	; 0x0f
    c01a:	38 89       	ldd	r19, Y+16	; 0x10
    c01c:	f9 01       	movw	r30, r18
    c01e:	80 83       	st	Z, r24
    c020:	91 83       	std	Z+1, r25	; 0x01
    c022:	a2 83       	std	Z+2, r26	; 0x02
    c024:	b3 83       	std	Z+3, r27	; 0x03
    c026:	00 00       	nop
    c028:	02 c0       	rjmp	.+4      	; 0xc02e <_Z13reduce_by_gcdPmS_+0x158>
    c02a:	00 00       	nop
    c02c:	01 c0       	rjmp	.+2      	; 0xc030 <_Z13reduce_by_gcdPmS_+0x15a>
    c02e:	00 00       	nop
    c030:	60 96       	adiw	r28, 0x10	; 16
    c032:	cd bf       	out	0x3d, r28	; 61
    c034:	de bf       	out	0x3e, r29	; 62
    c036:	df 91       	pop	r29
    c038:	cf 91       	pop	r28
    c03a:	08 95       	ret

0000c03c <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    c03c:	0f 93       	push	r16
    c03e:	1f 93       	push	r17
    c040:	cf 93       	push	r28
    c042:	df 93       	push	r29
    c044:	cd b7       	in	r28, 0x3d	; 61
    c046:	de b7       	in	r29, 0x3e	; 62
    c048:	69 97       	sbiw	r28, 0x19	; 25
    c04a:	cd bf       	out	0x3d, r28	; 61
    c04c:	de bf       	out	0x3e, r29	; 62
    c04e:	68 8b       	std	Y+16, r22	; 0x10
    c050:	79 8b       	std	Y+17, r23	; 0x11
    c052:	8a 8b       	std	Y+18, r24	; 0x12
    c054:	9b 8b       	std	Y+19, r25	; 0x13
    c056:	4c 8b       	std	Y+20, r20	; 0x14
    c058:	5d 8b       	std	Y+21, r21	; 0x15
    c05a:	2e 8b       	std	Y+22, r18	; 0x16
    c05c:	3f 8b       	std	Y+23, r19	; 0x17
    c05e:	08 8f       	std	Y+24, r16	; 0x18
    c060:	19 8f       	std	Y+25, r17	; 0x19
    c062:	19 82       	std	Y+1, r1	; 0x01
    c064:	1a 82       	std	Y+2, r1	; 0x02
    c066:	1b 82       	std	Y+3, r1	; 0x03
    c068:	1c 82       	std	Y+4, r1	; 0x04
    c06a:	1d 82       	std	Y+5, r1	; 0x05
    c06c:	1e 82       	std	Y+6, r1	; 0x06
    c06e:	1f 82       	std	Y+7, r1	; 0x07
    c070:	18 86       	std	Y+8, r1	; 0x08
    c072:	8e 89       	ldd	r24, Y+22	; 0x16
    c074:	9f 89       	ldd	r25, Y+23	; 0x17
    c076:	21 e0       	ldi	r18, 0x01	; 1
    c078:	fc 01       	movw	r30, r24
    c07a:	20 83       	st	Z, r18
    c07c:	88 89       	ldd	r24, Y+16	; 0x10
    c07e:	99 89       	ldd	r25, Y+17	; 0x11
    c080:	aa 89       	ldd	r26, Y+18	; 0x12
    c082:	bb 89       	ldd	r27, Y+19	; 0x13
    c084:	80 38       	cpi	r24, 0x80	; 128
    c086:	91 4d       	sbci	r25, 0xD1	; 209
    c088:	a0 4f       	sbci	r26, 0xF0	; 240
    c08a:	b8 40       	sbci	r27, 0x08	; 8
    c08c:	d8 f0       	brcs	.+54     	; 0xc0c4 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    c08e:	84 e0       	ldi	r24, 0x04	; 4
    c090:	90 e0       	ldi	r25, 0x00	; 0
    c092:	a0 e0       	ldi	r26, 0x00	; 0
    c094:	b0 e0       	ldi	r27, 0x00	; 0
    c096:	89 83       	std	Y+1, r24	; 0x01
    c098:	9a 83       	std	Y+2, r25	; 0x02
    c09a:	ab 83       	std	Y+3, r26	; 0x03
    c09c:	bc 83       	std	Y+4, r27	; 0x04
    c09e:	29 81       	ldd	r18, Y+1	; 0x01
    c0a0:	3a 81       	ldd	r19, Y+2	; 0x02
    c0a2:	4b 81       	ldd	r20, Y+3	; 0x03
    c0a4:	5c 81       	ldd	r21, Y+4	; 0x04
    c0a6:	88 89       	ldd	r24, Y+16	; 0x10
    c0a8:	99 89       	ldd	r25, Y+17	; 0x11
    c0aa:	aa 89       	ldd	r26, Y+18	; 0x12
    c0ac:	bb 89       	ldd	r27, Y+19	; 0x13
    c0ae:	bc 01       	movw	r22, r24
    c0b0:	cd 01       	movw	r24, r26
    c0b2:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    c0b6:	dc 01       	movw	r26, r24
    c0b8:	cb 01       	movw	r24, r22
    c0ba:	8d 83       	std	Y+5, r24	; 0x05
    c0bc:	9e 83       	std	Y+6, r25	; 0x06
    c0be:	af 83       	std	Y+7, r26	; 0x07
    c0c0:	b8 87       	std	Y+8, r27	; 0x08
    c0c2:	6e c0       	rjmp	.+220    	; 0xc1a0 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    c0c4:	19 86       	std	Y+9, r1	; 0x09
    c0c6:	1a 86       	std	Y+10, r1	; 0x0a
    c0c8:	1b 86       	std	Y+11, r1	; 0x0b
    c0ca:	89 85       	ldd	r24, Y+9	; 0x09
    c0cc:	88 23       	and	r24, r24
    c0ce:	09 f0       	breq	.+2      	; 0xc0d2 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    c0d0:	52 c0       	rjmp	.+164    	; 0xc176 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    c0d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    c0d4:	28 2f       	mov	r18, r24
    c0d6:	30 e0       	ldi	r19, 0x00	; 0
    c0d8:	40 e0       	ldi	r20, 0x00	; 0
    c0da:	50 e0       	ldi	r21, 0x00	; 0
    c0dc:	88 89       	ldd	r24, Y+16	; 0x10
    c0de:	99 89       	ldd	r25, Y+17	; 0x11
    c0e0:	aa 89       	ldd	r26, Y+18	; 0x12
    c0e2:	bb 89       	ldd	r27, Y+19	; 0x13
    c0e4:	bc 01       	movw	r22, r24
    c0e6:	cd 01       	movw	r24, r26
    c0e8:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    c0ec:	9b 01       	movw	r18, r22
    c0ee:	ac 01       	movw	r20, r24
    c0f0:	80 e0       	ldi	r24, 0x00	; 0
    c0f2:	99 ee       	ldi	r25, 0xE9	; 233
    c0f4:	a4 ea       	ldi	r26, 0xA4	; 164
    c0f6:	b5 e3       	ldi	r27, 0x35	; 53
    c0f8:	82 1b       	sub	r24, r18
    c0fa:	93 0b       	sbc	r25, r19
    c0fc:	a4 0b       	sbc	r26, r20
    c0fe:	b5 0b       	sbc	r27, r21
    c100:	8c 87       	std	Y+12, r24	; 0x0c
    c102:	9d 87       	std	Y+13, r25	; 0x0d
    c104:	ae 87       	std	Y+14, r26	; 0x0e
    c106:	bf 87       	std	Y+15, r27	; 0x0f
    c108:	8b 85       	ldd	r24, Y+11	; 0x0b
    c10a:	8e 5f       	subi	r24, 0xFE	; 254
    c10c:	8b 87       	std	Y+11, r24	; 0x0b
    c10e:	8c 85       	ldd	r24, Y+12	; 0x0c
    c110:	9d 85       	ldd	r25, Y+13	; 0x0d
    c112:	ae 85       	ldd	r26, Y+14	; 0x0e
    c114:	bf 85       	ldd	r27, Y+15	; 0x0f
    c116:	81 15       	cp	r24, r1
    c118:	96 44       	sbci	r25, 0x46	; 70
    c11a:	a3 4c       	sbci	r26, 0xC3	; 195
    c11c:	b3 42       	sbci	r27, 0x23	; 35
    c11e:	40 f1       	brcs	.+80     	; 0xc170 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    c120:	8c 85       	ldd	r24, Y+12	; 0x0c
    c122:	9d 85       	ldd	r25, Y+13	; 0x0d
    c124:	ae 85       	ldd	r26, Y+14	; 0x0e
    c126:	bf 85       	ldd	r27, Y+15	; 0x0f
    c128:	28 89       	ldd	r18, Y+16	; 0x10
    c12a:	39 89       	ldd	r19, Y+17	; 0x11
    c12c:	4a 89       	ldd	r20, Y+18	; 0x12
    c12e:	5b 89       	ldd	r21, Y+19	; 0x13
    c130:	bc 01       	movw	r22, r24
    c132:	cd 01       	movw	r24, r26
    c134:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    c138:	da 01       	movw	r26, r20
    c13a:	c9 01       	movw	r24, r18
    c13c:	8c 87       	std	Y+12, r24	; 0x0c
    c13e:	9d 87       	std	Y+13, r25	; 0x0d
    c140:	ae 87       	std	Y+14, r26	; 0x0e
    c142:	bf 87       	std	Y+15, r27	; 0x0f
    c144:	8c 85       	ldd	r24, Y+12	; 0x0c
    c146:	9d 85       	ldd	r25, Y+13	; 0x0d
    c148:	ae 85       	ldd	r26, Y+14	; 0x0e
    c14a:	bf 85       	ldd	r27, Y+15	; 0x0f
    c14c:	04 97       	sbiw	r24, 0x04	; 4
    c14e:	a1 05       	cpc	r26, r1
    c150:	b1 05       	cpc	r27, r1
    c152:	08 f4       	brcc	.+2      	; 0xc156 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    c154:	ba cf       	rjmp	.-140    	; 0xc0ca <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c156:	81 e0       	ldi	r24, 0x01	; 1
    c158:	89 87       	std	Y+9, r24	; 0x09
    c15a:	81 e0       	ldi	r24, 0x01	; 1
    c15c:	8a 87       	std	Y+10, r24	; 0x0a
    c15e:	8c 85       	ldd	r24, Y+12	; 0x0c
    c160:	9d 85       	ldd	r25, Y+13	; 0x0d
    c162:	ae 85       	ldd	r26, Y+14	; 0x0e
    c164:	bf 85       	ldd	r27, Y+15	; 0x0f
    c166:	89 83       	std	Y+1, r24	; 0x01
    c168:	9a 83       	std	Y+2, r25	; 0x02
    c16a:	ab 83       	std	Y+3, r26	; 0x03
    c16c:	bc 83       	std	Y+4, r27	; 0x04
    c16e:	ad cf       	rjmp	.-166    	; 0xc0ca <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c170:	81 e0       	ldi	r24, 0x01	; 1
    c172:	89 87       	std	Y+9, r24	; 0x09
    c174:	aa cf       	rjmp	.-172    	; 0xc0ca <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c176:	8a 85       	ldd	r24, Y+10	; 0x0a
    c178:	88 23       	and	r24, r24
    c17a:	91 f0       	breq	.+36     	; 0xc1a0 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    c17c:	29 81       	ldd	r18, Y+1	; 0x01
    c17e:	3a 81       	ldd	r19, Y+2	; 0x02
    c180:	4b 81       	ldd	r20, Y+3	; 0x03
    c182:	5c 81       	ldd	r21, Y+4	; 0x04
    c184:	88 89       	ldd	r24, Y+16	; 0x10
    c186:	99 89       	ldd	r25, Y+17	; 0x11
    c188:	aa 89       	ldd	r26, Y+18	; 0x12
    c18a:	bb 89       	ldd	r27, Y+19	; 0x13
    c18c:	bc 01       	movw	r22, r24
    c18e:	cd 01       	movw	r24, r26
    c190:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    c194:	dc 01       	movw	r26, r24
    c196:	cb 01       	movw	r24, r22
    c198:	8d 83       	std	Y+5, r24	; 0x05
    c19a:	9e 83       	std	Y+6, r25	; 0x06
    c19c:	af 83       	std	Y+7, r26	; 0x07
    c19e:	b8 87       	std	Y+8, r27	; 0x08
    c1a0:	21 e0       	ldi	r18, 0x01	; 1
    c1a2:	89 81       	ldd	r24, Y+1	; 0x01
    c1a4:	9a 81       	ldd	r25, Y+2	; 0x02
    c1a6:	ab 81       	ldd	r26, Y+3	; 0x03
    c1a8:	bc 81       	ldd	r27, Y+4	; 0x04
    c1aa:	04 97       	sbiw	r24, 0x04	; 4
    c1ac:	a1 05       	cpc	r26, r1
    c1ae:	b1 05       	cpc	r27, r1
    c1b0:	09 f0       	breq	.+2      	; 0xc1b4 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    c1b2:	20 e0       	ldi	r18, 0x00	; 0
    c1b4:	88 8d       	ldd	r24, Y+24	; 0x18
    c1b6:	99 8d       	ldd	r25, Y+25	; 0x19
    c1b8:	fc 01       	movw	r30, r24
    c1ba:	20 83       	st	Z, r18
    c1bc:	89 81       	ldd	r24, Y+1	; 0x01
    c1be:	9a 81       	ldd	r25, Y+2	; 0x02
    c1c0:	ab 81       	ldd	r26, Y+3	; 0x03
    c1c2:	bc 81       	ldd	r27, Y+4	; 0x04
    c1c4:	88 0f       	add	r24, r24
    c1c6:	99 1f       	adc	r25, r25
    c1c8:	aa 1f       	adc	r26, r26
    c1ca:	bb 1f       	adc	r27, r27
    c1cc:	88 0f       	add	r24, r24
    c1ce:	99 1f       	adc	r25, r25
    c1d0:	aa 1f       	adc	r26, r26
    c1d2:	bb 1f       	adc	r27, r27
    c1d4:	88 0f       	add	r24, r24
    c1d6:	99 1f       	adc	r25, r25
    c1d8:	aa 1f       	adc	r26, r26
    c1da:	bb 1f       	adc	r27, r27
    c1dc:	88 0f       	add	r24, r24
    c1de:	99 1f       	adc	r25, r25
    c1e0:	aa 1f       	adc	r26, r26
    c1e2:	bb 1f       	adc	r27, r27
    c1e4:	88 0f       	add	r24, r24
    c1e6:	99 1f       	adc	r25, r25
    c1e8:	aa 1f       	adc	r26, r26
    c1ea:	bb 1f       	adc	r27, r27
    c1ec:	88 0f       	add	r24, r24
    c1ee:	99 1f       	adc	r25, r25
    c1f0:	aa 1f       	adc	r26, r26
    c1f2:	bb 1f       	adc	r27, r27
    c1f4:	88 0f       	add	r24, r24
    c1f6:	99 1f       	adc	r25, r25
    c1f8:	aa 1f       	adc	r26, r26
    c1fa:	bb 1f       	adc	r27, r27
    c1fc:	92 50       	subi	r25, 0x02	; 2
    c1fe:	a1 09       	sbc	r26, r1
    c200:	b1 09       	sbc	r27, r1
    c202:	2c 89       	ldd	r18, Y+20	; 0x14
    c204:	3d 89       	ldd	r19, Y+21	; 0x15
    c206:	f9 01       	movw	r30, r18
    c208:	80 83       	st	Z, r24
    c20a:	91 83       	std	Z+1, r25	; 0x01
    c20c:	a2 83       	std	Z+2, r26	; 0x02
    c20e:	b3 83       	std	Z+3, r27	; 0x03
    c210:	8c 89       	ldd	r24, Y+20	; 0x14
    c212:	9d 89       	ldd	r25, Y+21	; 0x15
    c214:	fc 01       	movw	r30, r24
    c216:	14 82       	std	Z+4, r1	; 0x04
    c218:	15 82       	std	Z+5, r1	; 0x05
    c21a:	16 82       	std	Z+6, r1	; 0x06
    c21c:	17 82       	std	Z+7, r1	; 0x07
    c21e:	2c 89       	ldd	r18, Y+20	; 0x14
    c220:	3d 89       	ldd	r19, Y+21	; 0x15
    c222:	81 e0       	ldi	r24, 0x01	; 1
    c224:	90 e0       	ldi	r25, 0x00	; 0
    c226:	a0 e0       	ldi	r26, 0x00	; 0
    c228:	b0 e0       	ldi	r27, 0x00	; 0
    c22a:	f9 01       	movw	r30, r18
    c22c:	80 87       	std	Z+8, r24	; 0x08
    c22e:	91 87       	std	Z+9, r25	; 0x09
    c230:	a2 87       	std	Z+10, r26	; 0x0a
    c232:	b3 87       	std	Z+11, r27	; 0x0b
    c234:	8d 81       	ldd	r24, Y+5	; 0x05
    c236:	9e 81       	ldd	r25, Y+6	; 0x06
    c238:	af 81       	ldd	r26, Y+7	; 0x07
    c23a:	b8 85       	ldd	r27, Y+8	; 0x08
    c23c:	bc 01       	movw	r22, r24
    c23e:	cd 01       	movw	r24, r26
    c240:	69 96       	adiw	r28, 0x19	; 25
    c242:	cd bf       	out	0x3d, r28	; 61
    c244:	de bf       	out	0x3e, r29	; 62
    c246:	df 91       	pop	r29
    c248:	cf 91       	pop	r28
    c24a:	1f 91       	pop	r17
    c24c:	0f 91       	pop	r16
    c24e:	08 95       	ret

0000c250 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    c250:	0f 93       	push	r16
    c252:	1f 93       	push	r17
    c254:	cf 93       	push	r28
    c256:	df 93       	push	r29
    c258:	cd b7       	in	r28, 0x3d	; 61
    c25a:	de b7       	in	r29, 0x3e	; 62
    c25c:	6e 97       	sbiw	r28, 0x1e	; 30
    c25e:	cd bf       	out	0x3d, r28	; 61
    c260:	de bf       	out	0x3e, r29	; 62
    c262:	6d 8b       	std	Y+21, r22	; 0x15
    c264:	7e 8b       	std	Y+22, r23	; 0x16
    c266:	8f 8b       	std	Y+23, r24	; 0x17
    c268:	98 8f       	std	Y+24, r25	; 0x18
    c26a:	49 8f       	std	Y+25, r20	; 0x19
    c26c:	5a 8f       	std	Y+26, r21	; 0x1a
    c26e:	2b 8f       	std	Y+27, r18	; 0x1b
    c270:	3c 8f       	std	Y+28, r19	; 0x1c
    c272:	0d 8f       	std	Y+29, r16	; 0x1d
    c274:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    c276:	80 91 78 4a 	lds	r24, 0x4A78	; 0x804a78 <_ZL8freqVCOB>
    c27a:	90 91 79 4a 	lds	r25, 0x4A79	; 0x804a79 <_ZL8freqVCOB+0x1>
    c27e:	a0 91 7a 4a 	lds	r26, 0x4A7A	; 0x804a7a <_ZL8freqVCOB+0x2>
    c282:	b0 91 7b 4a 	lds	r27, 0x4A7B	; 0x804a7b <_ZL8freqVCOB+0x3>
    c286:	2d 89       	ldd	r18, Y+21	; 0x15
    c288:	3e 89       	ldd	r19, Y+22	; 0x16
    c28a:	4f 89       	ldd	r20, Y+23	; 0x17
    c28c:	58 8d       	ldd	r21, Y+24	; 0x18
    c28e:	bc 01       	movw	r22, r24
    c290:	cd 01       	movw	r24, r26
    c292:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    c296:	da 01       	movw	r26, r20
    c298:	c9 01       	movw	r24, r18
    c29a:	89 83       	std	Y+1, r24	; 0x01
    c29c:	9a 83       	std	Y+2, r25	; 0x02
    c29e:	ab 83       	std	Y+3, r26	; 0x03
    c2a0:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    c2a2:	80 91 78 4a 	lds	r24, 0x4A78	; 0x804a78 <_ZL8freqVCOB>
    c2a6:	90 91 79 4a 	lds	r25, 0x4A79	; 0x804a79 <_ZL8freqVCOB+0x1>
    c2aa:	a0 91 7a 4a 	lds	r26, 0x4A7A	; 0x804a7a <_ZL8freqVCOB+0x2>
    c2ae:	b0 91 7b 4a 	lds	r27, 0x4A7B	; 0x804a7b <_ZL8freqVCOB+0x3>
    c2b2:	2d 89       	ldd	r18, Y+21	; 0x15
    c2b4:	3e 89       	ldd	r19, Y+22	; 0x16
    c2b6:	4f 89       	ldd	r20, Y+23	; 0x17
    c2b8:	58 8d       	ldd	r21, Y+24	; 0x18
    c2ba:	bc 01       	movw	r22, r24
    c2bc:	cd 01       	movw	r24, r26
    c2be:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    c2c2:	dc 01       	movw	r26, r24
    c2c4:	cb 01       	movw	r24, r22
    c2c6:	8d 87       	std	Y+13, r24	; 0x0d
    c2c8:	9e 87       	std	Y+14, r25	; 0x0e
    c2ca:	af 87       	std	Y+15, r26	; 0x0f
    c2cc:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    c2ce:	8d 89       	ldd	r24, Y+21	; 0x15
    c2d0:	9e 89       	ldd	r25, Y+22	; 0x16
    c2d2:	af 89       	ldd	r26, Y+23	; 0x17
    c2d4:	b8 8d       	ldd	r27, Y+24	; 0x18
    c2d6:	89 8b       	std	Y+17, r24	; 0x11
    c2d8:	9a 8b       	std	Y+18, r25	; 0x12
    c2da:	ab 8b       	std	Y+19, r26	; 0x13
    c2dc:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    c2de:	9e 01       	movw	r18, r28
    c2e0:	2f 5e       	subi	r18, 0xEF	; 239
    c2e2:	3f 4f       	sbci	r19, 0xFF	; 255
    c2e4:	ce 01       	movw	r24, r28
    c2e6:	0d 96       	adiw	r24, 0x0d	; 13
    c2e8:	b9 01       	movw	r22, r18
    c2ea:	0e 94 6b 5f 	call	0xbed6	; 0xbed6 <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    c2ee:	80 91 78 4a 	lds	r24, 0x4A78	; 0x804a78 <_ZL8freqVCOB>
    c2f2:	90 91 79 4a 	lds	r25, 0x4A79	; 0x804a79 <_ZL8freqVCOB+0x1>
    c2f6:	a0 91 7a 4a 	lds	r26, 0x4A7A	; 0x804a7a <_ZL8freqVCOB+0x2>
    c2fa:	b0 91 7b 4a 	lds	r27, 0x4A7B	; 0x804a7b <_ZL8freqVCOB+0x3>
    c2fe:	8d 8b       	std	Y+21, r24	; 0x15
    c300:	9e 8b       	std	Y+22, r25	; 0x16
    c302:	af 8b       	std	Y+23, r26	; 0x17
    c304:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    c306:	29 89       	ldd	r18, Y+17	; 0x11
    c308:	3a 89       	ldd	r19, Y+18	; 0x12
    c30a:	4b 89       	ldd	r20, Y+19	; 0x13
    c30c:	5c 89       	ldd	r21, Y+20	; 0x14
    c30e:	89 81       	ldd	r24, Y+1	; 0x01
    c310:	9a 81       	ldd	r25, Y+2	; 0x02
    c312:	ab 81       	ldd	r26, Y+3	; 0x03
    c314:	bc 81       	ldd	r27, Y+4	; 0x04
    c316:	bc 01       	movw	r22, r24
    c318:	cd 01       	movw	r24, r26
    c31a:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    c31e:	9b 01       	movw	r18, r22
    c320:	ac 01       	movw	r20, r24
    c322:	8d 85       	ldd	r24, Y+13	; 0x0d
    c324:	9e 85       	ldd	r25, Y+14	; 0x0e
    c326:	af 85       	ldd	r26, Y+15	; 0x0f
    c328:	b8 89       	ldd	r27, Y+16	; 0x10
    c32a:	28 0f       	add	r18, r24
    c32c:	39 1f       	adc	r19, r25
    c32e:	4a 1f       	adc	r20, r26
    c330:	5b 1f       	adc	r21, r27
    c332:	8d 89       	ldd	r24, Y+21	; 0x15
    c334:	9e 89       	ldd	r25, Y+22	; 0x16
    c336:	af 89       	ldd	r26, Y+23	; 0x17
    c338:	b8 8d       	ldd	r27, Y+24	; 0x18
    c33a:	bc 01       	movw	r22, r24
    c33c:	cd 01       	movw	r24, r26
    c33e:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    c342:	da 01       	movw	r26, r20
    c344:	c9 01       	movw	r24, r18
    c346:	8d 8b       	std	Y+21, r24	; 0x15
    c348:	9e 8b       	std	Y+22, r25	; 0x16
    c34a:	af 8b       	std	Y+23, r26	; 0x17
    c34c:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    c34e:	89 89       	ldd	r24, Y+17	; 0x11
    c350:	9a 89       	ldd	r25, Y+18	; 0x12
    c352:	ab 89       	ldd	r26, Y+19	; 0x13
    c354:	bc 89       	ldd	r27, Y+20	; 0x14
    c356:	2d 89       	ldd	r18, Y+21	; 0x15
    c358:	3e 89       	ldd	r19, Y+22	; 0x16
    c35a:	4f 89       	ldd	r20, Y+23	; 0x17
    c35c:	58 8d       	ldd	r21, Y+24	; 0x18
    c35e:	bc 01       	movw	r22, r24
    c360:	cd 01       	movw	r24, r26
    c362:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    c366:	dc 01       	movw	r26, r24
    c368:	cb 01       	movw	r24, r22
    c36a:	8d 8b       	std	Y+21, r24	; 0x15
    c36c:	9e 8b       	std	Y+22, r25	; 0x16
    c36e:	af 8b       	std	Y+23, r26	; 0x17
    c370:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    c372:	8d 85       	ldd	r24, Y+13	; 0x0d
    c374:	9e 85       	ldd	r25, Y+14	; 0x0e
    c376:	af 85       	ldd	r26, Y+15	; 0x0f
    c378:	b8 89       	ldd	r27, Y+16	; 0x10
    c37a:	89 2b       	or	r24, r25
    c37c:	8a 2b       	or	r24, r26
    c37e:	8b 2b       	or	r24, r27
    c380:	71 f4       	brne	.+28     	; 0xc39e <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    c382:	89 81       	ldd	r24, Y+1	; 0x01
    c384:	9a 81       	ldd	r25, Y+2	; 0x02
    c386:	ab 81       	ldd	r26, Y+3	; 0x03
    c388:	bc 81       	ldd	r27, Y+4	; 0x04
    c38a:	81 70       	andi	r24, 0x01	; 1
    c38c:	99 27       	eor	r25, r25
    c38e:	aa 27       	eor	r26, r26
    c390:	bb 27       	eor	r27, r27
    c392:	89 2b       	or	r24, r25
    c394:	8a 2b       	or	r24, r26
    c396:	8b 2b       	or	r24, r27
    c398:	11 f4       	brne	.+4      	; 0xc39e <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    c39a:	21 e0       	ldi	r18, 0x01	; 1
    c39c:	01 c0       	rjmp	.+2      	; 0xc3a0 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    c39e:	20 e0       	ldi	r18, 0x00	; 0
    c3a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    c3a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    c3a4:	fc 01       	movw	r30, r24
    c3a6:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    c3a8:	89 81       	ldd	r24, Y+1	; 0x01
    c3aa:	9a 81       	ldd	r25, Y+2	; 0x02
    c3ac:	ab 81       	ldd	r26, Y+3	; 0x03
    c3ae:	bc 81       	ldd	r27, Y+4	; 0x04
    c3b0:	04 97       	sbiw	r24, 0x04	; 4
    c3b2:	a1 05       	cpc	r26, r1
    c3b4:	b1 05       	cpc	r27, r1
    c3b6:	41 f4       	brne	.+16     	; 0xc3c8 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    c3b8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    c3ba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    c3bc:	fc 01       	movw	r30, r24
    c3be:	80 81       	ld	r24, Z
    c3c0:	88 23       	and	r24, r24
    c3c2:	11 f0       	breq	.+4      	; 0xc3c8 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    c3c4:	21 e0       	ldi	r18, 0x01	; 1
    c3c6:	01 c0       	rjmp	.+2      	; 0xc3ca <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    c3c8:	20 e0       	ldi	r18, 0x00	; 0
    c3ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    c3cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    c3ce:	fc 01       	movw	r30, r24
    c3d0:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    c3d2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    c3d4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    c3d6:	fc 01       	movw	r30, r24
    c3d8:	80 81       	ld	r24, Z
    c3da:	88 23       	and	r24, r24
    c3dc:	d1 f0       	breq	.+52     	; 0xc412 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    c3de:	89 8d       	ldd	r24, Y+25	; 0x19
    c3e0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c3e2:	fc 01       	movw	r30, r24
    c3e4:	10 82       	st	Z, r1
    c3e6:	11 82       	std	Z+1, r1	; 0x01
    c3e8:	12 82       	std	Z+2, r1	; 0x02
    c3ea:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    c3ec:	89 8d       	ldd	r24, Y+25	; 0x19
    c3ee:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c3f0:	fc 01       	movw	r30, r24
    c3f2:	14 82       	std	Z+4, r1	; 0x04
    c3f4:	15 82       	std	Z+5, r1	; 0x05
    c3f6:	16 82       	std	Z+6, r1	; 0x06
    c3f8:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    c3fa:	29 8d       	ldd	r18, Y+25	; 0x19
    c3fc:	3a 8d       	ldd	r19, Y+26	; 0x1a
    c3fe:	81 e0       	ldi	r24, 0x01	; 1
    c400:	90 e0       	ldi	r25, 0x00	; 0
    c402:	a0 e0       	ldi	r26, 0x00	; 0
    c404:	b0 e0       	ldi	r27, 0x00	; 0
    c406:	f9 01       	movw	r30, r18
    c408:	80 87       	std	Z+8, r24	; 0x08
    c40a:	91 87       	std	Z+9, r25	; 0x09
    c40c:	a2 87       	std	Z+10, r26	; 0x0a
    c40e:	b3 87       	std	Z+11, r27	; 0x0b
    c410:	92 c0       	rjmp	.+292    	; 0xc536 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    c412:	8d 85       	ldd	r24, Y+13	; 0x0d
    c414:	9e 85       	ldd	r25, Y+14	; 0x0e
    c416:	af 85       	ldd	r26, Y+15	; 0x0f
    c418:	b8 89       	ldd	r27, Y+16	; 0x10
    c41a:	88 0f       	add	r24, r24
    c41c:	99 1f       	adc	r25, r25
    c41e:	aa 1f       	adc	r26, r26
    c420:	bb 1f       	adc	r27, r27
    c422:	88 0f       	add	r24, r24
    c424:	99 1f       	adc	r25, r25
    c426:	aa 1f       	adc	r26, r26
    c428:	bb 1f       	adc	r27, r27
    c42a:	88 0f       	add	r24, r24
    c42c:	99 1f       	adc	r25, r25
    c42e:	aa 1f       	adc	r26, r26
    c430:	bb 1f       	adc	r27, r27
    c432:	88 0f       	add	r24, r24
    c434:	99 1f       	adc	r25, r25
    c436:	aa 1f       	adc	r26, r26
    c438:	bb 1f       	adc	r27, r27
    c43a:	88 0f       	add	r24, r24
    c43c:	99 1f       	adc	r25, r25
    c43e:	aa 1f       	adc	r26, r26
    c440:	bb 1f       	adc	r27, r27
    c442:	88 0f       	add	r24, r24
    c444:	99 1f       	adc	r25, r25
    c446:	aa 1f       	adc	r26, r26
    c448:	bb 1f       	adc	r27, r27
    c44a:	88 0f       	add	r24, r24
    c44c:	99 1f       	adc	r25, r25
    c44e:	aa 1f       	adc	r26, r26
    c450:	bb 1f       	adc	r27, r27
    c452:	8d 83       	std	Y+5, r24	; 0x05
    c454:	9e 83       	std	Y+6, r25	; 0x06
    c456:	af 83       	std	Y+7, r26	; 0x07
    c458:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    c45a:	29 89       	ldd	r18, Y+17	; 0x11
    c45c:	3a 89       	ldd	r19, Y+18	; 0x12
    c45e:	4b 89       	ldd	r20, Y+19	; 0x13
    c460:	5c 89       	ldd	r21, Y+20	; 0x14
    c462:	8d 81       	ldd	r24, Y+5	; 0x05
    c464:	9e 81       	ldd	r25, Y+6	; 0x06
    c466:	af 81       	ldd	r26, Y+7	; 0x07
    c468:	b8 85       	ldd	r27, Y+8	; 0x08
    c46a:	bc 01       	movw	r22, r24
    c46c:	cd 01       	movw	r24, r26
    c46e:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    c472:	da 01       	movw	r26, r20
    c474:	c9 01       	movw	r24, r18
    c476:	89 87       	std	Y+9, r24	; 0x09
    c478:	9a 87       	std	Y+10, r25	; 0x0a
    c47a:	ab 87       	std	Y+11, r26	; 0x0b
    c47c:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    c47e:	89 81       	ldd	r24, Y+1	; 0x01
    c480:	9a 81       	ldd	r25, Y+2	; 0x02
    c482:	ab 81       	ldd	r26, Y+3	; 0x03
    c484:	bc 81       	ldd	r27, Y+4	; 0x04
    c486:	88 0f       	add	r24, r24
    c488:	99 1f       	adc	r25, r25
    c48a:	aa 1f       	adc	r26, r26
    c48c:	bb 1f       	adc	r27, r27
    c48e:	88 0f       	add	r24, r24
    c490:	99 1f       	adc	r25, r25
    c492:	aa 1f       	adc	r26, r26
    c494:	bb 1f       	adc	r27, r27
    c496:	88 0f       	add	r24, r24
    c498:	99 1f       	adc	r25, r25
    c49a:	aa 1f       	adc	r26, r26
    c49c:	bb 1f       	adc	r27, r27
    c49e:	88 0f       	add	r24, r24
    c4a0:	99 1f       	adc	r25, r25
    c4a2:	aa 1f       	adc	r26, r26
    c4a4:	bb 1f       	adc	r27, r27
    c4a6:	88 0f       	add	r24, r24
    c4a8:	99 1f       	adc	r25, r25
    c4aa:	aa 1f       	adc	r26, r26
    c4ac:	bb 1f       	adc	r27, r27
    c4ae:	88 0f       	add	r24, r24
    c4b0:	99 1f       	adc	r25, r25
    c4b2:	aa 1f       	adc	r26, r26
    c4b4:	bb 1f       	adc	r27, r27
    c4b6:	88 0f       	add	r24, r24
    c4b8:	99 1f       	adc	r25, r25
    c4ba:	aa 1f       	adc	r26, r26
    c4bc:	bb 1f       	adc	r27, r27
    c4be:	9c 01       	movw	r18, r24
    c4c0:	ad 01       	movw	r20, r26
    c4c2:	89 85       	ldd	r24, Y+9	; 0x09
    c4c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    c4c6:	ab 85       	ldd	r26, Y+11	; 0x0b
    c4c8:	bc 85       	ldd	r27, Y+12	; 0x0c
    c4ca:	82 0f       	add	r24, r18
    c4cc:	93 1f       	adc	r25, r19
    c4ce:	a4 1f       	adc	r26, r20
    c4d0:	b5 1f       	adc	r27, r21
    c4d2:	92 50       	subi	r25, 0x02	; 2
    c4d4:	a1 09       	sbc	r26, r1
    c4d6:	b1 09       	sbc	r27, r1
    c4d8:	29 8d       	ldd	r18, Y+25	; 0x19
    c4da:	3a 8d       	ldd	r19, Y+26	; 0x1a
    c4dc:	f9 01       	movw	r30, r18
    c4de:	80 83       	st	Z, r24
    c4e0:	91 83       	std	Z+1, r25	; 0x01
    c4e2:	a2 83       	std	Z+2, r26	; 0x02
    c4e4:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    c4e6:	29 89       	ldd	r18, Y+17	; 0x11
    c4e8:	3a 89       	ldd	r19, Y+18	; 0x12
    c4ea:	4b 89       	ldd	r20, Y+19	; 0x13
    c4ec:	5c 89       	ldd	r21, Y+20	; 0x14
    c4ee:	89 85       	ldd	r24, Y+9	; 0x09
    c4f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    c4f2:	ab 85       	ldd	r26, Y+11	; 0x0b
    c4f4:	bc 85       	ldd	r27, Y+12	; 0x0c
    c4f6:	bc 01       	movw	r22, r24
    c4f8:	cd 01       	movw	r24, r26
    c4fa:	0e 94 d4 72 	call	0xe5a8	; 0xe5a8 <__mulsi3>
    c4fe:	9b 01       	movw	r18, r22
    c500:	ac 01       	movw	r20, r24
    c502:	8d 81       	ldd	r24, Y+5	; 0x05
    c504:	9e 81       	ldd	r25, Y+6	; 0x06
    c506:	af 81       	ldd	r26, Y+7	; 0x07
    c508:	b8 85       	ldd	r27, Y+8	; 0x08
    c50a:	82 1b       	sub	r24, r18
    c50c:	93 0b       	sbc	r25, r19
    c50e:	a4 0b       	sbc	r26, r20
    c510:	b5 0b       	sbc	r27, r21
    c512:	29 8d       	ldd	r18, Y+25	; 0x19
    c514:	3a 8d       	ldd	r19, Y+26	; 0x1a
    c516:	f9 01       	movw	r30, r18
    c518:	84 83       	std	Z+4, r24	; 0x04
    c51a:	95 83       	std	Z+5, r25	; 0x05
    c51c:	a6 83       	std	Z+6, r26	; 0x06
    c51e:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    c520:	89 89       	ldd	r24, Y+17	; 0x11
    c522:	9a 89       	ldd	r25, Y+18	; 0x12
    c524:	ab 89       	ldd	r26, Y+19	; 0x13
    c526:	bc 89       	ldd	r27, Y+20	; 0x14
    c528:	29 8d       	ldd	r18, Y+25	; 0x19
    c52a:	3a 8d       	ldd	r19, Y+26	; 0x1a
    c52c:	f9 01       	movw	r30, r18
    c52e:	80 87       	std	Z+8, r24	; 0x08
    c530:	91 87       	std	Z+9, r25	; 0x09
    c532:	a2 87       	std	Z+10, r26	; 0x0a
    c534:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    c536:	8d 89       	ldd	r24, Y+21	; 0x15
    c538:	9e 89       	ldd	r25, Y+22	; 0x16
    c53a:	af 89       	ldd	r26, Y+23	; 0x17
    c53c:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    c53e:	bc 01       	movw	r22, r24
    c540:	cd 01       	movw	r24, r26
    c542:	6e 96       	adiw	r28, 0x1e	; 30
    c544:	cd bf       	out	0x3d, r28	; 61
    c546:	de bf       	out	0x3e, r29	; 62
    c548:	df 91       	pop	r29
    c54a:	cf 91       	pop	r28
    c54c:	1f 91       	pop	r17
    c54e:	0f 91       	pop	r16
    c550:	08 95       	ret

0000c552 <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    c552:	cf 93       	push	r28
    c554:	df 93       	push	r29
    c556:	cd b7       	in	r28, 0x3d	; 61
    c558:	de b7       	in	r29, 0x3e	; 62
    c55a:	26 97       	sbiw	r28, 0x06	; 6
    c55c:	cd bf       	out	0x3d, r28	; 61
    c55e:	de bf       	out	0x3e, r29	; 62
    c560:	8b 83       	std	Y+3, r24	; 0x03
    c562:	6c 83       	std	Y+4, r22	; 0x04
    c564:	7d 83       	std	Y+5, r23	; 0x05
    c566:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 5;
    c568:	85 e0       	ldi	r24, 0x05	; 5
    c56a:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_0_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    c56c:	89 81       	ldd	r24, Y+1	; 0x01
    c56e:	9f ef       	ldi	r25, 0xFF	; 255
    c570:	98 0f       	add	r25, r24
    c572:	99 83       	std	Y+1, r25	; 0x01
    c574:	88 23       	and	r24, r24
    c576:	a1 f0       	breq	.+40     	; 0xc5a0 <_Z17si5351_write_bulkhPhh+0x4e>
    c578:	8c 81       	ldd	r24, Y+4	; 0x04
    c57a:	9d 81       	ldd	r25, Y+5	; 0x05
    c57c:	2e 81       	ldd	r18, Y+6	; 0x06
    c57e:	ac 01       	movw	r20, r24
    c580:	6b 81       	ldd	r22, Y+3	; 0x03
    c582:	80 ec       	ldi	r24, 0xC0	; 192
    c584:	0e 94 e2 47 	call	0x8fc4	; 0x8fc4 <I2C_0_SendData>
    c588:	28 2f       	mov	r18, r24
    c58a:	81 e0       	ldi	r24, 0x01	; 1
    c58c:	9e 81       	ldd	r25, Y+6	; 0x06
    c58e:	29 17       	cp	r18, r25
    c590:	09 f4       	brne	.+2      	; 0xc594 <_Z17si5351_write_bulkhPhh+0x42>
    c592:	80 e0       	ldi	r24, 0x00	; 0
    c594:	8a 83       	std	Y+2, r24	; 0x02
    c596:	8a 81       	ldd	r24, Y+2	; 0x02
    c598:	88 23       	and	r24, r24
    c59a:	11 f0       	breq	.+4      	; 0xc5a0 <_Z17si5351_write_bulkhPhh+0x4e>
    c59c:	81 e0       	ldi	r24, 0x01	; 1
    c59e:	01 c0       	rjmp	.+2      	; 0xc5a2 <_Z17si5351_write_bulkhPhh+0x50>
    c5a0:	80 e0       	ldi	r24, 0x00	; 0
    c5a2:	88 23       	and	r24, r24
    c5a4:	09 f0       	breq	.+2      	; 0xc5a8 <_Z17si5351_write_bulkhPhh+0x56>
    c5a6:	e2 cf       	rjmp	.-60     	; 0xc56c <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    c5a8:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    c5aa:	26 96       	adiw	r28, 0x06	; 6
    c5ac:	cd bf       	out	0x3d, r28	; 61
    c5ae:	de bf       	out	0x3e, r29	; 62
    c5b0:	df 91       	pop	r29
    c5b2:	cf 91       	pop	r28
    c5b4:	08 95       	ret

0000c5b6 <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    c5b6:	cf 93       	push	r28
    c5b8:	df 93       	push	r29
    c5ba:	cd b7       	in	r28, 0x3d	; 61
    c5bc:	de b7       	in	r29, 0x3e	; 62
    c5be:	26 97       	sbiw	r28, 0x06	; 6
    c5c0:	cd bf       	out	0x3d, r28	; 61
    c5c2:	de bf       	out	0x3e, r29	; 62
    c5c4:	8b 83       	std	Y+3, r24	; 0x03
    c5c6:	6c 83       	std	Y+4, r22	; 0x04
    c5c8:	7d 83       	std	Y+5, r23	; 0x05
    c5ca:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 5;
    c5cc:	85 e0       	ldi	r24, 0x05	; 5
    c5ce:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_0_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    c5d0:	89 81       	ldd	r24, Y+1	; 0x01
    c5d2:	9f ef       	ldi	r25, 0xFF	; 255
    c5d4:	98 0f       	add	r25, r24
    c5d6:	99 83       	std	Y+1, r25	; 0x01
    c5d8:	88 23       	and	r24, r24
    c5da:	a1 f0       	breq	.+40     	; 0xc604 <_Z16si5351_read_bulkhPhh+0x4e>
    c5dc:	8c 81       	ldd	r24, Y+4	; 0x04
    c5de:	9d 81       	ldd	r25, Y+5	; 0x05
    c5e0:	2e 81       	ldd	r18, Y+6	; 0x06
    c5e2:	ac 01       	movw	r20, r24
    c5e4:	6b 81       	ldd	r22, Y+3	; 0x03
    c5e6:	80 ec       	ldi	r24, 0xC0	; 192
    c5e8:	0e 94 4a 48 	call	0x9094	; 0x9094 <I2C_0_GetData>
    c5ec:	28 2f       	mov	r18, r24
    c5ee:	81 e0       	ldi	r24, 0x01	; 1
    c5f0:	9e 81       	ldd	r25, Y+6	; 0x06
    c5f2:	29 17       	cp	r18, r25
    c5f4:	09 f4       	brne	.+2      	; 0xc5f8 <_Z16si5351_read_bulkhPhh+0x42>
    c5f6:	80 e0       	ldi	r24, 0x00	; 0
    c5f8:	8a 83       	std	Y+2, r24	; 0x02
    c5fa:	8a 81       	ldd	r24, Y+2	; 0x02
    c5fc:	88 23       	and	r24, r24
    c5fe:	11 f0       	breq	.+4      	; 0xc604 <_Z16si5351_read_bulkhPhh+0x4e>
    c600:	81 e0       	ldi	r24, 0x01	; 1
    c602:	01 c0       	rjmp	.+2      	; 0xc606 <_Z16si5351_read_bulkhPhh+0x50>
    c604:	80 e0       	ldi	r24, 0x00	; 0
    c606:	88 23       	and	r24, r24
    c608:	09 f0       	breq	.+2      	; 0xc60c <_Z16si5351_read_bulkhPhh+0x56>
    c60a:	e2 cf       	rjmp	.-60     	; 0xc5d0 <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    c60c:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    c60e:	26 96       	adiw	r28, 0x06	; 6
    c610:	cd bf       	out	0x3d, r28	; 61
    c612:	de bf       	out	0x3e, r29	; 62
    c614:	df 91       	pop	r29
    c616:	cf 91       	pop	r28
    c618:	08 95       	ret

0000c61a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    c61a:	cf 93       	push	r28
    c61c:	df 93       	push	r29
    c61e:	cd b7       	in	r28, 0x3d	; 61
    c620:	de b7       	in	r29, 0x3e	; 62
    c622:	25 97       	sbiw	r28, 0x05	; 5
    c624:	cd bf       	out	0x3d, r28	; 61
    c626:	de bf       	out	0x3e, r29	; 62
    c628:	8c 83       	std	Y+4, r24	; 0x04
    c62a:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    c62c:	8c 81       	ldd	r24, Y+4	; 0x04
    c62e:	20 e1       	ldi	r18, 0x10	; 16
    c630:	28 0f       	add	r18, r24
    c632:	ce 01       	movw	r24, r28
    c634:	02 96       	adiw	r24, 0x02	; 2
    c636:	41 e0       	ldi	r20, 0x01	; 1
    c638:	bc 01       	movw	r22, r24
    c63a:	82 2f       	mov	r24, r18
    c63c:	0e 94 db 62 	call	0xc5b6	; 0xc5b6 <_Z16si5351_read_bulkhPhh>
    c640:	88 23       	and	r24, r24
    c642:	11 f0       	breq	.+4      	; 0xc648 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    c644:	81 e0       	ldi	r24, 0x01	; 1
    c646:	20 c0       	rjmp	.+64     	; 0xc688 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    c648:	8a 81       	ldd	r24, Y+2	; 0x02
    c64a:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    c64c:	8d 81       	ldd	r24, Y+5	; 0x05
    c64e:	81 30       	cpi	r24, 0x01	; 1
    c650:	21 f4       	brne	.+8      	; 0xc65a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    c652:	89 81       	ldd	r24, Y+1	; 0x01
    c654:	8f 7d       	andi	r24, 0xDF	; 223
    c656:	89 83       	std	Y+1, r24	; 0x01
    c658:	06 c0       	rjmp	.+12     	; 0xc666 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    c65a:	8d 81       	ldd	r24, Y+5	; 0x05
    c65c:	82 30       	cpi	r24, 0x02	; 2
    c65e:	19 f4       	brne	.+6      	; 0xc666 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    c660:	89 81       	ldd	r24, Y+1	; 0x01
    c662:	80 62       	ori	r24, 0x20	; 32
    c664:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    c666:	89 81       	ldd	r24, Y+1	; 0x01
    c668:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    c66a:	8c 81       	ldd	r24, Y+4	; 0x04
    c66c:	20 e1       	ldi	r18, 0x10	; 16
    c66e:	28 0f       	add	r18, r24
    c670:	ce 01       	movw	r24, r28
    c672:	02 96       	adiw	r24, 0x02	; 2
    c674:	41 e0       	ldi	r20, 0x01	; 1
    c676:	bc 01       	movw	r22, r24
    c678:	82 2f       	mov	r24, r18
    c67a:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    c67e:	88 23       	and	r24, r24
    c680:	11 f0       	breq	.+4      	; 0xc686 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    c682:	81 e0       	ldi	r24, 0x01	; 1
    c684:	01 c0       	rjmp	.+2      	; 0xc688 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    c686:	80 e0       	ldi	r24, 0x00	; 0
	}
    c688:	25 96       	adiw	r28, 0x05	; 5
    c68a:	cd bf       	out	0x3d, r28	; 61
    c68c:	de bf       	out	0x3e, r29	; 62
    c68e:	df 91       	pop	r29
    c690:	cf 91       	pop	r28
    c692:	08 95       	ret

0000c694 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    c694:	8f 92       	push	r8
    c696:	af 92       	push	r10
    c698:	cf 92       	push	r12
    c69a:	df 92       	push	r13
    c69c:	ef 92       	push	r14
    c69e:	ff 92       	push	r15
    c6a0:	0f 93       	push	r16
    c6a2:	1f 93       	push	r17
    c6a4:	cf 93       	push	r28
    c6a6:	df 93       	push	r29
    c6a8:	cd b7       	in	r28, 0x3d	; 61
    c6aa:	de b7       	in	r29, 0x3e	; 62
    c6ac:	6e 97       	sbiw	r28, 0x1e	; 30
    c6ae:	cd bf       	out	0x3d, r28	; 61
    c6b0:	de bf       	out	0x3e, r29	; 62
    c6b2:	88 8b       	std	Y+16, r24	; 0x10
    c6b4:	c9 8a       	std	Y+17, r12	; 0x11
    c6b6:	da 8a       	std	Y+18, r13	; 0x12
    c6b8:	eb 8a       	std	Y+19, r14	; 0x13
    c6ba:	fc 8a       	std	Y+20, r15	; 0x14
    c6bc:	0d 8b       	std	Y+21, r16	; 0x15
    c6be:	1e 8b       	std	Y+22, r17	; 0x16
    c6c0:	2f 8b       	std	Y+23, r18	; 0x17
    c6c2:	38 8f       	std	Y+24, r19	; 0x18
    c6c4:	49 8f       	std	Y+25, r20	; 0x19
    c6c6:	5a 8f       	std	Y+26, r21	; 0x1a
    c6c8:	6b 8f       	std	Y+27, r22	; 0x1b
    c6ca:	7c 8f       	std	Y+28, r23	; 0x1c
    c6cc:	ad 8e       	std	Y+29, r10	; 0x1d
    c6ce:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    c6d0:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    c6d2:	89 81       	ldd	r24, Y+1	; 0x01
    c6d4:	91 e0       	ldi	r25, 0x01	; 1
    c6d6:	98 0f       	add	r25, r24
    c6d8:	99 83       	std	Y+1, r25	; 0x01
    c6da:	88 2f       	mov	r24, r24
    c6dc:	90 e0       	ldi	r25, 0x00	; 0
    c6de:	4a 8d       	ldd	r20, Y+26	; 0x1a
    c6e0:	9e 01       	movw	r18, r28
    c6e2:	2d 5f       	subi	r18, 0xFD	; 253
    c6e4:	3f 4f       	sbci	r19, 0xFF	; 255
    c6e6:	82 0f       	add	r24, r18
    c6e8:	93 1f       	adc	r25, r19
    c6ea:	fc 01       	movw	r30, r24
    c6ec:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    c6ee:	89 81       	ldd	r24, Y+1	; 0x01
    c6f0:	91 e0       	ldi	r25, 0x01	; 1
    c6f2:	98 0f       	add	r25, r24
    c6f4:	99 83       	std	Y+1, r25	; 0x01
    c6f6:	88 2f       	mov	r24, r24
    c6f8:	90 e0       	ldi	r25, 0x00	; 0
    c6fa:	49 8d       	ldd	r20, Y+25	; 0x19
    c6fc:	9e 01       	movw	r18, r28
    c6fe:	2d 5f       	subi	r18, 0xFD	; 253
    c700:	3f 4f       	sbci	r19, 0xFF	; 255
    c702:	82 0f       	add	r24, r18
    c704:	93 1f       	adc	r25, r19
    c706:	fc 01       	movw	r30, r24
    c708:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    c70a:	88 89       	ldd	r24, Y+16	; 0x10
    c70c:	88 0f       	add	r24, r24
    c70e:	88 0f       	add	r24, r24
    c710:	88 0f       	add	r24, r24
    c712:	2c e2       	ldi	r18, 0x2C	; 44
    c714:	28 0f       	add	r18, r24
    c716:	ce 01       	movw	r24, r28
    c718:	0e 96       	adiw	r24, 0x0e	; 14
    c71a:	41 e0       	ldi	r20, 0x01	; 1
    c71c:	bc 01       	movw	r22, r24
    c71e:	82 2f       	mov	r24, r18
    c720:	0e 94 db 62 	call	0xc5b6	; 0xc5b6 <_Z16si5351_read_bulkhPhh>
    c724:	88 23       	and	r24, r24
    c726:	11 f0       	breq	.+4      	; 0xc72c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    c728:	81 e0       	ldi	r24, 0x01	; 1
    c72a:	bc c0       	rjmp	.+376    	; 0xc8a4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    c72c:	8e 85       	ldd	r24, Y+14	; 0x0e
    c72e:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    c730:	8a 81       	ldd	r24, Y+2	; 0x02
    c732:	8c 7f       	andi	r24, 0xFC	; 252
    c734:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    c736:	89 81       	ldd	r24, Y+1	; 0x01
    c738:	91 e0       	ldi	r25, 0x01	; 1
    c73a:	98 0f       	add	r25, r24
    c73c:	99 83       	std	Y+1, r25	; 0x01
    c73e:	88 2f       	mov	r24, r24
    c740:	90 e0       	ldi	r25, 0x00	; 0
    c742:	2b 89       	ldd	r18, Y+19	; 0x13
    c744:	32 2f       	mov	r19, r18
    c746:	33 70       	andi	r19, 0x03	; 3
    c748:	2a 81       	ldd	r18, Y+2	; 0x02
    c74a:	23 2b       	or	r18, r19
    c74c:	42 2f       	mov	r20, r18
    c74e:	9e 01       	movw	r18, r28
    c750:	2d 5f       	subi	r18, 0xFD	; 253
    c752:	3f 4f       	sbci	r19, 0xFF	; 255
    c754:	82 0f       	add	r24, r18
    c756:	93 1f       	adc	r25, r19
    c758:	fc 01       	movw	r30, r24
    c75a:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    c75c:	89 81       	ldd	r24, Y+1	; 0x01
    c75e:	91 e0       	ldi	r25, 0x01	; 1
    c760:	98 0f       	add	r25, r24
    c762:	99 83       	std	Y+1, r25	; 0x01
    c764:	88 2f       	mov	r24, r24
    c766:	90 e0       	ldi	r25, 0x00	; 0
    c768:	4a 89       	ldd	r20, Y+18	; 0x12
    c76a:	9e 01       	movw	r18, r28
    c76c:	2d 5f       	subi	r18, 0xFD	; 253
    c76e:	3f 4f       	sbci	r19, 0xFF	; 255
    c770:	82 0f       	add	r24, r18
    c772:	93 1f       	adc	r25, r19
    c774:	fc 01       	movw	r30, r24
    c776:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    c778:	89 81       	ldd	r24, Y+1	; 0x01
    c77a:	91 e0       	ldi	r25, 0x01	; 1
    c77c:	98 0f       	add	r25, r24
    c77e:	99 83       	std	Y+1, r25	; 0x01
    c780:	88 2f       	mov	r24, r24
    c782:	90 e0       	ldi	r25, 0x00	; 0
    c784:	49 89       	ldd	r20, Y+17	; 0x11
    c786:	9e 01       	movw	r18, r28
    c788:	2d 5f       	subi	r18, 0xFD	; 253
    c78a:	3f 4f       	sbci	r19, 0xFF	; 255
    c78c:	82 0f       	add	r24, r18
    c78e:	93 1f       	adc	r25, r19
    c790:	fc 01       	movw	r30, r24
    c792:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    c794:	89 81       	ldd	r24, Y+1	; 0x01
    c796:	88 2f       	mov	r24, r24
    c798:	90 e0       	ldi	r25, 0x00	; 0
    c79a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    c79c:	42 2f       	mov	r20, r18
    c79e:	42 95       	swap	r20
    c7a0:	40 7f       	andi	r20, 0xF0	; 240
    c7a2:	9e 01       	movw	r18, r28
    c7a4:	2d 5f       	subi	r18, 0xFD	; 253
    c7a6:	3f 4f       	sbci	r19, 0xFF	; 255
    c7a8:	82 0f       	add	r24, r18
    c7aa:	93 1f       	adc	r25, r19
    c7ac:	fc 01       	movw	r30, r24
    c7ae:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    c7b0:	29 81       	ldd	r18, Y+1	; 0x01
    c7b2:	81 e0       	ldi	r24, 0x01	; 1
    c7b4:	82 0f       	add	r24, r18
    c7b6:	89 83       	std	Y+1, r24	; 0x01
    c7b8:	82 2f       	mov	r24, r18
    c7ba:	90 e0       	ldi	r25, 0x00	; 0
    c7bc:	22 2f       	mov	r18, r18
    c7be:	30 e0       	ldi	r19, 0x00	; 0
    c7c0:	ae 01       	movw	r20, r28
    c7c2:	4d 5f       	subi	r20, 0xFD	; 253
    c7c4:	5f 4f       	sbci	r21, 0xFF	; 255
    c7c6:	24 0f       	add	r18, r20
    c7c8:	35 1f       	adc	r19, r21
    c7ca:	f9 01       	movw	r30, r18
    c7cc:	30 81       	ld	r19, Z
    c7ce:	2f 89       	ldd	r18, Y+23	; 0x17
    c7d0:	2f 70       	andi	r18, 0x0F	; 15
    c7d2:	43 2f       	mov	r20, r19
    c7d4:	42 0f       	add	r20, r18
    c7d6:	9e 01       	movw	r18, r28
    c7d8:	2d 5f       	subi	r18, 0xFD	; 253
    c7da:	3f 4f       	sbci	r19, 0xFF	; 255
    c7dc:	82 0f       	add	r24, r18
    c7de:	93 1f       	adc	r25, r19
    c7e0:	fc 01       	movw	r30, r24
    c7e2:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    c7e4:	89 81       	ldd	r24, Y+1	; 0x01
    c7e6:	91 e0       	ldi	r25, 0x01	; 1
    c7e8:	98 0f       	add	r25, r24
    c7ea:	99 83       	std	Y+1, r25	; 0x01
    c7ec:	88 2f       	mov	r24, r24
    c7ee:	90 e0       	ldi	r25, 0x00	; 0
    c7f0:	4e 89       	ldd	r20, Y+22	; 0x16
    c7f2:	9e 01       	movw	r18, r28
    c7f4:	2d 5f       	subi	r18, 0xFD	; 253
    c7f6:	3f 4f       	sbci	r19, 0xFF	; 255
    c7f8:	82 0f       	add	r24, r18
    c7fa:	93 1f       	adc	r25, r19
    c7fc:	fc 01       	movw	r30, r24
    c7fe:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    c800:	89 81       	ldd	r24, Y+1	; 0x01
    c802:	91 e0       	ldi	r25, 0x01	; 1
    c804:	98 0f       	add	r25, r24
    c806:	99 83       	std	Y+1, r25	; 0x01
    c808:	88 2f       	mov	r24, r24
    c80a:	90 e0       	ldi	r25, 0x00	; 0
    c80c:	4d 89       	ldd	r20, Y+21	; 0x15
    c80e:	9e 01       	movw	r18, r28
    c810:	2d 5f       	subi	r18, 0xFD	; 253
    c812:	3f 4f       	sbci	r19, 0xFF	; 255
    c814:	82 0f       	add	r24, r18
    c816:	93 1f       	adc	r25, r19
    c818:	fc 01       	movw	r30, r24
    c81a:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    c81c:	88 89       	ldd	r24, Y+16	; 0x10
    c81e:	88 2f       	mov	r24, r24
    c820:	90 e0       	ldi	r25, 0x00	; 0
    c822:	81 30       	cpi	r24, 0x01	; 1
    c824:	91 05       	cpc	r25, r1
    c826:	89 f0       	breq	.+34     	; 0xc84a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    c828:	82 30       	cpi	r24, 0x02	; 2
    c82a:	91 05       	cpc	r25, r1
    c82c:	c9 f0       	breq	.+50     	; 0xc860 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    c82e:	89 2b       	or	r24, r25
    c830:	09 f0       	breq	.+2      	; 0xc834 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    c832:	26 c0       	rjmp	.+76     	; 0xc880 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    c834:	ce 01       	movw	r24, r28
    c836:	03 96       	adiw	r24, 0x03	; 3
    c838:	49 81       	ldd	r20, Y+1	; 0x01
    c83a:	bc 01       	movw	r22, r24
    c83c:	8a e2       	ldi	r24, 0x2A	; 42
    c83e:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    c842:	88 23       	and	r24, r24
    c844:	c1 f0       	breq	.+48     	; 0xc876 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    c846:	81 e0       	ldi	r24, 0x01	; 1
    c848:	2d c0       	rjmp	.+90     	; 0xc8a4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    c84a:	ce 01       	movw	r24, r28
    c84c:	03 96       	adiw	r24, 0x03	; 3
    c84e:	49 81       	ldd	r20, Y+1	; 0x01
    c850:	bc 01       	movw	r22, r24
    c852:	82 e3       	ldi	r24, 0x32	; 50
    c854:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    c858:	88 23       	and	r24, r24
    c85a:	79 f0       	breq	.+30     	; 0xc87a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    c85c:	81 e0       	ldi	r24, 0x01	; 1
    c85e:	22 c0       	rjmp	.+68     	; 0xc8a4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    c860:	ce 01       	movw	r24, r28
    c862:	03 96       	adiw	r24, 0x03	; 3
    c864:	49 81       	ldd	r20, Y+1	; 0x01
    c866:	bc 01       	movw	r22, r24
    c868:	8a e3       	ldi	r24, 0x3A	; 58
    c86a:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
    c86e:	88 23       	and	r24, r24
    c870:	31 f0       	breq	.+12     	; 0xc87e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    c872:	81 e0       	ldi	r24, 0x01	; 1
    c874:	17 c0       	rjmp	.+46     	; 0xc8a4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    c876:	00 00       	nop
    c878:	03 c0       	rjmp	.+6      	; 0xc880 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    c87a:	00 00       	nop
    c87c:	01 c0       	rjmp	.+2      	; 0xc880 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    c87e:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    c880:	6d 8d       	ldd	r22, Y+29	; 0x1d
    c882:	88 89       	ldd	r24, Y+16	; 0x10
    c884:	0e 94 60 64 	call	0xc8c0	; 0xc8c0 <_Z16set_integer_mode12si5351_clockb>
    c888:	88 23       	and	r24, r24
    c88a:	11 f0       	breq	.+4      	; 0xc890 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    c88c:	81 e0       	ldi	r24, 0x01	; 1
    c88e:	0a c0       	rjmp	.+20     	; 0xc8a4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    c890:	4b a5       	ldd	r20, Y+43	; 0x2b
    c892:	6e 8d       	ldd	r22, Y+30	; 0x1e
    c894:	88 89       	ldd	r24, Y+16	; 0x10
    c896:	0e 94 95 64 	call	0xc92a	; 0xc92a <_Z6ms_div12si5351_clockhb>
    c89a:	88 23       	and	r24, r24
    c89c:	11 f0       	breq	.+4      	; 0xc8a2 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    c89e:	81 e0       	ldi	r24, 0x01	; 1
    c8a0:	01 c0       	rjmp	.+2      	; 0xc8a4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    c8a2:	80 e0       	ldi	r24, 0x00	; 0
	}
    c8a4:	6e 96       	adiw	r28, 0x1e	; 30
    c8a6:	cd bf       	out	0x3d, r28	; 61
    c8a8:	de bf       	out	0x3e, r29	; 62
    c8aa:	df 91       	pop	r29
    c8ac:	cf 91       	pop	r28
    c8ae:	1f 91       	pop	r17
    c8b0:	0f 91       	pop	r16
    c8b2:	ff 90       	pop	r15
    c8b4:	ef 90       	pop	r14
    c8b6:	df 90       	pop	r13
    c8b8:	cf 90       	pop	r12
    c8ba:	af 90       	pop	r10
    c8bc:	8f 90       	pop	r8
    c8be:	08 95       	ret

0000c8c0 <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    c8c0:	cf 93       	push	r28
    c8c2:	df 93       	push	r29
    c8c4:	cd b7       	in	r28, 0x3d	; 61
    c8c6:	de b7       	in	r29, 0x3e	; 62
    c8c8:	25 97       	sbiw	r28, 0x05	; 5
    c8ca:	cd bf       	out	0x3d, r28	; 61
    c8cc:	de bf       	out	0x3e, r29	; 62
    c8ce:	8c 83       	std	Y+4, r24	; 0x04
    c8d0:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    c8d2:	8c 81       	ldd	r24, Y+4	; 0x04
    c8d4:	20 e1       	ldi	r18, 0x10	; 16
    c8d6:	28 0f       	add	r18, r24
    c8d8:	ce 01       	movw	r24, r28
    c8da:	02 96       	adiw	r24, 0x02	; 2
    c8dc:	41 e0       	ldi	r20, 0x01	; 1
    c8de:	bc 01       	movw	r22, r24
    c8e0:	82 2f       	mov	r24, r18
    c8e2:	0e 94 db 62 	call	0xc5b6	; 0xc5b6 <_Z16si5351_read_bulkhPhh>
    c8e6:	88 23       	and	r24, r24
    c8e8:	11 f0       	breq	.+4      	; 0xc8ee <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    c8ea:	81 e0       	ldi	r24, 0x01	; 1
    c8ec:	18 c0       	rjmp	.+48     	; 0xc91e <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    c8ee:	8a 81       	ldd	r24, Y+2	; 0x02
    c8f0:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    c8f2:	8d 81       	ldd	r24, Y+5	; 0x05
    c8f4:	88 23       	and	r24, r24
    c8f6:	21 f0       	breq	.+8      	; 0xc900 <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    c8f8:	89 81       	ldd	r24, Y+1	; 0x01
    c8fa:	80 64       	ori	r24, 0x40	; 64
    c8fc:	89 83       	std	Y+1, r24	; 0x01
    c8fe:	03 c0       	rjmp	.+6      	; 0xc906 <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    c900:	89 81       	ldd	r24, Y+1	; 0x01
    c902:	8f 7b       	andi	r24, 0xBF	; 191
    c904:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    c906:	89 81       	ldd	r24, Y+1	; 0x01
    c908:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    c90a:	8c 81       	ldd	r24, Y+4	; 0x04
    c90c:	20 e1       	ldi	r18, 0x10	; 16
    c90e:	28 0f       	add	r18, r24
    c910:	ce 01       	movw	r24, r28
    c912:	02 96       	adiw	r24, 0x02	; 2
    c914:	41 e0       	ldi	r20, 0x01	; 1
    c916:	bc 01       	movw	r22, r24
    c918:	82 2f       	mov	r24, r18
    c91a:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
	}
    c91e:	25 96       	adiw	r28, 0x05	; 5
    c920:	cd bf       	out	0x3d, r28	; 61
    c922:	de bf       	out	0x3e, r29	; 62
    c924:	df 91       	pop	r29
    c926:	cf 91       	pop	r28
    c928:	08 95       	ret

0000c92a <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    c92a:	cf 93       	push	r28
    c92c:	df 93       	push	r29
    c92e:	cd b7       	in	r28, 0x3d	; 61
    c930:	de b7       	in	r29, 0x3e	; 62
    c932:	27 97       	sbiw	r28, 0x07	; 7
    c934:	cd bf       	out	0x3d, r28	; 61
    c936:	de bf       	out	0x3e, r29	; 62
    c938:	8d 83       	std	Y+5, r24	; 0x05
    c93a:	6e 83       	std	Y+6, r22	; 0x06
    c93c:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    c93e:	8d 81       	ldd	r24, Y+5	; 0x05
    c940:	88 2f       	mov	r24, r24
    c942:	90 e0       	ldi	r25, 0x00	; 0
    c944:	81 30       	cpi	r24, 0x01	; 1
    c946:	91 05       	cpc	r25, r1
    c948:	41 f0       	breq	.+16     	; 0xc95a <_Z6ms_div12si5351_clockhb+0x30>
    c94a:	82 30       	cpi	r24, 0x02	; 2
    c94c:	91 05       	cpc	r25, r1
    c94e:	41 f0       	breq	.+16     	; 0xc960 <_Z6ms_div12si5351_clockhb+0x36>
    c950:	89 2b       	or	r24, r25
    c952:	49 f4       	brne	.+18     	; 0xc966 <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    c954:	8c e2       	ldi	r24, 0x2C	; 44
    c956:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    c958:	08 c0       	rjmp	.+16     	; 0xc96a <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    c95a:	84 e3       	ldi	r24, 0x34	; 52
    c95c:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    c95e:	05 c0       	rjmp	.+10     	; 0xc96a <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    c960:	8c e3       	ldi	r24, 0x3C	; 60
    c962:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    c964:	02 c0       	rjmp	.+4      	; 0xc96a <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    c966:	81 e0       	ldi	r24, 0x01	; 1
    c968:	30 c0       	rjmp	.+96     	; 0xc9ca <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    c96a:	ce 01       	movw	r24, r28
    c96c:	03 96       	adiw	r24, 0x03	; 3
    c96e:	41 e0       	ldi	r20, 0x01	; 1
    c970:	bc 01       	movw	r22, r24
    c972:	8a 81       	ldd	r24, Y+2	; 0x02
    c974:	0e 94 db 62 	call	0xc5b6	; 0xc5b6 <_Z16si5351_read_bulkhPhh>
    c978:	88 23       	and	r24, r24
    c97a:	11 f0       	breq	.+4      	; 0xc980 <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    c97c:	81 e0       	ldi	r24, 0x01	; 1
    c97e:	25 c0       	rjmp	.+74     	; 0xc9ca <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    c980:	8b 81       	ldd	r24, Y+3	; 0x03
    c982:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    c984:	89 81       	ldd	r24, Y+1	; 0x01
    c986:	83 78       	andi	r24, 0x83	; 131
    c988:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    c98a:	8f 81       	ldd	r24, Y+7	; 0x07
    c98c:	88 23       	and	r24, r24
    c98e:	21 f0       	breq	.+8      	; 0xc998 <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    c990:	89 81       	ldd	r24, Y+1	; 0x01
    c992:	8c 60       	ori	r24, 0x0C	; 12
    c994:	89 83       	std	Y+1, r24	; 0x01
    c996:	03 c0       	rjmp	.+6      	; 0xc99e <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    c998:	89 81       	ldd	r24, Y+1	; 0x01
    c99a:	83 7f       	andi	r24, 0xF3	; 243
    c99c:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    c99e:	8e 81       	ldd	r24, Y+6	; 0x06
    c9a0:	88 2f       	mov	r24, r24
    c9a2:	90 e0       	ldi	r25, 0x00	; 0
    c9a4:	82 95       	swap	r24
    c9a6:	92 95       	swap	r25
    c9a8:	90 7f       	andi	r25, 0xF0	; 240
    c9aa:	98 27       	eor	r25, r24
    c9ac:	80 7f       	andi	r24, 0xF0	; 240
    c9ae:	98 27       	eor	r25, r24
    c9b0:	98 2f       	mov	r25, r24
    c9b2:	89 81       	ldd	r24, Y+1	; 0x01
    c9b4:	89 2b       	or	r24, r25
    c9b6:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    c9b8:	89 81       	ldd	r24, Y+1	; 0x01
    c9ba:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    c9bc:	ce 01       	movw	r24, r28
    c9be:	03 96       	adiw	r24, 0x03	; 3
    c9c0:	41 e0       	ldi	r20, 0x01	; 1
    c9c2:	bc 01       	movw	r22, r24
    c9c4:	8a 81       	ldd	r24, Y+2	; 0x02
    c9c6:	0e 94 a9 62 	call	0xc552	; 0xc552 <_Z17si5351_write_bulkhPhh>
	}
    c9ca:	27 96       	adiw	r28, 0x07	; 7
    c9cc:	cd bf       	out	0x3d, r28	; 61
    c9ce:	de bf       	out	0x3e, r29	; 62
    c9d0:	df 91       	pop	r29
    c9d2:	cf 91       	pop	r28
    c9d4:	08 95       	ret

0000c9d6 <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    c9d6:	cf 93       	push	r28
    c9d8:	df 93       	push	r29
    c9da:	cd b7       	in	r28, 0x3d	; 61
    c9dc:	de b7       	in	r29, 0x3e	; 62

	SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp; /* Sleep enable: disabled */
    c9de:	80 e5       	ldi	r24, 0x50	; 80
    c9e0:	90 e0       	ldi	r25, 0x00	; 0
    c9e2:	fc 01       	movw	r30, r24
    c9e4:	10 82       	st	Z, r1
//			 | SLPCTRL_SMODE_IDLE_gc;  /* Idle mode */
//			 | SLPCTRL_SMODE_STDBY_gc; /* Standby Mode */
//			 | SLPCTRL_SMODE_PDOWN_gc; /* Power-down Mode */

	return 0;
    c9e6:	80 e0       	ldi	r24, 0x00	; 0
}
    c9e8:	df 91       	pop	r29
    c9ea:	cf 91       	pop	r28
    c9ec:	08 95       	ret

0000c9ee <SLPCTRL_set_sleep_mode>:

void SLPCTRL_set_sleep_mode(SLPCTRL_SMODE_t setmode)
{
    c9ee:	cf 93       	push	r28
    c9f0:	df 93       	push	r29
    c9f2:	1f 92       	push	r1
    c9f4:	cd b7       	in	r28, 0x3d	; 61
    c9f6:	de b7       	in	r29, 0x3e	; 62
    c9f8:	89 83       	std	Y+1, r24	; 0x01
	SLPCTRL.CTRLA = (SLPCTRL.CTRLA & ~SLPCTRL_SMODE_gm) | (setmode & SLPCTRL_SMODE_gm);
    c9fa:	80 e5       	ldi	r24, 0x50	; 80
    c9fc:	90 e0       	ldi	r25, 0x00	; 0
    c9fe:	20 e5       	ldi	r18, 0x50	; 80
    ca00:	30 e0       	ldi	r19, 0x00	; 0
    ca02:	f9 01       	movw	r30, r18
    ca04:	20 81       	ld	r18, Z
    ca06:	32 2f       	mov	r19, r18
    ca08:	39 7f       	andi	r19, 0xF9	; 249
    ca0a:	29 81       	ldd	r18, Y+1	; 0x01
    ca0c:	26 70       	andi	r18, 0x06	; 6
    ca0e:	23 2b       	or	r18, r19
    ca10:	fc 01       	movw	r30, r24
    ca12:	20 83       	st	Z, r18
}
    ca14:	00 00       	nop
    ca16:	0f 90       	pop	r0
    ca18:	df 91       	pop	r29
    ca1a:	cf 91       	pop	r28
    ca1c:	08 95       	ret

0000ca1e <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    ca1e:	cf 93       	push	r28
    ca20:	df 93       	push	r29
    ca22:	cd b7       	in	r28, 0x3d	; 61
    ca24:	de b7       	in	r29, 0x3e	; 62
/**
TB0: Periodic tasks not requiring precise timing. Rate = 300 Hz
*/

TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    ca26:	80 e0       	ldi	r24, 0x00	; 0
    ca28:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    ca2a:	21 e0       	ldi	r18, 0x01	; 1
    ca2c:	fc 01       	movw	r30, r24
    ca2e:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    ca30:	80 e0       	ldi	r24, 0x00	; 0
    ca32:	9b e0       	ldi	r25, 0x0B	; 11
    ca34:	20 e4       	ldi	r18, 0x40	; 64
    ca36:	3c e9       	ldi	r19, 0x9C	; 156
    ca38:	fc 01       	movw	r30, r24
    ca3a:	24 87       	std	Z+12, r18	; 0x0c
    ca3c:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    ca3e:	80 e0       	ldi	r24, 0x00	; 0
    ca40:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    ca42:	23 e0       	ldi	r18, 0x03	; 3
    ca44:	fc 01       	movw	r30, r24
    ca46:	20 83       	st	Z, r18

TCB0.INTFLAGS = (TCB_CAPT_bm | TCB_OVF_bm); /* Clear flag */
    ca48:	80 e0       	ldi	r24, 0x00	; 0
    ca4a:	9b e0       	ldi	r25, 0x0B	; 11
    ca4c:	23 e0       	ldi	r18, 0x03	; 3
    ca4e:	fc 01       	movw	r30, r24
    ca50:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/
/** 
LED Timer
*/
TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    ca52:	80 e1       	ldi	r24, 0x10	; 16
    ca54:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    ca56:	21 e0       	ldi	r18, 0x01	; 1
    ca58:	fc 01       	movw	r30, r24
    ca5a:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x9C40;
    ca5c:	80 e1       	ldi	r24, 0x10	; 16
    ca5e:	9b e0       	ldi	r25, 0x0B	; 11
    ca60:	20 e4       	ldi	r18, 0x40	; 64
    ca62:	3c e9       	ldi	r19, 0x9C	; 156
    ca64:	fc 01       	movw	r30, r24
    ca66:	24 87       	std	Z+12, r18	; 0x0c
    ca68:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    ca6a:	80 e1       	ldi	r24, 0x10	; 16
    ca6c:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    ca6e:	23 e0       	ldi	r18, 0x03	; 3
    ca70:	fc 01       	movw	r30, r24
    ca72:	20 83       	st	Z, r18

TCB1.INTFLAGS = (TCB_CAPT_bm | TCB_OVF_bm); /* Clear flag */
    ca74:	80 e1       	ldi	r24, 0x10	; 16
    ca76:	9b e0       	ldi	r25, 0x0B	; 11
    ca78:	23 e0       	ldi	r18, 0x03	; 3
    ca7a:	fc 01       	movw	r30, r24
    ca7c:	26 83       	std	Z+6, r18	; 0x06
/********************************************************************************/
/** 
I2C Timeout Flag Timer
*/

CPUINT.LVL1VEC = 30; /* Set to level 1 - highest priority interrupt */
    ca7e:	80 e1       	ldi	r24, 0x10	; 16
    ca80:	91 e0       	ldi	r25, 0x01	; 1
    ca82:	2e e1       	ldi	r18, 0x1E	; 30
    ca84:	fc 01       	movw	r30, r24
    ca86:	23 83       	std	Z+3, r18	; 0x03
TCB2.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    ca88:	80 e2       	ldi	r24, 0x20	; 32
    ca8a:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    ca8c:	21 e0       	ldi	r18, 0x01	; 1
    ca8e:	fc 01       	movw	r30, r24
    ca90:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB2.CCMP = 0x5DC0; /* Approximate 1 ms interrupts */
    ca92:	80 e2       	ldi	r24, 0x20	; 32
    ca94:	9b e0       	ldi	r25, 0x0B	; 11
    ca96:	20 ec       	ldi	r18, 0xC0	; 192
    ca98:	3d e5       	ldi	r19, 0x5D	; 93
    ca9a:	fc 01       	movw	r30, r24
    ca9c:	24 87       	std	Z+12, r18	; 0x0c
    ca9e:	35 87       	std	Z+13, r19	; 0x0d

TCB2.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    caa0:	80 e2       	ldi	r24, 0x20	; 32
    caa2:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    caa4:	23 e0       	ldi	r18, 0x03	; 3
    caa6:	fc 01       	movw	r30, r24
    caa8:	20 83       	st	Z, r18

TCB2.INTFLAGS = (TCB_CAPT_bm | TCB_OVF_bm); /* Clear flag */
    caaa:	80 e2       	ldi	r24, 0x20	; 32
    caac:	9b e0       	ldi	r25, 0x0B	; 11
    caae:	23 e0       	ldi	r18, 0x03	; 3
    cab0:	fc 01       	movw	r30, r24
    cab2:	26 83       	std	Z+6, r18	; 0x06
CPUINT.LVL1VEC = 30; /* Set to level 1 - highest priority interrupt */
    cab4:	80 e1       	ldi	r24, 0x10	; 16
    cab6:	91 e0       	ldi	r25, 0x01	; 1
    cab8:	2e e1       	ldi	r18, 0x1E	; 30
    caba:	fc 01       	movw	r30, r24
    cabc:	23 83       	std	Z+3, r18	; 0x03

/********************************************************************************/

	return 0;
    cabe:	80 e0       	ldi	r24, 0x00	; 0
}
    cac0:	df 91       	pop	r29
    cac2:	cf 91       	pop	r28
    cac4:	08 95       	ret

0000cac6 <util_delay_ms>:


static bool delay_initialized = false;

bool util_delay_ms(uint32_t delayValue)
{
    cac6:	cf 93       	push	r28
    cac8:	df 93       	push	r29
    caca:	00 d0       	rcall	.+0      	; 0xcacc <util_delay_ms+0x6>
    cacc:	00 d0       	rcall	.+0      	; 0xcace <util_delay_ms+0x8>
    cace:	cd b7       	in	r28, 0x3d	; 61
    cad0:	de b7       	in	r29, 0x3e	; 62
    cad2:	69 83       	std	Y+1, r22	; 0x01
    cad4:	7a 83       	std	Y+2, r23	; 0x02
    cad6:	8b 83       	std	Y+3, r24	; 0x03
    cad8:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(!delay_initialized)
    cada:	90 91 8f 4a 	lds	r25, 0x4A8F	; 0x804a8f <_ZL17delay_initialized>
    cade:	81 e0       	ldi	r24, 0x01	; 1
    cae0:	89 27       	eor	r24, r25
    cae2:	88 23       	and	r24, r24
    cae4:	e9 f0       	breq	.+58     	; 0xcb20 <util_delay_ms+0x5a>
	{
		delay_initialized = true;
    cae6:	81 e0       	ldi	r24, 0x01	; 1
    cae8:	80 93 8f 4a 	sts	0x4A8F, r24	; 0x804a8f <_ZL17delay_initialized>
		
		TCA0.SINGLE.CTRLA = 0x00; /* Disable TCA0 */
    caec:	80 e0       	ldi	r24, 0x00	; 0
    caee:	9a e0       	ldi	r25, 0x0A	; 10
    caf0:	fc 01       	movw	r30, r24
    caf2:	10 82       	st	Z, r1
		TCA0.SINGLE.PER = 0x5DC0; /* Set interrupt period */
    caf4:	80 e0       	ldi	r24, 0x00	; 0
    caf6:	9a e0       	ldi	r25, 0x0A	; 10
    caf8:	20 ec       	ldi	r18, 0xC0	; 192
    cafa:	3d e5       	ldi	r19, 0x5D	; 93
    cafc:	fc 01       	movw	r30, r24
    cafe:	26 a3       	std	Z+38, r18	; 0x26
    cb00:	37 a3       	std	Z+39, r19	; 0x27
		TCA0.SINGLE.INTCTRL = 0x01; /* Overflow interrupt enable */
    cb02:	80 e0       	ldi	r24, 0x00	; 0
    cb04:	9a e0       	ldi	r25, 0x0A	; 10
    cb06:	21 e0       	ldi	r18, 0x01	; 1
    cb08:	fc 01       	movw	r30, r24
    cb0a:	22 87       	std	Z+10, r18	; 0x0a
		TCA0.SINGLE.CTRLA = 0x01; /* Enable TCA0 */
    cb0c:	80 e0       	ldi	r24, 0x00	; 0
    cb0e:	9a e0       	ldi	r25, 0x0A	; 10
    cb10:	21 e0       	ldi	r18, 0x01	; 1
    cb12:	fc 01       	movw	r30, r24
    cb14:	20 83       	st	Z, r18
		TCA0.SINGLE.INTFLAGS = (TCA_SINGLE_OVF_bm | TCA_SINGLE_CMP0_bm | TCA_SINGLE_CMP1_bm | TCA_SINGLE_CMP2_bm); /* Clear all interrupt flags */
    cb16:	80 e0       	ldi	r24, 0x00	; 0
    cb18:	9a e0       	ldi	r25, 0x0A	; 10
    cb1a:	21 e7       	ldi	r18, 0x71	; 113
    cb1c:	fc 01       	movw	r30, r24
    cb1e:	23 87       	std	Z+11, r18	; 0x0b
	}
	
	if(delayValue)
    cb20:	89 81       	ldd	r24, Y+1	; 0x01
    cb22:	9a 81       	ldd	r25, Y+2	; 0x02
    cb24:	ab 81       	ldd	r26, Y+3	; 0x03
    cb26:	bc 81       	ldd	r27, Y+4	; 0x04
    cb28:	89 2b       	or	r24, r25
    cb2a:	8a 2b       	or	r24, r26
    cb2c:	8b 2b       	or	r24, r27
    cb2e:	09 f4       	brne	.+2      	; 0xcb32 <util_delay_ms+0x6c>
    cb30:	a1 c0       	rjmp	.+322    	; 0xcc74 <util_delay_ms+0x1ae>
	{
		if(counting)
    cb32:	80 91 90 4a 	lds	r24, 0x4A90	; 0x804a90 <_ZZ13util_delay_msE8counting>
    cb36:	88 23       	and	r24, r24
    cb38:	09 f4       	brne	.+2      	; 0xcb3c <util_delay_ms+0x76>
    cb3a:	5b c0       	rjmp	.+182    	; 0xcbf2 <util_delay_ms+0x12c>
		{
			if(!g_ms_counter)
    cb3c:	80 91 8b 4a 	lds	r24, 0x4A8B	; 0x804a8b <_ZL12g_ms_counter>
    cb40:	90 91 8c 4a 	lds	r25, 0x4A8C	; 0x804a8c <_ZL12g_ms_counter+0x1>
    cb44:	a0 91 8d 4a 	lds	r26, 0x4A8D	; 0x804a8d <_ZL12g_ms_counter+0x2>
    cb48:	b0 91 8e 4a 	lds	r27, 0x4A8E	; 0x804a8e <_ZL12g_ms_counter+0x3>
    cb4c:	89 2b       	or	r24, r25
    cb4e:	8a 2b       	or	r24, r26
    cb50:	8b 2b       	or	r24, r27
    cb52:	81 f4       	brne	.+32     	; 0xcb74 <util_delay_ms+0xae>
			{
 				TCA0.SINGLE.INTCTRL = 0 << TCA_SINGLE_OVF_bp; /* OverFlow Interrupt: disabled */
    cb54:	80 e0       	ldi	r24, 0x00	; 0
    cb56:	9a e0       	ldi	r25, 0x0A	; 10
    cb58:	fc 01       	movw	r30, r24
    cb5a:	12 86       	std	Z+10, r1	; 0x0a
//				TCA0.SINGLE.CTRLA = 0x00; /* Disable TCA0 */
				counting = false;
    cb5c:	10 92 90 4a 	sts	0x4A90, r1	; 0x804a90 <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    cb60:	10 92 91 4a 	sts	0x4A91, r1	; 0x804a91 <_ZZ13util_delay_msE14countdownValue>
    cb64:	10 92 92 4a 	sts	0x4A92, r1	; 0x804a92 <_ZZ13util_delay_msE14countdownValue+0x1>
    cb68:	10 92 93 4a 	sts	0x4A93, r1	; 0x804a93 <_ZZ13util_delay_msE14countdownValue+0x2>
    cb6c:	10 92 94 4a 	sts	0x4A94, r1	; 0x804a94 <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    cb70:	80 e0       	ldi	r24, 0x00	; 0
    cb72:	a4 c0       	rjmp	.+328    	; 0xccbc <util_delay_ms+0x1f6>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    cb74:	80 91 91 4a 	lds	r24, 0x4A91	; 0x804a91 <_ZZ13util_delay_msE14countdownValue>
    cb78:	90 91 92 4a 	lds	r25, 0x4A92	; 0x804a92 <_ZZ13util_delay_msE14countdownValue+0x1>
    cb7c:	a0 91 93 4a 	lds	r26, 0x4A93	; 0x804a93 <_ZZ13util_delay_msE14countdownValue+0x2>
    cb80:	b0 91 94 4a 	lds	r27, 0x4A94	; 0x804a94 <_ZZ13util_delay_msE14countdownValue+0x3>
    cb84:	29 81       	ldd	r18, Y+1	; 0x01
    cb86:	3a 81       	ldd	r19, Y+2	; 0x02
    cb88:	4b 81       	ldd	r20, Y+3	; 0x03
    cb8a:	5c 81       	ldd	r21, Y+4	; 0x04
    cb8c:	28 17       	cp	r18, r24
    cb8e:	39 07       	cpc	r19, r25
    cb90:	4a 07       	cpc	r20, r26
    cb92:	5b 07       	cpc	r21, r27
    cb94:	09 f4       	brne	.+2      	; 0xcb98 <util_delay_ms+0xd2>
    cb96:	8c c0       	rjmp	.+280    	; 0xccb0 <util_delay_ms+0x1ea>
			{
 				TCA0.SINGLE.INTCTRL = 0 << TCA_SINGLE_OVF_bp; /* OverFlow Interrupt: disabled */
    cb98:	80 e0       	ldi	r24, 0x00	; 0
    cb9a:	9a e0       	ldi	r25, 0x0A	; 10
    cb9c:	fc 01       	movw	r30, r24
    cb9e:	12 86       	std	Z+10, r1	; 0x0a
// 				TCA0.SINGLE.CTRLA = 0x00; /* Disable TCA0 */
 				TCA0.SINGLE.CNT = 0x0000;
    cba0:	80 e0       	ldi	r24, 0x00	; 0
    cba2:	9a e0       	ldi	r25, 0x0A	; 10
    cba4:	fc 01       	movw	r30, r24
    cba6:	10 a2       	std	Z+32, r1	; 0x20
    cba8:	11 a2       	std	Z+33, r1	; 0x21
				countdownValue = delayValue;
    cbaa:	89 81       	ldd	r24, Y+1	; 0x01
    cbac:	9a 81       	ldd	r25, Y+2	; 0x02
    cbae:	ab 81       	ldd	r26, Y+3	; 0x03
    cbb0:	bc 81       	ldd	r27, Y+4	; 0x04
    cbb2:	80 93 91 4a 	sts	0x4A91, r24	; 0x804a91 <_ZZ13util_delay_msE14countdownValue>
    cbb6:	90 93 92 4a 	sts	0x4A92, r25	; 0x804a92 <_ZZ13util_delay_msE14countdownValue+0x1>
    cbba:	a0 93 93 4a 	sts	0x4A93, r26	; 0x804a93 <_ZZ13util_delay_msE14countdownValue+0x2>
    cbbe:	b0 93 94 4a 	sts	0x4A94, r27	; 0x804a94 <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    cbc2:	89 81       	ldd	r24, Y+1	; 0x01
    cbc4:	9a 81       	ldd	r25, Y+2	; 0x02
    cbc6:	ab 81       	ldd	r26, Y+3	; 0x03
    cbc8:	bc 81       	ldd	r27, Y+4	; 0x04
    cbca:	80 93 8b 4a 	sts	0x4A8B, r24	; 0x804a8b <_ZL12g_ms_counter>
    cbce:	90 93 8c 4a 	sts	0x4A8C, r25	; 0x804a8c <_ZL12g_ms_counter+0x1>
    cbd2:	a0 93 8d 4a 	sts	0x4A8D, r26	; 0x804a8d <_ZL12g_ms_counter+0x2>
    cbd6:	b0 93 8e 4a 	sts	0x4A8E, r27	; 0x804a8e <_ZL12g_ms_counter+0x3>
 				TCA0.SINGLE.INTCTRL = 1 << TCA_SINGLE_OVF_bp; /* OverFlow Interrupt: enabled */
    cbda:	80 e0       	ldi	r24, 0x00	; 0
    cbdc:	9a e0       	ldi	r25, 0x0A	; 10
    cbde:	21 e0       	ldi	r18, 0x01	; 1
    cbe0:	fc 01       	movw	r30, r24
    cbe2:	22 87       	std	Z+10, r18	; 0x0a
 				TCA0.SINGLE.CTRLA = 0x01; /* Enable TCA0 */
    cbe4:	80 e0       	ldi	r24, 0x00	; 0
    cbe6:	9a e0       	ldi	r25, 0x0A	; 10
    cbe8:	21 e0       	ldi	r18, 0x01	; 1
    cbea:	fc 01       	movw	r30, r24
    cbec:	20 83       	st	Z, r18
				return(false);
    cbee:	80 e0       	ldi	r24, 0x00	; 0
    cbf0:	65 c0       	rjmp	.+202    	; 0xccbc <util_delay_ms+0x1f6>
			}
		}
		else if(delayValue != countdownValue)
    cbf2:	80 91 91 4a 	lds	r24, 0x4A91	; 0x804a91 <_ZZ13util_delay_msE14countdownValue>
    cbf6:	90 91 92 4a 	lds	r25, 0x4A92	; 0x804a92 <_ZZ13util_delay_msE14countdownValue+0x1>
    cbfa:	a0 91 93 4a 	lds	r26, 0x4A93	; 0x804a93 <_ZZ13util_delay_msE14countdownValue+0x2>
    cbfe:	b0 91 94 4a 	lds	r27, 0x4A94	; 0x804a94 <_ZZ13util_delay_msE14countdownValue+0x3>
    cc02:	29 81       	ldd	r18, Y+1	; 0x01
    cc04:	3a 81       	ldd	r19, Y+2	; 0x02
    cc06:	4b 81       	ldd	r20, Y+3	; 0x03
    cc08:	5c 81       	ldd	r21, Y+4	; 0x04
    cc0a:	28 17       	cp	r18, r24
    cc0c:	39 07       	cpc	r19, r25
    cc0e:	4a 07       	cpc	r20, r26
    cc10:	5b 07       	cpc	r21, r27
    cc12:	09 f4       	brne	.+2      	; 0xcc16 <util_delay_ms+0x150>
    cc14:	4d c0       	rjmp	.+154    	; 0xccb0 <util_delay_ms+0x1ea>
		{
 			TCA0.SINGLE.INTCTRL = 0 << TCA_SINGLE_OVF_bp; /* OverFlow Interrupt: disabled */
    cc16:	80 e0       	ldi	r24, 0x00	; 0
    cc18:	9a e0       	ldi	r25, 0x0A	; 10
    cc1a:	fc 01       	movw	r30, r24
    cc1c:	12 86       	std	Z+10, r1	; 0x0a
// 			TCA0.SINGLE.CTRLA = 0x00; /* Disable TCA0 */
 			TCA0.SINGLE.CNT = 0x0000;
    cc1e:	80 e0       	ldi	r24, 0x00	; 0
    cc20:	9a e0       	ldi	r25, 0x0A	; 10
    cc22:	fc 01       	movw	r30, r24
    cc24:	10 a2       	std	Z+32, r1	; 0x20
    cc26:	11 a2       	std	Z+33, r1	; 0x21
			countdownValue = delayValue;
    cc28:	89 81       	ldd	r24, Y+1	; 0x01
    cc2a:	9a 81       	ldd	r25, Y+2	; 0x02
    cc2c:	ab 81       	ldd	r26, Y+3	; 0x03
    cc2e:	bc 81       	ldd	r27, Y+4	; 0x04
    cc30:	80 93 91 4a 	sts	0x4A91, r24	; 0x804a91 <_ZZ13util_delay_msE14countdownValue>
    cc34:	90 93 92 4a 	sts	0x4A92, r25	; 0x804a92 <_ZZ13util_delay_msE14countdownValue+0x1>
    cc38:	a0 93 93 4a 	sts	0x4A93, r26	; 0x804a93 <_ZZ13util_delay_msE14countdownValue+0x2>
    cc3c:	b0 93 94 4a 	sts	0x4A94, r27	; 0x804a94 <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    cc40:	89 81       	ldd	r24, Y+1	; 0x01
    cc42:	9a 81       	ldd	r25, Y+2	; 0x02
    cc44:	ab 81       	ldd	r26, Y+3	; 0x03
    cc46:	bc 81       	ldd	r27, Y+4	; 0x04
    cc48:	80 93 8b 4a 	sts	0x4A8B, r24	; 0x804a8b <_ZL12g_ms_counter>
    cc4c:	90 93 8c 4a 	sts	0x4A8C, r25	; 0x804a8c <_ZL12g_ms_counter+0x1>
    cc50:	a0 93 8d 4a 	sts	0x4A8D, r26	; 0x804a8d <_ZL12g_ms_counter+0x2>
    cc54:	b0 93 8e 4a 	sts	0x4A8E, r27	; 0x804a8e <_ZL12g_ms_counter+0x3>
 			TCA0.SINGLE.INTCTRL = 1 << TCA_SINGLE_OVF_bp; /* OverFlow Interrupt: enabled */
    cc58:	80 e0       	ldi	r24, 0x00	; 0
    cc5a:	9a e0       	ldi	r25, 0x0A	; 10
    cc5c:	21 e0       	ldi	r18, 0x01	; 1
    cc5e:	fc 01       	movw	r30, r24
    cc60:	22 87       	std	Z+10, r18	; 0x0a
 			TCA0.SINGLE.CTRLA = 0x01; /* Enable TCA0 */
    cc62:	80 e0       	ldi	r24, 0x00	; 0
    cc64:	9a e0       	ldi	r25, 0x0A	; 10
    cc66:	21 e0       	ldi	r18, 0x01	; 1
    cc68:	fc 01       	movw	r30, r24
    cc6a:	20 83       	st	Z, r18
			counting = true;
    cc6c:	81 e0       	ldi	r24, 0x01	; 1
    cc6e:	80 93 90 4a 	sts	0x4A90, r24	; 0x804a90 <_ZZ13util_delay_msE8counting>
    cc72:	1e c0       	rjmp	.+60     	; 0xccb0 <util_delay_ms+0x1ea>
		}
	}
	else /* Shut down the counter */
	{
 		TCA0.SINGLE.INTCTRL = 0 << TCA_SINGLE_OVF_bp; /* OverFlow Interrupt: disabled */
    cc74:	80 e0       	ldi	r24, 0x00	; 0
    cc76:	9a e0       	ldi	r25, 0x0A	; 10
    cc78:	fc 01       	movw	r30, r24
    cc7a:	12 86       	std	Z+10, r1	; 0x0a
		TCA0.SINGLE.CTRLA = 0x00; /* Disable TCA0 */
    cc7c:	80 e0       	ldi	r24, 0x00	; 0
    cc7e:	9a e0       	ldi	r25, 0x0A	; 10
    cc80:	fc 01       	movw	r30, r24
    cc82:	10 82       	st	Z, r1
		delay_initialized = false;
    cc84:	10 92 8f 4a 	sts	0x4A8F, r1	; 0x804a8f <_ZL17delay_initialized>
		counting = false;
    cc88:	10 92 90 4a 	sts	0x4A90, r1	; 0x804a90 <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    cc8c:	10 92 91 4a 	sts	0x4A91, r1	; 0x804a91 <_ZZ13util_delay_msE14countdownValue>
    cc90:	10 92 92 4a 	sts	0x4A92, r1	; 0x804a92 <_ZZ13util_delay_msE14countdownValue+0x1>
    cc94:	10 92 93 4a 	sts	0x4A93, r1	; 0x804a93 <_ZZ13util_delay_msE14countdownValue+0x2>
    cc98:	10 92 94 4a 	sts	0x4A94, r1	; 0x804a94 <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    cc9c:	10 92 8b 4a 	sts	0x4A8B, r1	; 0x804a8b <_ZL12g_ms_counter>
    cca0:	10 92 8c 4a 	sts	0x4A8C, r1	; 0x804a8c <_ZL12g_ms_counter+0x1>
    cca4:	10 92 8d 4a 	sts	0x4A8D, r1	; 0x804a8d <_ZL12g_ms_counter+0x2>
    cca8:	10 92 8e 4a 	sts	0x4A8E, r1	; 0x804a8e <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    ccac:	80 e0       	ldi	r24, 0x00	; 0
    ccae:	06 c0       	rjmp	.+12     	; 0xccbc <util_delay_ms+0x1f6>
	}
	
 	TCA0.SINGLE.INTCTRL = 1 << TCA_SINGLE_OVF_bp; /* OverFlow Interrupt: enabled */	
    ccb0:	80 e0       	ldi	r24, 0x00	; 0
    ccb2:	9a e0       	ldi	r25, 0x0A	; 10
    ccb4:	21 e0       	ldi	r18, 0x01	; 1
    ccb6:	fc 01       	movw	r30, r24
    ccb8:	22 87       	std	Z+10, r18	; 0x0a
	return(true);
    ccba:	81 e0       	ldi	r24, 0x01	; 1
}
    ccbc:	24 96       	adiw	r28, 0x04	; 4
    ccbe:	cd bf       	out	0x3d, r28	; 61
    ccc0:	de bf       	out	0x3e, r29	; 62
    ccc2:	df 91       	pop	r29
    ccc4:	cf 91       	pop	r28
    ccc6:	08 95       	ret

0000ccc8 <__vector_7>:

ISR(TCA0_OVF_vect)
{
    ccc8:	1f 92       	push	r1
    ccca:	0f 92       	push	r0
    cccc:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    ccd0:	0f 92       	push	r0
    ccd2:	11 24       	eor	r1, r1
    ccd4:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    ccd8:	0f 92       	push	r0
    ccda:	2f 93       	push	r18
    ccdc:	8f 93       	push	r24
    ccde:	9f 93       	push	r25
    cce0:	af 93       	push	r26
    cce2:	bf 93       	push	r27
    cce4:	ef 93       	push	r30
    cce6:	ff 93       	push	r31
    cce8:	cf 93       	push	r28
    ccea:	df 93       	push	r29
    ccec:	cd b7       	in	r28, 0x3d	; 61
    ccee:	de b7       	in	r29, 0x3e	; 62
	if(TCA0.SINGLE.INTFLAGS & TCB_CAPT_bm)
    ccf0:	80 e0       	ldi	r24, 0x00	; 0
    ccf2:	9a e0       	ldi	r25, 0x0A	; 10
    ccf4:	fc 01       	movw	r30, r24
    ccf6:	83 85       	ldd	r24, Z+11	; 0x0b
    ccf8:	88 2f       	mov	r24, r24
    ccfa:	90 e0       	ldi	r25, 0x00	; 0
    ccfc:	81 70       	andi	r24, 0x01	; 1
    ccfe:	99 27       	eor	r25, r25
    cd00:	21 e0       	ldi	r18, 0x01	; 1
    cd02:	89 2b       	or	r24, r25
    cd04:	09 f4       	brne	.+2      	; 0xcd08 <__vector_7+0x40>
    cd06:	20 e0       	ldi	r18, 0x00	; 0
    cd08:	22 23       	and	r18, r18
    cd0a:	f9 f0       	breq	.+62     	; 0xcd4a <__vector_7+0x82>
	{
		if(g_ms_counter) g_ms_counter--;
    cd0c:	80 91 8b 4a 	lds	r24, 0x4A8B	; 0x804a8b <_ZL12g_ms_counter>
    cd10:	90 91 8c 4a 	lds	r25, 0x4A8C	; 0x804a8c <_ZL12g_ms_counter+0x1>
    cd14:	a0 91 8d 4a 	lds	r26, 0x4A8D	; 0x804a8d <_ZL12g_ms_counter+0x2>
    cd18:	b0 91 8e 4a 	lds	r27, 0x4A8E	; 0x804a8e <_ZL12g_ms_counter+0x3>
    cd1c:	89 2b       	or	r24, r25
    cd1e:	8a 2b       	or	r24, r26
    cd20:	8b 2b       	or	r24, r27
    cd22:	99 f0       	breq	.+38     	; 0xcd4a <__vector_7+0x82>
    cd24:	80 91 8b 4a 	lds	r24, 0x4A8B	; 0x804a8b <_ZL12g_ms_counter>
    cd28:	90 91 8c 4a 	lds	r25, 0x4A8C	; 0x804a8c <_ZL12g_ms_counter+0x1>
    cd2c:	a0 91 8d 4a 	lds	r26, 0x4A8D	; 0x804a8d <_ZL12g_ms_counter+0x2>
    cd30:	b0 91 8e 4a 	lds	r27, 0x4A8E	; 0x804a8e <_ZL12g_ms_counter+0x3>
    cd34:	01 97       	sbiw	r24, 0x01	; 1
    cd36:	a1 09       	sbc	r26, r1
    cd38:	b1 09       	sbc	r27, r1
    cd3a:	80 93 8b 4a 	sts	0x4A8B, r24	; 0x804a8b <_ZL12g_ms_counter>
    cd3e:	90 93 8c 4a 	sts	0x4A8C, r25	; 0x804a8c <_ZL12g_ms_counter+0x1>
    cd42:	a0 93 8d 4a 	sts	0x4A8D, r26	; 0x804a8d <_ZL12g_ms_counter+0x2>
    cd46:	b0 93 8e 4a 	sts	0x4A8E, r27	; 0x804a8e <_ZL12g_ms_counter+0x3>
	}
	
	TCA0.SINGLE.INTFLAGS = (TCA_SINGLE_OVF_bm | TCA_SINGLE_CMP0_bm | TCA_SINGLE_CMP1_bm | TCA_SINGLE_CMP2_bm); /* Clear all interrupt flags */
    cd4a:	80 e0       	ldi	r24, 0x00	; 0
    cd4c:	9a e0       	ldi	r25, 0x0A	; 10
    cd4e:	21 e7       	ldi	r18, 0x71	; 113
    cd50:	fc 01       	movw	r30, r24
    cd52:	23 87       	std	Z+11, r18	; 0x0b
}
    cd54:	00 00       	nop
    cd56:	df 91       	pop	r29
    cd58:	cf 91       	pop	r28
    cd5a:	ff 91       	pop	r31
    cd5c:	ef 91       	pop	r30
    cd5e:	bf 91       	pop	r27
    cd60:	af 91       	pop	r26
    cd62:	9f 91       	pop	r25
    cd64:	8f 91       	pop	r24
    cd66:	2f 91       	pop	r18
    cd68:	0f 90       	pop	r0
    cd6a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    cd6e:	0f 90       	pop	r0
    cd70:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    cd74:	0f 90       	pop	r0
    cd76:	1f 90       	pop	r1
    cd78:	18 95       	reti

0000cd7a <__vector_30>:

ISR(TCB2_INT_vect)
{
    cd7a:	1f 92       	push	r1
    cd7c:	0f 92       	push	r0
    cd7e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    cd82:	0f 92       	push	r0
    cd84:	11 24       	eor	r1, r1
    cd86:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    cd8a:	0f 92       	push	r0
    cd8c:	2f 93       	push	r18
    cd8e:	8f 93       	push	r24
    cd90:	9f 93       	push	r25
    cd92:	ef 93       	push	r30
    cd94:	ff 93       	push	r31
    cd96:	cf 93       	push	r28
    cd98:	df 93       	push	r29
    cd9a:	cd b7       	in	r28, 0x3d	; 61
    cd9c:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    cd9e:	80 e2       	ldi	r24, 0x20	; 32
    cda0:	9b e0       	ldi	r25, 0x0B	; 11
    cda2:	fc 01       	movw	r30, r24
    cda4:	86 81       	ldd	r24, Z+6	; 0x06
    cda6:	88 2f       	mov	r24, r24
    cda8:	90 e0       	ldi	r25, 0x00	; 0
    cdaa:	81 70       	andi	r24, 0x01	; 1
    cdac:	99 27       	eor	r25, r25
    cdae:	21 e0       	ldi	r18, 0x01	; 1
    cdb0:	89 2b       	or	r24, r25
    cdb2:	09 f4       	brne	.+2      	; 0xcdb6 <__vector_30+0x3c>
    cdb4:	20 e0       	ldi	r18, 0x00	; 0
    cdb6:	22 23       	and	r18, r18
    cdb8:	99 f0       	breq	.+38     	; 0xcde0 <__vector_30+0x66>
	{
		if(g_i2c0_timeout_ticks) g_i2c0_timeout_ticks--;
    cdba:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c0_timeout_ticks>
    cdbe:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c0_timeout_ticks+0x1>
    cdc2:	21 e0       	ldi	r18, 0x01	; 1
    cdc4:	89 2b       	or	r24, r25
    cdc6:	09 f4       	brne	.+2      	; 0xcdca <__vector_30+0x50>
    cdc8:	20 e0       	ldi	r18, 0x00	; 0
    cdca:	22 23       	and	r18, r18
    cdcc:	49 f0       	breq	.+18     	; 0xcde0 <__vector_30+0x66>
    cdce:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c0_timeout_ticks>
    cdd2:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c0_timeout_ticks+0x1>
    cdd6:	01 97       	sbiw	r24, 0x01	; 1
    cdd8:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_i2c0_timeout_ticks>
    cddc:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <g_i2c0_timeout_ticks+0x1>
	}
	
	TCB2.INTFLAGS = (TCB_CAPT_bm | TCB_OVF_bm);
    cde0:	80 e2       	ldi	r24, 0x20	; 32
    cde2:	9b e0       	ldi	r25, 0x0B	; 11
    cde4:	23 e0       	ldi	r18, 0x03	; 3
    cde6:	fc 01       	movw	r30, r24
    cde8:	26 83       	std	Z+6, r18	; 0x06
}
    cdea:	00 00       	nop
    cdec:	df 91       	pop	r29
    cdee:	cf 91       	pop	r28
    cdf0:	ff 91       	pop	r31
    cdf2:	ef 91       	pop	r30
    cdf4:	9f 91       	pop	r25
    cdf6:	8f 91       	pop	r24
    cdf8:	2f 91       	pop	r18
    cdfa:	0f 90       	pop	r0
    cdfc:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    ce00:	0f 90       	pop	r0
    ce02:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    ce06:	0f 90       	pop	r0
    ce08:	1f 90       	pop	r1
    ce0a:	18 95       	reti

0000ce0c <PORTA_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
    ce0c:	cf 93       	push	r28
    ce0e:	df 93       	push	r29
    ce10:	00 d0       	rcall	.+0      	; 0xce12 <PORTA_set_pin_level+0x6>
    ce12:	cd b7       	in	r28, 0x3d	; 61
    ce14:	de b7       	in	r29, 0x3e	; 62
    ce16:	89 83       	std	Y+1, r24	; 0x01
    ce18:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    ce1a:	8a 81       	ldd	r24, Y+2	; 0x02
    ce1c:	88 23       	and	r24, r24
    ce1e:	a9 f0       	breq	.+42     	; 0xce4a <PORTA_set_pin_level+0x3e>
		VPORTA.OUT |= (1 << pin);
    ce20:	20 e0       	ldi	r18, 0x00	; 0
    ce22:	30 e0       	ldi	r19, 0x00	; 0
    ce24:	80 e0       	ldi	r24, 0x00	; 0
    ce26:	90 e0       	ldi	r25, 0x00	; 0
    ce28:	fc 01       	movw	r30, r24
    ce2a:	81 81       	ldd	r24, Z+1	; 0x01
    ce2c:	68 2f       	mov	r22, r24
    ce2e:	89 81       	ldd	r24, Y+1	; 0x01
    ce30:	48 2f       	mov	r20, r24
    ce32:	50 e0       	ldi	r21, 0x00	; 0
    ce34:	81 e0       	ldi	r24, 0x01	; 1
    ce36:	90 e0       	ldi	r25, 0x00	; 0
    ce38:	02 c0       	rjmp	.+4      	; 0xce3e <PORTA_set_pin_level+0x32>
    ce3a:	88 0f       	add	r24, r24
    ce3c:	99 1f       	adc	r25, r25
    ce3e:	4a 95       	dec	r20
    ce40:	e2 f7       	brpl	.-8      	; 0xce3a <PORTA_set_pin_level+0x2e>
    ce42:	86 2b       	or	r24, r22
    ce44:	f9 01       	movw	r30, r18
    ce46:	81 83       	std	Z+1, r24	; 0x01
	} else {
		VPORTA.OUT &= ~(1 << pin);
	}
}
    ce48:	15 c0       	rjmp	.+42     	; 0xce74 <PORTA_set_pin_level+0x68>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    ce4a:	20 e0       	ldi	r18, 0x00	; 0
    ce4c:	30 e0       	ldi	r19, 0x00	; 0
    ce4e:	80 e0       	ldi	r24, 0x00	; 0
    ce50:	90 e0       	ldi	r25, 0x00	; 0
    ce52:	fc 01       	movw	r30, r24
    ce54:	81 81       	ldd	r24, Z+1	; 0x01
    ce56:	68 2f       	mov	r22, r24
    ce58:	89 81       	ldd	r24, Y+1	; 0x01
    ce5a:	48 2f       	mov	r20, r24
    ce5c:	50 e0       	ldi	r21, 0x00	; 0
    ce5e:	81 e0       	ldi	r24, 0x01	; 1
    ce60:	90 e0       	ldi	r25, 0x00	; 0
    ce62:	02 c0       	rjmp	.+4      	; 0xce68 <PORTA_set_pin_level+0x5c>
    ce64:	88 0f       	add	r24, r24
    ce66:	99 1f       	adc	r25, r25
    ce68:	4a 95       	dec	r20
    ce6a:	e2 f7       	brpl	.-8      	; 0xce64 <PORTA_set_pin_level+0x58>
    ce6c:	80 95       	com	r24
    ce6e:	86 23       	and	r24, r22
    ce70:	f9 01       	movw	r30, r18
    ce72:	81 83       	std	Z+1, r24	; 0x01
	}
}
    ce74:	00 00       	nop
    ce76:	0f 90       	pop	r0
    ce78:	0f 90       	pop	r0
    ce7a:	df 91       	pop	r29
    ce7c:	cf 91       	pop	r28
    ce7e:	08 95       	ret

0000ce80 <_Z14txSetFrequencyPmb>:
 *       This function sets the VFO frequency (CLK0 of the Si5351) based on the intended frequency passed in by the parameter (freq),
 *       and the VFO configuration in effect. The VFO  frequency might be above or below the intended  frequency, depending on the VFO
 *       configuration setting in effect for the radio band of the frequency.
 */
	bool txSetFrequency(Frequency_Hz *freq, bool leaveClockOff)
	{
    ce80:	cf 93       	push	r28
    ce82:	df 93       	push	r29
    ce84:	00 d0       	rcall	.+0      	; 0xce86 <_Z14txSetFrequencyPmb+0x6>
    ce86:	00 d0       	rcall	.+0      	; 0xce88 <_Z14txSetFrequencyPmb+0x8>
    ce88:	cd b7       	in	r28, 0x3d	; 61
    ce8a:	de b7       	in	r29, 0x3e	; 62
    ce8c:	8a 83       	std	Y+2, r24	; 0x02
    ce8e:	9b 83       	std	Y+3, r25	; 0x03
    ce90:	6c 83       	std	Y+4, r22	; 0x04
		bool err = true;
    ce92:	81 e0       	ldi	r24, 0x01	; 1
    ce94:	89 83       	std	Y+1, r24	; 0x01

		if(!freq) return(err);
    ce96:	8a 81       	ldd	r24, Y+2	; 0x02
    ce98:	9b 81       	ldd	r25, Y+3	; 0x03
    ce9a:	89 2b       	or	r24, r25
    ce9c:	11 f4       	brne	.+4      	; 0xcea2 <_Z14txSetFrequencyPmb+0x22>
    ce9e:	89 81       	ldd	r24, Y+1	; 0x01
    cea0:	3b c0       	rjmp	.+118    	; 0xcf18 <_Z14txSetFrequencyPmb+0x98>
		
		if((*freq < TX_MAXIMUM_80M_FREQUENCY) && (*freq > TX_MINIMUM_80M_FREQUENCY))    /* 80m */
    cea2:	8a 81       	ldd	r24, Y+2	; 0x02
    cea4:	9b 81       	ldd	r25, Y+3	; 0x03
    cea6:	fc 01       	movw	r30, r24
    cea8:	80 81       	ld	r24, Z
    ceaa:	91 81       	ldd	r25, Z+1	; 0x01
    ceac:	a2 81       	ldd	r26, Z+2	; 0x02
    ceae:	b3 81       	ldd	r27, Z+3	; 0x03
    ceb0:	81 15       	cp	r24, r1
    ceb2:	99 40       	sbci	r25, 0x09	; 9
    ceb4:	ad 43       	sbci	r26, 0x3D	; 61
    ceb6:	b1 05       	cpc	r27, r1
    ceb8:	70 f5       	brcc	.+92     	; 0xcf16 <_Z14txSetFrequencyPmb+0x96>
    ceba:	8a 81       	ldd	r24, Y+2	; 0x02
    cebc:	9b 81       	ldd	r25, Y+3	; 0x03
    cebe:	fc 01       	movw	r30, r24
    cec0:	80 81       	ld	r24, Z
    cec2:	91 81       	ldd	r25, Z+1	; 0x01
    cec4:	a2 81       	ldd	r26, Z+2	; 0x02
    cec6:	b3 81       	ldd	r27, Z+3	; 0x03
    cec8:	81 3e       	cpi	r24, 0xE1	; 225
    ceca:	97 46       	sbci	r25, 0x67	; 103
    cecc:	a5 43       	sbci	r26, 0x35	; 53
    cece:	b1 05       	cpc	r27, r1
    ced0:	10 f1       	brcs	.+68     	; 0xcf16 <_Z14txSetFrequencyPmb+0x96>
		{
			if(!si5351_set_freq(*freq, TX_CLOCK_HF_0, leaveClockOff))
    ced2:	8a 81       	ldd	r24, Y+2	; 0x02
    ced4:	9b 81       	ldd	r25, Y+3	; 0x03
    ced6:	fc 01       	movw	r30, r24
    ced8:	80 81       	ld	r24, Z
    ceda:	91 81       	ldd	r25, Z+1	; 0x01
    cedc:	a2 81       	ldd	r26, Z+2	; 0x02
    cede:	b3 81       	ldd	r27, Z+3	; 0x03
    cee0:	2c 81       	ldd	r18, Y+4	; 0x04
    cee2:	41 e0       	ldi	r20, 0x01	; 1
    cee4:	bc 01       	movw	r22, r24
    cee6:	cd 01       	movw	r24, r26
    cee8:	0e 94 73 5b 	call	0xb6e6	; 0xb6e6 <si5351_set_freq>
    ceec:	98 2f       	mov	r25, r24
    ceee:	81 e0       	ldi	r24, 0x01	; 1
    cef0:	89 27       	eor	r24, r25
    cef2:	88 23       	and	r24, r24
    cef4:	81 f0       	breq	.+32     	; 0xcf16 <_Z14txSetFrequencyPmb+0x96>
			{
				g_80m_frequency = *freq;
    cef6:	8a 81       	ldd	r24, Y+2	; 0x02
    cef8:	9b 81       	ldd	r25, Y+3	; 0x03
    cefa:	fc 01       	movw	r30, r24
    cefc:	80 81       	ld	r24, Z
    cefe:	91 81       	ldd	r25, Z+1	; 0x01
    cf00:	a2 81       	ldd	r26, Z+2	; 0x02
    cf02:	b3 81       	ldd	r27, Z+3	; 0x03
    cf04:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <g_80m_frequency>
    cf08:	90 93 2d 40 	sts	0x402D, r25	; 0x80402d <g_80m_frequency+0x1>
    cf0c:	a0 93 2e 40 	sts	0x402E, r26	; 0x80402e <g_80m_frequency+0x2>
    cf10:	b0 93 2f 40 	sts	0x402F, r27	; 0x80402f <g_80m_frequency+0x3>
				err = false;
    cf14:	19 82       	std	Y+1, r1	; 0x01
			}
		}

		return(err);
    cf16:	89 81       	ldd	r24, Y+1	; 0x01
	}
    cf18:	24 96       	adiw	r28, 0x04	; 4
    cf1a:	cd bf       	out	0x3d, r28	; 61
    cf1c:	de bf       	out	0x3e, r29	; 62
    cf1e:	df 91       	pop	r29
    cf20:	cf 91       	pop	r28
    cf22:	08 95       	ret

0000cf24 <_Z14txGetFrequencyv>:

	Frequency_Hz txGetFrequency(void)
	{
    cf24:	cf 93       	push	r28
    cf26:	df 93       	push	r29
    cf28:	cd b7       	in	r28, 0x3d	; 61
    cf2a:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_frequency);
    cf2c:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_80m_frequency>
    cf30:	90 91 2d 40 	lds	r25, 0x402D	; 0x80402d <g_80m_frequency+0x1>
    cf34:	a0 91 2e 40 	lds	r26, 0x402E	; 0x80402e <g_80m_frequency+0x2>
    cf38:	b0 91 2f 40 	lds	r27, 0x402F	; 0x80402f <g_80m_frequency+0x3>
	}
    cf3c:	bc 01       	movw	r22, r24
    cf3e:	cd 01       	movw	r24, r26
    cf40:	df 91       	pop	r29
    cf42:	cf 91       	pop	r28
    cf44:	08 95       	ret

0000cf46 <_Z18powerToTransmitterb>:

	EC powerToTransmitter(bool state)
	{
    cf46:	cf 93       	push	r28
    cf48:	df 93       	push	r29
    cf4a:	1f 92       	push	r1
    cf4c:	cd b7       	in	r28, 0x3d	; 61
    cf4e:	de b7       	in	r29, 0x3e	; 62
    cf50:	89 83       	std	Y+1, r24	; 0x01
		g_final_output_setting = state;
    cf52:	89 81       	ldd	r24, Y+1	; 0x01
    cf54:	80 93 97 4a 	sts	0x4A97, r24	; 0x804a97 <_ZL22g_final_output_setting>
		
		if(g_rf_output_inhibited)
    cf58:	80 91 98 4a 	lds	r24, 0x4A98	; 0x804a98 <_ZL21g_rf_output_inhibited>
    cf5c:	88 23       	and	r24, r24
    cf5e:	21 f0       	breq	.+8      	; 0xcf68 <_Z18powerToTransmitterb+0x22>
		{
			final_drain_voltage(OFF);
    cf60:	80 e0       	ldi	r24, 0x00	; 0
    cf62:	0e 94 f3 67 	call	0xcfe6	; 0xcfe6 <_Z19final_drain_voltageb>
    cf66:	03 c0       	rjmp	.+6      	; 0xcf6e <_Z18powerToTransmitterb+0x28>
		}
		else
		{
			final_drain_voltage(state);
    cf68:	89 81       	ldd	r24, Y+1	; 0x01
    cf6a:	0e 94 f3 67 	call	0xcfe6	; 0xcfe6 <_Z19final_drain_voltageb>
		}

		return(ERROR_CODE_NO_ERROR);
    cf6e:	80 e0       	ldi	r24, 0x00	; 0
	}
    cf70:	0f 90       	pop	r0
    cf72:	df 91       	pop	r29
    cf74:	cf 91       	pop	r28
    cf76:	08 95       	ret

0000cf78 <_Z9txKeyDownb>:
	
	void txKeyDown(bool key)
	{
    cf78:	cf 93       	push	r28
    cf7a:	df 93       	push	r29
    cf7c:	00 d0       	rcall	.+0      	; 0xcf7e <_Z9txKeyDownb+0x6>
    cf7e:	1f 92       	push	r1
    cf80:	cd b7       	in	r28, 0x3d	; 61
    cf82:	de b7       	in	r29, 0x3e	; 62
    cf84:	8b 83       	std	Y+3, r24	; 0x03
		if(g_tx_initialized)
    cf86:	80 91 95 4a 	lds	r24, 0x4A95	; 0x804a95 <_ZL16g_tx_initialized>
    cf8a:	88 23       	and	r24, r24
    cf8c:	d1 f0       	breq	.+52     	; 0xcfc2 <_Z9txKeyDownb+0x4a>
		{
			int tries = 10;
    cf8e:	8a e0       	ldi	r24, 0x0A	; 10
    cf90:	90 e0       	ldi	r25, 0x00	; 0
    cf92:	89 83       	std	Y+1, r24	; 0x01
    cf94:	9a 83       	std	Y+2, r25	; 0x02
			while(tries-- && (key != keyTransmitter(key)));
    cf96:	89 81       	ldd	r24, Y+1	; 0x01
    cf98:	9a 81       	ldd	r25, Y+2	; 0x02
    cf9a:	9c 01       	movw	r18, r24
    cf9c:	21 50       	subi	r18, 0x01	; 1
    cf9e:	31 09       	sbc	r19, r1
    cfa0:	29 83       	std	Y+1, r18	; 0x01
    cfa2:	3a 83       	std	Y+2, r19	; 0x02
    cfa4:	89 2b       	or	r24, r25
    cfa6:	49 f0       	breq	.+18     	; 0xcfba <_Z9txKeyDownb+0x42>
    cfa8:	8b 81       	ldd	r24, Y+3	; 0x03
    cfaa:	0e 94 3e 68 	call	0xd07c	; 0xd07c <_Z14keyTransmitterb>
    cfae:	98 2f       	mov	r25, r24
    cfb0:	8b 81       	ldd	r24, Y+3	; 0x03
    cfb2:	98 17       	cp	r25, r24
    cfb4:	11 f0       	breq	.+4      	; 0xcfba <_Z9txKeyDownb+0x42>
    cfb6:	81 e0       	ldi	r24, 0x01	; 1
    cfb8:	01 c0       	rjmp	.+2      	; 0xcfbc <_Z9txKeyDownb+0x44>
    cfba:	80 e0       	ldi	r24, 0x00	; 0
    cfbc:	88 23       	and	r24, r24
    cfbe:	09 f0       	breq	.+2      	; 0xcfc2 <_Z9txKeyDownb+0x4a>
    cfc0:	ea cf       	rjmp	.-44     	; 0xcf96 <_Z9txKeyDownb+0x1e>
		}
	}
    cfc2:	00 00       	nop
    cfc4:	23 96       	adiw	r28, 0x03	; 3
    cfc6:	cd bf       	out	0x3d, r28	; 61
    cfc8:	de bf       	out	0x3e, r29	; 62
    cfca:	df 91       	pop	r29
    cfcc:	cf 91       	pop	r28
    cfce:	08 95       	ret

0000cfd0 <_Z10fet_driverb>:
	
	void fet_driver(bool state)
	{
    cfd0:	cf 93       	push	r28
    cfd2:	df 93       	push	r29
    cfd4:	1f 92       	push	r1
    cfd6:	cd b7       	in	r28, 0x3d	; 61
    cfd8:	de b7       	in	r29, 0x3e	; 62
    cfda:	89 83       	std	Y+1, r24	; 0x01
// 		}
// 		else
// 		{
// 			PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
// 		}
	}
    cfdc:	00 00       	nop
    cfde:	0f 90       	pop	r0
    cfe0:	df 91       	pop	r29
    cfe2:	cf 91       	pop	r28
    cfe4:	08 95       	ret

0000cfe6 <_Z19final_drain_voltageb>:

	void final_drain_voltage(bool state)
	{
    cfe6:	cf 93       	push	r28
    cfe8:	df 93       	push	r29
    cfea:	1f 92       	push	r1
    cfec:	cd b7       	in	r28, 0x3d	; 61
    cfee:	de b7       	in	r29, 0x3e	; 62
    cff0:	89 83       	std	Y+1, r24	; 0x01
		g_drain_voltage_enabled = state;
    cff2:	89 81       	ldd	r24, Y+1	; 0x01
    cff4:	80 93 96 4a 	sts	0x4A96, r24	; 0x804a96 <_ZL23g_drain_voltage_enabled>

		if(state == ON)
    cff8:	89 81       	ldd	r24, Y+1	; 0x01
    cffa:	88 23       	and	r24, r24
    cffc:	59 f0       	breq	.+22     	; 0xd014 <_Z19final_drain_voltageb+0x2e>
		{
			if(!g_rf_output_inhibited)
    cffe:	90 91 98 4a 	lds	r25, 0x4A98	; 0x804a98 <_ZL21g_rf_output_inhibited>
    d002:	81 e0       	ldi	r24, 0x01	; 1
    d004:	89 27       	eor	r24, r25
    d006:	88 23       	and	r24, r24
    d008:	49 f0       	breq	.+18     	; 0xd01c <_Z19final_drain_voltageb+0x36>
			{
				PORTA_set_pin_level(V3V3_PWR_ENABLE, HIGH);
    d00a:	61 e0       	ldi	r22, 0x01	; 1
    d00c:	82 e0       	ldi	r24, 0x02	; 2
    d00e:	0e 94 06 67 	call	0xce0c	; 0xce0c <PORTA_set_pin_level>
		}
		else
		{
			PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
		}
	}
    d012:	04 c0       	rjmp	.+8      	; 0xd01c <_Z19final_drain_voltageb+0x36>
				PORTA_set_pin_level(V3V3_PWR_ENABLE, HIGH);
			}
		}
		else
		{
			PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    d014:	60 e0       	ldi	r22, 0x00	; 0
    d016:	82 e0       	ldi	r24, 0x02	; 2
    d018:	0e 94 06 67 	call	0xce0c	; 0xce0c <PORTA_set_pin_level>
		}
	}
    d01c:	00 00       	nop
    d01e:	0f 90       	pop	r0
    d020:	df 91       	pop	r29
    d022:	cf 91       	pop	r28
    d024:	08 95       	ret

0000d026 <_Z15inhibitRFOutputb>:

	
	void inhibitRFOutput(bool inhibit)
	{
    d026:	cf 93       	push	r28
    d028:	df 93       	push	r29
    d02a:	00 d0       	rcall	.+0      	; 0xd02c <_Z15inhibitRFOutputb+0x6>
    d02c:	1f 92       	push	r1
    d02e:	cd b7       	in	r28, 0x3d	; 61
    d030:	de b7       	in	r29, 0x3e	; 62
    d032:	8b 83       	std	Y+3, r24	; 0x03
		g_rf_output_inhibited = inhibit;
    d034:	8b 81       	ldd	r24, Y+3	; 0x03
    d036:	80 93 98 4a 	sts	0x4A98, r24	; 0x804a98 <_ZL21g_rf_output_inhibited>
		
		if(inhibit)
    d03a:	8b 81       	ldd	r24, Y+3	; 0x03
    d03c:	88 23       	and	r24, r24
    d03e:	29 f0       	breq	.+10     	; 0xd04a <_Z15inhibitRFOutputb+0x24>
		{
			PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    d040:	60 e0       	ldi	r22, 0x00	; 0
    d042:	82 e0       	ldi	r24, 0x02	; 2
    d044:	0e 94 06 67 	call	0xce0c	; 0xce0c <PORTA_set_pin_level>
		{
			uint16_t pwr_mW = g_80m_power_level_mW;
			txSetParameters(&pwr_mW, NULL);
			PORTA_set_pin_level(V3V3_PWR_ENABLE, g_final_output_setting);
		}
	}
    d048:	12 c0       	rjmp	.+36     	; 0xd06e <_Z15inhibitRFOutputb+0x48>
		{
			PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
		}
		else
		{
			uint16_t pwr_mW = g_80m_power_level_mW;
    d04a:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_80m_power_level_mW>
    d04e:	90 91 31 40 	lds	r25, 0x4031	; 0x804031 <g_80m_power_level_mW+0x1>
    d052:	89 83       	std	Y+1, r24	; 0x01
    d054:	9a 83       	std	Y+2, r25	; 0x02
			txSetParameters(&pwr_mW, NULL);
    d056:	60 e0       	ldi	r22, 0x00	; 0
    d058:	70 e0       	ldi	r23, 0x00	; 0
    d05a:	ce 01       	movw	r24, r28
    d05c:	01 96       	adiw	r24, 0x01	; 1
    d05e:	0e 94 b4 68 	call	0xd168	; 0xd168 <_Z15txSetParametersPjPb>
			PORTA_set_pin_level(V3V3_PWR_ENABLE, g_final_output_setting);
    d062:	80 91 97 4a 	lds	r24, 0x4A97	; 0x804a97 <_ZL22g_final_output_setting>
    d066:	68 2f       	mov	r22, r24
    d068:	82 e0       	ldi	r24, 0x02	; 2
    d06a:	0e 94 06 67 	call	0xce0c	; 0xce0c <PORTA_set_pin_level>
		}
	}
    d06e:	00 00       	nop
    d070:	23 96       	adiw	r28, 0x03	; 3
    d072:	cd bf       	out	0x3d, r28	; 61
    d074:	de bf       	out	0x3e, r29	; 62
    d076:	df 91       	pop	r29
    d078:	cf 91       	pop	r28
    d07a:	08 95       	ret

0000d07c <_Z14keyTransmitterb>:

	bool keyTransmitter(bool on)
	{
    d07c:	cf 93       	push	r28
    d07e:	df 93       	push	r29
    d080:	00 d0       	rcall	.+0      	; 0xd082 <_Z14keyTransmitterb+0x6>
    d082:	1f 92       	push	r1
    d084:	cd b7       	in	r28, 0x3d	; 61
    d086:	de b7       	in	r29, 0x3e	; 62
    d088:	8b 83       	std	Y+3, r24	; 0x03
		static volatile bool transmitter_keyed = false;
		
		if(g_tx_initialized)
    d08a:	80 91 95 4a 	lds	r24, 0x4A95	; 0x804a95 <_ZL16g_tx_initialized>
    d08e:	88 23       	and	r24, r24
    d090:	09 f4       	brne	.+2      	; 0xd094 <_Z14keyTransmitterb+0x18>
    d092:	4e c0       	rjmp	.+156    	; 0xd130 <_Z14keyTransmitterb+0xb4>
		{			
			int tries = 5;
    d094:	85 e0       	ldi	r24, 0x05	; 5
    d096:	90 e0       	ldi	r25, 0x00	; 0
    d098:	89 83       	std	Y+1, r24	; 0x01
    d09a:	9a 83       	std	Y+2, r25	; 0x02
			
			if(on)
    d09c:	8b 81       	ldd	r24, Y+3	; 0x03
    d09e:	88 23       	and	r24, r24
    d0a0:	41 f1       	breq	.+80     	; 0xd0f2 <_Z14keyTransmitterb+0x76>
			{
				if(!transmitter_keyed)
    d0a2:	90 91 99 4a 	lds	r25, 0x4A99	; 0x804a99 <_ZZ14keyTransmitterbE17transmitter_keyed>
    d0a6:	81 e0       	ldi	r24, 0x01	; 1
    d0a8:	89 27       	eor	r24, r25
    d0aa:	88 23       	and	r24, r24
    d0ac:	09 f4       	brne	.+2      	; 0xd0b0 <_Z14keyTransmitterb+0x34>
    d0ae:	40 c0       	rjmp	.+128    	; 0xd130 <_Z14keyTransmitterb+0xb4>
				{
					while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) != ERROR_CODE_NO_ERROR))
    d0b0:	89 81       	ldd	r24, Y+1	; 0x01
    d0b2:	9a 81       	ldd	r25, Y+2	; 0x02
    d0b4:	9c 01       	movw	r18, r24
    d0b6:	21 50       	subi	r18, 0x01	; 1
    d0b8:	31 09       	sbc	r19, r1
    d0ba:	29 83       	std	Y+1, r18	; 0x01
    d0bc:	3a 83       	std	Y+2, r19	; 0x02
    d0be:	89 2b       	or	r24, r25
    d0c0:	41 f0       	breq	.+16     	; 0xd0d2 <_Z14keyTransmitterb+0x56>
    d0c2:	61 e0       	ldi	r22, 0x01	; 1
    d0c4:	81 e0       	ldi	r24, 0x01	; 1
    d0c6:	0e 94 14 5d 	call	0xba28	; 0xba28 <si5351_clock_enable>
    d0ca:	88 23       	and	r24, r24
    d0cc:	11 f0       	breq	.+4      	; 0xd0d2 <_Z14keyTransmitterb+0x56>
    d0ce:	81 e0       	ldi	r24, 0x01	; 1
    d0d0:	01 c0       	rjmp	.+2      	; 0xd0d4 <_Z14keyTransmitterb+0x58>
    d0d2:	80 e0       	ldi	r24, 0x00	; 0
    d0d4:	88 23       	and	r24, r24
    d0d6:	29 f0       	breq	.+10     	; 0xd0e2 <_Z14keyTransmitterb+0x66>
					{
						shutdown_transmitter();
    d0d8:	0e 94 42 69 	call	0xd284	; 0xd284 <_Z20shutdown_transmitterv>
						restart_transmitter();
    d0dc:	0e 94 4c 69 	call	0xd298	; 0xd298 <_Z19restart_transmitterv>
			
			if(on)
			{
				if(!transmitter_keyed)
				{
					while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) != ERROR_CODE_NO_ERROR))
    d0e0:	e7 cf       	rjmp	.-50     	; 0xd0b0 <_Z14keyTransmitterb+0x34>
					{
						shutdown_transmitter();
						restart_transmitter();
					}
					
					if(tries)
    d0e2:	89 81       	ldd	r24, Y+1	; 0x01
    d0e4:	9a 81       	ldd	r25, Y+2	; 0x02
    d0e6:	89 2b       	or	r24, r25
    d0e8:	19 f1       	breq	.+70     	; 0xd130 <_Z14keyTransmitterb+0xb4>
					{
						transmitter_keyed = true;
    d0ea:	81 e0       	ldi	r24, 0x01	; 1
    d0ec:	80 93 99 4a 	sts	0x4A99, r24	; 0x804a99 <_ZZ14keyTransmitterbE17transmitter_keyed>
    d0f0:	1f c0       	rjmp	.+62     	; 0xd130 <_Z14keyTransmitterb+0xb4>
					}
				}
			}
			else
			{
				while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) != ERROR_CODE_NO_ERROR))
    d0f2:	89 81       	ldd	r24, Y+1	; 0x01
    d0f4:	9a 81       	ldd	r25, Y+2	; 0x02
    d0f6:	9c 01       	movw	r18, r24
    d0f8:	21 50       	subi	r18, 0x01	; 1
    d0fa:	31 09       	sbc	r19, r1
    d0fc:	29 83       	std	Y+1, r18	; 0x01
    d0fe:	3a 83       	std	Y+2, r19	; 0x02
    d100:	89 2b       	or	r24, r25
    d102:	41 f0       	breq	.+16     	; 0xd114 <_Z14keyTransmitterb+0x98>
    d104:	60 e0       	ldi	r22, 0x00	; 0
    d106:	81 e0       	ldi	r24, 0x01	; 1
    d108:	0e 94 14 5d 	call	0xba28	; 0xba28 <si5351_clock_enable>
    d10c:	88 23       	and	r24, r24
    d10e:	11 f0       	breq	.+4      	; 0xd114 <_Z14keyTransmitterb+0x98>
    d110:	81 e0       	ldi	r24, 0x01	; 1
    d112:	01 c0       	rjmp	.+2      	; 0xd116 <_Z14keyTransmitterb+0x9a>
    d114:	80 e0       	ldi	r24, 0x00	; 0
    d116:	88 23       	and	r24, r24
    d118:	29 f0       	breq	.+10     	; 0xd124 <_Z14keyTransmitterb+0xa8>
				{
					shutdown_transmitter();
    d11a:	0e 94 42 69 	call	0xd284	; 0xd284 <_Z20shutdown_transmitterv>
					restart_transmitter();
    d11e:	0e 94 4c 69 	call	0xd298	; 0xd298 <_Z19restart_transmitterv>
					}
				}
			}
			else
			{
				while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) != ERROR_CODE_NO_ERROR))
    d122:	e7 cf       	rjmp	.-50     	; 0xd0f2 <_Z14keyTransmitterb+0x76>
				{
					shutdown_transmitter();
					restart_transmitter();
				}
					
				if(tries)
    d124:	89 81       	ldd	r24, Y+1	; 0x01
    d126:	9a 81       	ldd	r25, Y+2	; 0x02
    d128:	89 2b       	or	r24, r25
    d12a:	11 f0       	breq	.+4      	; 0xd130 <_Z14keyTransmitterb+0xb4>
				{
					transmitter_keyed = false;
    d12c:	10 92 99 4a 	sts	0x4A99, r1	; 0x804a99 <_ZZ14keyTransmitterbE17transmitter_keyed>
				}
			}
		}
		
		return(transmitter_keyed);
    d130:	80 91 99 4a 	lds	r24, 0x4A99	; 0x804a99 <_ZZ14keyTransmitterbE17transmitter_keyed>
	}
    d134:	23 96       	adiw	r28, 0x03	; 3
    d136:	cd bf       	out	0x3d, r28	; 61
    d138:	de bf       	out	0x3e, r29	; 62
    d13a:	df 91       	pop	r29
    d13c:	cf 91       	pop	r28
    d13e:	08 95       	ret

0000d140 <_Z12txGetPowerMwv>:

	uint16_t txGetPowerMw(void)
	{
    d140:	cf 93       	push	r28
    d142:	df 93       	push	r29
    d144:	cd b7       	in	r28, 0x3d	; 61
    d146:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_power_level_mW);
    d148:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_80m_power_level_mW>
    d14c:	90 91 31 40 	lds	r25, 0x4031	; 0x804031 <g_80m_power_level_mW+0x1>
	}
    d150:	df 91       	pop	r29
    d152:	cf 91       	pop	r28
    d154:	08 95       	ret

0000d156 <_Z15txIsInitializedv>:
	
	bool txIsInitialized(void)
	{
    d156:	cf 93       	push	r28
    d158:	df 93       	push	r29
    d15a:	cd b7       	in	r28, 0x3d	; 61
    d15c:	de b7       	in	r29, 0x3e	; 62
		return g_tx_initialized;
    d15e:	80 91 95 4a 	lds	r24, 0x4A95	; 0x804a95 <_ZL16g_tx_initialized>
	}
    d162:	df 91       	pop	r29
    d164:	cf 91       	pop	r28
    d166:	08 95       	ret

0000d168 <_Z15txSetParametersPjPb>:

	EC __attribute__((optimize("O0"))) txSetParameters(uint16_t* power_mW, bool* setEnabled)
/*	EC txSetParameters(uint16_t* power_mW, bool* setEnabled) */
	{
    d168:	cf 93       	push	r28
    d16a:	df 93       	push	r29
    d16c:	cd b7       	in	r28, 0x3d	; 61
    d16e:	de b7       	in	r29, 0x3e	; 62
    d170:	2a 97       	sbiw	r28, 0x0a	; 10
    d172:	cd bf       	out	0x3d, r28	; 61
    d174:	de bf       	out	0x3e, r29	; 62
    d176:	8f 83       	std	Y+7, r24	; 0x07
    d178:	98 87       	std	Y+8, r25	; 0x08
    d17a:	69 87       	std	Y+9, r22	; 0x09
    d17c:	7a 87       	std	Y+10, r23	; 0x0a
		bool err = false;
    d17e:	19 82       	std	Y+1, r1	; 0x01
		EC code = ERROR_CODE_NO_ERROR;
    d180:	1a 82       	std	Y+2, r1	; 0x02
		uint16_t power = 0;
    d182:	1b 82       	std	Y+3, r1	; 0x03
    d184:	1c 82       	std	Y+4, r1	; 0x04

		if(power_mW != null)
    d186:	8f 81       	ldd	r24, Y+7	; 0x07
    d188:	98 85       	ldd	r25, Y+8	; 0x08
    d18a:	89 2b       	or	r24, r25
    d18c:	09 f4       	brne	.+2      	; 0xd190 <_Z15txSetParametersPjPb+0x28>
    d18e:	64 c0       	rjmp	.+200    	; 0xd258 <_Z15txSetParametersPjPb+0xf0>
		{
			power = *power_mW;
    d190:	8f 81       	ldd	r24, Y+7	; 0x07
    d192:	98 85       	ldd	r25, Y+8	; 0x08
    d194:	fc 01       	movw	r30, r24
    d196:	80 81       	ld	r24, Z
    d198:	91 81       	ldd	r25, Z+1	; 0x01
    d19a:	8b 83       	std	Y+3, r24	; 0x03
    d19c:	9c 83       	std	Y+4, r25	; 0x04

			if(power <= MAX_TX_POWER_80M_MW)
    d19e:	8b 81       	ldd	r24, Y+3	; 0x03
    d1a0:	9c 81       	ldd	r25, Y+4	; 0x04
    d1a2:	89 38       	cpi	r24, 0x89	; 137
    d1a4:	93 41       	sbci	r25, 0x13	; 19
    d1a6:	08 f0       	brcs	.+2      	; 0xd1aa <_Z15txSetParametersPjPb+0x42>
    d1a8:	53 c0       	rjmp	.+166    	; 0xd250 <_Z15txSetParametersPjPb+0xe8>
			{
				uint16_t drainVoltageDAC;
				code = txMilliwattsToSettings(&power, &drainVoltageDAC);
    d1aa:	9e 01       	movw	r18, r28
    d1ac:	2b 5f       	subi	r18, 0xFB	; 251
    d1ae:	3f 4f       	sbci	r19, 0xFF	; 255
    d1b0:	ce 01       	movw	r24, r28
    d1b2:	03 96       	adiw	r24, 0x03	; 3
    d1b4:	b9 01       	movw	r22, r18
    d1b6:	0e 94 b4 69 	call	0xd368	; 0xd368 <_Z22txMilliwattsToSettingsPjS_>
    d1ba:	8a 83       	std	Y+2, r24	; 0x02
				err = (code == ERROR_CODE_SW_LOGIC_ERROR);
    d1bc:	81 e0       	ldi	r24, 0x01	; 1
    d1be:	9a 81       	ldd	r25, Y+2	; 0x02
    d1c0:	9f 3c       	cpi	r25, 0xCF	; 207
    d1c2:	09 f0       	breq	.+2      	; 0xd1c6 <_Z15txSetParametersPjPb+0x5e>
    d1c4:	80 e0       	ldi	r24, 0x00	; 0
    d1c6:	89 83       	std	Y+1, r24	; 0x01

				g_tx_power_is_zero = (power == 0);
    d1c8:	8b 81       	ldd	r24, Y+3	; 0x03
    d1ca:	9c 81       	ldd	r25, Y+4	; 0x04
    d1cc:	21 e0       	ldi	r18, 0x01	; 1
    d1ce:	89 2b       	or	r24, r25
    d1d0:	09 f0       	breq	.+2      	; 0xd1d4 <_Z15txSetParametersPjPb+0x6c>
    d1d2:	20 e0       	ldi	r18, 0x00	; 0
    d1d4:	20 93 36 40 	sts	0x4036, r18	; 0x804036 <g_tx_power_is_zero>

				if(!err)
    d1d8:	99 81       	ldd	r25, Y+1	; 0x01
    d1da:	81 e0       	ldi	r24, 0x01	; 1
    d1dc:	89 27       	eor	r24, r25
    d1de:	88 23       	and	r24, r24
    d1e0:	79 f1       	breq	.+94     	; 0xd240 <_Z15txSetParametersPjPb+0xd8>
				{
					g_80m_power_level_mW = power;
    d1e2:	8b 81       	ldd	r24, Y+3	; 0x03
    d1e4:	9c 81       	ldd	r25, Y+4	; 0x04
    d1e6:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_80m_power_level_mW>
    d1ea:	90 93 31 40 	sts	0x4031, r25	; 0x804031 <g_80m_power_level_mW+0x1>
					
					if(g_antenna_connect_state != ANT_CONNECTED)
    d1ee:	90 91 da 46 	lds	r25, 0x46DA	; 0x8046da <g_antenna_connect_state>
    d1f2:	81 e0       	ldi	r24, 0x01	; 1
    d1f4:	92 30       	cpi	r25, 0x02	; 2
    d1f6:	09 f4       	brne	.+2      	; 0xd1fa <_Z15txSetParametersPjPb+0x92>
    d1f8:	80 e0       	ldi	r24, 0x00	; 0
    d1fa:	88 23       	and	r24, r24
    d1fc:	51 f0       	breq	.+20     	; 0xd212 <_Z15txSetParametersPjPb+0xaa>
					{
						inhibitRFOutput(true);
    d1fe:	81 e0       	ldi	r24, 0x01	; 1
    d200:	0e 94 13 68 	call	0xd026	; 0xd026 <_Z15inhibitRFOutputb>
						g_tx_power_is_zero = true;
    d204:	81 e0       	ldi	r24, 0x01	; 1
    d206:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_tx_power_is_zero>
						err = true;
    d20a:	81 e0       	ldi	r24, 0x01	; 1
    d20c:	89 83       	std	Y+1, r24	; 0x01
						code = ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING;
    d20e:	86 ef       	ldi	r24, 0xF6	; 246
    d210:	8a 83       	std	Y+2, r24	; 0x02
					}

					DAC0_setVal(drainVoltageDAC);
    d212:	8d 81       	ldd	r24, Y+5	; 0x05
    d214:	9e 81       	ldd	r25, Y+6	; 0x06
    d216:	0e 94 22 3d 	call	0x7a44	; 0x7a44 <_Z11DAC0_setValj>

					if(g_tx_power_is_zero || (drainVoltageDAC == 0))
    d21a:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_tx_power_is_zero>
    d21e:	88 23       	and	r24, r24
    d220:	21 f4       	brne	.+8      	; 0xd22a <_Z15txSetParametersPjPb+0xc2>
    d222:	8d 81       	ldd	r24, Y+5	; 0x05
    d224:	9e 81       	ldd	r25, Y+6	; 0x06
    d226:	89 2b       	or	r24, r25
    d228:	11 f4       	brne	.+4      	; 0xd22e <_Z15txSetParametersPjPb+0xc6>
    d22a:	81 e0       	ldi	r24, 0x01	; 1
    d22c:	01 c0       	rjmp	.+2      	; 0xd230 <_Z15txSetParametersPjPb+0xc8>
    d22e:	80 e0       	ldi	r24, 0x00	; 0
    d230:	88 23       	and	r24, r24
    d232:	31 f0       	breq	.+12     	; 0xd240 <_Z15txSetParametersPjPb+0xd8>
					{
						final_drain_voltage(OFF);
    d234:	80 e0       	ldi	r24, 0x00	; 0
    d236:	0e 94 f3 67 	call	0xcfe6	; 0xcfe6 <_Z19final_drain_voltageb>
						fet_driver(ON);
    d23a:	81 e0       	ldi	r24, 0x01	; 1
    d23c:	0e 94 e8 67 	call	0xcfd0	; 0xcfd0 <_Z10fet_driverb>
					}
				}

				*power_mW = power;
    d240:	2b 81       	ldd	r18, Y+3	; 0x03
    d242:	3c 81       	ldd	r19, Y+4	; 0x04
    d244:	8f 81       	ldd	r24, Y+7	; 0x07
    d246:	98 85       	ldd	r25, Y+8	; 0x08
    d248:	fc 01       	movw	r30, r24
    d24a:	20 83       	st	Z, r18
    d24c:	31 83       	std	Z+1, r19	; 0x01
    d24e:	04 c0       	rjmp	.+8      	; 0xd258 <_Z15txSetParametersPjPb+0xf0>
			}
			else
			{
				err = true;
    d250:	81 e0       	ldi	r24, 0x01	; 1
    d252:	89 83       	std	Y+1, r24	; 0x01
				code = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    d254:	85 ef       	ldi	r24, 0xF5	; 245
    d256:	8a 83       	std	Y+2, r24	; 0x02
			}
		}

		if(!err)
    d258:	99 81       	ldd	r25, Y+1	; 0x01
    d25a:	81 e0       	ldi	r24, 0x01	; 1
    d25c:	89 27       	eor	r24, r25
    d25e:	88 23       	and	r24, r24
    d260:	51 f0       	breq	.+20     	; 0xd276 <_Z15txSetParametersPjPb+0x10e>
		{
			if(setEnabled != NULL)
    d262:	89 85       	ldd	r24, Y+9	; 0x09
    d264:	9a 85       	ldd	r25, Y+10	; 0x0a
    d266:	89 2b       	or	r24, r25
    d268:	31 f0       	breq	.+12     	; 0xd276 <_Z15txSetParametersPjPb+0x10e>
			{
				powerToTransmitter(*setEnabled);
    d26a:	89 85       	ldd	r24, Y+9	; 0x09
    d26c:	9a 85       	ldd	r25, Y+10	; 0x0a
    d26e:	fc 01       	movw	r30, r24
    d270:	80 81       	ld	r24, Z
    d272:	0e 94 a3 67 	call	0xcf46	; 0xcf46 <_Z18powerToTransmitterb>
			}
		}

		return(code);
    d276:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d278:	2a 96       	adiw	r28, 0x0a	; 10
    d27a:	cd bf       	out	0x3d, r28	; 61
    d27c:	de bf       	out	0x3e, r29	; 62
    d27e:	df 91       	pop	r29
    d280:	cf 91       	pop	r28
    d282:	08 95       	ret

0000d284 <_Z20shutdown_transmitterv>:

	void shutdown_transmitter(void)
	{
    d284:	cf 93       	push	r28
    d286:	df 93       	push	r29
    d288:	cd b7       	in	r28, 0x3d	; 61
    d28a:	de b7       	in	r29, 0x3e	; 62
		si5351_shutdown_comms();	
    d28c:	0e 94 91 5a 	call	0xb522	; 0xb522 <si5351_shutdown_comms>
	}
    d290:	00 00       	nop
    d292:	df 91       	pop	r29
    d294:	cf 91       	pop	r28
    d296:	08 95       	ret

0000d298 <_Z19restart_transmitterv>:
	
	void restart_transmitter(void)
	{
    d298:	cf 93       	push	r28
    d29a:	df 93       	push	r29
    d29c:	cd b7       	in	r28, 0x3d	; 61
    d29e:	de b7       	in	r29, 0x3e	; 62
		si5351_start_comms();
    d2a0:	0e 94 9b 5a 	call	0xb536	; 0xb536 <si5351_start_comms>
	}
    d2a4:	00 00       	nop
    d2a6:	df 91       	pop	r29
    d2a8:	cf 91       	pop	r28
    d2aa:	08 95       	ret

0000d2ac <_Z16init_transmitterv>:

	EC init_transmitter(void)
	{
    d2ac:	cf 93       	push	r28
    d2ae:	df 93       	push	r29
    d2b0:	00 d0       	rcall	.+0      	; 0xd2b2 <_Z16init_transmitterv+0x6>
    d2b2:	00 d0       	rcall	.+0      	; 0xd2b4 <_Z16init_transmitterv+0x8>
    d2b4:	cd b7       	in	r28, 0x3d	; 61
    d2b6:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		fet_driver(OFF);		
    d2b8:	80 e0       	ldi	r24, 0x00	; 0
    d2ba:	0e 94 e8 67 	call	0xcfd0	; 0xcfd0 <_Z10fet_driverb>
		DAC0_init();
    d2be:	0e 94 f8 3c 	call	0x79f0	; 0x79f0 <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    d2c2:	40 e0       	ldi	r20, 0x00	; 0
    d2c4:	50 e0       	ldi	r21, 0x00	; 0
    d2c6:	ba 01       	movw	r22, r20
    d2c8:	80 e4       	ldi	r24, 0x40	; 64
    d2ca:	0e 94 a5 5a 	call	0xb54a	; 0xb54a <si5351_init>
    d2ce:	8a 83       	std	Y+2, r24	; 0x02
    d2d0:	8a 81       	ldd	r24, Y+2	; 0x02
    d2d2:	88 23       	and	r24, r24
    d2d4:	11 f0       	breq	.+4      	; 0xd2da <_Z16init_transmitterv+0x2e>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    d2d6:	82 ed       	ldi	r24, 0xD2	; 210
    d2d8:	41 c0       	rjmp	.+130    	; 0xd35c <_Z16init_transmitterv+0xb0>
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    d2da:	63 e0       	ldi	r22, 0x03	; 3
    d2dc:	81 e0       	ldi	r24, 0x01	; 1
    d2de:	0e 94 5f 5d 	call	0xbabe	; 0xbabe <si5351_drive_strength>
    d2e2:	89 83       	std	Y+1, r24	; 0x01
    d2e4:	81 e0       	ldi	r24, 0x01	; 1
    d2e6:	99 81       	ldd	r25, Y+1	; 0x01
    d2e8:	99 23       	and	r25, r25
    d2ea:	09 f4       	brne	.+2      	; 0xd2ee <_Z16init_transmitterv+0x42>
    d2ec:	80 e0       	ldi	r24, 0x00	; 0
    d2ee:	88 23       	and	r24, r24
    d2f0:	11 f0       	breq	.+4      	; 0xd2f6 <_Z16init_transmitterv+0x4a>
		{
			return( code);
    d2f2:	89 81       	ldd	r24, Y+1	; 0x01
    d2f4:	33 c0       	rjmp	.+102    	; 0xd35c <_Z16init_transmitterv+0xb0>
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    d2f6:	60 e0       	ldi	r22, 0x00	; 0
    d2f8:	81 e0       	ldi	r24, 0x01	; 1
    d2fa:	0e 94 14 5d 	call	0xba28	; 0xba28 <si5351_clock_enable>
    d2fe:	89 83       	std	Y+1, r24	; 0x01
    d300:	81 e0       	ldi	r24, 0x01	; 1
    d302:	99 81       	ldd	r25, Y+1	; 0x01
    d304:	99 23       	and	r25, r25
    d306:	09 f4       	brne	.+2      	; 0xd30a <_Z16init_transmitterv+0x5e>
    d308:	80 e0       	ldi	r24, 0x00	; 0
    d30a:	88 23       	and	r24, r24
    d30c:	11 f0       	breq	.+4      	; 0xd312 <_Z16init_transmitterv+0x66>
		{
			return( code);
    d30e:	89 81       	ldd	r24, Y+1	; 0x01
    d310:	25 c0       	rjmp	.+74     	; 0xd35c <_Z16init_transmitterv+0xb0>
		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    d312:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_80m_power_level_mW>
    d316:	90 91 31 40 	lds	r25, 0x4031	; 0x804031 <g_80m_power_level_mW+0x1>
    d31a:	8b 83       	std	Y+3, r24	; 0x03
    d31c:	9c 83       	std	Y+4, r25	; 0x04
		
		err = txSetFrequency((Frequency_Hz*)&g_80m_frequency, true);
    d31e:	61 e0       	ldi	r22, 0x01	; 1
    d320:	8c e2       	ldi	r24, 0x2C	; 44
    d322:	90 e4       	ldi	r25, 0x40	; 64
    d324:	0e 94 40 67 	call	0xce80	; 0xce80 <_Z14txSetFrequencyPmb>
    d328:	8a 83       	std	Y+2, r24	; 0x02
		if(!err)
    d32a:	9a 81       	ldd	r25, Y+2	; 0x02
    d32c:	81 e0       	ldi	r24, 0x01	; 1
    d32e:	89 27       	eor	r24, r25
    d330:	88 23       	and	r24, r24
    d332:	81 f0       	breq	.+32     	; 0xd354 <_Z16init_transmitterv+0xa8>
		{
			code = txSetParameters(&pwr_mW, NULL);
    d334:	ce 01       	movw	r24, r28
    d336:	03 96       	adiw	r24, 0x03	; 3
    d338:	60 e0       	ldi	r22, 0x00	; 0
    d33a:	70 e0       	ldi	r23, 0x00	; 0
    d33c:	0e 94 b4 68 	call	0xd168	; 0xd168 <_Z15txSetParametersPjPb>
    d340:	89 83       	std	Y+1, r24	; 0x01
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    d342:	89 81       	ldd	r24, Y+1	; 0x01
    d344:	88 23       	and	r24, r24
    d346:	19 f0       	breq	.+6      	; 0xd34e <_Z16init_transmitterv+0xa2>
    d348:	89 81       	ldd	r24, Y+1	; 0x01
    d34a:	86 3f       	cpi	r24, 0xF6	; 246
    d34c:	19 f4       	brne	.+6      	; 0xd354 <_Z16init_transmitterv+0xa8>
			{
				g_tx_initialized = true;
    d34e:	81 e0       	ldi	r24, 0x01	; 1
    d350:	80 93 95 4a 	sts	0x4A95, r24	; 0x804a95 <_ZL16g_tx_initialized>
			}
		}
		
		fet_driver(ON);
    d354:	81 e0       	ldi	r24, 0x01	; 1
    d356:	0e 94 e8 67 	call	0xcfd0	; 0xcfd0 <_Z10fet_driverb>

		return( code);
    d35a:	89 81       	ldd	r24, Y+1	; 0x01
	}
    d35c:	24 96       	adiw	r28, 0x04	; 4
    d35e:	cd bf       	out	0x3d, r28	; 61
    d360:	de bf       	out	0x3e, r29	; 62
    d362:	df 91       	pop	r29
    d364:	cf 91       	pop	r28
    d366:	08 95       	ret

0000d368 <_Z22txMilliwattsToSettingsPjS_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint16_t* driveLevel)
{
    d368:	cf 93       	push	r28
    d36a:	df 93       	push	r29
    d36c:	cd b7       	in	r28, 0x3d	; 61
    d36e:	de b7       	in	r29, 0x3e	; 62
    d370:	62 97       	sbiw	r28, 0x12	; 18
    d372:	cd bf       	out	0x3d, r28	; 61
    d374:	de bf       	out	0x3e, r29	; 62
    d376:	8f 87       	std	Y+15, r24	; 0x0f
    d378:	98 8b       	std	Y+16, r25	; 0x10
    d37a:	69 8b       	std	Y+17, r22	; 0x11
    d37c:	7a 8b       	std	Y+18, r23	; 0x12
	EC ec = ERROR_CODE_NO_ERROR;
    d37e:	19 82       	std	Y+1, r1	; 0x01
	uint16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    d380:	8f 85       	ldd	r24, Y+15	; 0x0f
    d382:	98 89       	ldd	r25, Y+16	; 0x10
    d384:	89 2b       	or	r24, r25
    d386:	11 f4       	brne	.+4      	; 0xd38c <_Z22txMilliwattsToSettingsPjS_+0x24>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    d388:	8f ec       	ldi	r24, 0xCF	; 207
    d38a:	76 c1       	rjmp	.+748    	; 0xd678 <_Z22txMilliwattsToSettingsPjS_+0x310>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    d38c:	88 e8       	ldi	r24, 0x88	; 136
    d38e:	93 e1       	ldi	r25, 0x13	; 19
    d390:	8b 83       	std	Y+3, r24	; 0x03
    d392:	9c 83       	std	Y+4, r25	; 0x04

	if(*powerMW > maxPwr)
    d394:	8f 85       	ldd	r24, Y+15	; 0x0f
    d396:	98 89       	ldd	r25, Y+16	; 0x10
    d398:	fc 01       	movw	r30, r24
    d39a:	20 81       	ld	r18, Z
    d39c:	31 81       	ldd	r19, Z+1	; 0x01
    d39e:	8b 81       	ldd	r24, Y+3	; 0x03
    d3a0:	9c 81       	ldd	r25, Y+4	; 0x04
    d3a2:	82 17       	cp	r24, r18
    d3a4:	93 07       	cpc	r25, r19
    d3a6:	10 f4       	brcc	.+4      	; 0xd3ac <_Z22txMilliwattsToSettingsPjS_+0x44>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    d3a8:	85 ef       	ldi	r24, 0xF5	; 245
    d3aa:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP((uint16_t)0, *powerMW, maxPwr);
    d3ac:	8f 85       	ldd	r24, Y+15	; 0x0f
    d3ae:	98 89       	ldd	r25, Y+16	; 0x10
    d3b0:	fc 01       	movw	r30, r24
    d3b2:	80 81       	ld	r24, Z
    d3b4:	91 81       	ldd	r25, Z+1	; 0x01
    d3b6:	8d 83       	std	Y+5, r24	; 0x05
    d3b8:	9e 83       	std	Y+6, r25	; 0x06
    d3ba:	1f 82       	std	Y+7, r1	; 0x07
    d3bc:	18 86       	std	Y+8, r1	; 0x08
    d3be:	8b 81       	ldd	r24, Y+3	; 0x03
    d3c0:	9c 81       	ldd	r25, Y+4	; 0x04
    d3c2:	89 87       	std	Y+9, r24	; 0x09
    d3c4:	9a 87       	std	Y+10, r25	; 0x0a
    d3c6:	2d 81       	ldd	r18, Y+5	; 0x05
    d3c8:	3e 81       	ldd	r19, Y+6	; 0x06
    d3ca:	89 85       	ldd	r24, Y+9	; 0x09
    d3cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    d3ce:	82 17       	cp	r24, r18
    d3d0:	93 07       	cpc	r25, r19
    d3d2:	68 f0       	brcs	.+26     	; 0xd3ee <_Z22txMilliwattsToSettingsPjS_+0x86>
    d3d4:	2d 81       	ldd	r18, Y+5	; 0x05
    d3d6:	3e 81       	ldd	r19, Y+6	; 0x06
    d3d8:	8f 81       	ldd	r24, Y+7	; 0x07
    d3da:	98 85       	ldd	r25, Y+8	; 0x08
    d3dc:	28 17       	cp	r18, r24
    d3de:	39 07       	cpc	r19, r25
    d3e0:	18 f4       	brcc	.+6      	; 0xd3e8 <_Z22txMilliwattsToSettingsPjS_+0x80>
    d3e2:	8f 81       	ldd	r24, Y+7	; 0x07
    d3e4:	98 85       	ldd	r25, Y+8	; 0x08
    d3e6:	05 c0       	rjmp	.+10     	; 0xd3f2 <_Z22txMilliwattsToSettingsPjS_+0x8a>
    d3e8:	8d 81       	ldd	r24, Y+5	; 0x05
    d3ea:	9e 81       	ldd	r25, Y+6	; 0x06
    d3ec:	02 c0       	rjmp	.+4      	; 0xd3f2 <_Z22txMilliwattsToSettingsPjS_+0x8a>
    d3ee:	89 85       	ldd	r24, Y+9	; 0x09
    d3f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    d3f2:	2f 85       	ldd	r18, Y+15	; 0x0f
    d3f4:	38 89       	ldd	r19, Y+16	; 0x10
    d3f6:	f9 01       	movw	r30, r18
    d3f8:	80 83       	st	Z, r24
    d3fa:	91 83       	std	Z+1, r25	; 0x01

	if(*powerMW < 5)
    d3fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    d3fe:	98 89       	ldd	r25, Y+16	; 0x10
    d400:	fc 01       	movw	r30, r24
    d402:	80 81       	ld	r24, Z
    d404:	91 81       	ldd	r25, Z+1	; 0x01
    d406:	05 97       	sbiw	r24, 0x05	; 5
    d408:	38 f4       	brcc	.+14     	; 0xd418 <_Z22txMilliwattsToSettingsPjS_+0xb0>
	{
		index = 0;
    d40a:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    d40c:	8f 85       	ldd	r24, Y+15	; 0x0f
    d40e:	98 89       	ldd	r25, Y+16	; 0x10
    d410:	fc 01       	movw	r30, r24
    d412:	10 82       	st	Z, r1
    d414:	11 82       	std	Z+1, r1	; 0x01
    d416:	04 c1       	rjmp	.+520    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 50)
    d418:	8f 85       	ldd	r24, Y+15	; 0x0f
    d41a:	98 89       	ldd	r25, Y+16	; 0x10
    d41c:	fc 01       	movw	r30, r24
    d41e:	80 81       	ld	r24, Z
    d420:	91 81       	ldd	r25, Z+1	; 0x01
    d422:	c2 97       	sbiw	r24, 0x32	; 50
    d424:	50 f4       	brcc	.+20     	; 0xd43a <_Z22txMilliwattsToSettingsPjS_+0xd2>
	{
		index = 1;
    d426:	81 e0       	ldi	r24, 0x01	; 1
    d428:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    d42a:	8f 85       	ldd	r24, Y+15	; 0x0f
    d42c:	98 89       	ldd	r25, Y+16	; 0x10
    d42e:	2a e0       	ldi	r18, 0x0A	; 10
    d430:	30 e0       	ldi	r19, 0x00	; 0
    d432:	fc 01       	movw	r30, r24
    d434:	20 83       	st	Z, r18
    d436:	31 83       	std	Z+1, r19	; 0x01
    d438:	f3 c0       	rjmp	.+486    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 150)
    d43a:	8f 85       	ldd	r24, Y+15	; 0x0f
    d43c:	98 89       	ldd	r25, Y+16	; 0x10
    d43e:	fc 01       	movw	r30, r24
    d440:	80 81       	ld	r24, Z
    d442:	91 81       	ldd	r25, Z+1	; 0x01
    d444:	86 39       	cpi	r24, 0x96	; 150
    d446:	91 05       	cpc	r25, r1
    d448:	50 f4       	brcc	.+20     	; 0xd45e <_Z22txMilliwattsToSettingsPjS_+0xf6>
	{
		index = 2;
    d44a:	82 e0       	ldi	r24, 0x02	; 2
    d44c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    d44e:	8f 85       	ldd	r24, Y+15	; 0x0f
    d450:	98 89       	ldd	r25, Y+16	; 0x10
    d452:	24 e6       	ldi	r18, 0x64	; 100
    d454:	30 e0       	ldi	r19, 0x00	; 0
    d456:	fc 01       	movw	r30, r24
    d458:	20 83       	st	Z, r18
    d45a:	31 83       	std	Z+1, r19	; 0x01
    d45c:	e1 c0       	rjmp	.+450    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 250)
    d45e:	8f 85       	ldd	r24, Y+15	; 0x0f
    d460:	98 89       	ldd	r25, Y+16	; 0x10
    d462:	fc 01       	movw	r30, r24
    d464:	80 81       	ld	r24, Z
    d466:	91 81       	ldd	r25, Z+1	; 0x01
    d468:	8a 3f       	cpi	r24, 0xFA	; 250
    d46a:	91 05       	cpc	r25, r1
    d46c:	50 f4       	brcc	.+20     	; 0xd482 <_Z22txMilliwattsToSettingsPjS_+0x11a>
	{
		index = 3;
    d46e:	83 e0       	ldi	r24, 0x03	; 3
    d470:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    d472:	8f 85       	ldd	r24, Y+15	; 0x0f
    d474:	98 89       	ldd	r25, Y+16	; 0x10
    d476:	28 ec       	ldi	r18, 0xC8	; 200
    d478:	30 e0       	ldi	r19, 0x00	; 0
    d47a:	fc 01       	movw	r30, r24
    d47c:	20 83       	st	Z, r18
    d47e:	31 83       	std	Z+1, r19	; 0x01
    d480:	cf c0       	rjmp	.+414    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 350)
    d482:	8f 85       	ldd	r24, Y+15	; 0x0f
    d484:	98 89       	ldd	r25, Y+16	; 0x10
    d486:	fc 01       	movw	r30, r24
    d488:	80 81       	ld	r24, Z
    d48a:	91 81       	ldd	r25, Z+1	; 0x01
    d48c:	8e 35       	cpi	r24, 0x5E	; 94
    d48e:	91 40       	sbci	r25, 0x01	; 1
    d490:	50 f4       	brcc	.+20     	; 0xd4a6 <_Z22txMilliwattsToSettingsPjS_+0x13e>
	{
		index = 4;
    d492:	84 e0       	ldi	r24, 0x04	; 4
    d494:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    d496:	8f 85       	ldd	r24, Y+15	; 0x0f
    d498:	98 89       	ldd	r25, Y+16	; 0x10
    d49a:	2c e2       	ldi	r18, 0x2C	; 44
    d49c:	31 e0       	ldi	r19, 0x01	; 1
    d49e:	fc 01       	movw	r30, r24
    d4a0:	20 83       	st	Z, r18
    d4a2:	31 83       	std	Z+1, r19	; 0x01
    d4a4:	bd c0       	rjmp	.+378    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 450)
    d4a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    d4a8:	98 89       	ldd	r25, Y+16	; 0x10
    d4aa:	fc 01       	movw	r30, r24
    d4ac:	80 81       	ld	r24, Z
    d4ae:	91 81       	ldd	r25, Z+1	; 0x01
    d4b0:	82 3c       	cpi	r24, 0xC2	; 194
    d4b2:	91 40       	sbci	r25, 0x01	; 1
    d4b4:	50 f4       	brcc	.+20     	; 0xd4ca <_Z22txMilliwattsToSettingsPjS_+0x162>
	{
		index = 5;
    d4b6:	85 e0       	ldi	r24, 0x05	; 5
    d4b8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    d4ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    d4bc:	98 89       	ldd	r25, Y+16	; 0x10
    d4be:	20 e9       	ldi	r18, 0x90	; 144
    d4c0:	31 e0       	ldi	r19, 0x01	; 1
    d4c2:	fc 01       	movw	r30, r24
    d4c4:	20 83       	st	Z, r18
    d4c6:	31 83       	std	Z+1, r19	; 0x01
    d4c8:	ab c0       	rjmp	.+342    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 550)
    d4ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    d4cc:	98 89       	ldd	r25, Y+16	; 0x10
    d4ce:	fc 01       	movw	r30, r24
    d4d0:	80 81       	ld	r24, Z
    d4d2:	91 81       	ldd	r25, Z+1	; 0x01
    d4d4:	86 32       	cpi	r24, 0x26	; 38
    d4d6:	92 40       	sbci	r25, 0x02	; 2
    d4d8:	50 f4       	brcc	.+20     	; 0xd4ee <_Z22txMilliwattsToSettingsPjS_+0x186>
	{
		index = 6;
    d4da:	86 e0       	ldi	r24, 0x06	; 6
    d4dc:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    d4de:	8f 85       	ldd	r24, Y+15	; 0x0f
    d4e0:	98 89       	ldd	r25, Y+16	; 0x10
    d4e2:	24 ef       	ldi	r18, 0xF4	; 244
    d4e4:	31 e0       	ldi	r19, 0x01	; 1
    d4e6:	fc 01       	movw	r30, r24
    d4e8:	20 83       	st	Z, r18
    d4ea:	31 83       	std	Z+1, r19	; 0x01
    d4ec:	99 c0       	rjmp	.+306    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 650)
    d4ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    d4f0:	98 89       	ldd	r25, Y+16	; 0x10
    d4f2:	fc 01       	movw	r30, r24
    d4f4:	80 81       	ld	r24, Z
    d4f6:	91 81       	ldd	r25, Z+1	; 0x01
    d4f8:	8a 38       	cpi	r24, 0x8A	; 138
    d4fa:	92 40       	sbci	r25, 0x02	; 2
    d4fc:	50 f4       	brcc	.+20     	; 0xd512 <_Z22txMilliwattsToSettingsPjS_+0x1aa>
	{
		index = 7;
    d4fe:	87 e0       	ldi	r24, 0x07	; 7
    d500:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    d502:	8f 85       	ldd	r24, Y+15	; 0x0f
    d504:	98 89       	ldd	r25, Y+16	; 0x10
    d506:	28 e5       	ldi	r18, 0x58	; 88
    d508:	32 e0       	ldi	r19, 0x02	; 2
    d50a:	fc 01       	movw	r30, r24
    d50c:	20 83       	st	Z, r18
    d50e:	31 83       	std	Z+1, r19	; 0x01
    d510:	87 c0       	rjmp	.+270    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 900)
    d512:	8f 85       	ldd	r24, Y+15	; 0x0f
    d514:	98 89       	ldd	r25, Y+16	; 0x10
    d516:	fc 01       	movw	r30, r24
    d518:	80 81       	ld	r24, Z
    d51a:	91 81       	ldd	r25, Z+1	; 0x01
    d51c:	84 38       	cpi	r24, 0x84	; 132
    d51e:	93 40       	sbci	r25, 0x03	; 3
    d520:	50 f4       	brcc	.+20     	; 0xd536 <_Z22txMilliwattsToSettingsPjS_+0x1ce>
	{
		index = 8;
    d522:	88 e0       	ldi	r24, 0x08	; 8
    d524:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    d526:	8f 85       	ldd	r24, Y+15	; 0x0f
    d528:	98 89       	ldd	r25, Y+16	; 0x10
    d52a:	20 e2       	ldi	r18, 0x20	; 32
    d52c:	33 e0       	ldi	r19, 0x03	; 3
    d52e:	fc 01       	movw	r30, r24
    d530:	20 83       	st	Z, r18
    d532:	31 83       	std	Z+1, r19	; 0x01
    d534:	75 c0       	rjmp	.+234    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 1250)
    d536:	8f 85       	ldd	r24, Y+15	; 0x0f
    d538:	98 89       	ldd	r25, Y+16	; 0x10
    d53a:	fc 01       	movw	r30, r24
    d53c:	80 81       	ld	r24, Z
    d53e:	91 81       	ldd	r25, Z+1	; 0x01
    d540:	82 3e       	cpi	r24, 0xE2	; 226
    d542:	94 40       	sbci	r25, 0x04	; 4
    d544:	50 f4       	brcc	.+20     	; 0xd55a <_Z22txMilliwattsToSettingsPjS_+0x1f2>
	{
		index = 9;
    d546:	89 e0       	ldi	r24, 0x09	; 9
    d548:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    d54a:	8f 85       	ldd	r24, Y+15	; 0x0f
    d54c:	98 89       	ldd	r25, Y+16	; 0x10
    d54e:	28 ee       	ldi	r18, 0xE8	; 232
    d550:	33 e0       	ldi	r19, 0x03	; 3
    d552:	fc 01       	movw	r30, r24
    d554:	20 83       	st	Z, r18
    d556:	31 83       	std	Z+1, r19	; 0x01
    d558:	63 c0       	rjmp	.+198    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 1750)
    d55a:	8f 85       	ldd	r24, Y+15	; 0x0f
    d55c:	98 89       	ldd	r25, Y+16	; 0x10
    d55e:	fc 01       	movw	r30, r24
    d560:	80 81       	ld	r24, Z
    d562:	91 81       	ldd	r25, Z+1	; 0x01
    d564:	86 3d       	cpi	r24, 0xD6	; 214
    d566:	96 40       	sbci	r25, 0x06	; 6
    d568:	50 f4       	brcc	.+20     	; 0xd57e <_Z22txMilliwattsToSettingsPjS_+0x216>
	{
		index = 10;
    d56a:	8a e0       	ldi	r24, 0x0A	; 10
    d56c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    d56e:	8f 85       	ldd	r24, Y+15	; 0x0f
    d570:	98 89       	ldd	r25, Y+16	; 0x10
    d572:	2c ed       	ldi	r18, 0xDC	; 220
    d574:	35 e0       	ldi	r19, 0x05	; 5
    d576:	fc 01       	movw	r30, r24
    d578:	20 83       	st	Z, r18
    d57a:	31 83       	std	Z+1, r19	; 0x01
    d57c:	51 c0       	rjmp	.+162    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 2250)
    d57e:	8f 85       	ldd	r24, Y+15	; 0x0f
    d580:	98 89       	ldd	r25, Y+16	; 0x10
    d582:	fc 01       	movw	r30, r24
    d584:	80 81       	ld	r24, Z
    d586:	91 81       	ldd	r25, Z+1	; 0x01
    d588:	8a 3c       	cpi	r24, 0xCA	; 202
    d58a:	98 40       	sbci	r25, 0x08	; 8
    d58c:	50 f4       	brcc	.+20     	; 0xd5a2 <_Z22txMilliwattsToSettingsPjS_+0x23a>
	{
		index = 11;
    d58e:	8b e0       	ldi	r24, 0x0B	; 11
    d590:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    d592:	8f 85       	ldd	r24, Y+15	; 0x0f
    d594:	98 89       	ldd	r25, Y+16	; 0x10
    d596:	20 ed       	ldi	r18, 0xD0	; 208
    d598:	37 e0       	ldi	r19, 0x07	; 7
    d59a:	fc 01       	movw	r30, r24
    d59c:	20 83       	st	Z, r18
    d59e:	31 83       	std	Z+1, r19	; 0x01
    d5a0:	3f c0       	rjmp	.+126    	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 2750)
    d5a2:	8f 85       	ldd	r24, Y+15	; 0x0f
    d5a4:	98 89       	ldd	r25, Y+16	; 0x10
    d5a6:	fc 01       	movw	r30, r24
    d5a8:	80 81       	ld	r24, Z
    d5aa:	91 81       	ldd	r25, Z+1	; 0x01
    d5ac:	8e 3b       	cpi	r24, 0xBE	; 190
    d5ae:	9a 40       	sbci	r25, 0x0A	; 10
    d5b0:	50 f4       	brcc	.+20     	; 0xd5c6 <_Z22txMilliwattsToSettingsPjS_+0x25e>
	{
		index = 12;
    d5b2:	8c e0       	ldi	r24, 0x0C	; 12
    d5b4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    d5b6:	8f 85       	ldd	r24, Y+15	; 0x0f
    d5b8:	98 89       	ldd	r25, Y+16	; 0x10
    d5ba:	24 ec       	ldi	r18, 0xC4	; 196
    d5bc:	39 e0       	ldi	r19, 0x09	; 9
    d5be:	fc 01       	movw	r30, r24
    d5c0:	20 83       	st	Z, r18
    d5c2:	31 83       	std	Z+1, r19	; 0x01
    d5c4:	2d c0       	rjmp	.+90     	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 3500)
    d5c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    d5c8:	98 89       	ldd	r25, Y+16	; 0x10
    d5ca:	fc 01       	movw	r30, r24
    d5cc:	80 81       	ld	r24, Z
    d5ce:	91 81       	ldd	r25, Z+1	; 0x01
    d5d0:	8c 3a       	cpi	r24, 0xAC	; 172
    d5d2:	9d 40       	sbci	r25, 0x0D	; 13
    d5d4:	50 f4       	brcc	.+20     	; 0xd5ea <_Z22txMilliwattsToSettingsPjS_+0x282>
	{
		index = 13;
    d5d6:	8d e0       	ldi	r24, 0x0D	; 13
    d5d8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    d5da:	8f 85       	ldd	r24, Y+15	; 0x0f
    d5dc:	98 89       	ldd	r25, Y+16	; 0x10
    d5de:	28 eb       	ldi	r18, 0xB8	; 184
    d5e0:	3b e0       	ldi	r19, 0x0B	; 11
    d5e2:	fc 01       	movw	r30, r24
    d5e4:	20 83       	st	Z, r18
    d5e6:	31 83       	std	Z+1, r19	; 0x01
    d5e8:	1b c0       	rjmp	.+54     	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 4500)
    d5ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    d5ec:	98 89       	ldd	r25, Y+16	; 0x10
    d5ee:	fc 01       	movw	r30, r24
    d5f0:	80 81       	ld	r24, Z
    d5f2:	91 81       	ldd	r25, Z+1	; 0x01
    d5f4:	84 39       	cpi	r24, 0x94	; 148
    d5f6:	91 41       	sbci	r25, 0x11	; 17
    d5f8:	50 f4       	brcc	.+20     	; 0xd60e <_Z22txMilliwattsToSettingsPjS_+0x2a6>
	{
		index = 14;
    d5fa:	8e e0       	ldi	r24, 0x0E	; 14
    d5fc:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    d5fe:	8f 85       	ldd	r24, Y+15	; 0x0f
    d600:	98 89       	ldd	r25, Y+16	; 0x10
    d602:	20 ea       	ldi	r18, 0xA0	; 160
    d604:	3f e0       	ldi	r19, 0x0F	; 15
    d606:	fc 01       	movw	r30, r24
    d608:	20 83       	st	Z, r18
    d60a:	31 83       	std	Z+1, r19	; 0x01
    d60c:	09 c0       	rjmp	.+18     	; 0xd620 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else
	{
		index = 15;
    d60e:	8f e0       	ldi	r24, 0x0F	; 15
    d610:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    d612:	8f 85       	ldd	r24, Y+15	; 0x0f
    d614:	98 89       	ldd	r25, Y+16	; 0x10
    d616:	28 e8       	ldi	r18, 0x88	; 136
    d618:	33 e1       	ldi	r19, 0x13	; 19
    d61a:	fc 01       	movw	r30, r24
    d61c:	20 83       	st	Z, r18
    d61e:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    d620:	8a 81       	ldd	r24, Y+2	; 0x02
    d622:	88 2f       	mov	r24, r24
    d624:	90 e0       	ldi	r25, 0x00	; 0
    d626:	88 0f       	add	r24, r24
    d628:	99 1f       	adc	r25, r25
    d62a:	89 5c       	subi	r24, 0xC9	; 201
    d62c:	9f 4b       	sbci	r25, 0xBF	; 191
    d62e:	fc 01       	movw	r30, r24
    d630:	20 81       	ld	r18, Z
    d632:	31 81       	ldd	r19, Z+1	; 0x01
    d634:	89 89       	ldd	r24, Y+17	; 0x11
    d636:	9a 89       	ldd	r25, Y+18	; 0x12
    d638:	fc 01       	movw	r30, r24
    d63a:	20 83       	st	Z, r18
    d63c:	31 83       	std	Z+1, r19	; 0x01
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    d63e:	89 89       	ldd	r24, Y+17	; 0x11
    d640:	9a 89       	ldd	r25, Y+18	; 0x12
    d642:	fc 01       	movw	r30, r24
    d644:	80 81       	ld	r24, Z
    d646:	91 81       	ldd	r25, Z+1	; 0x01
    d648:	8b 87       	std	Y+11, r24	; 0x0b
    d64a:	9c 87       	std	Y+12, r25	; 0x0c
    d64c:	80 e0       	ldi	r24, 0x00	; 0
    d64e:	94 e0       	ldi	r25, 0x04	; 4
    d650:	8d 87       	std	Y+13, r24	; 0x0d
    d652:	9e 87       	std	Y+14, r25	; 0x0e
    d654:	2b 85       	ldd	r18, Y+11	; 0x0b
    d656:	3c 85       	ldd	r19, Y+12	; 0x0c
    d658:	8d 85       	ldd	r24, Y+13	; 0x0d
    d65a:	9e 85       	ldd	r25, Y+14	; 0x0e
    d65c:	28 17       	cp	r18, r24
    d65e:	39 07       	cpc	r19, r25
    d660:	18 f4       	brcc	.+6      	; 0xd668 <_Z22txMilliwattsToSettingsPjS_+0x300>
    d662:	8b 85       	ldd	r24, Y+11	; 0x0b
    d664:	9c 85       	ldd	r25, Y+12	; 0x0c
    d666:	02 c0       	rjmp	.+4      	; 0xd66c <_Z22txMilliwattsToSettingsPjS_+0x304>
    d668:	8d 85       	ldd	r24, Y+13	; 0x0d
    d66a:	9e 85       	ldd	r25, Y+14	; 0x0e
    d66c:	29 89       	ldd	r18, Y+17	; 0x11
    d66e:	3a 89       	ldd	r19, Y+18	; 0x12
    d670:	f9 01       	movw	r30, r18
    d672:	80 83       	st	Z, r24
    d674:	91 83       	std	Z+1, r25	; 0x01

	return(ec);
    d676:	89 81       	ldd	r24, Y+1	; 0x01
    d678:	62 96       	adiw	r28, 0x12	; 18
    d67a:	cd bf       	out	0x3d, r28	; 61
    d67c:	de bf       	out	0x3e, r29	; 62
    d67e:	df 91       	pop	r29
    d680:	cf 91       	pop	r28
    d682:	08 95       	ret

0000d684 <USART1_init>:
 * \return Nothing
 */
void USART0_enable_rx()
{
	USART0.CTRLB |= USART_RXEN_bm;
}
    d684:	0f 93       	push	r16
    d686:	1f 93       	push	r17
    d688:	cf 93       	push	r28
    d68a:	df 93       	push	r29
    d68c:	cd b7       	in	r28, 0x3d	; 61
    d68e:	de b7       	in	r29, 0x3e	; 62
    d690:	25 97       	sbiw	r28, 0x05	; 5
    d692:	cd bf       	out	0x3d, r28	; 61
    d694:	de bf       	out	0x3e, r29	; 62
    d696:	69 83       	std	Y+1, r22	; 0x01
    d698:	7a 83       	std	Y+2, r23	; 0x02
    d69a:	8b 83       	std	Y+3, r24	; 0x03
    d69c:	9c 83       	std	Y+4, r25	; 0x04
    d69e:	4d 83       	std	Y+5, r20	; 0x05
    d6a0:	f8 94       	cli
    d6a2:	00 e2       	ldi	r16, 0x20	; 32
    d6a4:	18 e0       	ldi	r17, 0x08	; 8
    d6a6:	69 81       	ldd	r22, Y+1	; 0x01
    d6a8:	7a 81       	ldd	r23, Y+2	; 0x02
    d6aa:	8b 81       	ldd	r24, Y+3	; 0x03
    d6ac:	9c 81       	ldd	r25, Y+4	; 0x04
    d6ae:	0e 94 6f 71 	call	0xe2de	; 0xe2de <__floatunsisf>
    d6b2:	dc 01       	movw	r26, r24
    d6b4:	cb 01       	movw	r24, r22
    d6b6:	20 e0       	ldi	r18, 0x00	; 0
    d6b8:	30 e0       	ldi	r19, 0x00	; 0
    d6ba:	40 e8       	ldi	r20, 0x80	; 128
    d6bc:	51 e4       	ldi	r21, 0x41	; 65
    d6be:	bc 01       	movw	r22, r24
    d6c0:	cd 01       	movw	r24, r26
    d6c2:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__mulsf3>
    d6c6:	dc 01       	movw	r26, r24
    d6c8:	cb 01       	movw	r24, r22
    d6ca:	9c 01       	movw	r18, r24
    d6cc:	ad 01       	movw	r20, r26
    d6ce:	60 e0       	ldi	r22, 0x00	; 0
    d6d0:	7b e1       	ldi	r23, 0x1B	; 27
    d6d2:	87 eb       	ldi	r24, 0xB7	; 183
    d6d4:	9e e4       	ldi	r25, 0x4E	; 78
    d6d6:	0e 94 c7 70 	call	0xe18e	; 0xe18e <__divsf3>
    d6da:	dc 01       	movw	r26, r24
    d6dc:	cb 01       	movw	r24, r22
    d6de:	20 e0       	ldi	r18, 0x00	; 0
    d6e0:	30 e0       	ldi	r19, 0x00	; 0
    d6e2:	40 e0       	ldi	r20, 0x00	; 0
    d6e4:	5f e3       	ldi	r21, 0x3F	; 63
    d6e6:	bc 01       	movw	r22, r24
    d6e8:	cd 01       	movw	r24, r26
    d6ea:	0e 94 3f 70 	call	0xe07e	; 0xe07e <__addsf3>
    d6ee:	dc 01       	movw	r26, r24
    d6f0:	cb 01       	movw	r24, r22
    d6f2:	bc 01       	movw	r22, r24
    d6f4:	cd 01       	movw	r24, r26
    d6f6:	0e 94 40 71 	call	0xe280	; 0xe280 <__fixunssfsi>
    d6fa:	dc 01       	movw	r26, r24
    d6fc:	cb 01       	movw	r24, r22
    d6fe:	f8 01       	movw	r30, r16
    d700:	80 87       	std	Z+8, r24	; 0x08
    d702:	91 87       	std	Z+9, r25	; 0x09
    d704:	80 e2       	ldi	r24, 0x20	; 32
    d706:	98 e0       	ldi	r25, 0x08	; 8
    d708:	20 e8       	ldi	r18, 0x80	; 128
    d70a:	fc 01       	movw	r30, r24
    d70c:	25 83       	std	Z+5, r18	; 0x05
    d70e:	80 e2       	ldi	r24, 0x20	; 32
    d710:	98 e0       	ldi	r25, 0x08	; 8
    d712:	23 e0       	ldi	r18, 0x03	; 3
    d714:	fc 01       	movw	r30, r24
    d716:	27 83       	std	Z+7, r18	; 0x07
    d718:	8d 81       	ldd	r24, Y+5	; 0x05
    d71a:	88 23       	and	r24, r24
    d71c:	31 f0       	breq	.+12     	; 0xd72a <USART1_init+0xa6>
    d71e:	80 e2       	ldi	r24, 0x20	; 32
    d720:	98 e0       	ldi	r25, 0x08	; 8
    d722:	24 ec       	ldi	r18, 0xC4	; 196
    d724:	fc 01       	movw	r30, r24
    d726:	26 83       	std	Z+6, r18	; 0x06
    d728:	05 c0       	rjmp	.+10     	; 0xd734 <USART1_init+0xb0>
    d72a:	80 e2       	ldi	r24, 0x20	; 32
    d72c:	98 e0       	ldi	r25, 0x08	; 8
    d72e:	20 ec       	ldi	r18, 0xC0	; 192
    d730:	fc 01       	movw	r30, r24
    d732:	26 83       	std	Z+6, r18	; 0x06
    d734:	78 94       	sei
    d736:	80 e0       	ldi	r24, 0x00	; 0
    d738:	25 96       	adiw	r28, 0x05	; 5
    d73a:	cd bf       	out	0x3d, r28	; 61
    d73c:	de bf       	out	0x3e, r29	; 62
    d73e:	df 91       	pop	r29
    d740:	cf 91       	pop	r28
    d742:	1f 91       	pop	r17
    d744:	0f 91       	pop	r16
    d746:	08 95       	ret

0000d748 <USART1_enable>:
    d748:	cf 93       	push	r28
    d74a:	df 93       	push	r29
    d74c:	cd b7       	in	r28, 0x3d	; 61
    d74e:	de b7       	in	r29, 0x3e	; 62
    d750:	80 e2       	ldi	r24, 0x20	; 32
    d752:	98 e0       	ldi	r25, 0x08	; 8
    d754:	20 e2       	ldi	r18, 0x20	; 32
    d756:	38 e0       	ldi	r19, 0x08	; 8
    d758:	f9 01       	movw	r30, r18
    d75a:	26 81       	ldd	r18, Z+6	; 0x06
    d75c:	20 6c       	ori	r18, 0xC0	; 192
    d75e:	fc 01       	movw	r30, r24
    d760:	26 83       	std	Z+6, r18	; 0x06
    d762:	00 00       	nop
    d764:	df 91       	pop	r29
    d766:	cf 91       	pop	r28
    d768:	08 95       	ret

0000d76a <USART1_enable_tx>:
    d76a:	cf 93       	push	r28
    d76c:	df 93       	push	r29
    d76e:	cd b7       	in	r28, 0x3d	; 61
    d770:	de b7       	in	r29, 0x3e	; 62
    d772:	80 e2       	ldi	r24, 0x20	; 32
    d774:	98 e0       	ldi	r25, 0x08	; 8
    d776:	20 e2       	ldi	r18, 0x20	; 32
    d778:	38 e0       	ldi	r19, 0x08	; 8
    d77a:	f9 01       	movw	r30, r18
    d77c:	26 81       	ldd	r18, Z+6	; 0x06
    d77e:	20 64       	ori	r18, 0x40	; 64
    d780:	fc 01       	movw	r30, r24
    d782:	26 83       	std	Z+6, r18	; 0x06
    d784:	80 e2       	ldi	r24, 0x20	; 32
    d786:	98 e0       	ldi	r25, 0x08	; 8
    d788:	20 e2       	ldi	r18, 0x20	; 32
    d78a:	38 e0       	ldi	r19, 0x08	; 8
    d78c:	f9 01       	movw	r30, r18
    d78e:	25 81       	ldd	r18, Z+5	; 0x05
    d790:	20 62       	ori	r18, 0x20	; 32
    d792:	fc 01       	movw	r30, r24
    d794:	25 83       	std	Z+5, r18	; 0x05
    d796:	00 00       	nop
    d798:	df 91       	pop	r29
    d79a:	cf 91       	pop	r28
    d79c:	08 95       	ret

0000d79e <USART1_disable>:
    d79e:	cf 93       	push	r28
    d7a0:	df 93       	push	r29
    d7a2:	cd b7       	in	r28, 0x3d	; 61
    d7a4:	de b7       	in	r29, 0x3e	; 62
    d7a6:	80 e2       	ldi	r24, 0x20	; 32
    d7a8:	98 e0       	ldi	r25, 0x08	; 8
    d7aa:	20 e2       	ldi	r18, 0x20	; 32
    d7ac:	38 e0       	ldi	r19, 0x08	; 8
    d7ae:	f9 01       	movw	r30, r18
    d7b0:	26 81       	ldd	r18, Z+6	; 0x06
    d7b2:	2f 73       	andi	r18, 0x3F	; 63
    d7b4:	fc 01       	movw	r30, r24
    d7b6:	26 83       	std	Z+6, r18	; 0x06
    d7b8:	00 00       	nop
    d7ba:	df 91       	pop	r29
    d7bc:	cf 91       	pop	r28
    d7be:	08 95       	ret

0000d7c0 <USART1_get_data>:
    d7c0:	cf 93       	push	r28
    d7c2:	df 93       	push	r29
    d7c4:	cd b7       	in	r28, 0x3d	; 61
    d7c6:	de b7       	in	r29, 0x3e	; 62
    d7c8:	80 e2       	ldi	r24, 0x20	; 32
    d7ca:	98 e0       	ldi	r25, 0x08	; 8
    d7cc:	fc 01       	movw	r30, r24
    d7ce:	80 81       	ld	r24, Z
    d7d0:	df 91       	pop	r29
    d7d2:	cf 91       	pop	r28
    d7d4:	08 95       	ret

0000d7d6 <USART0_init>:
    d7d6:	0f 93       	push	r16
    d7d8:	1f 93       	push	r17
    d7da:	cf 93       	push	r28
    d7dc:	df 93       	push	r29
    d7de:	cd b7       	in	r28, 0x3d	; 61
    d7e0:	de b7       	in	r29, 0x3e	; 62
    d7e2:	25 97       	sbiw	r28, 0x05	; 5
    d7e4:	cd bf       	out	0x3d, r28	; 61
    d7e6:	de bf       	out	0x3e, r29	; 62
    d7e8:	69 83       	std	Y+1, r22	; 0x01
    d7ea:	7a 83       	std	Y+2, r23	; 0x02
    d7ec:	8b 83       	std	Y+3, r24	; 0x03
    d7ee:	9c 83       	std	Y+4, r25	; 0x04
    d7f0:	4d 83       	std	Y+5, r20	; 0x05
    d7f2:	00 e0       	ldi	r16, 0x00	; 0
    d7f4:	18 e0       	ldi	r17, 0x08	; 8
    d7f6:	69 81       	ldd	r22, Y+1	; 0x01
    d7f8:	7a 81       	ldd	r23, Y+2	; 0x02
    d7fa:	8b 81       	ldd	r24, Y+3	; 0x03
    d7fc:	9c 81       	ldd	r25, Y+4	; 0x04
    d7fe:	0e 94 6f 71 	call	0xe2de	; 0xe2de <__floatunsisf>
    d802:	dc 01       	movw	r26, r24
    d804:	cb 01       	movw	r24, r22
    d806:	20 e0       	ldi	r18, 0x00	; 0
    d808:	30 e0       	ldi	r19, 0x00	; 0
    d80a:	40 e8       	ldi	r20, 0x80	; 128
    d80c:	51 e4       	ldi	r21, 0x41	; 65
    d80e:	bc 01       	movw	r22, r24
    d810:	cd 01       	movw	r24, r26
    d812:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__mulsf3>
    d816:	dc 01       	movw	r26, r24
    d818:	cb 01       	movw	r24, r22
    d81a:	9c 01       	movw	r18, r24
    d81c:	ad 01       	movw	r20, r26
    d81e:	60 e0       	ldi	r22, 0x00	; 0
    d820:	7b e1       	ldi	r23, 0x1B	; 27
    d822:	87 eb       	ldi	r24, 0xB7	; 183
    d824:	9e e4       	ldi	r25, 0x4E	; 78
    d826:	0e 94 c7 70 	call	0xe18e	; 0xe18e <__divsf3>
    d82a:	dc 01       	movw	r26, r24
    d82c:	cb 01       	movw	r24, r22
    d82e:	20 e0       	ldi	r18, 0x00	; 0
    d830:	30 e0       	ldi	r19, 0x00	; 0
    d832:	40 e0       	ldi	r20, 0x00	; 0
    d834:	5f e3       	ldi	r21, 0x3F	; 63
    d836:	bc 01       	movw	r22, r24
    d838:	cd 01       	movw	r24, r26
    d83a:	0e 94 3f 70 	call	0xe07e	; 0xe07e <__addsf3>
    d83e:	dc 01       	movw	r26, r24
    d840:	cb 01       	movw	r24, r22
    d842:	bc 01       	movw	r22, r24
    d844:	cd 01       	movw	r24, r26
    d846:	0e 94 40 71 	call	0xe280	; 0xe280 <__fixunssfsi>
    d84a:	dc 01       	movw	r26, r24
    d84c:	cb 01       	movw	r24, r22
    d84e:	f8 01       	movw	r30, r16
    d850:	80 87       	std	Z+8, r24	; 0x08
    d852:	91 87       	std	Z+9, r25	; 0x09
    d854:	80 e0       	ldi	r24, 0x00	; 0
    d856:	98 e0       	ldi	r25, 0x08	; 8
    d858:	20 e8       	ldi	r18, 0x80	; 128
    d85a:	fc 01       	movw	r30, r24
    d85c:	25 83       	std	Z+5, r18	; 0x05
    d85e:	8d 81       	ldd	r24, Y+5	; 0x05
    d860:	88 23       	and	r24, r24
    d862:	31 f0       	breq	.+12     	; 0xd870 <USART0_init+0x9a>
    d864:	80 e0       	ldi	r24, 0x00	; 0
    d866:	98 e0       	ldi	r25, 0x08	; 8
    d868:	24 ec       	ldi	r18, 0xC4	; 196
    d86a:	fc 01       	movw	r30, r24
    d86c:	26 83       	std	Z+6, r18	; 0x06
    d86e:	05 c0       	rjmp	.+10     	; 0xd87a <USART0_init+0xa4>
    d870:	80 e0       	ldi	r24, 0x00	; 0
    d872:	98 e0       	ldi	r25, 0x08	; 8
    d874:	20 ec       	ldi	r18, 0xC0	; 192
    d876:	fc 01       	movw	r30, r24
    d878:	26 83       	std	Z+6, r18	; 0x06
    d87a:	80 e0       	ldi	r24, 0x00	; 0
    d87c:	25 96       	adiw	r28, 0x05	; 5
    d87e:	cd bf       	out	0x3d, r28	; 61
    d880:	de bf       	out	0x3e, r29	; 62
    d882:	df 91       	pop	r29
    d884:	cf 91       	pop	r28
    d886:	1f 91       	pop	r17
    d888:	0f 91       	pop	r16
    d88a:	08 95       	ret

0000d88c <USART0_enable>:
    d88c:	cf 93       	push	r28
    d88e:	df 93       	push	r29
    d890:	cd b7       	in	r28, 0x3d	; 61
    d892:	de b7       	in	r29, 0x3e	; 62
    d894:	80 e0       	ldi	r24, 0x00	; 0
    d896:	98 e0       	ldi	r25, 0x08	; 8
    d898:	20 e0       	ldi	r18, 0x00	; 0
    d89a:	38 e0       	ldi	r19, 0x08	; 8
    d89c:	f9 01       	movw	r30, r18
    d89e:	26 81       	ldd	r18, Z+6	; 0x06
    d8a0:	20 6c       	ori	r18, 0xC0	; 192
    d8a2:	fc 01       	movw	r30, r24
    d8a4:	26 83       	std	Z+6, r18	; 0x06
    d8a6:	00 00       	nop
    d8a8:	df 91       	pop	r29
    d8aa:	cf 91       	pop	r28
    d8ac:	08 95       	ret

0000d8ae <USART0_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART0_enable_tx()
{
    d8ae:	cf 93       	push	r28
    d8b0:	df 93       	push	r29
    d8b2:	cd b7       	in	r28, 0x3d	; 61
    d8b4:	de b7       	in	r29, 0x3e	; 62
	USART0.CTRLB |= USART_TXEN_bm;
    d8b6:	80 e0       	ldi	r24, 0x00	; 0
    d8b8:	98 e0       	ldi	r25, 0x08	; 8
    d8ba:	20 e0       	ldi	r18, 0x00	; 0
    d8bc:	38 e0       	ldi	r19, 0x08	; 8
    d8be:	f9 01       	movw	r30, r18
    d8c0:	26 81       	ldd	r18, Z+6	; 0x06
    d8c2:	20 64       	ori	r18, 0x40	; 64
    d8c4:	fc 01       	movw	r30, r24
    d8c6:	26 83       	std	Z+6, r18	; 0x06
	USART0.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    d8c8:	80 e0       	ldi	r24, 0x00	; 0
    d8ca:	98 e0       	ldi	r25, 0x08	; 8
    d8cc:	20 e0       	ldi	r18, 0x00	; 0
    d8ce:	38 e0       	ldi	r19, 0x08	; 8
    d8d0:	f9 01       	movw	r30, r18
    d8d2:	25 81       	ldd	r18, Z+5	; 0x05
    d8d4:	20 62       	ori	r18, 0x20	; 32
    d8d6:	fc 01       	movw	r30, r24
    d8d8:	25 83       	std	Z+5, r18	; 0x05
//	USART0.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    d8da:	00 00       	nop
    d8dc:	df 91       	pop	r29
    d8de:	cf 91       	pop	r28
    d8e0:	08 95       	ret

0000d8e2 <USART0_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART0_disable()
{
    d8e2:	cf 93       	push	r28
    d8e4:	df 93       	push	r29
    d8e6:	cd b7       	in	r28, 0x3d	; 61
    d8e8:	de b7       	in	r29, 0x3e	; 62
	USART0.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    d8ea:	80 e0       	ldi	r24, 0x00	; 0
    d8ec:	98 e0       	ldi	r25, 0x08	; 8
    d8ee:	20 e0       	ldi	r18, 0x00	; 0
    d8f0:	38 e0       	ldi	r19, 0x08	; 8
    d8f2:	f9 01       	movw	r30, r18
    d8f4:	26 81       	ldd	r18, Z+6	; 0x06
    d8f6:	2f 73       	andi	r18, 0x3F	; 63
    d8f8:	fc 01       	movw	r30, r24
    d8fa:	26 83       	std	Z+6, r18	; 0x06
}
    d8fc:	00 00       	nop
    d8fe:	df 91       	pop	r29
    d900:	cf 91       	pop	r28
    d902:	08 95       	ret

0000d904 <USART0_get_data>:
 * \brief Get recieved data from USART0
 *
 * \return Data register from USART0 module
 */
uint8_t USART0_get_data()
{
    d904:	cf 93       	push	r28
    d906:	df 93       	push	r29
    d908:	cd b7       	in	r28, 0x3d	; 61
    d90a:	de b7       	in	r29, 0x3e	; 62
	return USART0.RXDATAL;
    d90c:	80 e0       	ldi	r24, 0x00	; 0
    d90e:	98 e0       	ldi	r25, 0x08	; 8
    d910:	fc 01       	movw	r30, r24
    d912:	80 81       	ld	r24, Z
}
    d914:	df 91       	pop	r29
    d916:	cf 91       	pop	r28
    d918:	08 95       	ret

0000d91a <_Z7timeDifmm>:
    (ltm.tm_year-70)*31536000L + ((ltm.tm_year-69)/4)*86400L -
    ((ltm.tm_year-1)/100)*86400L + ((ltm.tm_year+299)/400)*86400L;
  }

  return result;
}
    d91a:	ef 92       	push	r14
    d91c:	ff 92       	push	r15
    d91e:	0f 93       	push	r16
    d920:	1f 93       	push	r17
    d922:	cf 93       	push	r28
    d924:	df 93       	push	r29
    d926:	cd b7       	in	r28, 0x3d	; 61
    d928:	de b7       	in	r29, 0x3e	; 62
    d92a:	2c 97       	sbiw	r28, 0x0c	; 12
    d92c:	cd bf       	out	0x3d, r28	; 61
    d92e:	de bf       	out	0x3e, r29	; 62
    d930:	6d 83       	std	Y+5, r22	; 0x05
    d932:	7e 83       	std	Y+6, r23	; 0x06
    d934:	8f 83       	std	Y+7, r24	; 0x07
    d936:	98 87       	std	Y+8, r25	; 0x08
    d938:	29 87       	std	Y+9, r18	; 0x09
    d93a:	3a 87       	std	Y+10, r19	; 0x0a
    d93c:	4b 87       	std	Y+11, r20	; 0x0b
    d93e:	5c 87       	std	Y+12, r21	; 0x0c
    d940:	2d 81       	ldd	r18, Y+5	; 0x05
    d942:	3e 81       	ldd	r19, Y+6	; 0x06
    d944:	4f 81       	ldd	r20, Y+7	; 0x07
    d946:	58 85       	ldd	r21, Y+8	; 0x08
    d948:	89 85       	ldd	r24, Y+9	; 0x09
    d94a:	9a 85       	ldd	r25, Y+10	; 0x0a
    d94c:	ab 85       	ldd	r26, Y+11	; 0x0b
    d94e:	bc 85       	ldd	r27, Y+12	; 0x0c
    d950:	82 17       	cp	r24, r18
    d952:	93 07       	cpc	r25, r19
    d954:	a4 07       	cpc	r26, r20
    d956:	b5 07       	cpc	r27, r21
    d958:	a8 f4       	brcc	.+42     	; 0xd984 <_Z7timeDifmm+0x6a>
    d95a:	2d 81       	ldd	r18, Y+5	; 0x05
    d95c:	3e 81       	ldd	r19, Y+6	; 0x06
    d95e:	4f 81       	ldd	r20, Y+7	; 0x07
    d960:	58 85       	ldd	r21, Y+8	; 0x08
    d962:	89 85       	ldd	r24, Y+9	; 0x09
    d964:	9a 85       	ldd	r25, Y+10	; 0x0a
    d966:	ab 85       	ldd	r26, Y+11	; 0x0b
    d968:	bc 85       	ldd	r27, Y+12	; 0x0c
    d96a:	79 01       	movw	r14, r18
    d96c:	8a 01       	movw	r16, r20
    d96e:	e8 1a       	sub	r14, r24
    d970:	f9 0a       	sbc	r15, r25
    d972:	0a 0b       	sbc	r16, r26
    d974:	1b 0b       	sbc	r17, r27
    d976:	d8 01       	movw	r26, r16
    d978:	c7 01       	movw	r24, r14
    d97a:	89 83       	std	Y+1, r24	; 0x01
    d97c:	9a 83       	std	Y+2, r25	; 0x02
    d97e:	ab 83       	std	Y+3, r26	; 0x03
    d980:	bc 83       	std	Y+4, r27	; 0x04
    d982:	14 c0       	rjmp	.+40     	; 0xd9ac <_Z7timeDifmm+0x92>
    d984:	2d 81       	ldd	r18, Y+5	; 0x05
    d986:	3e 81       	ldd	r19, Y+6	; 0x06
    d988:	4f 81       	ldd	r20, Y+7	; 0x07
    d98a:	58 85       	ldd	r21, Y+8	; 0x08
    d98c:	89 85       	ldd	r24, Y+9	; 0x09
    d98e:	9a 85       	ldd	r25, Y+10	; 0x0a
    d990:	ab 85       	ldd	r26, Y+11	; 0x0b
    d992:	bc 85       	ldd	r27, Y+12	; 0x0c
    d994:	79 01       	movw	r14, r18
    d996:	8a 01       	movw	r16, r20
    d998:	e8 1a       	sub	r14, r24
    d99a:	f9 0a       	sbc	r15, r25
    d99c:	0a 0b       	sbc	r16, r26
    d99e:	1b 0b       	sbc	r17, r27
    d9a0:	d8 01       	movw	r26, r16
    d9a2:	c7 01       	movw	r24, r14
    d9a4:	89 83       	std	Y+1, r24	; 0x01
    d9a6:	9a 83       	std	Y+2, r25	; 0x02
    d9a8:	ab 83       	std	Y+3, r26	; 0x03
    d9aa:	bc 83       	std	Y+4, r27	; 0x04
    d9ac:	89 81       	ldd	r24, Y+1	; 0x01
    d9ae:	9a 81       	ldd	r25, Y+2	; 0x02
    d9b0:	ab 81       	ldd	r26, Y+3	; 0x03
    d9b2:	bc 81       	ldd	r27, Y+4	; 0x04
    d9b4:	bc 01       	movw	r22, r24
    d9b6:	cd 01       	movw	r24, r26
    d9b8:	2c 96       	adiw	r28, 0x0c	; 12
    d9ba:	cd bf       	out	0x3d, r28	; 61
    d9bc:	de bf       	out	0x3e, r29	; 62
    d9be:	df 91       	pop	r29
    d9c0:	cf 91       	pop	r28
    d9c2:	1f 91       	pop	r17
    d9c4:	0f 91       	pop	r16
    d9c6:	ff 90       	pop	r15
    d9c8:	ef 90       	pop	r14
    d9ca:	08 95       	ret

0000d9cc <_Z11only_digitsPc>:

/** 
 * Checks a string to see if it contains only numerical characters
 */
bool only_digits(char *s)
{
    d9cc:	cf 93       	push	r28
    d9ce:	df 93       	push	r29
    d9d0:	00 d0       	rcall	.+0      	; 0xd9d2 <_Z11only_digitsPc+0x6>
    d9d2:	cd b7       	in	r28, 0x3d	; 61
    d9d4:	de b7       	in	r29, 0x3e	; 62
    d9d6:	89 83       	std	Y+1, r24	; 0x01
    d9d8:	9a 83       	std	Y+2, r25	; 0x02
	while(*s)
    d9da:	89 81       	ldd	r24, Y+1	; 0x01
    d9dc:	9a 81       	ldd	r25, Y+2	; 0x02
    d9de:	fc 01       	movw	r30, r24
    d9e0:	80 81       	ld	r24, Z
    d9e2:	88 23       	and	r24, r24
    d9e4:	a1 f0       	breq	.+40     	; 0xda0e <_Z11only_digitsPc+0x42>
	{
		if(isdigit(*s++) == 0)
    d9e6:	89 81       	ldd	r24, Y+1	; 0x01
    d9e8:	9a 81       	ldd	r25, Y+2	; 0x02
    d9ea:	9c 01       	movw	r18, r24
    d9ec:	2f 5f       	subi	r18, 0xFF	; 255
    d9ee:	3f 4f       	sbci	r19, 0xFF	; 255
    d9f0:	29 83       	std	Y+1, r18	; 0x01
    d9f2:	3a 83       	std	Y+2, r19	; 0x02
    d9f4:	fc 01       	movw	r30, r24
    d9f6:	80 81       	ld	r24, Z
    d9f8:	88 2f       	mov	r24, r24
    d9fa:	90 e0       	ldi	r25, 0x00	; 0
    d9fc:	c0 97       	sbiw	r24, 0x30	; 48
    d9fe:	21 e0       	ldi	r18, 0x01	; 1
    da00:	0a 97       	sbiw	r24, 0x0a	; 10
    da02:	08 f4       	brcc	.+2      	; 0xda06 <_Z11only_digitsPc+0x3a>
    da04:	20 e0       	ldi	r18, 0x00	; 0
    da06:	22 23       	and	r18, r18
    da08:	41 f3       	breq	.-48     	; 0xd9da <_Z11only_digitsPc+0xe>
		{
			return( false);
    da0a:	80 e0       	ldi	r24, 0x00	; 0
    da0c:	01 c0       	rjmp	.+2      	; 0xda10 <_Z11only_digitsPc+0x44>
		}
	}

	return( true);
    da0e:	81 e0       	ldi	r24, 0x01	; 1
}
    da10:	0f 90       	pop	r0
    da12:	0f 90       	pop	r0
    da14:	df 91       	pop	r29
    da16:	cf 91       	pop	r28
    da18:	08 95       	ret

0000da1a <_Z15frequencyStringPcm>:
 * result = pointer to a character sting to hold the frequency string
 * freq = the frequency value to be represented as a string
 * Returns 1 if an error is detected
 */
bool frequencyString(char* result, uint32_t freq)
{
    da1a:	cf 93       	push	r28
    da1c:	df 93       	push	r29
    da1e:	cd b7       	in	r28, 0x3d	; 61
    da20:	de b7       	in	r29, 0x3e	; 62
    da22:	2b 97       	sbiw	r28, 0x0b	; 11
    da24:	cd bf       	out	0x3d, r28	; 61
    da26:	de bf       	out	0x3e, r29	; 62
    da28:	8e 83       	std	Y+6, r24	; 0x06
    da2a:	9f 83       	std	Y+7, r25	; 0x07
    da2c:	48 87       	std	Y+8, r20	; 0x08
    da2e:	59 87       	std	Y+9, r21	; 0x09
    da30:	6a 87       	std	Y+10, r22	; 0x0a
    da32:	7b 87       	std	Y+11, r23	; 0x0b
	bool failure = true;
    da34:	81 e0       	ldi	r24, 0x01	; 1
    da36:	89 83       	std	Y+1, r24	; 0x01
	
	if(!result)
    da38:	8e 81       	ldd	r24, Y+6	; 0x06
    da3a:	9f 81       	ldd	r25, Y+7	; 0x07
    da3c:	89 2b       	or	r24, r25
    da3e:	11 f4       	brne	.+4      	; 0xda44 <_Z15frequencyStringPcm+0x2a>
	{
		return(failure);
    da40:	89 81       	ldd	r24, Y+1	; 0x01
    da42:	61 c0       	rjmp	.+194    	; 0xdb06 <_Z15frequencyStringPcm+0xec>
	}
	
	if((freq > 3500000) && (freq < 4000000)) // Accept only a Hz value to be expressed in kHz
    da44:	88 85       	ldd	r24, Y+8	; 0x08
    da46:	99 85       	ldd	r25, Y+9	; 0x09
    da48:	aa 85       	ldd	r26, Y+10	; 0x0a
    da4a:	bb 85       	ldd	r27, Y+11	; 0x0b
    da4c:	81 3e       	cpi	r24, 0xE1	; 225
    da4e:	97 46       	sbci	r25, 0x67	; 103
    da50:	a5 43       	sbci	r26, 0x35	; 53
    da52:	b1 05       	cpc	r27, r1
    da54:	08 f4       	brcc	.+2      	; 0xda58 <_Z15frequencyStringPcm+0x3e>
    da56:	56 c0       	rjmp	.+172    	; 0xdb04 <_Z15frequencyStringPcm+0xea>
    da58:	88 85       	ldd	r24, Y+8	; 0x08
    da5a:	99 85       	ldd	r25, Y+9	; 0x09
    da5c:	aa 85       	ldd	r26, Y+10	; 0x0a
    da5e:	bb 85       	ldd	r27, Y+11	; 0x0b
    da60:	81 15       	cp	r24, r1
    da62:	99 40       	sbci	r25, 0x09	; 9
    da64:	ad 43       	sbci	r26, 0x3D	; 61
    da66:	b1 05       	cpc	r27, r1
    da68:	08 f0       	brcs	.+2      	; 0xda6c <_Z15frequencyStringPcm+0x52>
    da6a:	4c c0       	rjmp	.+152    	; 0xdb04 <_Z15frequencyStringPcm+0xea>
	{
		uint32_t frac = (freq % 1000)/100;		
    da6c:	88 85       	ldd	r24, Y+8	; 0x08
    da6e:	99 85       	ldd	r25, Y+9	; 0x09
    da70:	aa 85       	ldd	r26, Y+10	; 0x0a
    da72:	bb 85       	ldd	r27, Y+11	; 0x0b
    da74:	28 ee       	ldi	r18, 0xE8	; 232
    da76:	33 e0       	ldi	r19, 0x03	; 3
    da78:	40 e0       	ldi	r20, 0x00	; 0
    da7a:	50 e0       	ldi	r21, 0x00	; 0
    da7c:	bc 01       	movw	r22, r24
    da7e:	cd 01       	movw	r24, r26
    da80:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    da84:	dc 01       	movw	r26, r24
    da86:	cb 01       	movw	r24, r22
    da88:	24 e6       	ldi	r18, 0x64	; 100
    da8a:	30 e0       	ldi	r19, 0x00	; 0
    da8c:	40 e0       	ldi	r20, 0x00	; 0
    da8e:	50 e0       	ldi	r21, 0x00	; 0
    da90:	bc 01       	movw	r22, r24
    da92:	cd 01       	movw	r24, r26
    da94:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    da98:	da 01       	movw	r26, r20
    da9a:	c9 01       	movw	r24, r18
    da9c:	8a 83       	std	Y+2, r24	; 0x02
    da9e:	9b 83       	std	Y+3, r25	; 0x03
    daa0:	ac 83       	std	Y+4, r26	; 0x04
    daa2:	bd 83       	std	Y+5, r27	; 0x05
		sprintf(result, "%lu.%1lu kHz", freq/1000, frac);
    daa4:	88 85       	ldd	r24, Y+8	; 0x08
    daa6:	99 85       	ldd	r25, Y+9	; 0x09
    daa8:	aa 85       	ldd	r26, Y+10	; 0x0a
    daaa:	bb 85       	ldd	r27, Y+11	; 0x0b
    daac:	28 ee       	ldi	r18, 0xE8	; 232
    daae:	33 e0       	ldi	r19, 0x03	; 3
    dab0:	40 e0       	ldi	r20, 0x00	; 0
    dab2:	50 e0       	ldi	r21, 0x00	; 0
    dab4:	bc 01       	movw	r22, r24
    dab6:	cd 01       	movw	r24, r26
    dab8:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    dabc:	da 01       	movw	r26, r20
    dabe:	c9 01       	movw	r24, r18
    dac0:	2d 81       	ldd	r18, Y+5	; 0x05
    dac2:	2f 93       	push	r18
    dac4:	2c 81       	ldd	r18, Y+4	; 0x04
    dac6:	2f 93       	push	r18
    dac8:	2b 81       	ldd	r18, Y+3	; 0x03
    daca:	2f 93       	push	r18
    dacc:	2a 81       	ldd	r18, Y+2	; 0x02
    dace:	2f 93       	push	r18
    dad0:	2b 2f       	mov	r18, r27
    dad2:	2f 93       	push	r18
    dad4:	2a 2f       	mov	r18, r26
    dad6:	2f 93       	push	r18
    dad8:	29 2f       	mov	r18, r25
    dada:	2f 93       	push	r18
    dadc:	8f 93       	push	r24
    dade:	85 e8       	ldi	r24, 0x85	; 133
    dae0:	94 e4       	ldi	r25, 0x44	; 68
    dae2:	89 2f       	mov	r24, r25
    dae4:	8f 93       	push	r24
    dae6:	85 e8       	ldi	r24, 0x85	; 133
    dae8:	94 e4       	ldi	r25, 0x44	; 68
    daea:	8f 93       	push	r24
    daec:	8f 81       	ldd	r24, Y+7	; 0x07
    daee:	8f 93       	push	r24
    daf0:	8e 81       	ldd	r24, Y+6	; 0x06
    daf2:	8f 93       	push	r24
    daf4:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    daf8:	8d b7       	in	r24, 0x3d	; 61
    dafa:	9e b7       	in	r25, 0x3e	; 62
    dafc:	0c 96       	adiw	r24, 0x0c	; 12
    dafe:	cd bf       	out	0x3d, r28	; 61
    db00:	de bf       	out	0x3e, r29	; 62
		
		failure = false;
    db02:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return(failure);	
    db04:	89 81       	ldd	r24, Y+1	; 0x01
}
    db06:	2b 96       	adiw	r28, 0x0b	; 11
    db08:	cd bf       	out	0x3d, r28	; 61
    db0a:	de bf       	out	0x3e, r29	; 62
    db0c:	df 91       	pop	r29
    db0e:	cf 91       	pop	r28
    db10:	08 95       	ret

0000db12 <_Z12frequencyValPcPm>:
 * str = pointer to a string containing the frequency string
 * result = pointer to a Frequency_Hz variable to hold the frequency in Hz
 * Returns 1 if an error is detected
 */
bool frequencyVal(char* str, Frequency_Hz* result)
{
    db12:	ef 92       	push	r14
    db14:	ff 92       	push	r15
    db16:	0f 93       	push	r16
    db18:	1f 93       	push	r17
    db1a:	cf 93       	push	r28
    db1c:	df 93       	push	r29
    db1e:	cd b7       	in	r28, 0x3d	; 61
    db20:	de b7       	in	r29, 0x3e	; 62
    db22:	65 97       	sbiw	r28, 0x15	; 21
    db24:	cd bf       	out	0x3d, r28	; 61
    db26:	de bf       	out	0x3e, r29	; 62
    db28:	8a 8b       	std	Y+18, r24	; 0x12
    db2a:	9b 8b       	std	Y+19, r25	; 0x13
    db2c:	6c 8b       	std	Y+20, r22	; 0x14
    db2e:	7d 8b       	std	Y+21, r23	; 0x15
	bool failure = true;
    db30:	81 e0       	ldi	r24, 0x01	; 1
    db32:	89 83       	std	Y+1, r24	; 0x01
	
	if(!str)
    db34:	8a 89       	ldd	r24, Y+18	; 0x12
    db36:	9b 89       	ldd	r25, Y+19	; 0x13
    db38:	89 2b       	or	r24, r25
    db3a:	11 f4       	brne	.+4      	; 0xdb40 <_Z12frequencyValPcPm+0x2e>
	{
		return(failure);
    db3c:	89 81       	ldd	r24, Y+1	; 0x01
    db3e:	a4 c1       	rjmp	.+840    	; 0xde88 <_Z12frequencyValPcPm+0x376>
	}
	
	int decimal = '.';
    db40:	8e e2       	ldi	r24, 0x2E	; 46
    db42:	90 e0       	ldi	r25, 0x00	; 0
    db44:	8a 87       	std	Y+10, r24	; 0x0a
    db46:	9b 87       	std	Y+11, r25	; 0x0b
	char* decimalLocation = strchr(str, decimal);
    db48:	2a 85       	ldd	r18, Y+10	; 0x0a
    db4a:	3b 85       	ldd	r19, Y+11	; 0x0b
    db4c:	8a 89       	ldd	r24, Y+18	; 0x12
    db4e:	9b 89       	ldd	r25, Y+19	; 0x13
    db50:	b9 01       	movw	r22, r18
    db52:	0e 94 14 75 	call	0xea28	; 0xea28 <strchr>
    db56:	8c 87       	std	Y+12, r24	; 0x0c
    db58:	9d 87       	std	Y+13, r25	; 0x0d
	Frequency_Hz temp;
	
	if(decimalLocation) // Assume Hz or kHz
    db5a:	8c 85       	ldd	r24, Y+12	; 0x0c
    db5c:	9d 85       	ldd	r25, Y+13	; 0x0d
    db5e:	89 2b       	or	r24, r25
    db60:	09 f4       	brne	.+2      	; 0xdb64 <_Z12frequencyValPcPm+0x52>
    db62:	d7 c0       	rjmp	.+430    	; 0xdd12 <_Z12frequencyValPcPm+0x200>
	{
		float f = atof(str);
    db64:	8a 89       	ldd	r24, Y+18	; 0x12
    db66:	9b 89       	ldd	r25, Y+19	; 0x13
    db68:	0e 94 b1 74 	call	0xe962	; 0xe962 <atof>
    db6c:	dc 01       	movw	r26, r24
    db6e:	cb 01       	movw	r24, r22
    db70:	8a 83       	std	Y+2, r24	; 0x02
    db72:	9b 83       	std	Y+3, r25	; 0x03
    db74:	ac 83       	std	Y+4, r26	; 0x04
    db76:	bd 83       	std	Y+5, r27	; 0x05
		
		if((f > 3.5) && (f < 4.0))
    db78:	20 e0       	ldi	r18, 0x00	; 0
    db7a:	30 e0       	ldi	r19, 0x00	; 0
    db7c:	40 e6       	ldi	r20, 0x60	; 96
    db7e:	50 e4       	ldi	r21, 0x40	; 64
    db80:	6a 81       	ldd	r22, Y+2	; 0x02
    db82:	7b 81       	ldd	r23, Y+3	; 0x03
    db84:	8c 81       	ldd	r24, Y+4	; 0x04
    db86:	9d 81       	ldd	r25, Y+5	; 0x05
    db88:	0e 94 62 72 	call	0xe4c4	; 0xe4c4 <__gesf2>
    db8c:	18 16       	cp	r1, r24
    db8e:	f4 f4       	brge	.+60     	; 0xdbcc <_Z12frequencyValPcPm+0xba>
    db90:	20 e0       	ldi	r18, 0x00	; 0
    db92:	30 e0       	ldi	r19, 0x00	; 0
    db94:	40 e8       	ldi	r20, 0x80	; 128
    db96:	50 e4       	ldi	r21, 0x40	; 64
    db98:	6a 81       	ldd	r22, Y+2	; 0x02
    db9a:	7b 81       	ldd	r23, Y+3	; 0x03
    db9c:	8c 81       	ldd	r24, Y+4	; 0x04
    db9e:	9d 81       	ldd	r25, Y+5	; 0x05
    dba0:	0e 94 c2 70 	call	0xe184	; 0xe184 <__cmpsf2>
    dba4:	88 23       	and	r24, r24
    dba6:	94 f4       	brge	.+36     	; 0xdbcc <_Z12frequencyValPcPm+0xba>
		{
			f *= 1000000.;
    dba8:	20 e0       	ldi	r18, 0x00	; 0
    dbaa:	34 e2       	ldi	r19, 0x24	; 36
    dbac:	44 e7       	ldi	r20, 0x74	; 116
    dbae:	59 e4       	ldi	r21, 0x49	; 73
    dbb0:	6a 81       	ldd	r22, Y+2	; 0x02
    dbb2:	7b 81       	ldd	r23, Y+3	; 0x03
    dbb4:	8c 81       	ldd	r24, Y+4	; 0x04
    dbb6:	9d 81       	ldd	r25, Y+5	; 0x05
    dbb8:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__mulsf3>
    dbbc:	dc 01       	movw	r26, r24
    dbbe:	cb 01       	movw	r24, r22
    dbc0:	8a 83       	std	Y+2, r24	; 0x02
    dbc2:	9b 83       	std	Y+3, r25	; 0x03
    dbc4:	ac 83       	std	Y+4, r26	; 0x04
    dbc6:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    dbc8:	19 82       	std	Y+1, r1	; 0x01
    dbca:	43 c0       	rjmp	.+134    	; 0xdc52 <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500.) && (f < 4000.))
    dbcc:	20 e0       	ldi	r18, 0x00	; 0
    dbce:	30 ec       	ldi	r19, 0xC0	; 192
    dbd0:	4a e5       	ldi	r20, 0x5A	; 90
    dbd2:	55 e4       	ldi	r21, 0x45	; 69
    dbd4:	6a 81       	ldd	r22, Y+2	; 0x02
    dbd6:	7b 81       	ldd	r23, Y+3	; 0x03
    dbd8:	8c 81       	ldd	r24, Y+4	; 0x04
    dbda:	9d 81       	ldd	r25, Y+5	; 0x05
    dbdc:	0e 94 62 72 	call	0xe4c4	; 0xe4c4 <__gesf2>
    dbe0:	18 16       	cp	r1, r24
    dbe2:	f4 f4       	brge	.+60     	; 0xdc20 <_Z12frequencyValPcPm+0x10e>
    dbe4:	20 e0       	ldi	r18, 0x00	; 0
    dbe6:	30 e0       	ldi	r19, 0x00	; 0
    dbe8:	4a e7       	ldi	r20, 0x7A	; 122
    dbea:	55 e4       	ldi	r21, 0x45	; 69
    dbec:	6a 81       	ldd	r22, Y+2	; 0x02
    dbee:	7b 81       	ldd	r23, Y+3	; 0x03
    dbf0:	8c 81       	ldd	r24, Y+4	; 0x04
    dbf2:	9d 81       	ldd	r25, Y+5	; 0x05
    dbf4:	0e 94 c2 70 	call	0xe184	; 0xe184 <__cmpsf2>
    dbf8:	88 23       	and	r24, r24
    dbfa:	94 f4       	brge	.+36     	; 0xdc20 <_Z12frequencyValPcPm+0x10e>
		{
			f *= 1000.;
    dbfc:	20 e0       	ldi	r18, 0x00	; 0
    dbfe:	30 e0       	ldi	r19, 0x00	; 0
    dc00:	4a e7       	ldi	r20, 0x7A	; 122
    dc02:	54 e4       	ldi	r21, 0x44	; 68
    dc04:	6a 81       	ldd	r22, Y+2	; 0x02
    dc06:	7b 81       	ldd	r23, Y+3	; 0x03
    dc08:	8c 81       	ldd	r24, Y+4	; 0x04
    dc0a:	9d 81       	ldd	r25, Y+5	; 0x05
    dc0c:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__mulsf3>
    dc10:	dc 01       	movw	r26, r24
    dc12:	cb 01       	movw	r24, r22
    dc14:	8a 83       	std	Y+2, r24	; 0x02
    dc16:	9b 83       	std	Y+3, r25	; 0x03
    dc18:	ac 83       	std	Y+4, r26	; 0x04
    dc1a:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    dc1c:	19 82       	std	Y+1, r1	; 0x01
    dc1e:	19 c0       	rjmp	.+50     	; 0xdc52 <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500000.) && (f < 4000000.))
    dc20:	20 e8       	ldi	r18, 0x80	; 128
    dc22:	3f e9       	ldi	r19, 0x9F	; 159
    dc24:	45 e5       	ldi	r20, 0x55	; 85
    dc26:	5a e4       	ldi	r21, 0x4A	; 74
    dc28:	6a 81       	ldd	r22, Y+2	; 0x02
    dc2a:	7b 81       	ldd	r23, Y+3	; 0x03
    dc2c:	8c 81       	ldd	r24, Y+4	; 0x04
    dc2e:	9d 81       	ldd	r25, Y+5	; 0x05
    dc30:	0e 94 62 72 	call	0xe4c4	; 0xe4c4 <__gesf2>
    dc34:	18 16       	cp	r1, r24
    dc36:	6c f4       	brge	.+26     	; 0xdc52 <_Z12frequencyValPcPm+0x140>
    dc38:	20 e0       	ldi	r18, 0x00	; 0
    dc3a:	34 e2       	ldi	r19, 0x24	; 36
    dc3c:	44 e7       	ldi	r20, 0x74	; 116
    dc3e:	5a e4       	ldi	r21, 0x4A	; 74
    dc40:	6a 81       	ldd	r22, Y+2	; 0x02
    dc42:	7b 81       	ldd	r23, Y+3	; 0x03
    dc44:	8c 81       	ldd	r24, Y+4	; 0x04
    dc46:	9d 81       	ldd	r25, Y+5	; 0x05
    dc48:	0e 94 c2 70 	call	0xe184	; 0xe184 <__cmpsf2>
    dc4c:	88 23       	and	r24, r24
    dc4e:	0c f4       	brge	.+2      	; 0xdc52 <_Z12frequencyValPcPm+0x140>
		{
			failure = false;
    dc50:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    dc52:	99 81       	ldd	r25, Y+1	; 0x01
    dc54:	81 e0       	ldi	r24, 0x01	; 1
    dc56:	89 27       	eor	r24, r25
    dc58:	88 23       	and	r24, r24
    dc5a:	09 f4       	brne	.+2      	; 0xdc5e <_Z12frequencyValPcPm+0x14c>
    dc5c:	14 c1       	rjmp	.+552    	; 0xde86 <_Z12frequencyValPcPm+0x374>
		{
			temp = (Frequency_Hz)ceilf(f);
    dc5e:	8a 81       	ldd	r24, Y+2	; 0x02
    dc60:	9b 81       	ldd	r25, Y+3	; 0x03
    dc62:	ac 81       	ldd	r26, Y+4	; 0x04
    dc64:	bd 81       	ldd	r27, Y+5	; 0x05
    dc66:	bc 01       	movw	r22, r24
    dc68:	cd 01       	movw	r24, r26
    dc6a:	0e 94 ab 70 	call	0xe156	; 0xe156 <ceil>
    dc6e:	dc 01       	movw	r26, r24
    dc70:	cb 01       	movw	r24, r22
    dc72:	bc 01       	movw	r22, r24
    dc74:	cd 01       	movw	r24, r26
    dc76:	0e 94 40 71 	call	0xe280	; 0xe280 <__fixunssfsi>
    dc7a:	dc 01       	movw	r26, r24
    dc7c:	cb 01       	movw	r24, r22
    dc7e:	8e 87       	std	Y+14, r24	; 0x0e
    dc80:	9f 87       	std	Y+15, r25	; 0x0f
    dc82:	a8 8b       	std	Y+16, r26	; 0x10
    dc84:	b9 8b       	std	Y+17, r27	; 0x11
			temp = temp - (temp % 100);
    dc86:	8e 85       	ldd	r24, Y+14	; 0x0e
    dc88:	9f 85       	ldd	r25, Y+15	; 0x0f
    dc8a:	a8 89       	ldd	r26, Y+16	; 0x10
    dc8c:	b9 89       	ldd	r27, Y+17	; 0x11
    dc8e:	24 e6       	ldi	r18, 0x64	; 100
    dc90:	30 e0       	ldi	r19, 0x00	; 0
    dc92:	40 e0       	ldi	r20, 0x00	; 0
    dc94:	50 e0       	ldi	r21, 0x00	; 0
    dc96:	bc 01       	movw	r22, r24
    dc98:	cd 01       	movw	r24, r26
    dc9a:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    dc9e:	dc 01       	movw	r26, r24
    dca0:	cb 01       	movw	r24, r22
    dca2:	9c 01       	movw	r18, r24
    dca4:	ad 01       	movw	r20, r26
    dca6:	8e 85       	ldd	r24, Y+14	; 0x0e
    dca8:	9f 85       	ldd	r25, Y+15	; 0x0f
    dcaa:	a8 89       	ldd	r26, Y+16	; 0x10
    dcac:	b9 89       	ldd	r27, Y+17	; 0x11
    dcae:	82 1b       	sub	r24, r18
    dcb0:	93 0b       	sbc	r25, r19
    dcb2:	a4 0b       	sbc	r26, r20
    dcb4:	b5 0b       	sbc	r27, r21
    dcb6:	8e 87       	std	Y+14, r24	; 0x0e
    dcb8:	9f 87       	std	Y+15, r25	; 0x0f
    dcba:	a8 8b       	std	Y+16, r26	; 0x10
    dcbc:	b9 8b       	std	Y+17, r27	; 0x11
			if(result) *result = temp;
    dcbe:	8c 89       	ldd	r24, Y+20	; 0x14
    dcc0:	9d 89       	ldd	r25, Y+21	; 0x15
    dcc2:	89 2b       	or	r24, r25
    dcc4:	59 f0       	breq	.+22     	; 0xdcdc <_Z12frequencyValPcPm+0x1ca>
    dcc6:	2c 89       	ldd	r18, Y+20	; 0x14
    dcc8:	3d 89       	ldd	r19, Y+21	; 0x15
    dcca:	8e 85       	ldd	r24, Y+14	; 0x0e
    dccc:	9f 85       	ldd	r25, Y+15	; 0x0f
    dcce:	a8 89       	ldd	r26, Y+16	; 0x10
    dcd0:	b9 89       	ldd	r27, Y+17	; 0x11
    dcd2:	f9 01       	movw	r30, r18
    dcd4:	80 83       	st	Z, r24
    dcd6:	91 83       	std	Z+1, r25	; 0x01
    dcd8:	a2 83       	std	Z+2, r26	; 0x02
    dcda:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%4.1f kHz", (double)f);
    dcdc:	8d 81       	ldd	r24, Y+5	; 0x05
    dcde:	8f 93       	push	r24
    dce0:	8c 81       	ldd	r24, Y+4	; 0x04
    dce2:	8f 93       	push	r24
    dce4:	8b 81       	ldd	r24, Y+3	; 0x03
    dce6:	8f 93       	push	r24
    dce8:	8a 81       	ldd	r24, Y+2	; 0x02
    dcea:	8f 93       	push	r24
    dcec:	82 e9       	ldi	r24, 0x92	; 146
    dcee:	94 e4       	ldi	r25, 0x44	; 68
    dcf0:	89 2f       	mov	r24, r25
    dcf2:	8f 93       	push	r24
    dcf4:	82 e9       	ldi	r24, 0x92	; 146
    dcf6:	94 e4       	ldi	r25, 0x44	; 68
    dcf8:	8f 93       	push	r24
    dcfa:	8b 89       	ldd	r24, Y+19	; 0x13
    dcfc:	8f 93       	push	r24
    dcfe:	8a 89       	ldd	r24, Y+18	; 0x12
    dd00:	8f 93       	push	r24
    dd02:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    dd06:	8d b7       	in	r24, 0x3d	; 61
    dd08:	9e b7       	in	r25, 0x3e	; 62
    dd0a:	08 96       	adiw	r24, 0x08	; 8
    dd0c:	cd bf       	out	0x3d, r28	; 61
    dd0e:	de bf       	out	0x3e, r29	; 62
    dd10:	ba c0       	rjmp	.+372    	; 0xde86 <_Z12frequencyValPcPm+0x374>
		}
	}
	else
	{
		Frequency_Hz f = (Frequency_Hz)atol(str);
    dd12:	8a 89       	ldd	r24, Y+18	; 0x12
    dd14:	9b 89       	ldd	r25, Y+19	; 0x13
    dd16:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <atol>
    dd1a:	dc 01       	movw	r26, r24
    dd1c:	cb 01       	movw	r24, r22
    dd1e:	8e 83       	std	Y+6, r24	; 0x06
    dd20:	9f 83       	std	Y+7, r25	; 0x07
    dd22:	a8 87       	std	Y+8, r26	; 0x08
    dd24:	b9 87       	std	Y+9, r27	; 0x09
		
		if((f > 3500) && (f < 4000))
    dd26:	8e 81       	ldd	r24, Y+6	; 0x06
    dd28:	9f 81       	ldd	r25, Y+7	; 0x07
    dd2a:	a8 85       	ldd	r26, Y+8	; 0x08
    dd2c:	b9 85       	ldd	r27, Y+9	; 0x09
    dd2e:	8d 3a       	cpi	r24, 0xAD	; 173
    dd30:	9d 40       	sbci	r25, 0x0D	; 13
    dd32:	a1 05       	cpc	r26, r1
    dd34:	b1 05       	cpc	r27, r1
    dd36:	d0 f0       	brcs	.+52     	; 0xdd6c <_Z12frequencyValPcPm+0x25a>
    dd38:	8e 81       	ldd	r24, Y+6	; 0x06
    dd3a:	9f 81       	ldd	r25, Y+7	; 0x07
    dd3c:	a8 85       	ldd	r26, Y+8	; 0x08
    dd3e:	b9 85       	ldd	r27, Y+9	; 0x09
    dd40:	80 3a       	cpi	r24, 0xA0	; 160
    dd42:	9f 40       	sbci	r25, 0x0F	; 15
    dd44:	a1 05       	cpc	r26, r1
    dd46:	b1 05       	cpc	r27, r1
    dd48:	88 f4       	brcc	.+34     	; 0xdd6c <_Z12frequencyValPcPm+0x25a>
		{
			f *= 1000;
    dd4a:	2e 81       	ldd	r18, Y+6	; 0x06
    dd4c:	3f 81       	ldd	r19, Y+7	; 0x07
    dd4e:	48 85       	ldd	r20, Y+8	; 0x08
    dd50:	59 85       	ldd	r21, Y+9	; 0x09
    dd52:	88 ee       	ldi	r24, 0xE8	; 232
    dd54:	93 e0       	ldi	r25, 0x03	; 3
    dd56:	dc 01       	movw	r26, r24
    dd58:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <__muluhisi3>
    dd5c:	dc 01       	movw	r26, r24
    dd5e:	cb 01       	movw	r24, r22
    dd60:	8e 83       	std	Y+6, r24	; 0x06
    dd62:	9f 83       	std	Y+7, r25	; 0x07
    dd64:	a8 87       	std	Y+8, r26	; 0x08
    dd66:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    dd68:	19 82       	std	Y+1, r1	; 0x01
    dd6a:	2f c0       	rjmp	.+94     	; 0xddca <_Z12frequencyValPcPm+0x2b8>
		}
		else if((f > 3500000) && (f < 4000000))
    dd6c:	8e 81       	ldd	r24, Y+6	; 0x06
    dd6e:	9f 81       	ldd	r25, Y+7	; 0x07
    dd70:	a8 85       	ldd	r26, Y+8	; 0x08
    dd72:	b9 85       	ldd	r27, Y+9	; 0x09
    dd74:	81 3e       	cpi	r24, 0xE1	; 225
    dd76:	97 46       	sbci	r25, 0x67	; 103
    dd78:	a5 43       	sbci	r26, 0x35	; 53
    dd7a:	b1 05       	cpc	r27, r1
    dd7c:	30 f1       	brcs	.+76     	; 0xddca <_Z12frequencyValPcPm+0x2b8>
    dd7e:	8e 81       	ldd	r24, Y+6	; 0x06
    dd80:	9f 81       	ldd	r25, Y+7	; 0x07
    dd82:	a8 85       	ldd	r26, Y+8	; 0x08
    dd84:	b9 85       	ldd	r27, Y+9	; 0x09
    dd86:	81 15       	cp	r24, r1
    dd88:	99 40       	sbci	r25, 0x09	; 9
    dd8a:	ad 43       	sbci	r26, 0x3D	; 61
    dd8c:	b1 05       	cpc	r27, r1
    dd8e:	e8 f4       	brcc	.+58     	; 0xddca <_Z12frequencyValPcPm+0x2b8>
		{
			f = f - (f % 100);
    dd90:	8e 81       	ldd	r24, Y+6	; 0x06
    dd92:	9f 81       	ldd	r25, Y+7	; 0x07
    dd94:	a8 85       	ldd	r26, Y+8	; 0x08
    dd96:	b9 85       	ldd	r27, Y+9	; 0x09
    dd98:	24 e6       	ldi	r18, 0x64	; 100
    dd9a:	30 e0       	ldi	r19, 0x00	; 0
    dd9c:	40 e0       	ldi	r20, 0x00	; 0
    dd9e:	50 e0       	ldi	r21, 0x00	; 0
    dda0:	bc 01       	movw	r22, r24
    dda2:	cd 01       	movw	r24, r26
    dda4:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    dda8:	dc 01       	movw	r26, r24
    ddaa:	cb 01       	movw	r24, r22
    ddac:	9c 01       	movw	r18, r24
    ddae:	ad 01       	movw	r20, r26
    ddb0:	8e 81       	ldd	r24, Y+6	; 0x06
    ddb2:	9f 81       	ldd	r25, Y+7	; 0x07
    ddb4:	a8 85       	ldd	r26, Y+8	; 0x08
    ddb6:	b9 85       	ldd	r27, Y+9	; 0x09
    ddb8:	82 1b       	sub	r24, r18
    ddba:	93 0b       	sbc	r25, r19
    ddbc:	a4 0b       	sbc	r26, r20
    ddbe:	b5 0b       	sbc	r27, r21
    ddc0:	8e 83       	std	Y+6, r24	; 0x06
    ddc2:	9f 83       	std	Y+7, r25	; 0x07
    ddc4:	a8 87       	std	Y+8, r26	; 0x08
    ddc6:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    ddc8:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    ddca:	99 81       	ldd	r25, Y+1	; 0x01
    ddcc:	81 e0       	ldi	r24, 0x01	; 1
    ddce:	89 27       	eor	r24, r25
    ddd0:	88 23       	and	r24, r24
    ddd2:	09 f4       	brne	.+2      	; 0xddd6 <_Z12frequencyValPcPm+0x2c4>
    ddd4:	58 c0       	rjmp	.+176    	; 0xde86 <_Z12frequencyValPcPm+0x374>
		{
			if(result) *result = f;
    ddd6:	8c 89       	ldd	r24, Y+20	; 0x14
    ddd8:	9d 89       	ldd	r25, Y+21	; 0x15
    ddda:	89 2b       	or	r24, r25
    dddc:	59 f0       	breq	.+22     	; 0xddf4 <_Z12frequencyValPcPm+0x2e2>
    ddde:	2c 89       	ldd	r18, Y+20	; 0x14
    dde0:	3d 89       	ldd	r19, Y+21	; 0x15
    dde2:	8e 81       	ldd	r24, Y+6	; 0x06
    dde4:	9f 81       	ldd	r25, Y+7	; 0x07
    dde6:	a8 85       	ldd	r26, Y+8	; 0x08
    dde8:	b9 85       	ldd	r27, Y+9	; 0x09
    ddea:	f9 01       	movw	r30, r18
    ddec:	80 83       	st	Z, r24
    ddee:	91 83       	std	Z+1, r25	; 0x01
    ddf0:	a2 83       	std	Z+2, r26	; 0x02
    ddf2:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%lu.%1lu kHz", f/1000, (f % 1000)/100);
    ddf4:	8e 81       	ldd	r24, Y+6	; 0x06
    ddf6:	9f 81       	ldd	r25, Y+7	; 0x07
    ddf8:	a8 85       	ldd	r26, Y+8	; 0x08
    ddfa:	b9 85       	ldd	r27, Y+9	; 0x09
    ddfc:	28 ee       	ldi	r18, 0xE8	; 232
    ddfe:	33 e0       	ldi	r19, 0x03	; 3
    de00:	40 e0       	ldi	r20, 0x00	; 0
    de02:	50 e0       	ldi	r21, 0x00	; 0
    de04:	bc 01       	movw	r22, r24
    de06:	cd 01       	movw	r24, r26
    de08:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    de0c:	dc 01       	movw	r26, r24
    de0e:	cb 01       	movw	r24, r22
    de10:	24 e6       	ldi	r18, 0x64	; 100
    de12:	30 e0       	ldi	r19, 0x00	; 0
    de14:	40 e0       	ldi	r20, 0x00	; 0
    de16:	50 e0       	ldi	r21, 0x00	; 0
    de18:	bc 01       	movw	r22, r24
    de1a:	cd 01       	movw	r24, r26
    de1c:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    de20:	da 01       	movw	r26, r20
    de22:	c9 01       	movw	r24, r18
    de24:	7c 01       	movw	r14, r24
    de26:	8d 01       	movw	r16, r26
    de28:	8e 81       	ldd	r24, Y+6	; 0x06
    de2a:	9f 81       	ldd	r25, Y+7	; 0x07
    de2c:	a8 85       	ldd	r26, Y+8	; 0x08
    de2e:	b9 85       	ldd	r27, Y+9	; 0x09
    de30:	28 ee       	ldi	r18, 0xE8	; 232
    de32:	33 e0       	ldi	r19, 0x03	; 3
    de34:	40 e0       	ldi	r20, 0x00	; 0
    de36:	50 e0       	ldi	r21, 0x00	; 0
    de38:	bc 01       	movw	r22, r24
    de3a:	cd 01       	movw	r24, r26
    de3c:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    de40:	da 01       	movw	r26, r20
    de42:	c9 01       	movw	r24, r18
    de44:	21 2f       	mov	r18, r17
    de46:	2f 93       	push	r18
    de48:	20 2f       	mov	r18, r16
    de4a:	2f 93       	push	r18
    de4c:	2f 2d       	mov	r18, r15
    de4e:	2f 93       	push	r18
    de50:	2e 2d       	mov	r18, r14
    de52:	2f 93       	push	r18
    de54:	2b 2f       	mov	r18, r27
    de56:	2f 93       	push	r18
    de58:	2a 2f       	mov	r18, r26
    de5a:	2f 93       	push	r18
    de5c:	29 2f       	mov	r18, r25
    de5e:	2f 93       	push	r18
    de60:	8f 93       	push	r24
    de62:	85 e8       	ldi	r24, 0x85	; 133
    de64:	94 e4       	ldi	r25, 0x44	; 68
    de66:	89 2f       	mov	r24, r25
    de68:	8f 93       	push	r24
    de6a:	85 e8       	ldi	r24, 0x85	; 133
    de6c:	94 e4       	ldi	r25, 0x44	; 68
    de6e:	8f 93       	push	r24
    de70:	8b 89       	ldd	r24, Y+19	; 0x13
    de72:	8f 93       	push	r24
    de74:	8a 89       	ldd	r24, Y+18	; 0x12
    de76:	8f 93       	push	r24
    de78:	0e 94 64 75 	call	0xeac8	; 0xeac8 <sprintf>
    de7c:	8d b7       	in	r24, 0x3d	; 61
    de7e:	9e b7       	in	r25, 0x3e	; 62
    de80:	0c 96       	adiw	r24, 0x0c	; 12
    de82:	cd bf       	out	0x3d, r28	; 61
    de84:	de bf       	out	0x3e, r29	; 62
		}
	}
	
	return(failure);	
    de86:	89 81       	ldd	r24, Y+1	; 0x01
}
    de88:	65 96       	adiw	r28, 0x15	; 21
    de8a:	cd bf       	out	0x3d, r28	; 61
    de8c:	de bf       	out	0x3e, r29	; 62
    de8e:	df 91       	pop	r29
    de90:	cf 91       	pop	r28
    de92:	1f 91       	pop	r17
    de94:	0f 91       	pop	r16
    de96:	ff 90       	pop	r15
    de98:	ef 90       	pop	r14
    de9a:	08 95       	ret

0000de9c <_Z8fox2TextPc5Fox_t>:

bool fox2Text(char* str, Fox_t fox)
{
    de9c:	cf 93       	push	r28
    de9e:	df 93       	push	r29
    dea0:	00 d0       	rcall	.+0      	; 0xdea2 <_Z8fox2TextPc5Fox_t+0x6>
    dea2:	00 d0       	rcall	.+0      	; 0xdea4 <_Z8fox2TextPc5Fox_t+0x8>
    dea4:	cd b7       	in	r28, 0x3d	; 61
    dea6:	de b7       	in	r29, 0x3e	; 62
    dea8:	8a 83       	std	Y+2, r24	; 0x02
    deaa:	9b 83       	std	Y+3, r25	; 0x03
    deac:	6c 83       	std	Y+4, r22	; 0x04
	bool failure = false;
    deae:	19 82       	std	Y+1, r1	; 0x01
	
	switch(fox)
    deb0:	8c 81       	ldd	r24, Y+4	; 0x04
    deb2:	88 2f       	mov	r24, r24
    deb4:	90 e0       	ldi	r25, 0x00	; 0
    deb6:	09 2e       	mov	r0, r25
    deb8:	00 0c       	add	r0, r0
    deba:	aa 0b       	sbc	r26, r26
    debc:	bb 0b       	sbc	r27, r27
    debe:	40 e0       	ldi	r20, 0x00	; 0
    dec0:	50 e0       	ldi	r21, 0x00	; 0
    dec2:	21 e1       	ldi	r18, 0x11	; 17
    dec4:	30 e0       	ldi	r19, 0x00	; 0
    dec6:	84 1b       	sub	r24, r20
    dec8:	95 0b       	sbc	r25, r21
    deca:	28 17       	cp	r18, r24
    decc:	39 07       	cpc	r19, r25
    dece:	08 f4       	brcc	.+2      	; 0xded2 <_Z8fox2TextPc5Fox_t+0x36>
    ded0:	cb c0       	rjmp	.+406    	; 0xe068 <_Z8fox2TextPc5Fox_t+0x1cc>
    ded2:	8e 5d       	subi	r24, 0xDE	; 222
    ded4:	9e 4f       	sbci	r25, 0xFE	; 254
    ded6:	fc 01       	movw	r30, r24
    ded8:	0c 94 4d 73 	jmp	0xe69a	; 0xe69a <__tablejump2__>
	{
		case BEACON:
		{
			sprintf(str, "Finish \"MO\"");
    dedc:	8a 81       	ldd	r24, Y+2	; 0x02
    dede:	9b 81       	ldd	r25, Y+3	; 0x03
    dee0:	2c e0       	ldi	r18, 0x0C	; 12
    dee2:	ec e9       	ldi	r30, 0x9C	; 156
    dee4:	f4 e4       	ldi	r31, 0x44	; 68
    dee6:	dc 01       	movw	r26, r24
    dee8:	01 90       	ld	r0, Z+
    deea:	0d 92       	st	X+, r0
    deec:	2a 95       	dec	r18
    deee:	e1 f7       	brne	.-8      	; 0xdee8 <_Z8fox2TextPc5Fox_t+0x4c>
		}
		break;
    def0:	be c0       	rjmp	.+380    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_1:
		{
			sprintf(str, "Classic Fox 1 \"MOE\"");
    def2:	8a 81       	ldd	r24, Y+2	; 0x02
    def4:	9b 81       	ldd	r25, Y+3	; 0x03
    def6:	24 e1       	ldi	r18, 0x14	; 20
    def8:	e8 ea       	ldi	r30, 0xA8	; 168
    defa:	f4 e4       	ldi	r31, 0x44	; 68
    defc:	dc 01       	movw	r26, r24
    defe:	01 90       	ld	r0, Z+
    df00:	0d 92       	st	X+, r0
    df02:	2a 95       	dec	r18
    df04:	e1 f7       	brne	.-8      	; 0xdefe <_Z8fox2TextPc5Fox_t+0x62>
		}
		break;
    df06:	b3 c0       	rjmp	.+358    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_2:
		{
			sprintf(str, "Classic Fox 2 \"MOI\"");
    df08:	8a 81       	ldd	r24, Y+2	; 0x02
    df0a:	9b 81       	ldd	r25, Y+3	; 0x03
    df0c:	24 e1       	ldi	r18, 0x14	; 20
    df0e:	ec eb       	ldi	r30, 0xBC	; 188
    df10:	f4 e4       	ldi	r31, 0x44	; 68
    df12:	dc 01       	movw	r26, r24
    df14:	01 90       	ld	r0, Z+
    df16:	0d 92       	st	X+, r0
    df18:	2a 95       	dec	r18
    df1a:	e1 f7       	brne	.-8      	; 0xdf14 <_Z8fox2TextPc5Fox_t+0x78>
		}
		break;
    df1c:	a8 c0       	rjmp	.+336    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_3:
		{
			sprintf(str, "Classic Fox 3 \"MOS\"");
    df1e:	8a 81       	ldd	r24, Y+2	; 0x02
    df20:	9b 81       	ldd	r25, Y+3	; 0x03
    df22:	24 e1       	ldi	r18, 0x14	; 20
    df24:	e0 ed       	ldi	r30, 0xD0	; 208
    df26:	f4 e4       	ldi	r31, 0x44	; 68
    df28:	dc 01       	movw	r26, r24
    df2a:	01 90       	ld	r0, Z+
    df2c:	0d 92       	st	X+, r0
    df2e:	2a 95       	dec	r18
    df30:	e1 f7       	brne	.-8      	; 0xdf2a <_Z8fox2TextPc5Fox_t+0x8e>
		}
		break;
    df32:	9d c0       	rjmp	.+314    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_4:
		{
			sprintf(str, "Classic Fox 4 \"MOH\"");
    df34:	8a 81       	ldd	r24, Y+2	; 0x02
    df36:	9b 81       	ldd	r25, Y+3	; 0x03
    df38:	24 e1       	ldi	r18, 0x14	; 20
    df3a:	e4 ee       	ldi	r30, 0xE4	; 228
    df3c:	f4 e4       	ldi	r31, 0x44	; 68
    df3e:	dc 01       	movw	r26, r24
    df40:	01 90       	ld	r0, Z+
    df42:	0d 92       	st	X+, r0
    df44:	2a 95       	dec	r18
    df46:	e1 f7       	brne	.-8      	; 0xdf40 <_Z8fox2TextPc5Fox_t+0xa4>
		}
		break;
    df48:	92 c0       	rjmp	.+292    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_5:
		{
			sprintf(str, "Classic Fox 5 \"MO5\"");
    df4a:	8a 81       	ldd	r24, Y+2	; 0x02
    df4c:	9b 81       	ldd	r25, Y+3	; 0x03
    df4e:	24 e1       	ldi	r18, 0x14	; 20
    df50:	e8 ef       	ldi	r30, 0xF8	; 248
    df52:	f4 e4       	ldi	r31, 0x44	; 68
    df54:	dc 01       	movw	r26, r24
    df56:	01 90       	ld	r0, Z+
    df58:	0d 92       	st	X+, r0
    df5a:	2a 95       	dec	r18
    df5c:	e1 f7       	brne	.-8      	; 0xdf56 <_Z8fox2TextPc5Fox_t+0xba>
		}
		break;
    df5e:	87 c0       	rjmp	.+270    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOXORING:
		{
			sprintf(str, "Foxoring");
    df60:	8a 81       	ldd	r24, Y+2	; 0x02
    df62:	9b 81       	ldd	r25, Y+3	; 0x03
    df64:	29 e0       	ldi	r18, 0x09	; 9
    df66:	ec e0       	ldi	r30, 0x0C	; 12
    df68:	f5 e4       	ldi	r31, 0x45	; 69
    df6a:	dc 01       	movw	r26, r24
    df6c:	01 90       	ld	r0, Z+
    df6e:	0d 92       	st	X+, r0
    df70:	2a 95       	dec	r18
    df72:	e1 f7       	brne	.-8      	; 0xdf6c <_Z8fox2TextPc5Fox_t+0xd0>
		}
		break;
    df74:	7c c0       	rjmp	.+248    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPECTATOR:
		{
			sprintf(str, "Spectator \"S\"");
    df76:	8a 81       	ldd	r24, Y+2	; 0x02
    df78:	9b 81       	ldd	r25, Y+3	; 0x03
    df7a:	2e e0       	ldi	r18, 0x0E	; 14
    df7c:	e5 e1       	ldi	r30, 0x15	; 21
    df7e:	f5 e4       	ldi	r31, 0x45	; 69
    df80:	dc 01       	movw	r26, r24
    df82:	01 90       	ld	r0, Z+
    df84:	0d 92       	st	X+, r0
    df86:	2a 95       	dec	r18
    df88:	e1 f7       	brne	.-8      	; 0xdf82 <_Z8fox2TextPc5Fox_t+0xe6>
		}
		break;
    df8a:	71 c0       	rjmp	.+226    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S1:
		{
			sprintf(str, "Sprint Slow 1 \"ME\"");
    df8c:	8a 81       	ldd	r24, Y+2	; 0x02
    df8e:	9b 81       	ldd	r25, Y+3	; 0x03
    df90:	23 e1       	ldi	r18, 0x13	; 19
    df92:	e3 e2       	ldi	r30, 0x23	; 35
    df94:	f5 e4       	ldi	r31, 0x45	; 69
    df96:	dc 01       	movw	r26, r24
    df98:	01 90       	ld	r0, Z+
    df9a:	0d 92       	st	X+, r0
    df9c:	2a 95       	dec	r18
    df9e:	e1 f7       	brne	.-8      	; 0xdf98 <_Z8fox2TextPc5Fox_t+0xfc>
		}
		break;
    dfa0:	66 c0       	rjmp	.+204    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S2:
		{
			sprintf(str, "Sprint Slow 2 \"MI\"");
    dfa2:	8a 81       	ldd	r24, Y+2	; 0x02
    dfa4:	9b 81       	ldd	r25, Y+3	; 0x03
    dfa6:	23 e1       	ldi	r18, 0x13	; 19
    dfa8:	e6 e3       	ldi	r30, 0x36	; 54
    dfaa:	f5 e4       	ldi	r31, 0x45	; 69
    dfac:	dc 01       	movw	r26, r24
    dfae:	01 90       	ld	r0, Z+
    dfb0:	0d 92       	st	X+, r0
    dfb2:	2a 95       	dec	r18
    dfb4:	e1 f7       	brne	.-8      	; 0xdfae <_Z8fox2TextPc5Fox_t+0x112>
		}
		break;
    dfb6:	5b c0       	rjmp	.+182    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S3:
		{
			sprintf(str, "Sprint Slow 3 \"MS\"");
    dfb8:	8a 81       	ldd	r24, Y+2	; 0x02
    dfba:	9b 81       	ldd	r25, Y+3	; 0x03
    dfbc:	23 e1       	ldi	r18, 0x13	; 19
    dfbe:	e9 e4       	ldi	r30, 0x49	; 73
    dfc0:	f5 e4       	ldi	r31, 0x45	; 69
    dfc2:	dc 01       	movw	r26, r24
    dfc4:	01 90       	ld	r0, Z+
    dfc6:	0d 92       	st	X+, r0
    dfc8:	2a 95       	dec	r18
    dfca:	e1 f7       	brne	.-8      	; 0xdfc4 <_Z8fox2TextPc5Fox_t+0x128>
		}
		break;
    dfcc:	50 c0       	rjmp	.+160    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S4:
		{
			sprintf(str, "Sprint Slow 4 \"MH\"");
    dfce:	8a 81       	ldd	r24, Y+2	; 0x02
    dfd0:	9b 81       	ldd	r25, Y+3	; 0x03
    dfd2:	23 e1       	ldi	r18, 0x13	; 19
    dfd4:	ec e5       	ldi	r30, 0x5C	; 92
    dfd6:	f5 e4       	ldi	r31, 0x45	; 69
    dfd8:	dc 01       	movw	r26, r24
    dfda:	01 90       	ld	r0, Z+
    dfdc:	0d 92       	st	X+, r0
    dfde:	2a 95       	dec	r18
    dfe0:	e1 f7       	brne	.-8      	; 0xdfda <_Z8fox2TextPc5Fox_t+0x13e>
		}
		break;
    dfe2:	45 c0       	rjmp	.+138    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S5:
		{
			sprintf(str, "Sprint Slow 5 \"M5\"");
    dfe4:	8a 81       	ldd	r24, Y+2	; 0x02
    dfe6:	9b 81       	ldd	r25, Y+3	; 0x03
    dfe8:	23 e1       	ldi	r18, 0x13	; 19
    dfea:	ef e6       	ldi	r30, 0x6F	; 111
    dfec:	f5 e4       	ldi	r31, 0x45	; 69
    dfee:	dc 01       	movw	r26, r24
    dff0:	01 90       	ld	r0, Z+
    dff2:	0d 92       	st	X+, r0
    dff4:	2a 95       	dec	r18
    dff6:	e1 f7       	brne	.-8      	; 0xdff0 <_Z8fox2TextPc5Fox_t+0x154>
		}
		break;
    dff8:	3a c0       	rjmp	.+116    	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F1:
		{
			sprintf(str, "Sprint Fast 1 \"OE\"");
    dffa:	8a 81       	ldd	r24, Y+2	; 0x02
    dffc:	9b 81       	ldd	r25, Y+3	; 0x03
    dffe:	23 e1       	ldi	r18, 0x13	; 19
    e000:	e2 e8       	ldi	r30, 0x82	; 130
    e002:	f5 e4       	ldi	r31, 0x45	; 69
    e004:	dc 01       	movw	r26, r24
    e006:	01 90       	ld	r0, Z+
    e008:	0d 92       	st	X+, r0
    e00a:	2a 95       	dec	r18
    e00c:	e1 f7       	brne	.-8      	; 0xe006 <_Z8fox2TextPc5Fox_t+0x16a>
		}
		break;
    e00e:	2f c0       	rjmp	.+94     	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F2:
		{
			sprintf(str, "Sprint Fast 2 \"OI\"");
    e010:	8a 81       	ldd	r24, Y+2	; 0x02
    e012:	9b 81       	ldd	r25, Y+3	; 0x03
    e014:	23 e1       	ldi	r18, 0x13	; 19
    e016:	e5 e9       	ldi	r30, 0x95	; 149
    e018:	f5 e4       	ldi	r31, 0x45	; 69
    e01a:	dc 01       	movw	r26, r24
    e01c:	01 90       	ld	r0, Z+
    e01e:	0d 92       	st	X+, r0
    e020:	2a 95       	dec	r18
    e022:	e1 f7       	brne	.-8      	; 0xe01c <_Z8fox2TextPc5Fox_t+0x180>
		}
		break;
    e024:	24 c0       	rjmp	.+72     	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F3:
		{
			sprintf(str, "Sprint Fast 3 \"OS\"");
    e026:	8a 81       	ldd	r24, Y+2	; 0x02
    e028:	9b 81       	ldd	r25, Y+3	; 0x03
    e02a:	23 e1       	ldi	r18, 0x13	; 19
    e02c:	e8 ea       	ldi	r30, 0xA8	; 168
    e02e:	f5 e4       	ldi	r31, 0x45	; 69
    e030:	dc 01       	movw	r26, r24
    e032:	01 90       	ld	r0, Z+
    e034:	0d 92       	st	X+, r0
    e036:	2a 95       	dec	r18
    e038:	e1 f7       	brne	.-8      	; 0xe032 <_Z8fox2TextPc5Fox_t+0x196>
		}
		break;
    e03a:	19 c0       	rjmp	.+50     	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F4:
		{
			sprintf(str, "Sprint Fast 4 \"OH\"");
    e03c:	8a 81       	ldd	r24, Y+2	; 0x02
    e03e:	9b 81       	ldd	r25, Y+3	; 0x03
    e040:	23 e1       	ldi	r18, 0x13	; 19
    e042:	eb eb       	ldi	r30, 0xBB	; 187
    e044:	f5 e4       	ldi	r31, 0x45	; 69
    e046:	dc 01       	movw	r26, r24
    e048:	01 90       	ld	r0, Z+
    e04a:	0d 92       	st	X+, r0
    e04c:	2a 95       	dec	r18
    e04e:	e1 f7       	brne	.-8      	; 0xe048 <_Z8fox2TextPc5Fox_t+0x1ac>
		}
		break;
    e050:	0e c0       	rjmp	.+28     	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F5:
		{
			sprintf(str, "Sprint Fast 5 \"O5\"");
    e052:	8a 81       	ldd	r24, Y+2	; 0x02
    e054:	9b 81       	ldd	r25, Y+3	; 0x03
    e056:	23 e1       	ldi	r18, 0x13	; 19
    e058:	ee ec       	ldi	r30, 0xCE	; 206
    e05a:	f5 e4       	ldi	r31, 0x45	; 69
    e05c:	dc 01       	movw	r26, r24
    e05e:	01 90       	ld	r0, Z+
    e060:	0d 92       	st	X+, r0
    e062:	2a 95       	dec	r18
    e064:	e1 f7       	brne	.-8      	; 0xe05e <_Z8fox2TextPc5Fox_t+0x1c2>
		}
		break;
    e066:	03 c0       	rjmp	.+6      	; 0xe06e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		default:
		{
			failure = true;
    e068:	81 e0       	ldi	r24, 0x01	; 1
    e06a:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    e06c:	00 00       	nop
	}
	
	return(failure);
    e06e:	89 81       	ldd	r24, Y+1	; 0x01
    e070:	24 96       	adiw	r28, 0x04	; 4
    e072:	cd bf       	out	0x3d, r28	; 61
    e074:	de bf       	out	0x3e, r29	; 62
    e076:	df 91       	pop	r29
    e078:	cf 91       	pop	r28
    e07a:	08 95       	ret

0000e07c <__subsf3>:
    e07c:	50 58       	subi	r21, 0x80	; 128

0000e07e <__addsf3>:
    e07e:	bb 27       	eor	r27, r27
    e080:	aa 27       	eor	r26, r26
    e082:	0e 94 56 70 	call	0xe0ac	; 0xe0ac <__addsf3x>
    e086:	0c 94 10 72 	jmp	0xe420	; 0xe420 <__fp_round>
    e08a:	0e 94 02 72 	call	0xe404	; 0xe404 <__fp_pscA>
    e08e:	38 f0       	brcs	.+14     	; 0xe09e <__addsf3+0x20>
    e090:	0e 94 09 72 	call	0xe412	; 0xe412 <__fp_pscB>
    e094:	20 f0       	brcs	.+8      	; 0xe09e <__addsf3+0x20>
    e096:	39 f4       	brne	.+14     	; 0xe0a6 <__addsf3+0x28>
    e098:	9f 3f       	cpi	r25, 0xFF	; 255
    e09a:	19 f4       	brne	.+6      	; 0xe0a2 <__addsf3+0x24>
    e09c:	26 f4       	brtc	.+8      	; 0xe0a6 <__addsf3+0x28>
    e09e:	0c 94 ff 71 	jmp	0xe3fe	; 0xe3fe <__fp_nan>
    e0a2:	0e f4       	brtc	.+2      	; 0xe0a6 <__addsf3+0x28>
    e0a4:	e0 95       	com	r30
    e0a6:	e7 fb       	bst	r30, 7
    e0a8:	0c 94 d0 71 	jmp	0xe3a0	; 0xe3a0 <__fp_inf>

0000e0ac <__addsf3x>:
    e0ac:	e9 2f       	mov	r30, r25
    e0ae:	0e 94 21 72 	call	0xe442	; 0xe442 <__fp_split3>
    e0b2:	58 f3       	brcs	.-42     	; 0xe08a <__addsf3+0xc>
    e0b4:	ba 17       	cp	r27, r26
    e0b6:	62 07       	cpc	r22, r18
    e0b8:	73 07       	cpc	r23, r19
    e0ba:	84 07       	cpc	r24, r20
    e0bc:	95 07       	cpc	r25, r21
    e0be:	20 f0       	brcs	.+8      	; 0xe0c8 <__addsf3x+0x1c>
    e0c0:	79 f4       	brne	.+30     	; 0xe0e0 <__addsf3x+0x34>
    e0c2:	a6 f5       	brtc	.+104    	; 0xe12c <__addsf3x+0x80>
    e0c4:	0c 94 5b 72 	jmp	0xe4b6	; 0xe4b6 <__fp_zero>
    e0c8:	0e f4       	brtc	.+2      	; 0xe0cc <__addsf3x+0x20>
    e0ca:	e0 95       	com	r30
    e0cc:	0b 2e       	mov	r0, r27
    e0ce:	ba 2f       	mov	r27, r26
    e0d0:	a0 2d       	mov	r26, r0
    e0d2:	0b 01       	movw	r0, r22
    e0d4:	b9 01       	movw	r22, r18
    e0d6:	90 01       	movw	r18, r0
    e0d8:	0c 01       	movw	r0, r24
    e0da:	ca 01       	movw	r24, r20
    e0dc:	a0 01       	movw	r20, r0
    e0de:	11 24       	eor	r1, r1
    e0e0:	ff 27       	eor	r31, r31
    e0e2:	59 1b       	sub	r21, r25
    e0e4:	99 f0       	breq	.+38     	; 0xe10c <__addsf3x+0x60>
    e0e6:	59 3f       	cpi	r21, 0xF9	; 249
    e0e8:	50 f4       	brcc	.+20     	; 0xe0fe <__addsf3x+0x52>
    e0ea:	50 3e       	cpi	r21, 0xE0	; 224
    e0ec:	68 f1       	brcs	.+90     	; 0xe148 <__addsf3x+0x9c>
    e0ee:	1a 16       	cp	r1, r26
    e0f0:	f0 40       	sbci	r31, 0x00	; 0
    e0f2:	a2 2f       	mov	r26, r18
    e0f4:	23 2f       	mov	r18, r19
    e0f6:	34 2f       	mov	r19, r20
    e0f8:	44 27       	eor	r20, r20
    e0fa:	58 5f       	subi	r21, 0xF8	; 248
    e0fc:	f3 cf       	rjmp	.-26     	; 0xe0e4 <__addsf3x+0x38>
    e0fe:	46 95       	lsr	r20
    e100:	37 95       	ror	r19
    e102:	27 95       	ror	r18
    e104:	a7 95       	ror	r26
    e106:	f0 40       	sbci	r31, 0x00	; 0
    e108:	53 95       	inc	r21
    e10a:	c9 f7       	brne	.-14     	; 0xe0fe <__addsf3x+0x52>
    e10c:	7e f4       	brtc	.+30     	; 0xe12c <__addsf3x+0x80>
    e10e:	1f 16       	cp	r1, r31
    e110:	ba 0b       	sbc	r27, r26
    e112:	62 0b       	sbc	r22, r18
    e114:	73 0b       	sbc	r23, r19
    e116:	84 0b       	sbc	r24, r20
    e118:	ba f0       	brmi	.+46     	; 0xe148 <__addsf3x+0x9c>
    e11a:	91 50       	subi	r25, 0x01	; 1
    e11c:	a1 f0       	breq	.+40     	; 0xe146 <__addsf3x+0x9a>
    e11e:	ff 0f       	add	r31, r31
    e120:	bb 1f       	adc	r27, r27
    e122:	66 1f       	adc	r22, r22
    e124:	77 1f       	adc	r23, r23
    e126:	88 1f       	adc	r24, r24
    e128:	c2 f7       	brpl	.-16     	; 0xe11a <__addsf3x+0x6e>
    e12a:	0e c0       	rjmp	.+28     	; 0xe148 <__addsf3x+0x9c>
    e12c:	ba 0f       	add	r27, r26
    e12e:	62 1f       	adc	r22, r18
    e130:	73 1f       	adc	r23, r19
    e132:	84 1f       	adc	r24, r20
    e134:	48 f4       	brcc	.+18     	; 0xe148 <__addsf3x+0x9c>
    e136:	87 95       	ror	r24
    e138:	77 95       	ror	r23
    e13a:	67 95       	ror	r22
    e13c:	b7 95       	ror	r27
    e13e:	f7 95       	ror	r31
    e140:	9e 3f       	cpi	r25, 0xFE	; 254
    e142:	08 f0       	brcs	.+2      	; 0xe146 <__addsf3x+0x9a>
    e144:	b0 cf       	rjmp	.-160    	; 0xe0a6 <__addsf3+0x28>
    e146:	93 95       	inc	r25
    e148:	88 0f       	add	r24, r24
    e14a:	08 f0       	brcs	.+2      	; 0xe14e <__addsf3x+0xa2>
    e14c:	99 27       	eor	r25, r25
    e14e:	ee 0f       	add	r30, r30
    e150:	97 95       	ror	r25
    e152:	87 95       	ror	r24
    e154:	08 95       	ret

0000e156 <ceil>:
    e156:	0e 94 43 72 	call	0xe486	; 0xe486 <__fp_trunc>
    e15a:	90 f0       	brcs	.+36     	; 0xe180 <ceil+0x2a>
    e15c:	9f 37       	cpi	r25, 0x7F	; 127
    e15e:	48 f4       	brcc	.+18     	; 0xe172 <ceil+0x1c>
    e160:	91 11       	cpse	r25, r1
    e162:	16 f4       	brtc	.+4      	; 0xe168 <ceil+0x12>
    e164:	0c 94 5c 72 	jmp	0xe4b8	; 0xe4b8 <__fp_szero>
    e168:	60 e0       	ldi	r22, 0x00	; 0
    e16a:	70 e0       	ldi	r23, 0x00	; 0
    e16c:	80 e8       	ldi	r24, 0x80	; 128
    e16e:	9f e3       	ldi	r25, 0x3F	; 63
    e170:	08 95       	ret
    e172:	26 f0       	brts	.+8      	; 0xe17c <ceil+0x26>
    e174:	1b 16       	cp	r1, r27
    e176:	61 1d       	adc	r22, r1
    e178:	71 1d       	adc	r23, r1
    e17a:	81 1d       	adc	r24, r1
    e17c:	0c 94 d6 71 	jmp	0xe3ac	; 0xe3ac <__fp_mintl>
    e180:	0c 94 f1 71 	jmp	0xe3e2	; 0xe3e2 <__fp_mpack>

0000e184 <__cmpsf2>:
    e184:	0e 94 ac 71 	call	0xe358	; 0xe358 <__fp_cmp>
    e188:	08 f4       	brcc	.+2      	; 0xe18c <__cmpsf2+0x8>
    e18a:	81 e0       	ldi	r24, 0x01	; 1
    e18c:	08 95       	ret

0000e18e <__divsf3>:
    e18e:	0e 94 db 70 	call	0xe1b6	; 0xe1b6 <__divsf3x>
    e192:	0c 94 10 72 	jmp	0xe420	; 0xe420 <__fp_round>
    e196:	0e 94 09 72 	call	0xe412	; 0xe412 <__fp_pscB>
    e19a:	58 f0       	brcs	.+22     	; 0xe1b2 <__divsf3+0x24>
    e19c:	0e 94 02 72 	call	0xe404	; 0xe404 <__fp_pscA>
    e1a0:	40 f0       	brcs	.+16     	; 0xe1b2 <__divsf3+0x24>
    e1a2:	29 f4       	brne	.+10     	; 0xe1ae <__divsf3+0x20>
    e1a4:	5f 3f       	cpi	r21, 0xFF	; 255
    e1a6:	29 f0       	breq	.+10     	; 0xe1b2 <__divsf3+0x24>
    e1a8:	0c 94 d0 71 	jmp	0xe3a0	; 0xe3a0 <__fp_inf>
    e1ac:	51 11       	cpse	r21, r1
    e1ae:	0c 94 5c 72 	jmp	0xe4b8	; 0xe4b8 <__fp_szero>
    e1b2:	0c 94 ff 71 	jmp	0xe3fe	; 0xe3fe <__fp_nan>

0000e1b6 <__divsf3x>:
    e1b6:	0e 94 21 72 	call	0xe442	; 0xe442 <__fp_split3>
    e1ba:	68 f3       	brcs	.-38     	; 0xe196 <__divsf3+0x8>

0000e1bc <__divsf3_pse>:
    e1bc:	99 23       	and	r25, r25
    e1be:	b1 f3       	breq	.-20     	; 0xe1ac <__divsf3+0x1e>
    e1c0:	55 23       	and	r21, r21
    e1c2:	91 f3       	breq	.-28     	; 0xe1a8 <__divsf3+0x1a>
    e1c4:	95 1b       	sub	r25, r21
    e1c6:	55 0b       	sbc	r21, r21
    e1c8:	bb 27       	eor	r27, r27
    e1ca:	aa 27       	eor	r26, r26
    e1cc:	62 17       	cp	r22, r18
    e1ce:	73 07       	cpc	r23, r19
    e1d0:	84 07       	cpc	r24, r20
    e1d2:	38 f0       	brcs	.+14     	; 0xe1e2 <__divsf3_pse+0x26>
    e1d4:	9f 5f       	subi	r25, 0xFF	; 255
    e1d6:	5f 4f       	sbci	r21, 0xFF	; 255
    e1d8:	22 0f       	add	r18, r18
    e1da:	33 1f       	adc	r19, r19
    e1dc:	44 1f       	adc	r20, r20
    e1de:	aa 1f       	adc	r26, r26
    e1e0:	a9 f3       	breq	.-22     	; 0xe1cc <__divsf3_pse+0x10>
    e1e2:	35 d0       	rcall	.+106    	; 0xe24e <__divsf3_pse+0x92>
    e1e4:	0e 2e       	mov	r0, r30
    e1e6:	3a f0       	brmi	.+14     	; 0xe1f6 <__divsf3_pse+0x3a>
    e1e8:	e0 e8       	ldi	r30, 0x80	; 128
    e1ea:	32 d0       	rcall	.+100    	; 0xe250 <__divsf3_pse+0x94>
    e1ec:	91 50       	subi	r25, 0x01	; 1
    e1ee:	50 40       	sbci	r21, 0x00	; 0
    e1f0:	e6 95       	lsr	r30
    e1f2:	00 1c       	adc	r0, r0
    e1f4:	ca f7       	brpl	.-14     	; 0xe1e8 <__divsf3_pse+0x2c>
    e1f6:	2b d0       	rcall	.+86     	; 0xe24e <__divsf3_pse+0x92>
    e1f8:	fe 2f       	mov	r31, r30
    e1fa:	29 d0       	rcall	.+82     	; 0xe24e <__divsf3_pse+0x92>
    e1fc:	66 0f       	add	r22, r22
    e1fe:	77 1f       	adc	r23, r23
    e200:	88 1f       	adc	r24, r24
    e202:	bb 1f       	adc	r27, r27
    e204:	26 17       	cp	r18, r22
    e206:	37 07       	cpc	r19, r23
    e208:	48 07       	cpc	r20, r24
    e20a:	ab 07       	cpc	r26, r27
    e20c:	b0 e8       	ldi	r27, 0x80	; 128
    e20e:	09 f0       	breq	.+2      	; 0xe212 <__divsf3_pse+0x56>
    e210:	bb 0b       	sbc	r27, r27
    e212:	80 2d       	mov	r24, r0
    e214:	bf 01       	movw	r22, r30
    e216:	ff 27       	eor	r31, r31
    e218:	93 58       	subi	r25, 0x83	; 131
    e21a:	5f 4f       	sbci	r21, 0xFF	; 255
    e21c:	3a f0       	brmi	.+14     	; 0xe22c <__divsf3_pse+0x70>
    e21e:	9e 3f       	cpi	r25, 0xFE	; 254
    e220:	51 05       	cpc	r21, r1
    e222:	78 f0       	brcs	.+30     	; 0xe242 <__divsf3_pse+0x86>
    e224:	0c 94 d0 71 	jmp	0xe3a0	; 0xe3a0 <__fp_inf>
    e228:	0c 94 5c 72 	jmp	0xe4b8	; 0xe4b8 <__fp_szero>
    e22c:	5f 3f       	cpi	r21, 0xFF	; 255
    e22e:	e4 f3       	brlt	.-8      	; 0xe228 <__divsf3_pse+0x6c>
    e230:	98 3e       	cpi	r25, 0xE8	; 232
    e232:	d4 f3       	brlt	.-12     	; 0xe228 <__divsf3_pse+0x6c>
    e234:	86 95       	lsr	r24
    e236:	77 95       	ror	r23
    e238:	67 95       	ror	r22
    e23a:	b7 95       	ror	r27
    e23c:	f7 95       	ror	r31
    e23e:	9f 5f       	subi	r25, 0xFF	; 255
    e240:	c9 f7       	brne	.-14     	; 0xe234 <__divsf3_pse+0x78>
    e242:	88 0f       	add	r24, r24
    e244:	91 1d       	adc	r25, r1
    e246:	96 95       	lsr	r25
    e248:	87 95       	ror	r24
    e24a:	97 f9       	bld	r25, 7
    e24c:	08 95       	ret
    e24e:	e1 e0       	ldi	r30, 0x01	; 1
    e250:	66 0f       	add	r22, r22
    e252:	77 1f       	adc	r23, r23
    e254:	88 1f       	adc	r24, r24
    e256:	bb 1f       	adc	r27, r27
    e258:	62 17       	cp	r22, r18
    e25a:	73 07       	cpc	r23, r19
    e25c:	84 07       	cpc	r24, r20
    e25e:	ba 07       	cpc	r27, r26
    e260:	20 f0       	brcs	.+8      	; 0xe26a <__divsf3_pse+0xae>
    e262:	62 1b       	sub	r22, r18
    e264:	73 0b       	sbc	r23, r19
    e266:	84 0b       	sbc	r24, r20
    e268:	ba 0b       	sbc	r27, r26
    e26a:	ee 1f       	adc	r30, r30
    e26c:	88 f7       	brcc	.-30     	; 0xe250 <__divsf3_pse+0x94>
    e26e:	e0 95       	com	r30
    e270:	08 95       	ret

0000e272 <__fixsfsi>:
    e272:	0e 94 40 71 	call	0xe280	; 0xe280 <__fixunssfsi>
    e276:	68 94       	set
    e278:	b1 11       	cpse	r27, r1
    e27a:	0c 94 5c 72 	jmp	0xe4b8	; 0xe4b8 <__fp_szero>
    e27e:	08 95       	ret

0000e280 <__fixunssfsi>:
    e280:	0e 94 29 72 	call	0xe452	; 0xe452 <__fp_splitA>
    e284:	88 f0       	brcs	.+34     	; 0xe2a8 <__fixunssfsi+0x28>
    e286:	9f 57       	subi	r25, 0x7F	; 127
    e288:	98 f0       	brcs	.+38     	; 0xe2b0 <__fixunssfsi+0x30>
    e28a:	b9 2f       	mov	r27, r25
    e28c:	99 27       	eor	r25, r25
    e28e:	b7 51       	subi	r27, 0x17	; 23
    e290:	b0 f0       	brcs	.+44     	; 0xe2be <__fixunssfsi+0x3e>
    e292:	e1 f0       	breq	.+56     	; 0xe2cc <__fixunssfsi+0x4c>
    e294:	66 0f       	add	r22, r22
    e296:	77 1f       	adc	r23, r23
    e298:	88 1f       	adc	r24, r24
    e29a:	99 1f       	adc	r25, r25
    e29c:	1a f0       	brmi	.+6      	; 0xe2a4 <__fixunssfsi+0x24>
    e29e:	ba 95       	dec	r27
    e2a0:	c9 f7       	brne	.-14     	; 0xe294 <__fixunssfsi+0x14>
    e2a2:	14 c0       	rjmp	.+40     	; 0xe2cc <__fixunssfsi+0x4c>
    e2a4:	b1 30       	cpi	r27, 0x01	; 1
    e2a6:	91 f0       	breq	.+36     	; 0xe2cc <__fixunssfsi+0x4c>
    e2a8:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__fp_zero>
    e2ac:	b1 e0       	ldi	r27, 0x01	; 1
    e2ae:	08 95       	ret
    e2b0:	0c 94 5b 72 	jmp	0xe4b6	; 0xe4b6 <__fp_zero>
    e2b4:	67 2f       	mov	r22, r23
    e2b6:	78 2f       	mov	r23, r24
    e2b8:	88 27       	eor	r24, r24
    e2ba:	b8 5f       	subi	r27, 0xF8	; 248
    e2bc:	39 f0       	breq	.+14     	; 0xe2cc <__fixunssfsi+0x4c>
    e2be:	b9 3f       	cpi	r27, 0xF9	; 249
    e2c0:	cc f3       	brlt	.-14     	; 0xe2b4 <__fixunssfsi+0x34>
    e2c2:	86 95       	lsr	r24
    e2c4:	77 95       	ror	r23
    e2c6:	67 95       	ror	r22
    e2c8:	b3 95       	inc	r27
    e2ca:	d9 f7       	brne	.-10     	; 0xe2c2 <__fixunssfsi+0x42>
    e2cc:	3e f4       	brtc	.+14     	; 0xe2dc <__fixunssfsi+0x5c>
    e2ce:	90 95       	com	r25
    e2d0:	80 95       	com	r24
    e2d2:	70 95       	com	r23
    e2d4:	61 95       	neg	r22
    e2d6:	7f 4f       	sbci	r23, 0xFF	; 255
    e2d8:	8f 4f       	sbci	r24, 0xFF	; 255
    e2da:	9f 4f       	sbci	r25, 0xFF	; 255
    e2dc:	08 95       	ret

0000e2de <__floatunsisf>:
    e2de:	e8 94       	clt
    e2e0:	09 c0       	rjmp	.+18     	; 0xe2f4 <__floatsisf+0x12>

0000e2e2 <__floatsisf>:
    e2e2:	97 fb       	bst	r25, 7
    e2e4:	3e f4       	brtc	.+14     	; 0xe2f4 <__floatsisf+0x12>
    e2e6:	90 95       	com	r25
    e2e8:	80 95       	com	r24
    e2ea:	70 95       	com	r23
    e2ec:	61 95       	neg	r22
    e2ee:	7f 4f       	sbci	r23, 0xFF	; 255
    e2f0:	8f 4f       	sbci	r24, 0xFF	; 255
    e2f2:	9f 4f       	sbci	r25, 0xFF	; 255
    e2f4:	99 23       	and	r25, r25
    e2f6:	a9 f0       	breq	.+42     	; 0xe322 <__floatsisf+0x40>
    e2f8:	f9 2f       	mov	r31, r25
    e2fa:	96 e9       	ldi	r25, 0x96	; 150
    e2fc:	bb 27       	eor	r27, r27
    e2fe:	93 95       	inc	r25
    e300:	f6 95       	lsr	r31
    e302:	87 95       	ror	r24
    e304:	77 95       	ror	r23
    e306:	67 95       	ror	r22
    e308:	b7 95       	ror	r27
    e30a:	f1 11       	cpse	r31, r1
    e30c:	f8 cf       	rjmp	.-16     	; 0xe2fe <__floatsisf+0x1c>
    e30e:	fa f4       	brpl	.+62     	; 0xe34e <__floatsisf+0x6c>
    e310:	bb 0f       	add	r27, r27
    e312:	11 f4       	brne	.+4      	; 0xe318 <__floatsisf+0x36>
    e314:	60 ff       	sbrs	r22, 0
    e316:	1b c0       	rjmp	.+54     	; 0xe34e <__floatsisf+0x6c>
    e318:	6f 5f       	subi	r22, 0xFF	; 255
    e31a:	7f 4f       	sbci	r23, 0xFF	; 255
    e31c:	8f 4f       	sbci	r24, 0xFF	; 255
    e31e:	9f 4f       	sbci	r25, 0xFF	; 255
    e320:	16 c0       	rjmp	.+44     	; 0xe34e <__floatsisf+0x6c>
    e322:	88 23       	and	r24, r24
    e324:	11 f0       	breq	.+4      	; 0xe32a <__floatsisf+0x48>
    e326:	96 e9       	ldi	r25, 0x96	; 150
    e328:	11 c0       	rjmp	.+34     	; 0xe34c <__floatsisf+0x6a>
    e32a:	77 23       	and	r23, r23
    e32c:	21 f0       	breq	.+8      	; 0xe336 <__floatsisf+0x54>
    e32e:	9e e8       	ldi	r25, 0x8E	; 142
    e330:	87 2f       	mov	r24, r23
    e332:	76 2f       	mov	r23, r22
    e334:	05 c0       	rjmp	.+10     	; 0xe340 <__floatsisf+0x5e>
    e336:	66 23       	and	r22, r22
    e338:	71 f0       	breq	.+28     	; 0xe356 <__floatsisf+0x74>
    e33a:	96 e8       	ldi	r25, 0x86	; 134
    e33c:	86 2f       	mov	r24, r22
    e33e:	70 e0       	ldi	r23, 0x00	; 0
    e340:	60 e0       	ldi	r22, 0x00	; 0
    e342:	2a f0       	brmi	.+10     	; 0xe34e <__floatsisf+0x6c>
    e344:	9a 95       	dec	r25
    e346:	66 0f       	add	r22, r22
    e348:	77 1f       	adc	r23, r23
    e34a:	88 1f       	adc	r24, r24
    e34c:	da f7       	brpl	.-10     	; 0xe344 <__floatsisf+0x62>
    e34e:	88 0f       	add	r24, r24
    e350:	96 95       	lsr	r25
    e352:	87 95       	ror	r24
    e354:	97 f9       	bld	r25, 7
    e356:	08 95       	ret

0000e358 <__fp_cmp>:
    e358:	99 0f       	add	r25, r25
    e35a:	00 08       	sbc	r0, r0
    e35c:	55 0f       	add	r21, r21
    e35e:	aa 0b       	sbc	r26, r26
    e360:	e0 e8       	ldi	r30, 0x80	; 128
    e362:	fe ef       	ldi	r31, 0xFE	; 254
    e364:	16 16       	cp	r1, r22
    e366:	17 06       	cpc	r1, r23
    e368:	e8 07       	cpc	r30, r24
    e36a:	f9 07       	cpc	r31, r25
    e36c:	c0 f0       	brcs	.+48     	; 0xe39e <__fp_cmp+0x46>
    e36e:	12 16       	cp	r1, r18
    e370:	13 06       	cpc	r1, r19
    e372:	e4 07       	cpc	r30, r20
    e374:	f5 07       	cpc	r31, r21
    e376:	98 f0       	brcs	.+38     	; 0xe39e <__fp_cmp+0x46>
    e378:	62 1b       	sub	r22, r18
    e37a:	73 0b       	sbc	r23, r19
    e37c:	84 0b       	sbc	r24, r20
    e37e:	95 0b       	sbc	r25, r21
    e380:	39 f4       	brne	.+14     	; 0xe390 <__fp_cmp+0x38>
    e382:	0a 26       	eor	r0, r26
    e384:	61 f0       	breq	.+24     	; 0xe39e <__fp_cmp+0x46>
    e386:	23 2b       	or	r18, r19
    e388:	24 2b       	or	r18, r20
    e38a:	25 2b       	or	r18, r21
    e38c:	21 f4       	brne	.+8      	; 0xe396 <__fp_cmp+0x3e>
    e38e:	08 95       	ret
    e390:	0a 26       	eor	r0, r26
    e392:	09 f4       	brne	.+2      	; 0xe396 <__fp_cmp+0x3e>
    e394:	a1 40       	sbci	r26, 0x01	; 1
    e396:	a6 95       	lsr	r26
    e398:	8f ef       	ldi	r24, 0xFF	; 255
    e39a:	81 1d       	adc	r24, r1
    e39c:	81 1d       	adc	r24, r1
    e39e:	08 95       	ret

0000e3a0 <__fp_inf>:
    e3a0:	97 f9       	bld	r25, 7
    e3a2:	9f 67       	ori	r25, 0x7F	; 127
    e3a4:	80 e8       	ldi	r24, 0x80	; 128
    e3a6:	70 e0       	ldi	r23, 0x00	; 0
    e3a8:	60 e0       	ldi	r22, 0x00	; 0
    e3aa:	08 95       	ret

0000e3ac <__fp_mintl>:
    e3ac:	88 23       	and	r24, r24
    e3ae:	71 f4       	brne	.+28     	; 0xe3cc <__fp_mintl+0x20>
    e3b0:	77 23       	and	r23, r23
    e3b2:	21 f0       	breq	.+8      	; 0xe3bc <__fp_mintl+0x10>
    e3b4:	98 50       	subi	r25, 0x08	; 8
    e3b6:	87 2b       	or	r24, r23
    e3b8:	76 2f       	mov	r23, r22
    e3ba:	07 c0       	rjmp	.+14     	; 0xe3ca <__fp_mintl+0x1e>
    e3bc:	66 23       	and	r22, r22
    e3be:	11 f4       	brne	.+4      	; 0xe3c4 <__fp_mintl+0x18>
    e3c0:	99 27       	eor	r25, r25
    e3c2:	0d c0       	rjmp	.+26     	; 0xe3de <__fp_mintl+0x32>
    e3c4:	90 51       	subi	r25, 0x10	; 16
    e3c6:	86 2b       	or	r24, r22
    e3c8:	70 e0       	ldi	r23, 0x00	; 0
    e3ca:	60 e0       	ldi	r22, 0x00	; 0
    e3cc:	2a f0       	brmi	.+10     	; 0xe3d8 <__fp_mintl+0x2c>
    e3ce:	9a 95       	dec	r25
    e3d0:	66 0f       	add	r22, r22
    e3d2:	77 1f       	adc	r23, r23
    e3d4:	88 1f       	adc	r24, r24
    e3d6:	da f7       	brpl	.-10     	; 0xe3ce <__fp_mintl+0x22>
    e3d8:	88 0f       	add	r24, r24
    e3da:	96 95       	lsr	r25
    e3dc:	87 95       	ror	r24
    e3de:	97 f9       	bld	r25, 7
    e3e0:	08 95       	ret

0000e3e2 <__fp_mpack>:
    e3e2:	9f 3f       	cpi	r25, 0xFF	; 255
    e3e4:	31 f0       	breq	.+12     	; 0xe3f2 <__fp_mpack_finite+0xc>

0000e3e6 <__fp_mpack_finite>:
    e3e6:	91 50       	subi	r25, 0x01	; 1
    e3e8:	20 f4       	brcc	.+8      	; 0xe3f2 <__fp_mpack_finite+0xc>
    e3ea:	87 95       	ror	r24
    e3ec:	77 95       	ror	r23
    e3ee:	67 95       	ror	r22
    e3f0:	b7 95       	ror	r27
    e3f2:	88 0f       	add	r24, r24
    e3f4:	91 1d       	adc	r25, r1
    e3f6:	96 95       	lsr	r25
    e3f8:	87 95       	ror	r24
    e3fa:	97 f9       	bld	r25, 7
    e3fc:	08 95       	ret

0000e3fe <__fp_nan>:
    e3fe:	9f ef       	ldi	r25, 0xFF	; 255
    e400:	80 ec       	ldi	r24, 0xC0	; 192
    e402:	08 95       	ret

0000e404 <__fp_pscA>:
    e404:	00 24       	eor	r0, r0
    e406:	0a 94       	dec	r0
    e408:	16 16       	cp	r1, r22
    e40a:	17 06       	cpc	r1, r23
    e40c:	18 06       	cpc	r1, r24
    e40e:	09 06       	cpc	r0, r25
    e410:	08 95       	ret

0000e412 <__fp_pscB>:
    e412:	00 24       	eor	r0, r0
    e414:	0a 94       	dec	r0
    e416:	12 16       	cp	r1, r18
    e418:	13 06       	cpc	r1, r19
    e41a:	14 06       	cpc	r1, r20
    e41c:	05 06       	cpc	r0, r21
    e41e:	08 95       	ret

0000e420 <__fp_round>:
    e420:	09 2e       	mov	r0, r25
    e422:	03 94       	inc	r0
    e424:	00 0c       	add	r0, r0
    e426:	11 f4       	brne	.+4      	; 0xe42c <__fp_round+0xc>
    e428:	88 23       	and	r24, r24
    e42a:	52 f0       	brmi	.+20     	; 0xe440 <__fp_round+0x20>
    e42c:	bb 0f       	add	r27, r27
    e42e:	40 f4       	brcc	.+16     	; 0xe440 <__fp_round+0x20>
    e430:	bf 2b       	or	r27, r31
    e432:	11 f4       	brne	.+4      	; 0xe438 <__fp_round+0x18>
    e434:	60 ff       	sbrs	r22, 0
    e436:	04 c0       	rjmp	.+8      	; 0xe440 <__fp_round+0x20>
    e438:	6f 5f       	subi	r22, 0xFF	; 255
    e43a:	7f 4f       	sbci	r23, 0xFF	; 255
    e43c:	8f 4f       	sbci	r24, 0xFF	; 255
    e43e:	9f 4f       	sbci	r25, 0xFF	; 255
    e440:	08 95       	ret

0000e442 <__fp_split3>:
    e442:	57 fd       	sbrc	r21, 7
    e444:	90 58       	subi	r25, 0x80	; 128
    e446:	44 0f       	add	r20, r20
    e448:	55 1f       	adc	r21, r21
    e44a:	59 f0       	breq	.+22     	; 0xe462 <__fp_splitA+0x10>
    e44c:	5f 3f       	cpi	r21, 0xFF	; 255
    e44e:	71 f0       	breq	.+28     	; 0xe46c <__fp_splitA+0x1a>
    e450:	47 95       	ror	r20

0000e452 <__fp_splitA>:
    e452:	88 0f       	add	r24, r24
    e454:	97 fb       	bst	r25, 7
    e456:	99 1f       	adc	r25, r25
    e458:	61 f0       	breq	.+24     	; 0xe472 <__fp_splitA+0x20>
    e45a:	9f 3f       	cpi	r25, 0xFF	; 255
    e45c:	79 f0       	breq	.+30     	; 0xe47c <__fp_splitA+0x2a>
    e45e:	87 95       	ror	r24
    e460:	08 95       	ret
    e462:	12 16       	cp	r1, r18
    e464:	13 06       	cpc	r1, r19
    e466:	14 06       	cpc	r1, r20
    e468:	55 1f       	adc	r21, r21
    e46a:	f2 cf       	rjmp	.-28     	; 0xe450 <__fp_split3+0xe>
    e46c:	46 95       	lsr	r20
    e46e:	f1 df       	rcall	.-30     	; 0xe452 <__fp_splitA>
    e470:	08 c0       	rjmp	.+16     	; 0xe482 <__fp_splitA+0x30>
    e472:	16 16       	cp	r1, r22
    e474:	17 06       	cpc	r1, r23
    e476:	18 06       	cpc	r1, r24
    e478:	99 1f       	adc	r25, r25
    e47a:	f1 cf       	rjmp	.-30     	; 0xe45e <__fp_splitA+0xc>
    e47c:	86 95       	lsr	r24
    e47e:	71 05       	cpc	r23, r1
    e480:	61 05       	cpc	r22, r1
    e482:	08 94       	sec
    e484:	08 95       	ret

0000e486 <__fp_trunc>:
    e486:	0e 94 29 72 	call	0xe452	; 0xe452 <__fp_splitA>
    e48a:	a0 f0       	brcs	.+40     	; 0xe4b4 <__fp_trunc+0x2e>
    e48c:	be e7       	ldi	r27, 0x7E	; 126
    e48e:	b9 17       	cp	r27, r25
    e490:	88 f4       	brcc	.+34     	; 0xe4b4 <__fp_trunc+0x2e>
    e492:	bb 27       	eor	r27, r27
    e494:	9f 38       	cpi	r25, 0x8F	; 143
    e496:	60 f4       	brcc	.+24     	; 0xe4b0 <__fp_trunc+0x2a>
    e498:	16 16       	cp	r1, r22
    e49a:	b1 1d       	adc	r27, r1
    e49c:	67 2f       	mov	r22, r23
    e49e:	78 2f       	mov	r23, r24
    e4a0:	88 27       	eor	r24, r24
    e4a2:	98 5f       	subi	r25, 0xF8	; 248
    e4a4:	f7 cf       	rjmp	.-18     	; 0xe494 <__fp_trunc+0xe>
    e4a6:	86 95       	lsr	r24
    e4a8:	77 95       	ror	r23
    e4aa:	67 95       	ror	r22
    e4ac:	b1 1d       	adc	r27, r1
    e4ae:	93 95       	inc	r25
    e4b0:	96 39       	cpi	r25, 0x96	; 150
    e4b2:	c8 f3       	brcs	.-14     	; 0xe4a6 <__fp_trunc+0x20>
    e4b4:	08 95       	ret

0000e4b6 <__fp_zero>:
    e4b6:	e8 94       	clt

0000e4b8 <__fp_szero>:
    e4b8:	bb 27       	eor	r27, r27
    e4ba:	66 27       	eor	r22, r22
    e4bc:	77 27       	eor	r23, r23
    e4be:	cb 01       	movw	r24, r22
    e4c0:	97 f9       	bld	r25, 7
    e4c2:	08 95       	ret

0000e4c4 <__gesf2>:
    e4c4:	0e 94 ac 71 	call	0xe358	; 0xe358 <__fp_cmp>
    e4c8:	08 f4       	brcc	.+2      	; 0xe4cc <__gesf2+0x8>
    e4ca:	8f ef       	ldi	r24, 0xFF	; 255
    e4cc:	08 95       	ret

0000e4ce <__mulsf3>:
    e4ce:	0e 94 7a 72 	call	0xe4f4	; 0xe4f4 <__mulsf3x>
    e4d2:	0c 94 10 72 	jmp	0xe420	; 0xe420 <__fp_round>
    e4d6:	0e 94 02 72 	call	0xe404	; 0xe404 <__fp_pscA>
    e4da:	38 f0       	brcs	.+14     	; 0xe4ea <__mulsf3+0x1c>
    e4dc:	0e 94 09 72 	call	0xe412	; 0xe412 <__fp_pscB>
    e4e0:	20 f0       	brcs	.+8      	; 0xe4ea <__mulsf3+0x1c>
    e4e2:	95 23       	and	r25, r21
    e4e4:	11 f0       	breq	.+4      	; 0xe4ea <__mulsf3+0x1c>
    e4e6:	0c 94 d0 71 	jmp	0xe3a0	; 0xe3a0 <__fp_inf>
    e4ea:	0c 94 ff 71 	jmp	0xe3fe	; 0xe3fe <__fp_nan>
    e4ee:	11 24       	eor	r1, r1
    e4f0:	0c 94 5c 72 	jmp	0xe4b8	; 0xe4b8 <__fp_szero>

0000e4f4 <__mulsf3x>:
    e4f4:	0e 94 21 72 	call	0xe442	; 0xe442 <__fp_split3>
    e4f8:	70 f3       	brcs	.-36     	; 0xe4d6 <__mulsf3+0x8>

0000e4fa <__mulsf3_pse>:
    e4fa:	95 9f       	mul	r25, r21
    e4fc:	c1 f3       	breq	.-16     	; 0xe4ee <__mulsf3+0x20>
    e4fe:	95 0f       	add	r25, r21
    e500:	50 e0       	ldi	r21, 0x00	; 0
    e502:	55 1f       	adc	r21, r21
    e504:	62 9f       	mul	r22, r18
    e506:	f0 01       	movw	r30, r0
    e508:	72 9f       	mul	r23, r18
    e50a:	bb 27       	eor	r27, r27
    e50c:	f0 0d       	add	r31, r0
    e50e:	b1 1d       	adc	r27, r1
    e510:	63 9f       	mul	r22, r19
    e512:	aa 27       	eor	r26, r26
    e514:	f0 0d       	add	r31, r0
    e516:	b1 1d       	adc	r27, r1
    e518:	aa 1f       	adc	r26, r26
    e51a:	64 9f       	mul	r22, r20
    e51c:	66 27       	eor	r22, r22
    e51e:	b0 0d       	add	r27, r0
    e520:	a1 1d       	adc	r26, r1
    e522:	66 1f       	adc	r22, r22
    e524:	82 9f       	mul	r24, r18
    e526:	22 27       	eor	r18, r18
    e528:	b0 0d       	add	r27, r0
    e52a:	a1 1d       	adc	r26, r1
    e52c:	62 1f       	adc	r22, r18
    e52e:	73 9f       	mul	r23, r19
    e530:	b0 0d       	add	r27, r0
    e532:	a1 1d       	adc	r26, r1
    e534:	62 1f       	adc	r22, r18
    e536:	83 9f       	mul	r24, r19
    e538:	a0 0d       	add	r26, r0
    e53a:	61 1d       	adc	r22, r1
    e53c:	22 1f       	adc	r18, r18
    e53e:	74 9f       	mul	r23, r20
    e540:	33 27       	eor	r19, r19
    e542:	a0 0d       	add	r26, r0
    e544:	61 1d       	adc	r22, r1
    e546:	23 1f       	adc	r18, r19
    e548:	84 9f       	mul	r24, r20
    e54a:	60 0d       	add	r22, r0
    e54c:	21 1d       	adc	r18, r1
    e54e:	82 2f       	mov	r24, r18
    e550:	76 2f       	mov	r23, r22
    e552:	6a 2f       	mov	r22, r26
    e554:	11 24       	eor	r1, r1
    e556:	9f 57       	subi	r25, 0x7F	; 127
    e558:	50 40       	sbci	r21, 0x00	; 0
    e55a:	9a f0       	brmi	.+38     	; 0xe582 <__mulsf3_pse+0x88>
    e55c:	f1 f0       	breq	.+60     	; 0xe59a <__mulsf3_pse+0xa0>
    e55e:	88 23       	and	r24, r24
    e560:	4a f0       	brmi	.+18     	; 0xe574 <__mulsf3_pse+0x7a>
    e562:	ee 0f       	add	r30, r30
    e564:	ff 1f       	adc	r31, r31
    e566:	bb 1f       	adc	r27, r27
    e568:	66 1f       	adc	r22, r22
    e56a:	77 1f       	adc	r23, r23
    e56c:	88 1f       	adc	r24, r24
    e56e:	91 50       	subi	r25, 0x01	; 1
    e570:	50 40       	sbci	r21, 0x00	; 0
    e572:	a9 f7       	brne	.-22     	; 0xe55e <__mulsf3_pse+0x64>
    e574:	9e 3f       	cpi	r25, 0xFE	; 254
    e576:	51 05       	cpc	r21, r1
    e578:	80 f0       	brcs	.+32     	; 0xe59a <__mulsf3_pse+0xa0>
    e57a:	0c 94 d0 71 	jmp	0xe3a0	; 0xe3a0 <__fp_inf>
    e57e:	0c 94 5c 72 	jmp	0xe4b8	; 0xe4b8 <__fp_szero>
    e582:	5f 3f       	cpi	r21, 0xFF	; 255
    e584:	e4 f3       	brlt	.-8      	; 0xe57e <__mulsf3_pse+0x84>
    e586:	98 3e       	cpi	r25, 0xE8	; 232
    e588:	d4 f3       	brlt	.-12     	; 0xe57e <__mulsf3_pse+0x84>
    e58a:	86 95       	lsr	r24
    e58c:	77 95       	ror	r23
    e58e:	67 95       	ror	r22
    e590:	b7 95       	ror	r27
    e592:	f7 95       	ror	r31
    e594:	e7 95       	ror	r30
    e596:	9f 5f       	subi	r25, 0xFF	; 255
    e598:	c1 f7       	brne	.-16     	; 0xe58a <__mulsf3_pse+0x90>
    e59a:	fe 2b       	or	r31, r30
    e59c:	88 0f       	add	r24, r24
    e59e:	91 1d       	adc	r25, r1
    e5a0:	96 95       	lsr	r25
    e5a2:	87 95       	ror	r24
    e5a4:	97 f9       	bld	r25, 7
    e5a6:	08 95       	ret

0000e5a8 <__mulsi3>:
    e5a8:	db 01       	movw	r26, r22
    e5aa:	8f 93       	push	r24
    e5ac:	9f 93       	push	r25
    e5ae:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <__muluhisi3>
    e5b2:	bf 91       	pop	r27
    e5b4:	af 91       	pop	r26
    e5b6:	a2 9f       	mul	r26, r18
    e5b8:	80 0d       	add	r24, r0
    e5ba:	91 1d       	adc	r25, r1
    e5bc:	a3 9f       	mul	r26, r19
    e5be:	90 0d       	add	r25, r0
    e5c0:	b2 9f       	mul	r27, r18
    e5c2:	90 0d       	add	r25, r0
    e5c4:	11 24       	eor	r1, r1
    e5c6:	08 95       	ret

0000e5c8 <__udivmodhi4>:
    e5c8:	aa 1b       	sub	r26, r26
    e5ca:	bb 1b       	sub	r27, r27
    e5cc:	51 e1       	ldi	r21, 0x11	; 17
    e5ce:	07 c0       	rjmp	.+14     	; 0xe5de <__udivmodhi4_ep>

0000e5d0 <__udivmodhi4_loop>:
    e5d0:	aa 1f       	adc	r26, r26
    e5d2:	bb 1f       	adc	r27, r27
    e5d4:	a6 17       	cp	r26, r22
    e5d6:	b7 07       	cpc	r27, r23
    e5d8:	10 f0       	brcs	.+4      	; 0xe5de <__udivmodhi4_ep>
    e5da:	a6 1b       	sub	r26, r22
    e5dc:	b7 0b       	sbc	r27, r23

0000e5de <__udivmodhi4_ep>:
    e5de:	88 1f       	adc	r24, r24
    e5e0:	99 1f       	adc	r25, r25
    e5e2:	5a 95       	dec	r21
    e5e4:	a9 f7       	brne	.-22     	; 0xe5d0 <__udivmodhi4_loop>
    e5e6:	80 95       	com	r24
    e5e8:	90 95       	com	r25
    e5ea:	bc 01       	movw	r22, r24
    e5ec:	cd 01       	movw	r24, r26
    e5ee:	08 95       	ret

0000e5f0 <__divmodhi4>:
    e5f0:	97 fb       	bst	r25, 7
    e5f2:	07 2e       	mov	r0, r23
    e5f4:	16 f4       	brtc	.+4      	; 0xe5fa <__divmodhi4+0xa>
    e5f6:	00 94       	com	r0
    e5f8:	07 d0       	rcall	.+14     	; 0xe608 <__divmodhi4_neg1>
    e5fa:	77 fd       	sbrc	r23, 7
    e5fc:	09 d0       	rcall	.+18     	; 0xe610 <__divmodhi4_neg2>
    e5fe:	0e 94 e4 72 	call	0xe5c8	; 0xe5c8 <__udivmodhi4>
    e602:	07 fc       	sbrc	r0, 7
    e604:	05 d0       	rcall	.+10     	; 0xe610 <__divmodhi4_neg2>
    e606:	3e f4       	brtc	.+14     	; 0xe616 <__divmodhi4_exit>

0000e608 <__divmodhi4_neg1>:
    e608:	90 95       	com	r25
    e60a:	81 95       	neg	r24
    e60c:	9f 4f       	sbci	r25, 0xFF	; 255
    e60e:	08 95       	ret

0000e610 <__divmodhi4_neg2>:
    e610:	70 95       	com	r23
    e612:	61 95       	neg	r22
    e614:	7f 4f       	sbci	r23, 0xFF	; 255

0000e616 <__divmodhi4_exit>:
    e616:	08 95       	ret

0000e618 <__udivmodsi4>:
    e618:	a1 e2       	ldi	r26, 0x21	; 33
    e61a:	1a 2e       	mov	r1, r26
    e61c:	aa 1b       	sub	r26, r26
    e61e:	bb 1b       	sub	r27, r27
    e620:	fd 01       	movw	r30, r26
    e622:	0d c0       	rjmp	.+26     	; 0xe63e <__udivmodsi4_ep>

0000e624 <__udivmodsi4_loop>:
    e624:	aa 1f       	adc	r26, r26
    e626:	bb 1f       	adc	r27, r27
    e628:	ee 1f       	adc	r30, r30
    e62a:	ff 1f       	adc	r31, r31
    e62c:	a2 17       	cp	r26, r18
    e62e:	b3 07       	cpc	r27, r19
    e630:	e4 07       	cpc	r30, r20
    e632:	f5 07       	cpc	r31, r21
    e634:	20 f0       	brcs	.+8      	; 0xe63e <__udivmodsi4_ep>
    e636:	a2 1b       	sub	r26, r18
    e638:	b3 0b       	sbc	r27, r19
    e63a:	e4 0b       	sbc	r30, r20
    e63c:	f5 0b       	sbc	r31, r21

0000e63e <__udivmodsi4_ep>:
    e63e:	66 1f       	adc	r22, r22
    e640:	77 1f       	adc	r23, r23
    e642:	88 1f       	adc	r24, r24
    e644:	99 1f       	adc	r25, r25
    e646:	1a 94       	dec	r1
    e648:	69 f7       	brne	.-38     	; 0xe624 <__udivmodsi4_loop>
    e64a:	60 95       	com	r22
    e64c:	70 95       	com	r23
    e64e:	80 95       	com	r24
    e650:	90 95       	com	r25
    e652:	9b 01       	movw	r18, r22
    e654:	ac 01       	movw	r20, r24
    e656:	bd 01       	movw	r22, r26
    e658:	cf 01       	movw	r24, r30
    e65a:	08 95       	ret

0000e65c <__divmodsi4>:
    e65c:	05 2e       	mov	r0, r21
    e65e:	97 fb       	bst	r25, 7
    e660:	1e f4       	brtc	.+6      	; 0xe668 <__divmodsi4+0xc>
    e662:	00 94       	com	r0
    e664:	0e 94 45 73 	call	0xe68a	; 0xe68a <__negsi2>
    e668:	57 fd       	sbrc	r21, 7
    e66a:	07 d0       	rcall	.+14     	; 0xe67a <__divmodsi4_neg2>
    e66c:	0e 94 0c 73 	call	0xe618	; 0xe618 <__udivmodsi4>
    e670:	07 fc       	sbrc	r0, 7
    e672:	03 d0       	rcall	.+6      	; 0xe67a <__divmodsi4_neg2>
    e674:	4e f4       	brtc	.+18     	; 0xe688 <__divmodsi4_exit>
    e676:	0c 94 45 73 	jmp	0xe68a	; 0xe68a <__negsi2>

0000e67a <__divmodsi4_neg2>:
    e67a:	50 95       	com	r21
    e67c:	40 95       	com	r20
    e67e:	30 95       	com	r19
    e680:	21 95       	neg	r18
    e682:	3f 4f       	sbci	r19, 0xFF	; 255
    e684:	4f 4f       	sbci	r20, 0xFF	; 255
    e686:	5f 4f       	sbci	r21, 0xFF	; 255

0000e688 <__divmodsi4_exit>:
    e688:	08 95       	ret

0000e68a <__negsi2>:
    e68a:	90 95       	com	r25
    e68c:	80 95       	com	r24
    e68e:	70 95       	com	r23
    e690:	61 95       	neg	r22
    e692:	7f 4f       	sbci	r23, 0xFF	; 255
    e694:	8f 4f       	sbci	r24, 0xFF	; 255
    e696:	9f 4f       	sbci	r25, 0xFF	; 255
    e698:	08 95       	ret

0000e69a <__tablejump2__>:
    e69a:	ee 0f       	add	r30, r30
    e69c:	ff 1f       	adc	r31, r31
    e69e:	00 24       	eor	r0, r0
    e6a0:	00 1c       	adc	r0, r0
    e6a2:	0b be       	out	0x3b, r0	; 59
    e6a4:	07 90       	elpm	r0, Z+
    e6a6:	f6 91       	elpm	r31, Z
    e6a8:	e0 2d       	mov	r30, r0
    e6aa:	09 94       	ijmp

0000e6ac <__umulhisi3>:
    e6ac:	a2 9f       	mul	r26, r18
    e6ae:	b0 01       	movw	r22, r0
    e6b0:	b3 9f       	mul	r27, r19
    e6b2:	c0 01       	movw	r24, r0
    e6b4:	a3 9f       	mul	r26, r19
    e6b6:	70 0d       	add	r23, r0
    e6b8:	81 1d       	adc	r24, r1
    e6ba:	11 24       	eor	r1, r1
    e6bc:	91 1d       	adc	r25, r1
    e6be:	b2 9f       	mul	r27, r18
    e6c0:	70 0d       	add	r23, r0
    e6c2:	81 1d       	adc	r24, r1
    e6c4:	11 24       	eor	r1, r1
    e6c6:	91 1d       	adc	r25, r1
    e6c8:	08 95       	ret

0000e6ca <__muluhisi3>:
    e6ca:	0e 94 56 73 	call	0xe6ac	; 0xe6ac <__umulhisi3>
    e6ce:	a5 9f       	mul	r26, r21
    e6d0:	90 0d       	add	r25, r0
    e6d2:	b4 9f       	mul	r27, r20
    e6d4:	90 0d       	add	r25, r0
    e6d6:	a4 9f       	mul	r26, r20
    e6d8:	80 0d       	add	r24, r0
    e6da:	91 1d       	adc	r25, r1
    e6dc:	11 24       	eor	r1, r1
    e6de:	08 95       	ret

0000e6e0 <dtostrf>:
    e6e0:	ef 92       	push	r14
    e6e2:	0f 93       	push	r16
    e6e4:	1f 93       	push	r17
    e6e6:	cf 93       	push	r28
    e6e8:	df 93       	push	r29
    e6ea:	e8 01       	movw	r28, r16
    e6ec:	47 fd       	sbrc	r20, 7
    e6ee:	02 c0       	rjmp	.+4      	; 0xe6f4 <dtostrf+0x14>
    e6f0:	34 e0       	ldi	r19, 0x04	; 4
    e6f2:	01 c0       	rjmp	.+2      	; 0xe6f6 <dtostrf+0x16>
    e6f4:	34 e1       	ldi	r19, 0x14	; 20
    e6f6:	04 2e       	mov	r0, r20
    e6f8:	00 0c       	add	r0, r0
    e6fa:	55 0b       	sbc	r21, r21
    e6fc:	57 ff       	sbrs	r21, 7
    e6fe:	03 c0       	rjmp	.+6      	; 0xe706 <dtostrf+0x26>
    e700:	51 95       	neg	r21
    e702:	41 95       	neg	r20
    e704:	51 09       	sbc	r21, r1
    e706:	e3 2e       	mov	r14, r19
    e708:	02 2f       	mov	r16, r18
    e70a:	24 2f       	mov	r18, r20
    e70c:	ae 01       	movw	r20, r28
    e70e:	0e 94 91 77 	call	0xef22	; 0xef22 <dtoa_prf>
    e712:	ce 01       	movw	r24, r28
    e714:	df 91       	pop	r29
    e716:	cf 91       	pop	r28
    e718:	1f 91       	pop	r17
    e71a:	0f 91       	pop	r16
    e71c:	ef 90       	pop	r14
    e71e:	08 95       	ret

0000e720 <malloc>:
    e720:	0f 93       	push	r16
    e722:	1f 93       	push	r17
    e724:	cf 93       	push	r28
    e726:	df 93       	push	r29
    e728:	82 30       	cpi	r24, 0x02	; 2
    e72a:	91 05       	cpc	r25, r1
    e72c:	10 f4       	brcc	.+4      	; 0xe732 <malloc+0x12>
    e72e:	82 e0       	ldi	r24, 0x02	; 2
    e730:	90 e0       	ldi	r25, 0x00	; 0
    e732:	e0 91 9c 4a 	lds	r30, 0x4A9C	; 0x804a9c <__flp>
    e736:	f0 91 9d 4a 	lds	r31, 0x4A9D	; 0x804a9d <__flp+0x1>
    e73a:	20 e0       	ldi	r18, 0x00	; 0
    e73c:	30 e0       	ldi	r19, 0x00	; 0
    e73e:	a0 e0       	ldi	r26, 0x00	; 0
    e740:	b0 e0       	ldi	r27, 0x00	; 0
    e742:	30 97       	sbiw	r30, 0x00	; 0
    e744:	19 f1       	breq	.+70     	; 0xe78c <malloc+0x6c>
    e746:	40 81       	ld	r20, Z
    e748:	51 81       	ldd	r21, Z+1	; 0x01
    e74a:	02 81       	ldd	r16, Z+2	; 0x02
    e74c:	13 81       	ldd	r17, Z+3	; 0x03
    e74e:	48 17       	cp	r20, r24
    e750:	59 07       	cpc	r21, r25
    e752:	c8 f0       	brcs	.+50     	; 0xe786 <malloc+0x66>
    e754:	84 17       	cp	r24, r20
    e756:	95 07       	cpc	r25, r21
    e758:	69 f4       	brne	.+26     	; 0xe774 <malloc+0x54>
    e75a:	10 97       	sbiw	r26, 0x00	; 0
    e75c:	31 f0       	breq	.+12     	; 0xe76a <malloc+0x4a>
    e75e:	12 96       	adiw	r26, 0x02	; 2
    e760:	0c 93       	st	X, r16
    e762:	12 97       	sbiw	r26, 0x02	; 2
    e764:	13 96       	adiw	r26, 0x03	; 3
    e766:	1c 93       	st	X, r17
    e768:	27 c0       	rjmp	.+78     	; 0xe7b8 <malloc+0x98>
    e76a:	00 93 9c 4a 	sts	0x4A9C, r16	; 0x804a9c <__flp>
    e76e:	10 93 9d 4a 	sts	0x4A9D, r17	; 0x804a9d <__flp+0x1>
    e772:	22 c0       	rjmp	.+68     	; 0xe7b8 <malloc+0x98>
    e774:	21 15       	cp	r18, r1
    e776:	31 05       	cpc	r19, r1
    e778:	19 f0       	breq	.+6      	; 0xe780 <malloc+0x60>
    e77a:	42 17       	cp	r20, r18
    e77c:	53 07       	cpc	r21, r19
    e77e:	18 f4       	brcc	.+6      	; 0xe786 <malloc+0x66>
    e780:	9a 01       	movw	r18, r20
    e782:	bd 01       	movw	r22, r26
    e784:	ef 01       	movw	r28, r30
    e786:	df 01       	movw	r26, r30
    e788:	f8 01       	movw	r30, r16
    e78a:	db cf       	rjmp	.-74     	; 0xe742 <malloc+0x22>
    e78c:	21 15       	cp	r18, r1
    e78e:	31 05       	cpc	r19, r1
    e790:	f9 f0       	breq	.+62     	; 0xe7d0 <malloc+0xb0>
    e792:	28 1b       	sub	r18, r24
    e794:	39 0b       	sbc	r19, r25
    e796:	24 30       	cpi	r18, 0x04	; 4
    e798:	31 05       	cpc	r19, r1
    e79a:	80 f4       	brcc	.+32     	; 0xe7bc <malloc+0x9c>
    e79c:	8a 81       	ldd	r24, Y+2	; 0x02
    e79e:	9b 81       	ldd	r25, Y+3	; 0x03
    e7a0:	61 15       	cp	r22, r1
    e7a2:	71 05       	cpc	r23, r1
    e7a4:	21 f0       	breq	.+8      	; 0xe7ae <malloc+0x8e>
    e7a6:	fb 01       	movw	r30, r22
    e7a8:	82 83       	std	Z+2, r24	; 0x02
    e7aa:	93 83       	std	Z+3, r25	; 0x03
    e7ac:	04 c0       	rjmp	.+8      	; 0xe7b6 <malloc+0x96>
    e7ae:	80 93 9c 4a 	sts	0x4A9C, r24	; 0x804a9c <__flp>
    e7b2:	90 93 9d 4a 	sts	0x4A9D, r25	; 0x804a9d <__flp+0x1>
    e7b6:	fe 01       	movw	r30, r28
    e7b8:	32 96       	adiw	r30, 0x02	; 2
    e7ba:	44 c0       	rjmp	.+136    	; 0xe844 <malloc+0x124>
    e7bc:	fe 01       	movw	r30, r28
    e7be:	e2 0f       	add	r30, r18
    e7c0:	f3 1f       	adc	r31, r19
    e7c2:	81 93       	st	Z+, r24
    e7c4:	91 93       	st	Z+, r25
    e7c6:	22 50       	subi	r18, 0x02	; 2
    e7c8:	31 09       	sbc	r19, r1
    e7ca:	28 83       	st	Y, r18
    e7cc:	39 83       	std	Y+1, r19	; 0x01
    e7ce:	3a c0       	rjmp	.+116    	; 0xe844 <malloc+0x124>
    e7d0:	20 91 9a 4a 	lds	r18, 0x4A9A	; 0x804a9a <__brkval>
    e7d4:	30 91 9b 4a 	lds	r19, 0x4A9B	; 0x804a9b <__brkval+0x1>
    e7d8:	23 2b       	or	r18, r19
    e7da:	41 f4       	brne	.+16     	; 0xe7ec <malloc+0xcc>
    e7dc:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    e7e0:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    e7e4:	20 93 9a 4a 	sts	0x4A9A, r18	; 0x804a9a <__brkval>
    e7e8:	30 93 9b 4a 	sts	0x4A9B, r19	; 0x804a9b <__brkval+0x1>
    e7ec:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__data_start>
    e7f0:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__data_start+0x1>
    e7f4:	21 15       	cp	r18, r1
    e7f6:	31 05       	cpc	r19, r1
    e7f8:	41 f4       	brne	.+16     	; 0xe80a <malloc+0xea>
    e7fa:	2d b7       	in	r18, 0x3d	; 61
    e7fc:	3e b7       	in	r19, 0x3e	; 62
    e7fe:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    e802:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    e806:	24 1b       	sub	r18, r20
    e808:	35 0b       	sbc	r19, r21
    e80a:	e0 91 9a 4a 	lds	r30, 0x4A9A	; 0x804a9a <__brkval>
    e80e:	f0 91 9b 4a 	lds	r31, 0x4A9B	; 0x804a9b <__brkval+0x1>
    e812:	e2 17       	cp	r30, r18
    e814:	f3 07       	cpc	r31, r19
    e816:	a0 f4       	brcc	.+40     	; 0xe840 <malloc+0x120>
    e818:	2e 1b       	sub	r18, r30
    e81a:	3f 0b       	sbc	r19, r31
    e81c:	28 17       	cp	r18, r24
    e81e:	39 07       	cpc	r19, r25
    e820:	78 f0       	brcs	.+30     	; 0xe840 <malloc+0x120>
    e822:	ac 01       	movw	r20, r24
    e824:	4e 5f       	subi	r20, 0xFE	; 254
    e826:	5f 4f       	sbci	r21, 0xFF	; 255
    e828:	24 17       	cp	r18, r20
    e82a:	35 07       	cpc	r19, r21
    e82c:	48 f0       	brcs	.+18     	; 0xe840 <malloc+0x120>
    e82e:	4e 0f       	add	r20, r30
    e830:	5f 1f       	adc	r21, r31
    e832:	40 93 9a 4a 	sts	0x4A9A, r20	; 0x804a9a <__brkval>
    e836:	50 93 9b 4a 	sts	0x4A9B, r21	; 0x804a9b <__brkval+0x1>
    e83a:	81 93       	st	Z+, r24
    e83c:	91 93       	st	Z+, r25
    e83e:	02 c0       	rjmp	.+4      	; 0xe844 <malloc+0x124>
    e840:	e0 e0       	ldi	r30, 0x00	; 0
    e842:	f0 e0       	ldi	r31, 0x00	; 0
    e844:	cf 01       	movw	r24, r30
    e846:	df 91       	pop	r29
    e848:	cf 91       	pop	r28
    e84a:	1f 91       	pop	r17
    e84c:	0f 91       	pop	r16
    e84e:	08 95       	ret

0000e850 <free>:
    e850:	cf 93       	push	r28
    e852:	df 93       	push	r29
    e854:	00 97       	sbiw	r24, 0x00	; 0
    e856:	09 f4       	brne	.+2      	; 0xe85a <free+0xa>
    e858:	81 c0       	rjmp	.+258    	; 0xe95c <free+0x10c>
    e85a:	fc 01       	movw	r30, r24
    e85c:	32 97       	sbiw	r30, 0x02	; 2
    e85e:	12 82       	std	Z+2, r1	; 0x02
    e860:	13 82       	std	Z+3, r1	; 0x03
    e862:	a0 91 9c 4a 	lds	r26, 0x4A9C	; 0x804a9c <__flp>
    e866:	b0 91 9d 4a 	lds	r27, 0x4A9D	; 0x804a9d <__flp+0x1>
    e86a:	10 97       	sbiw	r26, 0x00	; 0
    e86c:	81 f4       	brne	.+32     	; 0xe88e <free+0x3e>
    e86e:	20 81       	ld	r18, Z
    e870:	31 81       	ldd	r19, Z+1	; 0x01
    e872:	82 0f       	add	r24, r18
    e874:	93 1f       	adc	r25, r19
    e876:	20 91 9a 4a 	lds	r18, 0x4A9A	; 0x804a9a <__brkval>
    e87a:	30 91 9b 4a 	lds	r19, 0x4A9B	; 0x804a9b <__brkval+0x1>
    e87e:	28 17       	cp	r18, r24
    e880:	39 07       	cpc	r19, r25
    e882:	51 f5       	brne	.+84     	; 0xe8d8 <free+0x88>
    e884:	e0 93 9a 4a 	sts	0x4A9A, r30	; 0x804a9a <__brkval>
    e888:	f0 93 9b 4a 	sts	0x4A9B, r31	; 0x804a9b <__brkval+0x1>
    e88c:	67 c0       	rjmp	.+206    	; 0xe95c <free+0x10c>
    e88e:	ed 01       	movw	r28, r26
    e890:	20 e0       	ldi	r18, 0x00	; 0
    e892:	30 e0       	ldi	r19, 0x00	; 0
    e894:	ce 17       	cp	r28, r30
    e896:	df 07       	cpc	r29, r31
    e898:	40 f4       	brcc	.+16     	; 0xe8aa <free+0x5a>
    e89a:	4a 81       	ldd	r20, Y+2	; 0x02
    e89c:	5b 81       	ldd	r21, Y+3	; 0x03
    e89e:	9e 01       	movw	r18, r28
    e8a0:	41 15       	cp	r20, r1
    e8a2:	51 05       	cpc	r21, r1
    e8a4:	f1 f0       	breq	.+60     	; 0xe8e2 <free+0x92>
    e8a6:	ea 01       	movw	r28, r20
    e8a8:	f5 cf       	rjmp	.-22     	; 0xe894 <free+0x44>
    e8aa:	c2 83       	std	Z+2, r28	; 0x02
    e8ac:	d3 83       	std	Z+3, r29	; 0x03
    e8ae:	40 81       	ld	r20, Z
    e8b0:	51 81       	ldd	r21, Z+1	; 0x01
    e8b2:	84 0f       	add	r24, r20
    e8b4:	95 1f       	adc	r25, r21
    e8b6:	c8 17       	cp	r28, r24
    e8b8:	d9 07       	cpc	r29, r25
    e8ba:	59 f4       	brne	.+22     	; 0xe8d2 <free+0x82>
    e8bc:	88 81       	ld	r24, Y
    e8be:	99 81       	ldd	r25, Y+1	; 0x01
    e8c0:	84 0f       	add	r24, r20
    e8c2:	95 1f       	adc	r25, r21
    e8c4:	02 96       	adiw	r24, 0x02	; 2
    e8c6:	80 83       	st	Z, r24
    e8c8:	91 83       	std	Z+1, r25	; 0x01
    e8ca:	8a 81       	ldd	r24, Y+2	; 0x02
    e8cc:	9b 81       	ldd	r25, Y+3	; 0x03
    e8ce:	82 83       	std	Z+2, r24	; 0x02
    e8d0:	93 83       	std	Z+3, r25	; 0x03
    e8d2:	21 15       	cp	r18, r1
    e8d4:	31 05       	cpc	r19, r1
    e8d6:	29 f4       	brne	.+10     	; 0xe8e2 <free+0x92>
    e8d8:	e0 93 9c 4a 	sts	0x4A9C, r30	; 0x804a9c <__flp>
    e8dc:	f0 93 9d 4a 	sts	0x4A9D, r31	; 0x804a9d <__flp+0x1>
    e8e0:	3d c0       	rjmp	.+122    	; 0xe95c <free+0x10c>
    e8e2:	e9 01       	movw	r28, r18
    e8e4:	ea 83       	std	Y+2, r30	; 0x02
    e8e6:	fb 83       	std	Y+3, r31	; 0x03
    e8e8:	49 91       	ld	r20, Y+
    e8ea:	59 91       	ld	r21, Y+
    e8ec:	c4 0f       	add	r28, r20
    e8ee:	d5 1f       	adc	r29, r21
    e8f0:	ec 17       	cp	r30, r28
    e8f2:	fd 07       	cpc	r31, r29
    e8f4:	61 f4       	brne	.+24     	; 0xe90e <free+0xbe>
    e8f6:	80 81       	ld	r24, Z
    e8f8:	91 81       	ldd	r25, Z+1	; 0x01
    e8fa:	84 0f       	add	r24, r20
    e8fc:	95 1f       	adc	r25, r21
    e8fe:	02 96       	adiw	r24, 0x02	; 2
    e900:	e9 01       	movw	r28, r18
    e902:	88 83       	st	Y, r24
    e904:	99 83       	std	Y+1, r25	; 0x01
    e906:	82 81       	ldd	r24, Z+2	; 0x02
    e908:	93 81       	ldd	r25, Z+3	; 0x03
    e90a:	8a 83       	std	Y+2, r24	; 0x02
    e90c:	9b 83       	std	Y+3, r25	; 0x03
    e90e:	e0 e0       	ldi	r30, 0x00	; 0
    e910:	f0 e0       	ldi	r31, 0x00	; 0
    e912:	12 96       	adiw	r26, 0x02	; 2
    e914:	8d 91       	ld	r24, X+
    e916:	9c 91       	ld	r25, X
    e918:	13 97       	sbiw	r26, 0x03	; 3
    e91a:	00 97       	sbiw	r24, 0x00	; 0
    e91c:	19 f0       	breq	.+6      	; 0xe924 <free+0xd4>
    e91e:	fd 01       	movw	r30, r26
    e920:	dc 01       	movw	r26, r24
    e922:	f7 cf       	rjmp	.-18     	; 0xe912 <free+0xc2>
    e924:	8d 91       	ld	r24, X+
    e926:	9c 91       	ld	r25, X
    e928:	11 97       	sbiw	r26, 0x01	; 1
    e92a:	9d 01       	movw	r18, r26
    e92c:	2e 5f       	subi	r18, 0xFE	; 254
    e92e:	3f 4f       	sbci	r19, 0xFF	; 255
    e930:	82 0f       	add	r24, r18
    e932:	93 1f       	adc	r25, r19
    e934:	20 91 9a 4a 	lds	r18, 0x4A9A	; 0x804a9a <__brkval>
    e938:	30 91 9b 4a 	lds	r19, 0x4A9B	; 0x804a9b <__brkval+0x1>
    e93c:	28 17       	cp	r18, r24
    e93e:	39 07       	cpc	r19, r25
    e940:	69 f4       	brne	.+26     	; 0xe95c <free+0x10c>
    e942:	30 97       	sbiw	r30, 0x00	; 0
    e944:	29 f4       	brne	.+10     	; 0xe950 <free+0x100>
    e946:	10 92 9c 4a 	sts	0x4A9C, r1	; 0x804a9c <__flp>
    e94a:	10 92 9d 4a 	sts	0x4A9D, r1	; 0x804a9d <__flp+0x1>
    e94e:	02 c0       	rjmp	.+4      	; 0xe954 <free+0x104>
    e950:	12 82       	std	Z+2, r1	; 0x02
    e952:	13 82       	std	Z+3, r1	; 0x03
    e954:	a0 93 9a 4a 	sts	0x4A9A, r26	; 0x804a9a <__brkval>
    e958:	b0 93 9b 4a 	sts	0x4A9B, r27	; 0x804a9b <__brkval+0x1>
    e95c:	df 91       	pop	r29
    e95e:	cf 91       	pop	r28
    e960:	08 95       	ret

0000e962 <atof>:
    e962:	66 27       	eor	r22, r22
    e964:	77 27       	eor	r23, r23
    e966:	0c 94 02 79 	jmp	0xf204	; 0xf204 <strtod>

0000e96a <atoi>:
    e96a:	fc 01       	movw	r30, r24
    e96c:	88 27       	eor	r24, r24
    e96e:	99 27       	eor	r25, r25
    e970:	e8 94       	clt
    e972:	21 91       	ld	r18, Z+
    e974:	20 32       	cpi	r18, 0x20	; 32
    e976:	e9 f3       	breq	.-6      	; 0xe972 <atoi+0x8>
    e978:	29 30       	cpi	r18, 0x09	; 9
    e97a:	10 f0       	brcs	.+4      	; 0xe980 <atoi+0x16>
    e97c:	2e 30       	cpi	r18, 0x0E	; 14
    e97e:	c8 f3       	brcs	.-14     	; 0xe972 <atoi+0x8>
    e980:	2b 32       	cpi	r18, 0x2B	; 43
    e982:	41 f0       	breq	.+16     	; 0xe994 <atoi+0x2a>
    e984:	2d 32       	cpi	r18, 0x2D	; 45
    e986:	39 f4       	brne	.+14     	; 0xe996 <atoi+0x2c>
    e988:	68 94       	set
    e98a:	04 c0       	rjmp	.+8      	; 0xe994 <atoi+0x2a>
    e98c:	0e 94 5c 75 	call	0xeab8	; 0xeab8 <__mulhi_const_10>
    e990:	82 0f       	add	r24, r18
    e992:	91 1d       	adc	r25, r1
    e994:	21 91       	ld	r18, Z+
    e996:	20 53       	subi	r18, 0x30	; 48
    e998:	2a 30       	cpi	r18, 0x0A	; 10
    e99a:	c0 f3       	brcs	.-16     	; 0xe98c <atoi+0x22>
    e99c:	1e f4       	brtc	.+6      	; 0xe9a4 <atoi+0x3a>
    e99e:	90 95       	com	r25
    e9a0:	81 95       	neg	r24
    e9a2:	9f 4f       	sbci	r25, 0xFF	; 255
    e9a4:	08 95       	ret

0000e9a6 <atol>:
    e9a6:	1f 93       	push	r17
    e9a8:	fc 01       	movw	r30, r24
    e9aa:	99 27       	eor	r25, r25
    e9ac:	88 27       	eor	r24, r24
    e9ae:	bc 01       	movw	r22, r24
    e9b0:	e8 94       	clt
    e9b2:	11 91       	ld	r17, Z+
    e9b4:	10 32       	cpi	r17, 0x20	; 32
    e9b6:	e9 f3       	breq	.-6      	; 0xe9b2 <atol+0xc>
    e9b8:	19 30       	cpi	r17, 0x09	; 9
    e9ba:	10 f0       	brcs	.+4      	; 0xe9c0 <atol+0x1a>
    e9bc:	1e 30       	cpi	r17, 0x0E	; 14
    e9be:	c8 f3       	brcs	.-14     	; 0xe9b2 <atol+0xc>
    e9c0:	1b 32       	cpi	r17, 0x2B	; 43
    e9c2:	51 f0       	breq	.+20     	; 0xe9d8 <atol+0x32>
    e9c4:	1d 32       	cpi	r17, 0x2D	; 45
    e9c6:	49 f4       	brne	.+18     	; 0xe9da <atol+0x34>
    e9c8:	68 94       	set
    e9ca:	06 c0       	rjmp	.+12     	; 0xe9d8 <atol+0x32>
    e9cc:	0e 94 47 75 	call	0xea8e	; 0xea8e <__mulsi_const_10>
    e9d0:	61 0f       	add	r22, r17
    e9d2:	71 1d       	adc	r23, r1
    e9d4:	81 1d       	adc	r24, r1
    e9d6:	91 1d       	adc	r25, r1
    e9d8:	11 91       	ld	r17, Z+
    e9da:	10 53       	subi	r17, 0x30	; 48
    e9dc:	1a 30       	cpi	r17, 0x0A	; 10
    e9de:	b0 f3       	brcs	.-20     	; 0xe9cc <atol+0x26>
    e9e0:	3e f4       	brtc	.+14     	; 0xe9f0 <atol+0x4a>
    e9e2:	90 95       	com	r25
    e9e4:	80 95       	com	r24
    e9e6:	70 95       	com	r23
    e9e8:	61 95       	neg	r22
    e9ea:	7f 4f       	sbci	r23, 0xFF	; 255
    e9ec:	8f 4f       	sbci	r24, 0xFF	; 255
    e9ee:	9f 4f       	sbci	r25, 0xFF	; 255
    e9f0:	1f 91       	pop	r17
    e9f2:	08 95       	ret

0000e9f4 <toupper>:
    e9f4:	91 11       	cpse	r25, r1
    e9f6:	08 95       	ret
    e9f8:	81 56       	subi	r24, 0x61	; 97
    e9fa:	8a 51       	subi	r24, 0x1A	; 26
    e9fc:	08 f4       	brcc	.+2      	; 0xea00 <toupper+0xc>
    e9fe:	80 52       	subi	r24, 0x20	; 32
    ea00:	85 58       	subi	r24, 0x85	; 133
    ea02:	08 95       	ret

0000ea04 <memset>:
    ea04:	dc 01       	movw	r26, r24
    ea06:	01 c0       	rjmp	.+2      	; 0xea0a <memset+0x6>
    ea08:	6d 93       	st	X+, r22
    ea0a:	41 50       	subi	r20, 0x01	; 1
    ea0c:	50 40       	sbci	r21, 0x00	; 0
    ea0e:	e0 f7       	brcc	.-8      	; 0xea08 <memset+0x4>
    ea10:	08 95       	ret

0000ea12 <strcat>:
    ea12:	fb 01       	movw	r30, r22
    ea14:	dc 01       	movw	r26, r24
    ea16:	0d 90       	ld	r0, X+
    ea18:	00 20       	and	r0, r0
    ea1a:	e9 f7       	brne	.-6      	; 0xea16 <strcat+0x4>
    ea1c:	11 97       	sbiw	r26, 0x01	; 1
    ea1e:	01 90       	ld	r0, Z+
    ea20:	0d 92       	st	X+, r0
    ea22:	00 20       	and	r0, r0
    ea24:	e1 f7       	brne	.-8      	; 0xea1e <strcat+0xc>
    ea26:	08 95       	ret

0000ea28 <strchr>:
    ea28:	fc 01       	movw	r30, r24
    ea2a:	81 91       	ld	r24, Z+
    ea2c:	86 17       	cp	r24, r22
    ea2e:	21 f0       	breq	.+8      	; 0xea38 <strchr+0x10>
    ea30:	88 23       	and	r24, r24
    ea32:	d9 f7       	brne	.-10     	; 0xea2a <strchr+0x2>
    ea34:	99 27       	eor	r25, r25
    ea36:	08 95       	ret
    ea38:	31 97       	sbiw	r30, 0x01	; 1
    ea3a:	cf 01       	movw	r24, r30
    ea3c:	08 95       	ret

0000ea3e <strcmp>:
    ea3e:	fb 01       	movw	r30, r22
    ea40:	dc 01       	movw	r26, r24
    ea42:	8d 91       	ld	r24, X+
    ea44:	01 90       	ld	r0, Z+
    ea46:	80 19       	sub	r24, r0
    ea48:	01 10       	cpse	r0, r1
    ea4a:	d9 f3       	breq	.-10     	; 0xea42 <strcmp+0x4>
    ea4c:	99 0b       	sbc	r25, r25
    ea4e:	08 95       	ret

0000ea50 <strcpy>:
    ea50:	fb 01       	movw	r30, r22
    ea52:	dc 01       	movw	r26, r24
    ea54:	01 90       	ld	r0, Z+
    ea56:	0d 92       	st	X+, r0
    ea58:	00 20       	and	r0, r0
    ea5a:	e1 f7       	brne	.-8      	; 0xea54 <strcpy+0x4>
    ea5c:	08 95       	ret

0000ea5e <strlen>:
    ea5e:	fc 01       	movw	r30, r24
    ea60:	01 90       	ld	r0, Z+
    ea62:	00 20       	and	r0, r0
    ea64:	e9 f7       	brne	.-6      	; 0xea60 <strlen+0x2>
    ea66:	80 95       	com	r24
    ea68:	90 95       	com	r25
    ea6a:	8e 0f       	add	r24, r30
    ea6c:	9f 1f       	adc	r25, r31
    ea6e:	08 95       	ret

0000ea70 <strncpy>:
    ea70:	fb 01       	movw	r30, r22
    ea72:	dc 01       	movw	r26, r24
    ea74:	41 50       	subi	r20, 0x01	; 1
    ea76:	50 40       	sbci	r21, 0x00	; 0
    ea78:	48 f0       	brcs	.+18     	; 0xea8c <strncpy+0x1c>
    ea7a:	01 90       	ld	r0, Z+
    ea7c:	0d 92       	st	X+, r0
    ea7e:	00 20       	and	r0, r0
    ea80:	c9 f7       	brne	.-14     	; 0xea74 <strncpy+0x4>
    ea82:	01 c0       	rjmp	.+2      	; 0xea86 <strncpy+0x16>
    ea84:	1d 92       	st	X+, r1
    ea86:	41 50       	subi	r20, 0x01	; 1
    ea88:	50 40       	sbci	r21, 0x00	; 0
    ea8a:	e0 f7       	brcc	.-8      	; 0xea84 <strncpy+0x14>
    ea8c:	08 95       	ret

0000ea8e <__mulsi_const_10>:
    ea8e:	59 2f       	mov	r21, r25
    ea90:	48 2f       	mov	r20, r24
    ea92:	37 2f       	mov	r19, r23
    ea94:	26 2f       	mov	r18, r22
    ea96:	66 0f       	add	r22, r22
    ea98:	77 1f       	adc	r23, r23
    ea9a:	88 1f       	adc	r24, r24
    ea9c:	99 1f       	adc	r25, r25
    ea9e:	66 0f       	add	r22, r22
    eaa0:	77 1f       	adc	r23, r23
    eaa2:	88 1f       	adc	r24, r24
    eaa4:	99 1f       	adc	r25, r25
    eaa6:	62 0f       	add	r22, r18
    eaa8:	73 1f       	adc	r23, r19
    eaaa:	84 1f       	adc	r24, r20
    eaac:	95 1f       	adc	r25, r21
    eaae:	66 0f       	add	r22, r22
    eab0:	77 1f       	adc	r23, r23
    eab2:	88 1f       	adc	r24, r24
    eab4:	99 1f       	adc	r25, r25
    eab6:	08 95       	ret

0000eab8 <__mulhi_const_10>:
    eab8:	7a e0       	ldi	r23, 0x0A	; 10
    eaba:	97 9f       	mul	r25, r23
    eabc:	90 2d       	mov	r25, r0
    eabe:	87 9f       	mul	r24, r23
    eac0:	80 2d       	mov	r24, r0
    eac2:	91 0d       	add	r25, r1
    eac4:	11 24       	eor	r1, r1
    eac6:	08 95       	ret

0000eac8 <sprintf>:
    eac8:	0f 93       	push	r16
    eaca:	1f 93       	push	r17
    eacc:	cf 93       	push	r28
    eace:	df 93       	push	r29
    ead0:	cd b7       	in	r28, 0x3d	; 61
    ead2:	de b7       	in	r29, 0x3e	; 62
    ead4:	2e 97       	sbiw	r28, 0x0e	; 14
    ead6:	cd bf       	out	0x3d, r28	; 61
    ead8:	de bf       	out	0x3e, r29	; 62
    eada:	0d 89       	ldd	r16, Y+21	; 0x15
    eadc:	1e 89       	ldd	r17, Y+22	; 0x16
    eade:	86 e0       	ldi	r24, 0x06	; 6
    eae0:	8c 83       	std	Y+4, r24	; 0x04
    eae2:	09 83       	std	Y+1, r16	; 0x01
    eae4:	1a 83       	std	Y+2, r17	; 0x02
    eae6:	8f ef       	ldi	r24, 0xFF	; 255
    eae8:	9f e7       	ldi	r25, 0x7F	; 127
    eaea:	8d 83       	std	Y+5, r24	; 0x05
    eaec:	9e 83       	std	Y+6, r25	; 0x06
    eaee:	ae 01       	movw	r20, r28
    eaf0:	47 5e       	subi	r20, 0xE7	; 231
    eaf2:	5f 4f       	sbci	r21, 0xFF	; 255
    eaf4:	6f 89       	ldd	r22, Y+23	; 0x17
    eaf6:	78 8d       	ldd	r23, Y+24	; 0x18
    eaf8:	ce 01       	movw	r24, r28
    eafa:	01 96       	adiw	r24, 0x01	; 1
    eafc:	0e 94 8d 75 	call	0xeb1a	; 0xeb1a <vfprintf>
    eb00:	ef 81       	ldd	r30, Y+7	; 0x07
    eb02:	f8 85       	ldd	r31, Y+8	; 0x08
    eb04:	e0 0f       	add	r30, r16
    eb06:	f1 1f       	adc	r31, r17
    eb08:	10 82       	st	Z, r1
    eb0a:	2e 96       	adiw	r28, 0x0e	; 14
    eb0c:	cd bf       	out	0x3d, r28	; 61
    eb0e:	de bf       	out	0x3e, r29	; 62
    eb10:	df 91       	pop	r29
    eb12:	cf 91       	pop	r28
    eb14:	1f 91       	pop	r17
    eb16:	0f 91       	pop	r16
    eb18:	08 95       	ret

0000eb1a <vfprintf>:
    eb1a:	2f 92       	push	r2
    eb1c:	3f 92       	push	r3
    eb1e:	4f 92       	push	r4
    eb20:	5f 92       	push	r5
    eb22:	6f 92       	push	r6
    eb24:	7f 92       	push	r7
    eb26:	8f 92       	push	r8
    eb28:	9f 92       	push	r9
    eb2a:	af 92       	push	r10
    eb2c:	bf 92       	push	r11
    eb2e:	cf 92       	push	r12
    eb30:	df 92       	push	r13
    eb32:	ef 92       	push	r14
    eb34:	ff 92       	push	r15
    eb36:	0f 93       	push	r16
    eb38:	1f 93       	push	r17
    eb3a:	cf 93       	push	r28
    eb3c:	df 93       	push	r29
    eb3e:	cd b7       	in	r28, 0x3d	; 61
    eb40:	de b7       	in	r29, 0x3e	; 62
    eb42:	2b 97       	sbiw	r28, 0x0b	; 11
    eb44:	cd bf       	out	0x3d, r28	; 61
    eb46:	de bf       	out	0x3e, r29	; 62
    eb48:	6c 01       	movw	r12, r24
    eb4a:	7b 01       	movw	r14, r22
    eb4c:	8a 01       	movw	r16, r20
    eb4e:	fc 01       	movw	r30, r24
    eb50:	16 82       	std	Z+6, r1	; 0x06
    eb52:	17 82       	std	Z+7, r1	; 0x07
    eb54:	83 81       	ldd	r24, Z+3	; 0x03
    eb56:	81 ff       	sbrs	r24, 1
    eb58:	cc c1       	rjmp	.+920    	; 0xeef2 <vfprintf+0x3d8>
    eb5a:	ce 01       	movw	r24, r28
    eb5c:	01 96       	adiw	r24, 0x01	; 1
    eb5e:	3c 01       	movw	r6, r24
    eb60:	f6 01       	movw	r30, r12
    eb62:	93 81       	ldd	r25, Z+3	; 0x03
    eb64:	f7 01       	movw	r30, r14
    eb66:	93 fd       	sbrc	r25, 3
    eb68:	85 91       	lpm	r24, Z+
    eb6a:	93 ff       	sbrs	r25, 3
    eb6c:	81 91       	ld	r24, Z+
    eb6e:	7f 01       	movw	r14, r30
    eb70:	88 23       	and	r24, r24
    eb72:	09 f4       	brne	.+2      	; 0xeb76 <vfprintf+0x5c>
    eb74:	ba c1       	rjmp	.+884    	; 0xeeea <vfprintf+0x3d0>
    eb76:	85 32       	cpi	r24, 0x25	; 37
    eb78:	39 f4       	brne	.+14     	; 0xeb88 <vfprintf+0x6e>
    eb7a:	93 fd       	sbrc	r25, 3
    eb7c:	85 91       	lpm	r24, Z+
    eb7e:	93 ff       	sbrs	r25, 3
    eb80:	81 91       	ld	r24, Z+
    eb82:	7f 01       	movw	r14, r30
    eb84:	85 32       	cpi	r24, 0x25	; 37
    eb86:	29 f4       	brne	.+10     	; 0xeb92 <vfprintf+0x78>
    eb88:	b6 01       	movw	r22, r12
    eb8a:	90 e0       	ldi	r25, 0x00	; 0
    eb8c:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    eb90:	e7 cf       	rjmp	.-50     	; 0xeb60 <vfprintf+0x46>
    eb92:	91 2c       	mov	r9, r1
    eb94:	21 2c       	mov	r2, r1
    eb96:	31 2c       	mov	r3, r1
    eb98:	ff e1       	ldi	r31, 0x1F	; 31
    eb9a:	f3 15       	cp	r31, r3
    eb9c:	d8 f0       	brcs	.+54     	; 0xebd4 <vfprintf+0xba>
    eb9e:	8b 32       	cpi	r24, 0x2B	; 43
    eba0:	79 f0       	breq	.+30     	; 0xebc0 <vfprintf+0xa6>
    eba2:	38 f4       	brcc	.+14     	; 0xebb2 <vfprintf+0x98>
    eba4:	80 32       	cpi	r24, 0x20	; 32
    eba6:	79 f0       	breq	.+30     	; 0xebc6 <vfprintf+0xac>
    eba8:	83 32       	cpi	r24, 0x23	; 35
    ebaa:	a1 f4       	brne	.+40     	; 0xebd4 <vfprintf+0xba>
    ebac:	23 2d       	mov	r18, r3
    ebae:	20 61       	ori	r18, 0x10	; 16
    ebb0:	1d c0       	rjmp	.+58     	; 0xebec <vfprintf+0xd2>
    ebb2:	8d 32       	cpi	r24, 0x2D	; 45
    ebb4:	61 f0       	breq	.+24     	; 0xebce <vfprintf+0xb4>
    ebb6:	80 33       	cpi	r24, 0x30	; 48
    ebb8:	69 f4       	brne	.+26     	; 0xebd4 <vfprintf+0xba>
    ebba:	23 2d       	mov	r18, r3
    ebbc:	21 60       	ori	r18, 0x01	; 1
    ebbe:	16 c0       	rjmp	.+44     	; 0xebec <vfprintf+0xd2>
    ebc0:	83 2d       	mov	r24, r3
    ebc2:	82 60       	ori	r24, 0x02	; 2
    ebc4:	38 2e       	mov	r3, r24
    ebc6:	e3 2d       	mov	r30, r3
    ebc8:	e4 60       	ori	r30, 0x04	; 4
    ebca:	3e 2e       	mov	r3, r30
    ebcc:	2a c0       	rjmp	.+84     	; 0xec22 <vfprintf+0x108>
    ebce:	f3 2d       	mov	r31, r3
    ebd0:	f8 60       	ori	r31, 0x08	; 8
    ebd2:	1d c0       	rjmp	.+58     	; 0xec0e <vfprintf+0xf4>
    ebd4:	37 fc       	sbrc	r3, 7
    ebd6:	2d c0       	rjmp	.+90     	; 0xec32 <vfprintf+0x118>
    ebd8:	20 ed       	ldi	r18, 0xD0	; 208
    ebda:	28 0f       	add	r18, r24
    ebdc:	2a 30       	cpi	r18, 0x0A	; 10
    ebde:	40 f0       	brcs	.+16     	; 0xebf0 <vfprintf+0xd6>
    ebe0:	8e 32       	cpi	r24, 0x2E	; 46
    ebe2:	b9 f4       	brne	.+46     	; 0xec12 <vfprintf+0xf8>
    ebe4:	36 fc       	sbrc	r3, 6
    ebe6:	81 c1       	rjmp	.+770    	; 0xeeea <vfprintf+0x3d0>
    ebe8:	23 2d       	mov	r18, r3
    ebea:	20 64       	ori	r18, 0x40	; 64
    ebec:	32 2e       	mov	r3, r18
    ebee:	19 c0       	rjmp	.+50     	; 0xec22 <vfprintf+0x108>
    ebf0:	36 fe       	sbrs	r3, 6
    ebf2:	06 c0       	rjmp	.+12     	; 0xec00 <vfprintf+0xe6>
    ebf4:	8a e0       	ldi	r24, 0x0A	; 10
    ebf6:	98 9e       	mul	r9, r24
    ebf8:	20 0d       	add	r18, r0
    ebfa:	11 24       	eor	r1, r1
    ebfc:	92 2e       	mov	r9, r18
    ebfe:	11 c0       	rjmp	.+34     	; 0xec22 <vfprintf+0x108>
    ec00:	ea e0       	ldi	r30, 0x0A	; 10
    ec02:	2e 9e       	mul	r2, r30
    ec04:	20 0d       	add	r18, r0
    ec06:	11 24       	eor	r1, r1
    ec08:	22 2e       	mov	r2, r18
    ec0a:	f3 2d       	mov	r31, r3
    ec0c:	f0 62       	ori	r31, 0x20	; 32
    ec0e:	3f 2e       	mov	r3, r31
    ec10:	08 c0       	rjmp	.+16     	; 0xec22 <vfprintf+0x108>
    ec12:	8c 36       	cpi	r24, 0x6C	; 108
    ec14:	21 f4       	brne	.+8      	; 0xec1e <vfprintf+0x104>
    ec16:	83 2d       	mov	r24, r3
    ec18:	80 68       	ori	r24, 0x80	; 128
    ec1a:	38 2e       	mov	r3, r24
    ec1c:	02 c0       	rjmp	.+4      	; 0xec22 <vfprintf+0x108>
    ec1e:	88 36       	cpi	r24, 0x68	; 104
    ec20:	41 f4       	brne	.+16     	; 0xec32 <vfprintf+0x118>
    ec22:	f7 01       	movw	r30, r14
    ec24:	93 fd       	sbrc	r25, 3
    ec26:	85 91       	lpm	r24, Z+
    ec28:	93 ff       	sbrs	r25, 3
    ec2a:	81 91       	ld	r24, Z+
    ec2c:	7f 01       	movw	r14, r30
    ec2e:	81 11       	cpse	r24, r1
    ec30:	b3 cf       	rjmp	.-154    	; 0xeb98 <vfprintf+0x7e>
    ec32:	98 2f       	mov	r25, r24
    ec34:	9f 7d       	andi	r25, 0xDF	; 223
    ec36:	95 54       	subi	r25, 0x45	; 69
    ec38:	93 30       	cpi	r25, 0x03	; 3
    ec3a:	28 f4       	brcc	.+10     	; 0xec46 <vfprintf+0x12c>
    ec3c:	0c 5f       	subi	r16, 0xFC	; 252
    ec3e:	1f 4f       	sbci	r17, 0xFF	; 255
    ec40:	9f e3       	ldi	r25, 0x3F	; 63
    ec42:	99 83       	std	Y+1, r25	; 0x01
    ec44:	0d c0       	rjmp	.+26     	; 0xec60 <vfprintf+0x146>
    ec46:	83 36       	cpi	r24, 0x63	; 99
    ec48:	31 f0       	breq	.+12     	; 0xec56 <vfprintf+0x13c>
    ec4a:	83 37       	cpi	r24, 0x73	; 115
    ec4c:	71 f0       	breq	.+28     	; 0xec6a <vfprintf+0x150>
    ec4e:	83 35       	cpi	r24, 0x53	; 83
    ec50:	09 f0       	breq	.+2      	; 0xec54 <vfprintf+0x13a>
    ec52:	59 c0       	rjmp	.+178    	; 0xed06 <vfprintf+0x1ec>
    ec54:	21 c0       	rjmp	.+66     	; 0xec98 <vfprintf+0x17e>
    ec56:	f8 01       	movw	r30, r16
    ec58:	80 81       	ld	r24, Z
    ec5a:	89 83       	std	Y+1, r24	; 0x01
    ec5c:	0e 5f       	subi	r16, 0xFE	; 254
    ec5e:	1f 4f       	sbci	r17, 0xFF	; 255
    ec60:	88 24       	eor	r8, r8
    ec62:	83 94       	inc	r8
    ec64:	91 2c       	mov	r9, r1
    ec66:	53 01       	movw	r10, r6
    ec68:	13 c0       	rjmp	.+38     	; 0xec90 <vfprintf+0x176>
    ec6a:	28 01       	movw	r4, r16
    ec6c:	f2 e0       	ldi	r31, 0x02	; 2
    ec6e:	4f 0e       	add	r4, r31
    ec70:	51 1c       	adc	r5, r1
    ec72:	f8 01       	movw	r30, r16
    ec74:	a0 80       	ld	r10, Z
    ec76:	b1 80       	ldd	r11, Z+1	; 0x01
    ec78:	36 fe       	sbrs	r3, 6
    ec7a:	03 c0       	rjmp	.+6      	; 0xec82 <vfprintf+0x168>
    ec7c:	69 2d       	mov	r22, r9
    ec7e:	70 e0       	ldi	r23, 0x00	; 0
    ec80:	02 c0       	rjmp	.+4      	; 0xec86 <vfprintf+0x16c>
    ec82:	6f ef       	ldi	r22, 0xFF	; 255
    ec84:	7f ef       	ldi	r23, 0xFF	; 255
    ec86:	c5 01       	movw	r24, r10
    ec88:	0e 94 62 7b 	call	0xf6c4	; 0xf6c4 <strnlen>
    ec8c:	4c 01       	movw	r8, r24
    ec8e:	82 01       	movw	r16, r4
    ec90:	f3 2d       	mov	r31, r3
    ec92:	ff 77       	andi	r31, 0x7F	; 127
    ec94:	3f 2e       	mov	r3, r31
    ec96:	16 c0       	rjmp	.+44     	; 0xecc4 <vfprintf+0x1aa>
    ec98:	28 01       	movw	r4, r16
    ec9a:	22 e0       	ldi	r18, 0x02	; 2
    ec9c:	42 0e       	add	r4, r18
    ec9e:	51 1c       	adc	r5, r1
    eca0:	f8 01       	movw	r30, r16
    eca2:	a0 80       	ld	r10, Z
    eca4:	b1 80       	ldd	r11, Z+1	; 0x01
    eca6:	36 fe       	sbrs	r3, 6
    eca8:	03 c0       	rjmp	.+6      	; 0xecb0 <vfprintf+0x196>
    ecaa:	69 2d       	mov	r22, r9
    ecac:	70 e0       	ldi	r23, 0x00	; 0
    ecae:	02 c0       	rjmp	.+4      	; 0xecb4 <vfprintf+0x19a>
    ecb0:	6f ef       	ldi	r22, 0xFF	; 255
    ecb2:	7f ef       	ldi	r23, 0xFF	; 255
    ecb4:	c5 01       	movw	r24, r10
    ecb6:	0e 94 57 7b 	call	0xf6ae	; 0xf6ae <strnlen_P>
    ecba:	4c 01       	movw	r8, r24
    ecbc:	f3 2d       	mov	r31, r3
    ecbe:	f0 68       	ori	r31, 0x80	; 128
    ecc0:	3f 2e       	mov	r3, r31
    ecc2:	82 01       	movw	r16, r4
    ecc4:	33 fc       	sbrc	r3, 3
    ecc6:	1b c0       	rjmp	.+54     	; 0xecfe <vfprintf+0x1e4>
    ecc8:	82 2d       	mov	r24, r2
    ecca:	90 e0       	ldi	r25, 0x00	; 0
    eccc:	88 16       	cp	r8, r24
    ecce:	99 06       	cpc	r9, r25
    ecd0:	b0 f4       	brcc	.+44     	; 0xecfe <vfprintf+0x1e4>
    ecd2:	b6 01       	movw	r22, r12
    ecd4:	80 e2       	ldi	r24, 0x20	; 32
    ecd6:	90 e0       	ldi	r25, 0x00	; 0
    ecd8:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    ecdc:	2a 94       	dec	r2
    ecde:	f4 cf       	rjmp	.-24     	; 0xecc8 <vfprintf+0x1ae>
    ece0:	f5 01       	movw	r30, r10
    ece2:	37 fc       	sbrc	r3, 7
    ece4:	85 91       	lpm	r24, Z+
    ece6:	37 fe       	sbrs	r3, 7
    ece8:	81 91       	ld	r24, Z+
    ecea:	5f 01       	movw	r10, r30
    ecec:	b6 01       	movw	r22, r12
    ecee:	90 e0       	ldi	r25, 0x00	; 0
    ecf0:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    ecf4:	21 10       	cpse	r2, r1
    ecf6:	2a 94       	dec	r2
    ecf8:	21 e0       	ldi	r18, 0x01	; 1
    ecfa:	82 1a       	sub	r8, r18
    ecfc:	91 08       	sbc	r9, r1
    ecfe:	81 14       	cp	r8, r1
    ed00:	91 04       	cpc	r9, r1
    ed02:	71 f7       	brne	.-36     	; 0xece0 <vfprintf+0x1c6>
    ed04:	e8 c0       	rjmp	.+464    	; 0xeed6 <vfprintf+0x3bc>
    ed06:	84 36       	cpi	r24, 0x64	; 100
    ed08:	11 f0       	breq	.+4      	; 0xed0e <vfprintf+0x1f4>
    ed0a:	89 36       	cpi	r24, 0x69	; 105
    ed0c:	41 f5       	brne	.+80     	; 0xed5e <vfprintf+0x244>
    ed0e:	f8 01       	movw	r30, r16
    ed10:	37 fe       	sbrs	r3, 7
    ed12:	07 c0       	rjmp	.+14     	; 0xed22 <vfprintf+0x208>
    ed14:	60 81       	ld	r22, Z
    ed16:	71 81       	ldd	r23, Z+1	; 0x01
    ed18:	82 81       	ldd	r24, Z+2	; 0x02
    ed1a:	93 81       	ldd	r25, Z+3	; 0x03
    ed1c:	0c 5f       	subi	r16, 0xFC	; 252
    ed1e:	1f 4f       	sbci	r17, 0xFF	; 255
    ed20:	08 c0       	rjmp	.+16     	; 0xed32 <vfprintf+0x218>
    ed22:	60 81       	ld	r22, Z
    ed24:	71 81       	ldd	r23, Z+1	; 0x01
    ed26:	07 2e       	mov	r0, r23
    ed28:	00 0c       	add	r0, r0
    ed2a:	88 0b       	sbc	r24, r24
    ed2c:	99 0b       	sbc	r25, r25
    ed2e:	0e 5f       	subi	r16, 0xFE	; 254
    ed30:	1f 4f       	sbci	r17, 0xFF	; 255
    ed32:	f3 2d       	mov	r31, r3
    ed34:	ff 76       	andi	r31, 0x6F	; 111
    ed36:	3f 2e       	mov	r3, r31
    ed38:	97 ff       	sbrs	r25, 7
    ed3a:	09 c0       	rjmp	.+18     	; 0xed4e <vfprintf+0x234>
    ed3c:	90 95       	com	r25
    ed3e:	80 95       	com	r24
    ed40:	70 95       	com	r23
    ed42:	61 95       	neg	r22
    ed44:	7f 4f       	sbci	r23, 0xFF	; 255
    ed46:	8f 4f       	sbci	r24, 0xFF	; 255
    ed48:	9f 4f       	sbci	r25, 0xFF	; 255
    ed4a:	f0 68       	ori	r31, 0x80	; 128
    ed4c:	3f 2e       	mov	r3, r31
    ed4e:	2a e0       	ldi	r18, 0x0A	; 10
    ed50:	30 e0       	ldi	r19, 0x00	; 0
    ed52:	a3 01       	movw	r20, r6
    ed54:	0e 94 a9 7b 	call	0xf752	; 0xf752 <__ultoa_invert>
    ed58:	88 2e       	mov	r8, r24
    ed5a:	86 18       	sub	r8, r6
    ed5c:	45 c0       	rjmp	.+138    	; 0xede8 <vfprintf+0x2ce>
    ed5e:	85 37       	cpi	r24, 0x75	; 117
    ed60:	31 f4       	brne	.+12     	; 0xed6e <vfprintf+0x254>
    ed62:	23 2d       	mov	r18, r3
    ed64:	2f 7e       	andi	r18, 0xEF	; 239
    ed66:	b2 2e       	mov	r11, r18
    ed68:	2a e0       	ldi	r18, 0x0A	; 10
    ed6a:	30 e0       	ldi	r19, 0x00	; 0
    ed6c:	25 c0       	rjmp	.+74     	; 0xedb8 <vfprintf+0x29e>
    ed6e:	93 2d       	mov	r25, r3
    ed70:	99 7f       	andi	r25, 0xF9	; 249
    ed72:	b9 2e       	mov	r11, r25
    ed74:	8f 36       	cpi	r24, 0x6F	; 111
    ed76:	c1 f0       	breq	.+48     	; 0xeda8 <vfprintf+0x28e>
    ed78:	18 f4       	brcc	.+6      	; 0xed80 <vfprintf+0x266>
    ed7a:	88 35       	cpi	r24, 0x58	; 88
    ed7c:	79 f0       	breq	.+30     	; 0xed9c <vfprintf+0x282>
    ed7e:	b5 c0       	rjmp	.+362    	; 0xeeea <vfprintf+0x3d0>
    ed80:	80 37       	cpi	r24, 0x70	; 112
    ed82:	19 f0       	breq	.+6      	; 0xed8a <vfprintf+0x270>
    ed84:	88 37       	cpi	r24, 0x78	; 120
    ed86:	21 f0       	breq	.+8      	; 0xed90 <vfprintf+0x276>
    ed88:	b0 c0       	rjmp	.+352    	; 0xeeea <vfprintf+0x3d0>
    ed8a:	e9 2f       	mov	r30, r25
    ed8c:	e0 61       	ori	r30, 0x10	; 16
    ed8e:	be 2e       	mov	r11, r30
    ed90:	b4 fe       	sbrs	r11, 4
    ed92:	0d c0       	rjmp	.+26     	; 0xedae <vfprintf+0x294>
    ed94:	fb 2d       	mov	r31, r11
    ed96:	f4 60       	ori	r31, 0x04	; 4
    ed98:	bf 2e       	mov	r11, r31
    ed9a:	09 c0       	rjmp	.+18     	; 0xedae <vfprintf+0x294>
    ed9c:	34 fe       	sbrs	r3, 4
    ed9e:	0a c0       	rjmp	.+20     	; 0xedb4 <vfprintf+0x29a>
    eda0:	29 2f       	mov	r18, r25
    eda2:	26 60       	ori	r18, 0x06	; 6
    eda4:	b2 2e       	mov	r11, r18
    eda6:	06 c0       	rjmp	.+12     	; 0xedb4 <vfprintf+0x29a>
    eda8:	28 e0       	ldi	r18, 0x08	; 8
    edaa:	30 e0       	ldi	r19, 0x00	; 0
    edac:	05 c0       	rjmp	.+10     	; 0xedb8 <vfprintf+0x29e>
    edae:	20 e1       	ldi	r18, 0x10	; 16
    edb0:	30 e0       	ldi	r19, 0x00	; 0
    edb2:	02 c0       	rjmp	.+4      	; 0xedb8 <vfprintf+0x29e>
    edb4:	20 e1       	ldi	r18, 0x10	; 16
    edb6:	32 e0       	ldi	r19, 0x02	; 2
    edb8:	f8 01       	movw	r30, r16
    edba:	b7 fe       	sbrs	r11, 7
    edbc:	07 c0       	rjmp	.+14     	; 0xedcc <vfprintf+0x2b2>
    edbe:	60 81       	ld	r22, Z
    edc0:	71 81       	ldd	r23, Z+1	; 0x01
    edc2:	82 81       	ldd	r24, Z+2	; 0x02
    edc4:	93 81       	ldd	r25, Z+3	; 0x03
    edc6:	0c 5f       	subi	r16, 0xFC	; 252
    edc8:	1f 4f       	sbci	r17, 0xFF	; 255
    edca:	06 c0       	rjmp	.+12     	; 0xedd8 <vfprintf+0x2be>
    edcc:	60 81       	ld	r22, Z
    edce:	71 81       	ldd	r23, Z+1	; 0x01
    edd0:	80 e0       	ldi	r24, 0x00	; 0
    edd2:	90 e0       	ldi	r25, 0x00	; 0
    edd4:	0e 5f       	subi	r16, 0xFE	; 254
    edd6:	1f 4f       	sbci	r17, 0xFF	; 255
    edd8:	a3 01       	movw	r20, r6
    edda:	0e 94 a9 7b 	call	0xf752	; 0xf752 <__ultoa_invert>
    edde:	88 2e       	mov	r8, r24
    ede0:	86 18       	sub	r8, r6
    ede2:	fb 2d       	mov	r31, r11
    ede4:	ff 77       	andi	r31, 0x7F	; 127
    ede6:	3f 2e       	mov	r3, r31
    ede8:	36 fe       	sbrs	r3, 6
    edea:	0d c0       	rjmp	.+26     	; 0xee06 <vfprintf+0x2ec>
    edec:	23 2d       	mov	r18, r3
    edee:	2e 7f       	andi	r18, 0xFE	; 254
    edf0:	a2 2e       	mov	r10, r18
    edf2:	89 14       	cp	r8, r9
    edf4:	58 f4       	brcc	.+22     	; 0xee0c <vfprintf+0x2f2>
    edf6:	34 fe       	sbrs	r3, 4
    edf8:	0b c0       	rjmp	.+22     	; 0xee10 <vfprintf+0x2f6>
    edfa:	32 fc       	sbrc	r3, 2
    edfc:	09 c0       	rjmp	.+18     	; 0xee10 <vfprintf+0x2f6>
    edfe:	83 2d       	mov	r24, r3
    ee00:	8e 7e       	andi	r24, 0xEE	; 238
    ee02:	a8 2e       	mov	r10, r24
    ee04:	05 c0       	rjmp	.+10     	; 0xee10 <vfprintf+0x2f6>
    ee06:	b8 2c       	mov	r11, r8
    ee08:	a3 2c       	mov	r10, r3
    ee0a:	03 c0       	rjmp	.+6      	; 0xee12 <vfprintf+0x2f8>
    ee0c:	b8 2c       	mov	r11, r8
    ee0e:	01 c0       	rjmp	.+2      	; 0xee12 <vfprintf+0x2f8>
    ee10:	b9 2c       	mov	r11, r9
    ee12:	a4 fe       	sbrs	r10, 4
    ee14:	0f c0       	rjmp	.+30     	; 0xee34 <vfprintf+0x31a>
    ee16:	fe 01       	movw	r30, r28
    ee18:	e8 0d       	add	r30, r8
    ee1a:	f1 1d       	adc	r31, r1
    ee1c:	80 81       	ld	r24, Z
    ee1e:	80 33       	cpi	r24, 0x30	; 48
    ee20:	21 f4       	brne	.+8      	; 0xee2a <vfprintf+0x310>
    ee22:	9a 2d       	mov	r25, r10
    ee24:	99 7e       	andi	r25, 0xE9	; 233
    ee26:	a9 2e       	mov	r10, r25
    ee28:	09 c0       	rjmp	.+18     	; 0xee3c <vfprintf+0x322>
    ee2a:	a2 fe       	sbrs	r10, 2
    ee2c:	06 c0       	rjmp	.+12     	; 0xee3a <vfprintf+0x320>
    ee2e:	b3 94       	inc	r11
    ee30:	b3 94       	inc	r11
    ee32:	04 c0       	rjmp	.+8      	; 0xee3c <vfprintf+0x322>
    ee34:	8a 2d       	mov	r24, r10
    ee36:	86 78       	andi	r24, 0x86	; 134
    ee38:	09 f0       	breq	.+2      	; 0xee3c <vfprintf+0x322>
    ee3a:	b3 94       	inc	r11
    ee3c:	a3 fc       	sbrc	r10, 3
    ee3e:	11 c0       	rjmp	.+34     	; 0xee62 <vfprintf+0x348>
    ee40:	a0 fe       	sbrs	r10, 0
    ee42:	06 c0       	rjmp	.+12     	; 0xee50 <vfprintf+0x336>
    ee44:	b2 14       	cp	r11, r2
    ee46:	88 f4       	brcc	.+34     	; 0xee6a <vfprintf+0x350>
    ee48:	28 0c       	add	r2, r8
    ee4a:	92 2c       	mov	r9, r2
    ee4c:	9b 18       	sub	r9, r11
    ee4e:	0e c0       	rjmp	.+28     	; 0xee6c <vfprintf+0x352>
    ee50:	b2 14       	cp	r11, r2
    ee52:	60 f4       	brcc	.+24     	; 0xee6c <vfprintf+0x352>
    ee54:	b6 01       	movw	r22, r12
    ee56:	80 e2       	ldi	r24, 0x20	; 32
    ee58:	90 e0       	ldi	r25, 0x00	; 0
    ee5a:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    ee5e:	b3 94       	inc	r11
    ee60:	f7 cf       	rjmp	.-18     	; 0xee50 <vfprintf+0x336>
    ee62:	b2 14       	cp	r11, r2
    ee64:	18 f4       	brcc	.+6      	; 0xee6c <vfprintf+0x352>
    ee66:	2b 18       	sub	r2, r11
    ee68:	02 c0       	rjmp	.+4      	; 0xee6e <vfprintf+0x354>
    ee6a:	98 2c       	mov	r9, r8
    ee6c:	21 2c       	mov	r2, r1
    ee6e:	a4 fe       	sbrs	r10, 4
    ee70:	10 c0       	rjmp	.+32     	; 0xee92 <vfprintf+0x378>
    ee72:	b6 01       	movw	r22, r12
    ee74:	80 e3       	ldi	r24, 0x30	; 48
    ee76:	90 e0       	ldi	r25, 0x00	; 0
    ee78:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    ee7c:	a2 fe       	sbrs	r10, 2
    ee7e:	17 c0       	rjmp	.+46     	; 0xeeae <vfprintf+0x394>
    ee80:	a1 fc       	sbrc	r10, 1
    ee82:	03 c0       	rjmp	.+6      	; 0xee8a <vfprintf+0x370>
    ee84:	88 e7       	ldi	r24, 0x78	; 120
    ee86:	90 e0       	ldi	r25, 0x00	; 0
    ee88:	02 c0       	rjmp	.+4      	; 0xee8e <vfprintf+0x374>
    ee8a:	88 e5       	ldi	r24, 0x58	; 88
    ee8c:	90 e0       	ldi	r25, 0x00	; 0
    ee8e:	b6 01       	movw	r22, r12
    ee90:	0c c0       	rjmp	.+24     	; 0xeeaa <vfprintf+0x390>
    ee92:	8a 2d       	mov	r24, r10
    ee94:	86 78       	andi	r24, 0x86	; 134
    ee96:	59 f0       	breq	.+22     	; 0xeeae <vfprintf+0x394>
    ee98:	a1 fe       	sbrs	r10, 1
    ee9a:	02 c0       	rjmp	.+4      	; 0xeea0 <vfprintf+0x386>
    ee9c:	8b e2       	ldi	r24, 0x2B	; 43
    ee9e:	01 c0       	rjmp	.+2      	; 0xeea2 <vfprintf+0x388>
    eea0:	80 e2       	ldi	r24, 0x20	; 32
    eea2:	a7 fc       	sbrc	r10, 7
    eea4:	8d e2       	ldi	r24, 0x2D	; 45
    eea6:	b6 01       	movw	r22, r12
    eea8:	90 e0       	ldi	r25, 0x00	; 0
    eeaa:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    eeae:	89 14       	cp	r8, r9
    eeb0:	38 f4       	brcc	.+14     	; 0xeec0 <vfprintf+0x3a6>
    eeb2:	b6 01       	movw	r22, r12
    eeb4:	80 e3       	ldi	r24, 0x30	; 48
    eeb6:	90 e0       	ldi	r25, 0x00	; 0
    eeb8:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    eebc:	9a 94       	dec	r9
    eebe:	f7 cf       	rjmp	.-18     	; 0xeeae <vfprintf+0x394>
    eec0:	8a 94       	dec	r8
    eec2:	f3 01       	movw	r30, r6
    eec4:	e8 0d       	add	r30, r8
    eec6:	f1 1d       	adc	r31, r1
    eec8:	80 81       	ld	r24, Z
    eeca:	b6 01       	movw	r22, r12
    eecc:	90 e0       	ldi	r25, 0x00	; 0
    eece:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    eed2:	81 10       	cpse	r8, r1
    eed4:	f5 cf       	rjmp	.-22     	; 0xeec0 <vfprintf+0x3a6>
    eed6:	22 20       	and	r2, r2
    eed8:	09 f4       	brne	.+2      	; 0xeedc <vfprintf+0x3c2>
    eeda:	42 ce       	rjmp	.-892    	; 0xeb60 <vfprintf+0x46>
    eedc:	b6 01       	movw	r22, r12
    eede:	80 e2       	ldi	r24, 0x20	; 32
    eee0:	90 e0       	ldi	r25, 0x00	; 0
    eee2:	0e 94 6d 7b 	call	0xf6da	; 0xf6da <fputc>
    eee6:	2a 94       	dec	r2
    eee8:	f6 cf       	rjmp	.-20     	; 0xeed6 <vfprintf+0x3bc>
    eeea:	f6 01       	movw	r30, r12
    eeec:	86 81       	ldd	r24, Z+6	; 0x06
    eeee:	97 81       	ldd	r25, Z+7	; 0x07
    eef0:	02 c0       	rjmp	.+4      	; 0xeef6 <vfprintf+0x3dc>
    eef2:	8f ef       	ldi	r24, 0xFF	; 255
    eef4:	9f ef       	ldi	r25, 0xFF	; 255
    eef6:	2b 96       	adiw	r28, 0x0b	; 11
    eef8:	cd bf       	out	0x3d, r28	; 61
    eefa:	de bf       	out	0x3e, r29	; 62
    eefc:	df 91       	pop	r29
    eefe:	cf 91       	pop	r28
    ef00:	1f 91       	pop	r17
    ef02:	0f 91       	pop	r16
    ef04:	ff 90       	pop	r15
    ef06:	ef 90       	pop	r14
    ef08:	df 90       	pop	r13
    ef0a:	cf 90       	pop	r12
    ef0c:	bf 90       	pop	r11
    ef0e:	af 90       	pop	r10
    ef10:	9f 90       	pop	r9
    ef12:	8f 90       	pop	r8
    ef14:	7f 90       	pop	r7
    ef16:	6f 90       	pop	r6
    ef18:	5f 90       	pop	r5
    ef1a:	4f 90       	pop	r4
    ef1c:	3f 90       	pop	r3
    ef1e:	2f 90       	pop	r2
    ef20:	08 95       	ret

0000ef22 <dtoa_prf>:
    ef22:	8f 92       	push	r8
    ef24:	9f 92       	push	r9
    ef26:	af 92       	push	r10
    ef28:	bf 92       	push	r11
    ef2a:	cf 92       	push	r12
    ef2c:	df 92       	push	r13
    ef2e:	ef 92       	push	r14
    ef30:	ff 92       	push	r15
    ef32:	0f 93       	push	r16
    ef34:	1f 93       	push	r17
    ef36:	cf 93       	push	r28
    ef38:	df 93       	push	r29
    ef3a:	cd b7       	in	r28, 0x3d	; 61
    ef3c:	de b7       	in	r29, 0x3e	; 62
    ef3e:	29 97       	sbiw	r28, 0x09	; 9
    ef40:	cd bf       	out	0x3d, r28	; 61
    ef42:	de bf       	out	0x3e, r29	; 62
    ef44:	6a 01       	movw	r12, r20
    ef46:	12 2f       	mov	r17, r18
    ef48:	b0 2e       	mov	r11, r16
    ef4a:	2b e3       	ldi	r18, 0x3B	; 59
    ef4c:	20 17       	cp	r18, r16
    ef4e:	20 f0       	brcs	.+8      	; 0xef58 <dtoa_prf+0x36>
    ef50:	ff 24       	eor	r15, r15
    ef52:	f3 94       	inc	r15
    ef54:	f0 0e       	add	r15, r16
    ef56:	02 c0       	rjmp	.+4      	; 0xef5c <dtoa_prf+0x3a>
    ef58:	2c e3       	ldi	r18, 0x3C	; 60
    ef5a:	f2 2e       	mov	r15, r18
    ef5c:	0f 2d       	mov	r16, r15
    ef5e:	27 e0       	ldi	r18, 0x07	; 7
    ef60:	ae 01       	movw	r20, r28
    ef62:	4f 5f       	subi	r20, 0xFF	; 255
    ef64:	5f 4f       	sbci	r21, 0xFF	; 255
    ef66:	0e 94 5e 7a 	call	0xf4bc	; 0xf4bc <__ftoa_engine>
    ef6a:	bc 01       	movw	r22, r24
    ef6c:	49 81       	ldd	r20, Y+1	; 0x01
    ef6e:	84 2f       	mov	r24, r20
    ef70:	89 70       	andi	r24, 0x09	; 9
    ef72:	81 30       	cpi	r24, 0x01	; 1
    ef74:	31 f0       	breq	.+12     	; 0xef82 <dtoa_prf+0x60>
    ef76:	e1 fc       	sbrc	r14, 1
    ef78:	06 c0       	rjmp	.+12     	; 0xef86 <dtoa_prf+0x64>
    ef7a:	e0 fe       	sbrs	r14, 0
    ef7c:	06 c0       	rjmp	.+12     	; 0xef8a <dtoa_prf+0x68>
    ef7e:	90 e2       	ldi	r25, 0x20	; 32
    ef80:	05 c0       	rjmp	.+10     	; 0xef8c <dtoa_prf+0x6a>
    ef82:	9d e2       	ldi	r25, 0x2D	; 45
    ef84:	03 c0       	rjmp	.+6      	; 0xef8c <dtoa_prf+0x6a>
    ef86:	9b e2       	ldi	r25, 0x2B	; 43
    ef88:	01 c0       	rjmp	.+2      	; 0xef8c <dtoa_prf+0x6a>
    ef8a:	90 e0       	ldi	r25, 0x00	; 0
    ef8c:	5e 2d       	mov	r21, r14
    ef8e:	50 71       	andi	r21, 0x10	; 16
    ef90:	43 ff       	sbrs	r20, 3
    ef92:	3c c0       	rjmp	.+120    	; 0xf00c <dtoa_prf+0xea>
    ef94:	91 11       	cpse	r25, r1
    ef96:	02 c0       	rjmp	.+4      	; 0xef9c <dtoa_prf+0x7a>
    ef98:	83 e0       	ldi	r24, 0x03	; 3
    ef9a:	01 c0       	rjmp	.+2      	; 0xef9e <dtoa_prf+0x7c>
    ef9c:	84 e0       	ldi	r24, 0x04	; 4
    ef9e:	81 17       	cp	r24, r17
    efa0:	18 f4       	brcc	.+6      	; 0xefa8 <dtoa_prf+0x86>
    efa2:	21 2f       	mov	r18, r17
    efa4:	28 1b       	sub	r18, r24
    efa6:	01 c0       	rjmp	.+2      	; 0xefaa <dtoa_prf+0x88>
    efa8:	20 e0       	ldi	r18, 0x00	; 0
    efaa:	51 11       	cpse	r21, r1
    efac:	0b c0       	rjmp	.+22     	; 0xefc4 <dtoa_prf+0xa2>
    efae:	f6 01       	movw	r30, r12
    efb0:	82 2f       	mov	r24, r18
    efb2:	30 e2       	ldi	r19, 0x20	; 32
    efb4:	88 23       	and	r24, r24
    efb6:	19 f0       	breq	.+6      	; 0xefbe <dtoa_prf+0x9c>
    efb8:	31 93       	st	Z+, r19
    efba:	81 50       	subi	r24, 0x01	; 1
    efbc:	fb cf       	rjmp	.-10     	; 0xefb4 <dtoa_prf+0x92>
    efbe:	c2 0e       	add	r12, r18
    efc0:	d1 1c       	adc	r13, r1
    efc2:	20 e0       	ldi	r18, 0x00	; 0
    efc4:	99 23       	and	r25, r25
    efc6:	29 f0       	breq	.+10     	; 0xefd2 <dtoa_prf+0xb0>
    efc8:	d6 01       	movw	r26, r12
    efca:	9c 93       	st	X, r25
    efcc:	f6 01       	movw	r30, r12
    efce:	31 96       	adiw	r30, 0x01	; 1
    efd0:	6f 01       	movw	r12, r30
    efd2:	c6 01       	movw	r24, r12
    efd4:	03 96       	adiw	r24, 0x03	; 3
    efd6:	e2 fe       	sbrs	r14, 2
    efd8:	0a c0       	rjmp	.+20     	; 0xefee <dtoa_prf+0xcc>
    efda:	3e e4       	ldi	r19, 0x4E	; 78
    efdc:	d6 01       	movw	r26, r12
    efde:	3c 93       	st	X, r19
    efe0:	41 e4       	ldi	r20, 0x41	; 65
    efe2:	11 96       	adiw	r26, 0x01	; 1
    efe4:	4c 93       	st	X, r20
    efe6:	11 97       	sbiw	r26, 0x01	; 1
    efe8:	12 96       	adiw	r26, 0x02	; 2
    efea:	3c 93       	st	X, r19
    efec:	06 c0       	rjmp	.+12     	; 0xeffa <dtoa_prf+0xd8>
    efee:	3e e6       	ldi	r19, 0x6E	; 110
    eff0:	f6 01       	movw	r30, r12
    eff2:	30 83       	st	Z, r19
    eff4:	41 e6       	ldi	r20, 0x61	; 97
    eff6:	41 83       	std	Z+1, r20	; 0x01
    eff8:	32 83       	std	Z+2, r19	; 0x02
    effa:	fc 01       	movw	r30, r24
    effc:	32 2f       	mov	r19, r18
    effe:	40 e2       	ldi	r20, 0x20	; 32
    f000:	33 23       	and	r19, r19
    f002:	09 f4       	brne	.+2      	; 0xf006 <dtoa_prf+0xe4>
    f004:	42 c0       	rjmp	.+132    	; 0xf08a <dtoa_prf+0x168>
    f006:	41 93       	st	Z+, r20
    f008:	31 50       	subi	r19, 0x01	; 1
    f00a:	fa cf       	rjmp	.-12     	; 0xf000 <dtoa_prf+0xde>
    f00c:	42 ff       	sbrs	r20, 2
    f00e:	44 c0       	rjmp	.+136    	; 0xf098 <dtoa_prf+0x176>
    f010:	91 11       	cpse	r25, r1
    f012:	02 c0       	rjmp	.+4      	; 0xf018 <dtoa_prf+0xf6>
    f014:	83 e0       	ldi	r24, 0x03	; 3
    f016:	01 c0       	rjmp	.+2      	; 0xf01a <dtoa_prf+0xf8>
    f018:	84 e0       	ldi	r24, 0x04	; 4
    f01a:	81 17       	cp	r24, r17
    f01c:	18 f4       	brcc	.+6      	; 0xf024 <dtoa_prf+0x102>
    f01e:	21 2f       	mov	r18, r17
    f020:	28 1b       	sub	r18, r24
    f022:	01 c0       	rjmp	.+2      	; 0xf026 <dtoa_prf+0x104>
    f024:	20 e0       	ldi	r18, 0x00	; 0
    f026:	51 11       	cpse	r21, r1
    f028:	0b c0       	rjmp	.+22     	; 0xf040 <dtoa_prf+0x11e>
    f02a:	f6 01       	movw	r30, r12
    f02c:	82 2f       	mov	r24, r18
    f02e:	30 e2       	ldi	r19, 0x20	; 32
    f030:	88 23       	and	r24, r24
    f032:	19 f0       	breq	.+6      	; 0xf03a <dtoa_prf+0x118>
    f034:	31 93       	st	Z+, r19
    f036:	81 50       	subi	r24, 0x01	; 1
    f038:	fb cf       	rjmp	.-10     	; 0xf030 <dtoa_prf+0x10e>
    f03a:	c2 0e       	add	r12, r18
    f03c:	d1 1c       	adc	r13, r1
    f03e:	20 e0       	ldi	r18, 0x00	; 0
    f040:	99 23       	and	r25, r25
    f042:	29 f0       	breq	.+10     	; 0xf04e <dtoa_prf+0x12c>
    f044:	d6 01       	movw	r26, r12
    f046:	9c 93       	st	X, r25
    f048:	f6 01       	movw	r30, r12
    f04a:	31 96       	adiw	r30, 0x01	; 1
    f04c:	6f 01       	movw	r12, r30
    f04e:	c6 01       	movw	r24, r12
    f050:	03 96       	adiw	r24, 0x03	; 3
    f052:	e2 fe       	sbrs	r14, 2
    f054:	0b c0       	rjmp	.+22     	; 0xf06c <dtoa_prf+0x14a>
    f056:	39 e4       	ldi	r19, 0x49	; 73
    f058:	d6 01       	movw	r26, r12
    f05a:	3c 93       	st	X, r19
    f05c:	3e e4       	ldi	r19, 0x4E	; 78
    f05e:	11 96       	adiw	r26, 0x01	; 1
    f060:	3c 93       	st	X, r19
    f062:	11 97       	sbiw	r26, 0x01	; 1
    f064:	36 e4       	ldi	r19, 0x46	; 70
    f066:	12 96       	adiw	r26, 0x02	; 2
    f068:	3c 93       	st	X, r19
    f06a:	07 c0       	rjmp	.+14     	; 0xf07a <dtoa_prf+0x158>
    f06c:	39 e6       	ldi	r19, 0x69	; 105
    f06e:	f6 01       	movw	r30, r12
    f070:	30 83       	st	Z, r19
    f072:	3e e6       	ldi	r19, 0x6E	; 110
    f074:	31 83       	std	Z+1, r19	; 0x01
    f076:	36 e6       	ldi	r19, 0x66	; 102
    f078:	32 83       	std	Z+2, r19	; 0x02
    f07a:	fc 01       	movw	r30, r24
    f07c:	32 2f       	mov	r19, r18
    f07e:	40 e2       	ldi	r20, 0x20	; 32
    f080:	33 23       	and	r19, r19
    f082:	19 f0       	breq	.+6      	; 0xf08a <dtoa_prf+0x168>
    f084:	41 93       	st	Z+, r20
    f086:	31 50       	subi	r19, 0x01	; 1
    f088:	fb cf       	rjmp	.-10     	; 0xf080 <dtoa_prf+0x15e>
    f08a:	fc 01       	movw	r30, r24
    f08c:	e2 0f       	add	r30, r18
    f08e:	f1 1d       	adc	r31, r1
    f090:	10 82       	st	Z, r1
    f092:	8e ef       	ldi	r24, 0xFE	; 254
    f094:	9f ef       	ldi	r25, 0xFF	; 255
    f096:	a6 c0       	rjmp	.+332    	; 0xf1e4 <dtoa_prf+0x2c2>
    f098:	21 e0       	ldi	r18, 0x01	; 1
    f09a:	30 e0       	ldi	r19, 0x00	; 0
    f09c:	91 11       	cpse	r25, r1
    f09e:	02 c0       	rjmp	.+4      	; 0xf0a4 <dtoa_prf+0x182>
    f0a0:	20 e0       	ldi	r18, 0x00	; 0
    f0a2:	30 e0       	ldi	r19, 0x00	; 0
    f0a4:	16 16       	cp	r1, r22
    f0a6:	17 06       	cpc	r1, r23
    f0a8:	1c f4       	brge	.+6      	; 0xf0b0 <dtoa_prf+0x18e>
    f0aa:	fb 01       	movw	r30, r22
    f0ac:	31 96       	adiw	r30, 0x01	; 1
    f0ae:	02 c0       	rjmp	.+4      	; 0xf0b4 <dtoa_prf+0x192>
    f0b0:	e1 e0       	ldi	r30, 0x01	; 1
    f0b2:	f0 e0       	ldi	r31, 0x00	; 0
    f0b4:	2e 0f       	add	r18, r30
    f0b6:	3f 1f       	adc	r19, r31
    f0b8:	bb 20       	and	r11, r11
    f0ba:	21 f0       	breq	.+8      	; 0xf0c4 <dtoa_prf+0x1a2>
    f0bc:	eb 2d       	mov	r30, r11
    f0be:	f0 e0       	ldi	r31, 0x00	; 0
    f0c0:	31 96       	adiw	r30, 0x01	; 1
    f0c2:	02 c0       	rjmp	.+4      	; 0xf0c8 <dtoa_prf+0x1a6>
    f0c4:	e0 e0       	ldi	r30, 0x00	; 0
    f0c6:	f0 e0       	ldi	r31, 0x00	; 0
    f0c8:	2e 0f       	add	r18, r30
    f0ca:	3f 1f       	adc	r19, r31
    f0cc:	e1 2f       	mov	r30, r17
    f0ce:	f0 e0       	ldi	r31, 0x00	; 0
    f0d0:	2e 17       	cp	r18, r30
    f0d2:	3f 07       	cpc	r19, r31
    f0d4:	1c f4       	brge	.+6      	; 0xf0dc <dtoa_prf+0x1ba>
    f0d6:	12 1b       	sub	r17, r18
    f0d8:	21 2f       	mov	r18, r17
    f0da:	01 c0       	rjmp	.+2      	; 0xf0de <dtoa_prf+0x1bc>
    f0dc:	20 e0       	ldi	r18, 0x00	; 0
    f0de:	8e 2d       	mov	r24, r14
    f0e0:	88 71       	andi	r24, 0x18	; 24
    f0e2:	59 f4       	brne	.+22     	; 0xf0fa <dtoa_prf+0x1d8>
    f0e4:	f6 01       	movw	r30, r12
    f0e6:	82 2f       	mov	r24, r18
    f0e8:	30 e2       	ldi	r19, 0x20	; 32
    f0ea:	88 23       	and	r24, r24
    f0ec:	19 f0       	breq	.+6      	; 0xf0f4 <dtoa_prf+0x1d2>
    f0ee:	31 93       	st	Z+, r19
    f0f0:	81 50       	subi	r24, 0x01	; 1
    f0f2:	fb cf       	rjmp	.-10     	; 0xf0ea <dtoa_prf+0x1c8>
    f0f4:	c2 0e       	add	r12, r18
    f0f6:	d1 1c       	adc	r13, r1
    f0f8:	20 e0       	ldi	r18, 0x00	; 0
    f0fa:	99 23       	and	r25, r25
    f0fc:	29 f0       	breq	.+10     	; 0xf108 <dtoa_prf+0x1e6>
    f0fe:	d6 01       	movw	r26, r12
    f100:	9c 93       	st	X, r25
    f102:	f6 01       	movw	r30, r12
    f104:	31 96       	adiw	r30, 0x01	; 1
    f106:	6f 01       	movw	r12, r30
    f108:	51 11       	cpse	r21, r1
    f10a:	0b c0       	rjmp	.+22     	; 0xf122 <dtoa_prf+0x200>
    f10c:	f6 01       	movw	r30, r12
    f10e:	82 2f       	mov	r24, r18
    f110:	90 e3       	ldi	r25, 0x30	; 48
    f112:	88 23       	and	r24, r24
    f114:	19 f0       	breq	.+6      	; 0xf11c <dtoa_prf+0x1fa>
    f116:	91 93       	st	Z+, r25
    f118:	81 50       	subi	r24, 0x01	; 1
    f11a:	fb cf       	rjmp	.-10     	; 0xf112 <dtoa_prf+0x1f0>
    f11c:	c2 0e       	add	r12, r18
    f11e:	d1 1c       	adc	r13, r1
    f120:	20 e0       	ldi	r18, 0x00	; 0
    f122:	0f 2d       	mov	r16, r15
    f124:	06 0f       	add	r16, r22
    f126:	9a 81       	ldd	r25, Y+2	; 0x02
    f128:	34 2f       	mov	r19, r20
    f12a:	30 71       	andi	r19, 0x10	; 16
    f12c:	44 ff       	sbrs	r20, 4
    f12e:	03 c0       	rjmp	.+6      	; 0xf136 <dtoa_prf+0x214>
    f130:	91 33       	cpi	r25, 0x31	; 49
    f132:	09 f4       	brne	.+2      	; 0xf136 <dtoa_prf+0x214>
    f134:	01 50       	subi	r16, 0x01	; 1
    f136:	10 16       	cp	r1, r16
    f138:	24 f4       	brge	.+8      	; 0xf142 <dtoa_prf+0x220>
    f13a:	09 30       	cpi	r16, 0x09	; 9
    f13c:	18 f0       	brcs	.+6      	; 0xf144 <dtoa_prf+0x222>
    f13e:	08 e0       	ldi	r16, 0x08	; 8
    f140:	01 c0       	rjmp	.+2      	; 0xf144 <dtoa_prf+0x222>
    f142:	01 e0       	ldi	r16, 0x01	; 1
    f144:	ab 01       	movw	r20, r22
    f146:	77 ff       	sbrs	r23, 7
    f148:	02 c0       	rjmp	.+4      	; 0xf14e <dtoa_prf+0x22c>
    f14a:	40 e0       	ldi	r20, 0x00	; 0
    f14c:	50 e0       	ldi	r21, 0x00	; 0
    f14e:	fb 01       	movw	r30, r22
    f150:	e4 1b       	sub	r30, r20
    f152:	f5 0b       	sbc	r31, r21
    f154:	a1 e0       	ldi	r26, 0x01	; 1
    f156:	b0 e0       	ldi	r27, 0x00	; 0
    f158:	ac 0f       	add	r26, r28
    f15a:	bd 1f       	adc	r27, r29
    f15c:	ea 0f       	add	r30, r26
    f15e:	fb 1f       	adc	r31, r27
    f160:	8e e2       	ldi	r24, 0x2E	; 46
    f162:	a8 2e       	mov	r10, r24
    f164:	4b 01       	movw	r8, r22
    f166:	80 1a       	sub	r8, r16
    f168:	91 08       	sbc	r9, r1
    f16a:	0b 2d       	mov	r16, r11
    f16c:	10 e0       	ldi	r17, 0x00	; 0
    f16e:	11 95       	neg	r17
    f170:	01 95       	neg	r16
    f172:	11 09       	sbc	r17, r1
    f174:	4f 3f       	cpi	r20, 0xFF	; 255
    f176:	bf ef       	ldi	r27, 0xFF	; 255
    f178:	5b 07       	cpc	r21, r27
    f17a:	21 f4       	brne	.+8      	; 0xf184 <dtoa_prf+0x262>
    f17c:	d6 01       	movw	r26, r12
    f17e:	ac 92       	st	X, r10
    f180:	11 96       	adiw	r26, 0x01	; 1
    f182:	6d 01       	movw	r12, r26
    f184:	64 17       	cp	r22, r20
    f186:	75 07       	cpc	r23, r21
    f188:	2c f0       	brlt	.+10     	; 0xf194 <dtoa_prf+0x272>
    f18a:	84 16       	cp	r8, r20
    f18c:	95 06       	cpc	r9, r21
    f18e:	14 f4       	brge	.+4      	; 0xf194 <dtoa_prf+0x272>
    f190:	81 81       	ldd	r24, Z+1	; 0x01
    f192:	01 c0       	rjmp	.+2      	; 0xf196 <dtoa_prf+0x274>
    f194:	80 e3       	ldi	r24, 0x30	; 48
    f196:	41 50       	subi	r20, 0x01	; 1
    f198:	51 09       	sbc	r21, r1
    f19a:	31 96       	adiw	r30, 0x01	; 1
    f19c:	d6 01       	movw	r26, r12
    f19e:	11 96       	adiw	r26, 0x01	; 1
    f1a0:	7d 01       	movw	r14, r26
    f1a2:	40 17       	cp	r20, r16
    f1a4:	51 07       	cpc	r21, r17
    f1a6:	24 f0       	brlt	.+8      	; 0xf1b0 <dtoa_prf+0x28e>
    f1a8:	d6 01       	movw	r26, r12
    f1aa:	8c 93       	st	X, r24
    f1ac:	67 01       	movw	r12, r14
    f1ae:	e2 cf       	rjmp	.-60     	; 0xf174 <dtoa_prf+0x252>
    f1b0:	64 17       	cp	r22, r20
    f1b2:	75 07       	cpc	r23, r21
    f1b4:	39 f4       	brne	.+14     	; 0xf1c4 <dtoa_prf+0x2a2>
    f1b6:	96 33       	cpi	r25, 0x36	; 54
    f1b8:	20 f4       	brcc	.+8      	; 0xf1c2 <dtoa_prf+0x2a0>
    f1ba:	95 33       	cpi	r25, 0x35	; 53
    f1bc:	19 f4       	brne	.+6      	; 0xf1c4 <dtoa_prf+0x2a2>
    f1be:	31 11       	cpse	r19, r1
    f1c0:	01 c0       	rjmp	.+2      	; 0xf1c4 <dtoa_prf+0x2a2>
    f1c2:	81 e3       	ldi	r24, 0x31	; 49
    f1c4:	f6 01       	movw	r30, r12
    f1c6:	80 83       	st	Z, r24
    f1c8:	f7 01       	movw	r30, r14
    f1ca:	82 2f       	mov	r24, r18
    f1cc:	90 e2       	ldi	r25, 0x20	; 32
    f1ce:	88 23       	and	r24, r24
    f1d0:	19 f0       	breq	.+6      	; 0xf1d8 <dtoa_prf+0x2b6>
    f1d2:	91 93       	st	Z+, r25
    f1d4:	81 50       	subi	r24, 0x01	; 1
    f1d6:	fb cf       	rjmp	.-10     	; 0xf1ce <dtoa_prf+0x2ac>
    f1d8:	f7 01       	movw	r30, r14
    f1da:	e2 0f       	add	r30, r18
    f1dc:	f1 1d       	adc	r31, r1
    f1de:	10 82       	st	Z, r1
    f1e0:	80 e0       	ldi	r24, 0x00	; 0
    f1e2:	90 e0       	ldi	r25, 0x00	; 0
    f1e4:	29 96       	adiw	r28, 0x09	; 9
    f1e6:	cd bf       	out	0x3d, r28	; 61
    f1e8:	de bf       	out	0x3e, r29	; 62
    f1ea:	df 91       	pop	r29
    f1ec:	cf 91       	pop	r28
    f1ee:	1f 91       	pop	r17
    f1f0:	0f 91       	pop	r16
    f1f2:	ff 90       	pop	r15
    f1f4:	ef 90       	pop	r14
    f1f6:	df 90       	pop	r13
    f1f8:	cf 90       	pop	r12
    f1fa:	bf 90       	pop	r11
    f1fc:	af 90       	pop	r10
    f1fe:	9f 90       	pop	r9
    f200:	8f 90       	pop	r8
    f202:	08 95       	ret

0000f204 <strtod>:
    f204:	8f 92       	push	r8
    f206:	9f 92       	push	r9
    f208:	af 92       	push	r10
    f20a:	bf 92       	push	r11
    f20c:	cf 92       	push	r12
    f20e:	df 92       	push	r13
    f210:	ef 92       	push	r14
    f212:	ff 92       	push	r15
    f214:	0f 93       	push	r16
    f216:	1f 93       	push	r17
    f218:	cf 93       	push	r28
    f21a:	df 93       	push	r29
    f21c:	ec 01       	movw	r28, r24
    f21e:	6b 01       	movw	r12, r22
    f220:	61 15       	cp	r22, r1
    f222:	71 05       	cpc	r23, r1
    f224:	19 f0       	breq	.+6      	; 0xf22c <strtod+0x28>
    f226:	fb 01       	movw	r30, r22
    f228:	80 83       	st	Z, r24
    f22a:	91 83       	std	Z+1, r25	; 0x01
    f22c:	7e 01       	movw	r14, r28
    f22e:	ff ef       	ldi	r31, 0xFF	; 255
    f230:	ef 1a       	sub	r14, r31
    f232:	ff 0a       	sbc	r15, r31
    f234:	08 81       	ld	r16, Y
    f236:	80 2f       	mov	r24, r16
    f238:	90 e0       	ldi	r25, 0x00	; 0
    f23a:	0e 94 36 7b 	call	0xf66c	; 0xf66c <isspace>
    f23e:	89 2b       	or	r24, r25
    f240:	11 f0       	breq	.+4      	; 0xf246 <strtod+0x42>
    f242:	e7 01       	movw	r28, r14
    f244:	f3 cf       	rjmp	.-26     	; 0xf22c <strtod+0x28>
    f246:	0d 32       	cpi	r16, 0x2D	; 45
    f248:	39 f4       	brne	.+14     	; 0xf258 <strtod+0x54>
    f24a:	7e 01       	movw	r14, r28
    f24c:	82 e0       	ldi	r24, 0x02	; 2
    f24e:	e8 0e       	add	r14, r24
    f250:	f1 1c       	adc	r15, r1
    f252:	09 81       	ldd	r16, Y+1	; 0x01
    f254:	11 e0       	ldi	r17, 0x01	; 1
    f256:	08 c0       	rjmp	.+16     	; 0xf268 <strtod+0x64>
    f258:	0b 32       	cpi	r16, 0x2B	; 43
    f25a:	29 f4       	brne	.+10     	; 0xf266 <strtod+0x62>
    f25c:	7e 01       	movw	r14, r28
    f25e:	92 e0       	ldi	r25, 0x02	; 2
    f260:	e9 0e       	add	r14, r25
    f262:	f1 1c       	adc	r15, r1
    f264:	09 81       	ldd	r16, Y+1	; 0x01
    f266:	10 e0       	ldi	r17, 0x00	; 0
    f268:	e7 01       	movw	r28, r14
    f26a:	21 97       	sbiw	r28, 0x01	; 1
    f26c:	43 e0       	ldi	r20, 0x03	; 3
    f26e:	50 e0       	ldi	r21, 0x00	; 0
    f270:	60 e7       	ldi	r22, 0x70	; 112
    f272:	72 e0       	ldi	r23, 0x02	; 2
    f274:	ce 01       	movw	r24, r28
    f276:	0e 94 3f 7b 	call	0xf67e	; 0xf67e <strncasecmp_P>
    f27a:	89 2b       	or	r24, r25
    f27c:	c1 f4       	brne	.+48     	; 0xf2ae <strtod+0xaa>
    f27e:	23 96       	adiw	r28, 0x03	; 3
    f280:	45 e0       	ldi	r20, 0x05	; 5
    f282:	50 e0       	ldi	r21, 0x00	; 0
    f284:	6b e6       	ldi	r22, 0x6B	; 107
    f286:	72 e0       	ldi	r23, 0x02	; 2
    f288:	ce 01       	movw	r24, r28
    f28a:	0e 94 3f 7b 	call	0xf67e	; 0xf67e <strncasecmp_P>
    f28e:	89 2b       	or	r24, r25
    f290:	09 f4       	brne	.+2      	; 0xf294 <strtod+0x90>
    f292:	25 96       	adiw	r28, 0x05	; 5
    f294:	c1 14       	cp	r12, r1
    f296:	d1 04       	cpc	r13, r1
    f298:	19 f0       	breq	.+6      	; 0xf2a0 <strtod+0x9c>
    f29a:	f6 01       	movw	r30, r12
    f29c:	c0 83       	st	Z, r28
    f29e:	d1 83       	std	Z+1, r29	; 0x01
    f2a0:	11 11       	cpse	r17, r1
    f2a2:	f6 c0       	rjmp	.+492    	; 0xf490 <strtod+0x28c>
    f2a4:	60 e0       	ldi	r22, 0x00	; 0
    f2a6:	70 e0       	ldi	r23, 0x00	; 0
    f2a8:	80 e8       	ldi	r24, 0x80	; 128
    f2aa:	9f e7       	ldi	r25, 0x7F	; 127
    f2ac:	fa c0       	rjmp	.+500    	; 0xf4a2 <strtod+0x29e>
    f2ae:	43 e0       	ldi	r20, 0x03	; 3
    f2b0:	50 e0       	ldi	r21, 0x00	; 0
    f2b2:	68 e6       	ldi	r22, 0x68	; 104
    f2b4:	72 e0       	ldi	r23, 0x02	; 2
    f2b6:	ce 01       	movw	r24, r28
    f2b8:	0e 94 3f 7b 	call	0xf67e	; 0xf67e <strncasecmp_P>
    f2bc:	89 2b       	or	r24, r25
    f2be:	59 f4       	brne	.+22     	; 0xf2d6 <strtod+0xd2>
    f2c0:	c1 14       	cp	r12, r1
    f2c2:	d1 04       	cpc	r13, r1
    f2c4:	09 f4       	brne	.+2      	; 0xf2c8 <strtod+0xc4>
    f2c6:	e9 c0       	rjmp	.+466    	; 0xf49a <strtod+0x296>
    f2c8:	f2 e0       	ldi	r31, 0x02	; 2
    f2ca:	ef 0e       	add	r14, r31
    f2cc:	f1 1c       	adc	r15, r1
    f2ce:	f6 01       	movw	r30, r12
    f2d0:	e0 82       	st	Z, r14
    f2d2:	f1 82       	std	Z+1, r15	; 0x01
    f2d4:	e2 c0       	rjmp	.+452    	; 0xf49a <strtod+0x296>
    f2d6:	20 e0       	ldi	r18, 0x00	; 0
    f2d8:	30 e0       	ldi	r19, 0x00	; 0
    f2da:	a9 01       	movw	r20, r18
    f2dc:	c0 e0       	ldi	r28, 0x00	; 0
    f2de:	d0 e0       	ldi	r29, 0x00	; 0
    f2e0:	f7 01       	movw	r30, r14
    f2e2:	60 ed       	ldi	r22, 0xD0	; 208
    f2e4:	a6 2e       	mov	r10, r22
    f2e6:	a0 0e       	add	r10, r16
    f2e8:	89 e0       	ldi	r24, 0x09	; 9
    f2ea:	8a 15       	cp	r24, r10
    f2ec:	30 f1       	brcs	.+76     	; 0xf33a <strtod+0x136>
    f2ee:	91 2f       	mov	r25, r17
    f2f0:	92 60       	ori	r25, 0x02	; 2
    f2f2:	b9 2e       	mov	r11, r25
    f2f4:	81 2f       	mov	r24, r17
    f2f6:	88 70       	andi	r24, 0x08	; 8
    f2f8:	12 ff       	sbrs	r17, 2
    f2fa:	04 c0       	rjmp	.+8      	; 0xf304 <strtod+0x100>
    f2fc:	81 11       	cpse	r24, r1
    f2fe:	24 c0       	rjmp	.+72     	; 0xf348 <strtod+0x144>
    f300:	21 96       	adiw	r28, 0x01	; 1
    f302:	22 c0       	rjmp	.+68     	; 0xf348 <strtod+0x144>
    f304:	81 11       	cpse	r24, r1
    f306:	21 97       	sbiw	r28, 0x01	; 1
    f308:	a5 e0       	ldi	r26, 0x05	; 5
    f30a:	b0 e0       	ldi	r27, 0x00	; 0
    f30c:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <__muluhisi3>
    f310:	dc 01       	movw	r26, r24
    f312:	cb 01       	movw	r24, r22
    f314:	88 0f       	add	r24, r24
    f316:	99 1f       	adc	r25, r25
    f318:	aa 1f       	adc	r26, r26
    f31a:	bb 1f       	adc	r27, r27
    f31c:	9c 01       	movw	r18, r24
    f31e:	ad 01       	movw	r20, r26
    f320:	2a 0d       	add	r18, r10
    f322:	31 1d       	adc	r19, r1
    f324:	41 1d       	adc	r20, r1
    f326:	51 1d       	adc	r21, r1
    f328:	28 39       	cpi	r18, 0x98	; 152
    f32a:	89 e9       	ldi	r24, 0x99	; 153
    f32c:	38 07       	cpc	r19, r24
    f32e:	48 07       	cpc	r20, r24
    f330:	89 e1       	ldi	r24, 0x19	; 25
    f332:	58 07       	cpc	r21, r24
    f334:	48 f0       	brcs	.+18     	; 0xf348 <strtod+0x144>
    f336:	16 60       	ori	r17, 0x06	; 6
    f338:	06 c0       	rjmp	.+12     	; 0xf346 <strtod+0x142>
    f33a:	9e ef       	ldi	r25, 0xFE	; 254
    f33c:	a9 12       	cpse	r10, r25
    f33e:	0a c0       	rjmp	.+20     	; 0xf354 <strtod+0x150>
    f340:	13 fd       	sbrc	r17, 3
    f342:	40 c0       	rjmp	.+128    	; 0xf3c4 <strtod+0x1c0>
    f344:	18 60       	ori	r17, 0x08	; 8
    f346:	b1 2e       	mov	r11, r17
    f348:	8f ef       	ldi	r24, 0xFF	; 255
    f34a:	e8 1a       	sub	r14, r24
    f34c:	f8 0a       	sbc	r15, r24
    f34e:	00 81       	ld	r16, Z
    f350:	1b 2d       	mov	r17, r11
    f352:	c6 cf       	rjmp	.-116    	; 0xf2e0 <strtod+0xdc>
    f354:	80 2f       	mov	r24, r16
    f356:	8f 7d       	andi	r24, 0xDF	; 223
    f358:	85 34       	cpi	r24, 0x45	; 69
    f35a:	a1 f5       	brne	.+104    	; 0xf3c4 <strtod+0x1c0>
    f35c:	80 81       	ld	r24, Z
    f35e:	8d 32       	cpi	r24, 0x2D	; 45
    f360:	11 f4       	brne	.+4      	; 0xf366 <strtod+0x162>
    f362:	10 61       	ori	r17, 0x10	; 16
    f364:	06 c0       	rjmp	.+12     	; 0xf372 <strtod+0x16e>
    f366:	8b 32       	cpi	r24, 0x2B	; 43
    f368:	21 f0       	breq	.+8      	; 0xf372 <strtod+0x16e>
    f36a:	31 96       	adiw	r30, 0x01	; 1
    f36c:	61 e0       	ldi	r22, 0x01	; 1
    f36e:	70 e0       	ldi	r23, 0x00	; 0
    f370:	04 c0       	rjmp	.+8      	; 0xf37a <strtod+0x176>
    f372:	81 81       	ldd	r24, Z+1	; 0x01
    f374:	32 96       	adiw	r30, 0x02	; 2
    f376:	62 e0       	ldi	r22, 0x02	; 2
    f378:	70 e0       	ldi	r23, 0x00	; 0
    f37a:	80 53       	subi	r24, 0x30	; 48
    f37c:	8a 30       	cpi	r24, 0x0A	; 10
    f37e:	18 f0       	brcs	.+6      	; 0xf386 <strtod+0x182>
    f380:	e6 1b       	sub	r30, r22
    f382:	f7 0b       	sbc	r31, r23
    f384:	1f c0       	rjmp	.+62     	; 0xf3c4 <strtod+0x1c0>
    f386:	60 e0       	ldi	r22, 0x00	; 0
    f388:	70 e0       	ldi	r23, 0x00	; 0
    f38a:	60 38       	cpi	r22, 0x80	; 128
    f38c:	9c e0       	ldi	r25, 0x0C	; 12
    f38e:	79 07       	cpc	r23, r25
    f390:	5c f4       	brge	.+22     	; 0xf3a8 <strtod+0x1a4>
    f392:	db 01       	movw	r26, r22
    f394:	aa 0f       	add	r26, r26
    f396:	bb 1f       	adc	r27, r27
    f398:	aa 0f       	add	r26, r26
    f39a:	bb 1f       	adc	r27, r27
    f39c:	6a 0f       	add	r22, r26
    f39e:	7b 1f       	adc	r23, r27
    f3a0:	66 0f       	add	r22, r22
    f3a2:	77 1f       	adc	r23, r23
    f3a4:	68 0f       	add	r22, r24
    f3a6:	71 1d       	adc	r23, r1
    f3a8:	31 96       	adiw	r30, 0x01	; 1
    f3aa:	df 01       	movw	r26, r30
    f3ac:	11 97       	sbiw	r26, 0x01	; 1
    f3ae:	8c 91       	ld	r24, X
    f3b0:	80 53       	subi	r24, 0x30	; 48
    f3b2:	8a 30       	cpi	r24, 0x0A	; 10
    f3b4:	50 f3       	brcs	.-44     	; 0xf38a <strtod+0x186>
    f3b6:	14 ff       	sbrs	r17, 4
    f3b8:	03 c0       	rjmp	.+6      	; 0xf3c0 <strtod+0x1bc>
    f3ba:	71 95       	neg	r23
    f3bc:	61 95       	neg	r22
    f3be:	71 09       	sbc	r23, r1
    f3c0:	c6 0f       	add	r28, r22
    f3c2:	d7 1f       	adc	r29, r23
    f3c4:	11 ff       	sbrs	r17, 1
    f3c6:	08 c0       	rjmp	.+16     	; 0xf3d8 <strtod+0x1d4>
    f3c8:	c1 14       	cp	r12, r1
    f3ca:	d1 04       	cpc	r13, r1
    f3cc:	29 f0       	breq	.+10     	; 0xf3d8 <strtod+0x1d4>
    f3ce:	cf 01       	movw	r24, r30
    f3d0:	01 97       	sbiw	r24, 0x01	; 1
    f3d2:	f6 01       	movw	r30, r12
    f3d4:	80 83       	st	Z, r24
    f3d6:	91 83       	std	Z+1, r25	; 0x01
    f3d8:	ca 01       	movw	r24, r20
    f3da:	b9 01       	movw	r22, r18
    f3dc:	0e 94 6f 71 	call	0xe2de	; 0xe2de <__floatunsisf>
    f3e0:	21 2f       	mov	r18, r17
    f3e2:	23 70       	andi	r18, 0x03	; 3
    f3e4:	23 30       	cpi	r18, 0x03	; 3
    f3e6:	19 f0       	breq	.+6      	; 0xf3ee <strtod+0x1ea>
    f3e8:	4b 01       	movw	r8, r22
    f3ea:	5c 01       	movw	r10, r24
    f3ec:	06 c0       	rjmp	.+12     	; 0xf3fa <strtod+0x1f6>
    f3ee:	4b 01       	movw	r8, r22
    f3f0:	5c 01       	movw	r10, r24
    f3f2:	b7 fa       	bst	r11, 7
    f3f4:	b0 94       	com	r11
    f3f6:	b7 f8       	bld	r11, 7
    f3f8:	b0 94       	com	r11
    f3fa:	20 e0       	ldi	r18, 0x00	; 0
    f3fc:	30 e0       	ldi	r19, 0x00	; 0
    f3fe:	a9 01       	movw	r20, r18
    f400:	c5 01       	movw	r24, r10
    f402:	b4 01       	movw	r22, r8
    f404:	0e 94 c2 70 	call	0xe184	; 0xe184 <__cmpsf2>
    f408:	88 23       	and	r24, r24
    f40a:	09 f4       	brne	.+2      	; 0xf40e <strtod+0x20a>
    f40c:	3e c0       	rjmp	.+124    	; 0xf48a <strtod+0x286>
    f40e:	d7 ff       	sbrs	r29, 7
    f410:	06 c0       	rjmp	.+12     	; 0xf41e <strtod+0x21a>
    f412:	d1 95       	neg	r29
    f414:	c1 95       	neg	r28
    f416:	d1 09       	sbc	r29, r1
    f418:	07 e8       	ldi	r16, 0x87	; 135
    f41a:	12 e0       	ldi	r17, 0x02	; 2
    f41c:	02 c0       	rjmp	.+4      	; 0xf422 <strtod+0x21e>
    f41e:	0f e9       	ldi	r16, 0x9F	; 159
    f420:	12 e0       	ldi	r17, 0x02	; 2
    f422:	68 01       	movw	r12, r16
    f424:	f8 e1       	ldi	r31, 0x18	; 24
    f426:	cf 1a       	sub	r12, r31
    f428:	d1 08       	sbc	r13, r1
    f42a:	90 e2       	ldi	r25, 0x20	; 32
    f42c:	e9 2e       	mov	r14, r25
    f42e:	f1 2c       	mov	r15, r1
    f430:	ce 15       	cp	r28, r14
    f432:	df 05       	cpc	r29, r15
    f434:	74 f0       	brlt	.+28     	; 0xf452 <strtod+0x24e>
    f436:	f8 01       	movw	r30, r16
    f438:	25 91       	lpm	r18, Z+
    f43a:	35 91       	lpm	r19, Z+
    f43c:	45 91       	lpm	r20, Z+
    f43e:	54 91       	lpm	r21, Z
    f440:	c5 01       	movw	r24, r10
    f442:	b4 01       	movw	r22, r8
    f444:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__mulsf3>
    f448:	4b 01       	movw	r8, r22
    f44a:	5c 01       	movw	r10, r24
    f44c:	ce 19       	sub	r28, r14
    f44e:	df 09       	sbc	r29, r15
    f450:	ef cf       	rjmp	.-34     	; 0xf430 <strtod+0x22c>
    f452:	04 50       	subi	r16, 0x04	; 4
    f454:	11 09       	sbc	r17, r1
    f456:	f5 94       	asr	r15
    f458:	e7 94       	ror	r14
    f45a:	0c 15       	cp	r16, r12
    f45c:	1d 05       	cpc	r17, r13
    f45e:	41 f7       	brne	.-48     	; 0xf430 <strtod+0x22c>
    f460:	8a 2d       	mov	r24, r10
    f462:	88 0f       	add	r24, r24
    f464:	8b 2d       	mov	r24, r11
    f466:	88 1f       	adc	r24, r24
    f468:	8f 3f       	cpi	r24, 0xFF	; 255
    f46a:	49 f0       	breq	.+18     	; 0xf47e <strtod+0x27a>
    f46c:	20 e0       	ldi	r18, 0x00	; 0
    f46e:	30 e0       	ldi	r19, 0x00	; 0
    f470:	a9 01       	movw	r20, r18
    f472:	c5 01       	movw	r24, r10
    f474:	b4 01       	movw	r22, r8
    f476:	0e 94 c2 70 	call	0xe184	; 0xe184 <__cmpsf2>
    f47a:	81 11       	cpse	r24, r1
    f47c:	06 c0       	rjmp	.+12     	; 0xf48a <strtod+0x286>
    f47e:	82 e2       	ldi	r24, 0x22	; 34
    f480:	90 e0       	ldi	r25, 0x00	; 0
    f482:	80 93 b4 4a 	sts	0x4AB4, r24	; 0x804ab4 <errno>
    f486:	90 93 b5 4a 	sts	0x4AB5, r25	; 0x804ab5 <errno+0x1>
    f48a:	c5 01       	movw	r24, r10
    f48c:	b4 01       	movw	r22, r8
    f48e:	09 c0       	rjmp	.+18     	; 0xf4a2 <strtod+0x29e>
    f490:	60 e0       	ldi	r22, 0x00	; 0
    f492:	70 e0       	ldi	r23, 0x00	; 0
    f494:	80 e8       	ldi	r24, 0x80	; 128
    f496:	9f ef       	ldi	r25, 0xFF	; 255
    f498:	04 c0       	rjmp	.+8      	; 0xf4a2 <strtod+0x29e>
    f49a:	60 e0       	ldi	r22, 0x00	; 0
    f49c:	70 e0       	ldi	r23, 0x00	; 0
    f49e:	80 ec       	ldi	r24, 0xC0	; 192
    f4a0:	9f e7       	ldi	r25, 0x7F	; 127
    f4a2:	df 91       	pop	r29
    f4a4:	cf 91       	pop	r28
    f4a6:	1f 91       	pop	r17
    f4a8:	0f 91       	pop	r16
    f4aa:	ff 90       	pop	r15
    f4ac:	ef 90       	pop	r14
    f4ae:	df 90       	pop	r13
    f4b0:	cf 90       	pop	r12
    f4b2:	bf 90       	pop	r11
    f4b4:	af 90       	pop	r10
    f4b6:	9f 90       	pop	r9
    f4b8:	8f 90       	pop	r8
    f4ba:	08 95       	ret

0000f4bc <__ftoa_engine>:
    f4bc:	28 30       	cpi	r18, 0x08	; 8
    f4be:	08 f0       	brcs	.+2      	; 0xf4c2 <__ftoa_engine+0x6>
    f4c0:	27 e0       	ldi	r18, 0x07	; 7
    f4c2:	33 27       	eor	r19, r19
    f4c4:	da 01       	movw	r26, r20
    f4c6:	99 0f       	add	r25, r25
    f4c8:	31 1d       	adc	r19, r1
    f4ca:	87 fd       	sbrc	r24, 7
    f4cc:	91 60       	ori	r25, 0x01	; 1
    f4ce:	00 96       	adiw	r24, 0x00	; 0
    f4d0:	61 05       	cpc	r22, r1
    f4d2:	71 05       	cpc	r23, r1
    f4d4:	39 f4       	brne	.+14     	; 0xf4e4 <__ftoa_engine+0x28>
    f4d6:	32 60       	ori	r19, 0x02	; 2
    f4d8:	2e 5f       	subi	r18, 0xFE	; 254
    f4da:	3d 93       	st	X+, r19
    f4dc:	30 e3       	ldi	r19, 0x30	; 48
    f4de:	2a 95       	dec	r18
    f4e0:	e1 f7       	brne	.-8      	; 0xf4da <__ftoa_engine+0x1e>
    f4e2:	08 95       	ret
    f4e4:	9f 3f       	cpi	r25, 0xFF	; 255
    f4e6:	30 f0       	brcs	.+12     	; 0xf4f4 <__ftoa_engine+0x38>
    f4e8:	80 38       	cpi	r24, 0x80	; 128
    f4ea:	71 05       	cpc	r23, r1
    f4ec:	61 05       	cpc	r22, r1
    f4ee:	09 f0       	breq	.+2      	; 0xf4f2 <__ftoa_engine+0x36>
    f4f0:	3c 5f       	subi	r19, 0xFC	; 252
    f4f2:	3c 5f       	subi	r19, 0xFC	; 252
    f4f4:	3d 93       	st	X+, r19
    f4f6:	91 30       	cpi	r25, 0x01	; 1
    f4f8:	08 f0       	brcs	.+2      	; 0xf4fc <__ftoa_engine+0x40>
    f4fa:	80 68       	ori	r24, 0x80	; 128
    f4fc:	91 1d       	adc	r25, r1
    f4fe:	df 93       	push	r29
    f500:	cf 93       	push	r28
    f502:	1f 93       	push	r17
    f504:	0f 93       	push	r16
    f506:	ff 92       	push	r15
    f508:	ef 92       	push	r14
    f50a:	19 2f       	mov	r17, r25
    f50c:	98 7f       	andi	r25, 0xF8	; 248
    f50e:	96 95       	lsr	r25
    f510:	e9 2f       	mov	r30, r25
    f512:	96 95       	lsr	r25
    f514:	96 95       	lsr	r25
    f516:	e9 0f       	add	r30, r25
    f518:	ff 27       	eor	r31, r31
    f51a:	e3 50       	subi	r30, 0x03	; 3
    f51c:	fd 4f       	sbci	r31, 0xFD	; 253
    f51e:	99 27       	eor	r25, r25
    f520:	33 27       	eor	r19, r19
    f522:	ee 24       	eor	r14, r14
    f524:	ff 24       	eor	r15, r15
    f526:	a7 01       	movw	r20, r14
    f528:	e7 01       	movw	r28, r14
    f52a:	05 90       	lpm	r0, Z+
    f52c:	08 94       	sec
    f52e:	07 94       	ror	r0
    f530:	28 f4       	brcc	.+10     	; 0xf53c <__ftoa_engine+0x80>
    f532:	36 0f       	add	r19, r22
    f534:	e7 1e       	adc	r14, r23
    f536:	f8 1e       	adc	r15, r24
    f538:	49 1f       	adc	r20, r25
    f53a:	51 1d       	adc	r21, r1
    f53c:	66 0f       	add	r22, r22
    f53e:	77 1f       	adc	r23, r23
    f540:	88 1f       	adc	r24, r24
    f542:	99 1f       	adc	r25, r25
    f544:	06 94       	lsr	r0
    f546:	a1 f7       	brne	.-24     	; 0xf530 <__ftoa_engine+0x74>
    f548:	05 90       	lpm	r0, Z+
    f54a:	07 94       	ror	r0
    f54c:	28 f4       	brcc	.+10     	; 0xf558 <__ftoa_engine+0x9c>
    f54e:	e7 0e       	add	r14, r23
    f550:	f8 1e       	adc	r15, r24
    f552:	49 1f       	adc	r20, r25
    f554:	56 1f       	adc	r21, r22
    f556:	c1 1d       	adc	r28, r1
    f558:	77 0f       	add	r23, r23
    f55a:	88 1f       	adc	r24, r24
    f55c:	99 1f       	adc	r25, r25
    f55e:	66 1f       	adc	r22, r22
    f560:	06 94       	lsr	r0
    f562:	a1 f7       	brne	.-24     	; 0xf54c <__ftoa_engine+0x90>
    f564:	05 90       	lpm	r0, Z+
    f566:	07 94       	ror	r0
    f568:	28 f4       	brcc	.+10     	; 0xf574 <__ftoa_engine+0xb8>
    f56a:	f8 0e       	add	r15, r24
    f56c:	49 1f       	adc	r20, r25
    f56e:	56 1f       	adc	r21, r22
    f570:	c7 1f       	adc	r28, r23
    f572:	d1 1d       	adc	r29, r1
    f574:	88 0f       	add	r24, r24
    f576:	99 1f       	adc	r25, r25
    f578:	66 1f       	adc	r22, r22
    f57a:	77 1f       	adc	r23, r23
    f57c:	06 94       	lsr	r0
    f57e:	a1 f7       	brne	.-24     	; 0xf568 <__ftoa_engine+0xac>
    f580:	05 90       	lpm	r0, Z+
    f582:	07 94       	ror	r0
    f584:	20 f4       	brcc	.+8      	; 0xf58e <__ftoa_engine+0xd2>
    f586:	49 0f       	add	r20, r25
    f588:	56 1f       	adc	r21, r22
    f58a:	c7 1f       	adc	r28, r23
    f58c:	d8 1f       	adc	r29, r24
    f58e:	99 0f       	add	r25, r25
    f590:	66 1f       	adc	r22, r22
    f592:	77 1f       	adc	r23, r23
    f594:	88 1f       	adc	r24, r24
    f596:	06 94       	lsr	r0
    f598:	a9 f7       	brne	.-22     	; 0xf584 <__ftoa_engine+0xc8>
    f59a:	84 91       	lpm	r24, Z
    f59c:	10 95       	com	r17
    f59e:	17 70       	andi	r17, 0x07	; 7
    f5a0:	41 f0       	breq	.+16     	; 0xf5b2 <__ftoa_engine+0xf6>
    f5a2:	d6 95       	lsr	r29
    f5a4:	c7 95       	ror	r28
    f5a6:	57 95       	ror	r21
    f5a8:	47 95       	ror	r20
    f5aa:	f7 94       	ror	r15
    f5ac:	e7 94       	ror	r14
    f5ae:	1a 95       	dec	r17
    f5b0:	c1 f7       	brne	.-16     	; 0xf5a2 <__ftoa_engine+0xe6>
    f5b2:	e3 ea       	ldi	r30, 0xA3	; 163
    f5b4:	f2 e0       	ldi	r31, 0x02	; 2
    f5b6:	68 94       	set
    f5b8:	15 90       	lpm	r1, Z+
    f5ba:	15 91       	lpm	r17, Z+
    f5bc:	35 91       	lpm	r19, Z+
    f5be:	65 91       	lpm	r22, Z+
    f5c0:	95 91       	lpm	r25, Z+
    f5c2:	05 90       	lpm	r0, Z+
    f5c4:	7f e2       	ldi	r23, 0x2F	; 47
    f5c6:	73 95       	inc	r23
    f5c8:	e1 18       	sub	r14, r1
    f5ca:	f1 0a       	sbc	r15, r17
    f5cc:	43 0b       	sbc	r20, r19
    f5ce:	56 0b       	sbc	r21, r22
    f5d0:	c9 0b       	sbc	r28, r25
    f5d2:	d0 09       	sbc	r29, r0
    f5d4:	c0 f7       	brcc	.-16     	; 0xf5c6 <__ftoa_engine+0x10a>
    f5d6:	e1 0c       	add	r14, r1
    f5d8:	f1 1e       	adc	r15, r17
    f5da:	43 1f       	adc	r20, r19
    f5dc:	56 1f       	adc	r21, r22
    f5de:	c9 1f       	adc	r28, r25
    f5e0:	d0 1d       	adc	r29, r0
    f5e2:	7e f4       	brtc	.+30     	; 0xf602 <__ftoa_engine+0x146>
    f5e4:	70 33       	cpi	r23, 0x30	; 48
    f5e6:	11 f4       	brne	.+4      	; 0xf5ec <__ftoa_engine+0x130>
    f5e8:	8a 95       	dec	r24
    f5ea:	e6 cf       	rjmp	.-52     	; 0xf5b8 <__ftoa_engine+0xfc>
    f5ec:	e8 94       	clt
    f5ee:	01 50       	subi	r16, 0x01	; 1
    f5f0:	30 f0       	brcs	.+12     	; 0xf5fe <__ftoa_engine+0x142>
    f5f2:	08 0f       	add	r16, r24
    f5f4:	0a f4       	brpl	.+2      	; 0xf5f8 <__ftoa_engine+0x13c>
    f5f6:	00 27       	eor	r16, r16
    f5f8:	02 17       	cp	r16, r18
    f5fa:	08 f4       	brcc	.+2      	; 0xf5fe <__ftoa_engine+0x142>
    f5fc:	20 2f       	mov	r18, r16
    f5fe:	23 95       	inc	r18
    f600:	02 2f       	mov	r16, r18
    f602:	7a 33       	cpi	r23, 0x3A	; 58
    f604:	28 f0       	brcs	.+10     	; 0xf610 <__ftoa_engine+0x154>
    f606:	79 e3       	ldi	r23, 0x39	; 57
    f608:	7d 93       	st	X+, r23
    f60a:	2a 95       	dec	r18
    f60c:	e9 f7       	brne	.-6      	; 0xf608 <__ftoa_engine+0x14c>
    f60e:	10 c0       	rjmp	.+32     	; 0xf630 <__ftoa_engine+0x174>
    f610:	7d 93       	st	X+, r23
    f612:	2a 95       	dec	r18
    f614:	89 f6       	brne	.-94     	; 0xf5b8 <__ftoa_engine+0xfc>
    f616:	06 94       	lsr	r0
    f618:	97 95       	ror	r25
    f61a:	67 95       	ror	r22
    f61c:	37 95       	ror	r19
    f61e:	17 95       	ror	r17
    f620:	17 94       	ror	r1
    f622:	e1 18       	sub	r14, r1
    f624:	f1 0a       	sbc	r15, r17
    f626:	43 0b       	sbc	r20, r19
    f628:	56 0b       	sbc	r21, r22
    f62a:	c9 0b       	sbc	r28, r25
    f62c:	d0 09       	sbc	r29, r0
    f62e:	98 f0       	brcs	.+38     	; 0xf656 <__ftoa_engine+0x19a>
    f630:	23 95       	inc	r18
    f632:	7e 91       	ld	r23, -X
    f634:	73 95       	inc	r23
    f636:	7a 33       	cpi	r23, 0x3A	; 58
    f638:	08 f0       	brcs	.+2      	; 0xf63c <__ftoa_engine+0x180>
    f63a:	70 e3       	ldi	r23, 0x30	; 48
    f63c:	7c 93       	st	X, r23
    f63e:	20 13       	cpse	r18, r16
    f640:	b8 f7       	brcc	.-18     	; 0xf630 <__ftoa_engine+0x174>
    f642:	7e 91       	ld	r23, -X
    f644:	70 61       	ori	r23, 0x10	; 16
    f646:	7d 93       	st	X+, r23
    f648:	30 f0       	brcs	.+12     	; 0xf656 <__ftoa_engine+0x19a>
    f64a:	83 95       	inc	r24
    f64c:	71 e3       	ldi	r23, 0x31	; 49
    f64e:	7d 93       	st	X+, r23
    f650:	70 e3       	ldi	r23, 0x30	; 48
    f652:	2a 95       	dec	r18
    f654:	e1 f7       	brne	.-8      	; 0xf64e <__ftoa_engine+0x192>
    f656:	11 24       	eor	r1, r1
    f658:	ef 90       	pop	r14
    f65a:	ff 90       	pop	r15
    f65c:	0f 91       	pop	r16
    f65e:	1f 91       	pop	r17
    f660:	cf 91       	pop	r28
    f662:	df 91       	pop	r29
    f664:	99 27       	eor	r25, r25
    f666:	87 fd       	sbrc	r24, 7
    f668:	90 95       	com	r25
    f66a:	08 95       	ret

0000f66c <isspace>:
    f66c:	91 11       	cpse	r25, r1
    f66e:	0c 94 07 7c 	jmp	0xf80e	; 0xf80e <__ctype_isfalse>
    f672:	80 32       	cpi	r24, 0x20	; 32
    f674:	19 f0       	breq	.+6      	; 0xf67c <isspace+0x10>
    f676:	89 50       	subi	r24, 0x09	; 9
    f678:	85 50       	subi	r24, 0x05	; 5
    f67a:	c8 f7       	brcc	.-14     	; 0xf66e <isspace+0x2>
    f67c:	08 95       	ret

0000f67e <strncasecmp_P>:
    f67e:	fb 01       	movw	r30, r22
    f680:	dc 01       	movw	r26, r24
    f682:	41 50       	subi	r20, 0x01	; 1
    f684:	50 40       	sbci	r21, 0x00	; 0
    f686:	88 f0       	brcs	.+34     	; 0xf6aa <strncasecmp_P+0x2c>
    f688:	8d 91       	ld	r24, X+
    f68a:	81 34       	cpi	r24, 0x41	; 65
    f68c:	1c f0       	brlt	.+6      	; 0xf694 <strncasecmp_P+0x16>
    f68e:	8b 35       	cpi	r24, 0x5B	; 91
    f690:	0c f4       	brge	.+2      	; 0xf694 <strncasecmp_P+0x16>
    f692:	80 5e       	subi	r24, 0xE0	; 224
    f694:	65 91       	lpm	r22, Z+
    f696:	61 34       	cpi	r22, 0x41	; 65
    f698:	1c f0       	brlt	.+6      	; 0xf6a0 <strncasecmp_P+0x22>
    f69a:	6b 35       	cpi	r22, 0x5B	; 91
    f69c:	0c f4       	brge	.+2      	; 0xf6a0 <strncasecmp_P+0x22>
    f69e:	60 5e       	subi	r22, 0xE0	; 224
    f6a0:	86 1b       	sub	r24, r22
    f6a2:	61 11       	cpse	r22, r1
    f6a4:	71 f3       	breq	.-36     	; 0xf682 <strncasecmp_P+0x4>
    f6a6:	99 0b       	sbc	r25, r25
    f6a8:	08 95       	ret
    f6aa:	88 1b       	sub	r24, r24
    f6ac:	fc cf       	rjmp	.-8      	; 0xf6a6 <strncasecmp_P+0x28>

0000f6ae <strnlen_P>:
    f6ae:	fc 01       	movw	r30, r24
    f6b0:	05 90       	lpm	r0, Z+
    f6b2:	61 50       	subi	r22, 0x01	; 1
    f6b4:	70 40       	sbci	r23, 0x00	; 0
    f6b6:	01 10       	cpse	r0, r1
    f6b8:	d8 f7       	brcc	.-10     	; 0xf6b0 <strnlen_P+0x2>
    f6ba:	80 95       	com	r24
    f6bc:	90 95       	com	r25
    f6be:	8e 0f       	add	r24, r30
    f6c0:	9f 1f       	adc	r25, r31
    f6c2:	08 95       	ret

0000f6c4 <strnlen>:
    f6c4:	fc 01       	movw	r30, r24
    f6c6:	61 50       	subi	r22, 0x01	; 1
    f6c8:	70 40       	sbci	r23, 0x00	; 0
    f6ca:	01 90       	ld	r0, Z+
    f6cc:	01 10       	cpse	r0, r1
    f6ce:	d8 f7       	brcc	.-10     	; 0xf6c6 <strnlen+0x2>
    f6d0:	80 95       	com	r24
    f6d2:	90 95       	com	r25
    f6d4:	8e 0f       	add	r24, r30
    f6d6:	9f 1f       	adc	r25, r31
    f6d8:	08 95       	ret

0000f6da <fputc>:
    f6da:	0f 93       	push	r16
    f6dc:	1f 93       	push	r17
    f6de:	cf 93       	push	r28
    f6e0:	df 93       	push	r29
    f6e2:	fb 01       	movw	r30, r22
    f6e4:	23 81       	ldd	r18, Z+3	; 0x03
    f6e6:	21 fd       	sbrc	r18, 1
    f6e8:	03 c0       	rjmp	.+6      	; 0xf6f0 <fputc+0x16>
    f6ea:	8f ef       	ldi	r24, 0xFF	; 255
    f6ec:	9f ef       	ldi	r25, 0xFF	; 255
    f6ee:	2c c0       	rjmp	.+88     	; 0xf748 <fputc+0x6e>
    f6f0:	22 ff       	sbrs	r18, 2
    f6f2:	16 c0       	rjmp	.+44     	; 0xf720 <fputc+0x46>
    f6f4:	46 81       	ldd	r20, Z+6	; 0x06
    f6f6:	57 81       	ldd	r21, Z+7	; 0x07
    f6f8:	24 81       	ldd	r18, Z+4	; 0x04
    f6fa:	35 81       	ldd	r19, Z+5	; 0x05
    f6fc:	42 17       	cp	r20, r18
    f6fe:	53 07       	cpc	r21, r19
    f700:	44 f4       	brge	.+16     	; 0xf712 <fputc+0x38>
    f702:	a0 81       	ld	r26, Z
    f704:	b1 81       	ldd	r27, Z+1	; 0x01
    f706:	9d 01       	movw	r18, r26
    f708:	2f 5f       	subi	r18, 0xFF	; 255
    f70a:	3f 4f       	sbci	r19, 0xFF	; 255
    f70c:	20 83       	st	Z, r18
    f70e:	31 83       	std	Z+1, r19	; 0x01
    f710:	8c 93       	st	X, r24
    f712:	26 81       	ldd	r18, Z+6	; 0x06
    f714:	37 81       	ldd	r19, Z+7	; 0x07
    f716:	2f 5f       	subi	r18, 0xFF	; 255
    f718:	3f 4f       	sbci	r19, 0xFF	; 255
    f71a:	26 83       	std	Z+6, r18	; 0x06
    f71c:	37 83       	std	Z+7, r19	; 0x07
    f71e:	14 c0       	rjmp	.+40     	; 0xf748 <fputc+0x6e>
    f720:	8b 01       	movw	r16, r22
    f722:	ec 01       	movw	r28, r24
    f724:	fb 01       	movw	r30, r22
    f726:	00 84       	ldd	r0, Z+8	; 0x08
    f728:	f1 85       	ldd	r31, Z+9	; 0x09
    f72a:	e0 2d       	mov	r30, r0
    f72c:	09 95       	icall
    f72e:	89 2b       	or	r24, r25
    f730:	e1 f6       	brne	.-72     	; 0xf6ea <fputc+0x10>
    f732:	d8 01       	movw	r26, r16
    f734:	16 96       	adiw	r26, 0x06	; 6
    f736:	8d 91       	ld	r24, X+
    f738:	9c 91       	ld	r25, X
    f73a:	17 97       	sbiw	r26, 0x07	; 7
    f73c:	01 96       	adiw	r24, 0x01	; 1
    f73e:	16 96       	adiw	r26, 0x06	; 6
    f740:	8d 93       	st	X+, r24
    f742:	9c 93       	st	X, r25
    f744:	17 97       	sbiw	r26, 0x07	; 7
    f746:	ce 01       	movw	r24, r28
    f748:	df 91       	pop	r29
    f74a:	cf 91       	pop	r28
    f74c:	1f 91       	pop	r17
    f74e:	0f 91       	pop	r16
    f750:	08 95       	ret

0000f752 <__ultoa_invert>:
    f752:	fa 01       	movw	r30, r20
    f754:	aa 27       	eor	r26, r26
    f756:	28 30       	cpi	r18, 0x08	; 8
    f758:	51 f1       	breq	.+84     	; 0xf7ae <__ultoa_invert+0x5c>
    f75a:	20 31       	cpi	r18, 0x10	; 16
    f75c:	81 f1       	breq	.+96     	; 0xf7be <__ultoa_invert+0x6c>
    f75e:	e8 94       	clt
    f760:	6f 93       	push	r22
    f762:	6e 7f       	andi	r22, 0xFE	; 254
    f764:	6e 5f       	subi	r22, 0xFE	; 254
    f766:	7f 4f       	sbci	r23, 0xFF	; 255
    f768:	8f 4f       	sbci	r24, 0xFF	; 255
    f76a:	9f 4f       	sbci	r25, 0xFF	; 255
    f76c:	af 4f       	sbci	r26, 0xFF	; 255
    f76e:	b1 e0       	ldi	r27, 0x01	; 1
    f770:	3e d0       	rcall	.+124    	; 0xf7ee <__ultoa_invert+0x9c>
    f772:	b4 e0       	ldi	r27, 0x04	; 4
    f774:	3c d0       	rcall	.+120    	; 0xf7ee <__ultoa_invert+0x9c>
    f776:	67 0f       	add	r22, r23
    f778:	78 1f       	adc	r23, r24
    f77a:	89 1f       	adc	r24, r25
    f77c:	9a 1f       	adc	r25, r26
    f77e:	a1 1d       	adc	r26, r1
    f780:	68 0f       	add	r22, r24
    f782:	79 1f       	adc	r23, r25
    f784:	8a 1f       	adc	r24, r26
    f786:	91 1d       	adc	r25, r1
    f788:	a1 1d       	adc	r26, r1
    f78a:	6a 0f       	add	r22, r26
    f78c:	71 1d       	adc	r23, r1
    f78e:	81 1d       	adc	r24, r1
    f790:	91 1d       	adc	r25, r1
    f792:	a1 1d       	adc	r26, r1
    f794:	20 d0       	rcall	.+64     	; 0xf7d6 <__ultoa_invert+0x84>
    f796:	09 f4       	brne	.+2      	; 0xf79a <__ultoa_invert+0x48>
    f798:	68 94       	set
    f79a:	3f 91       	pop	r19
    f79c:	2a e0       	ldi	r18, 0x0A	; 10
    f79e:	26 9f       	mul	r18, r22
    f7a0:	11 24       	eor	r1, r1
    f7a2:	30 19       	sub	r19, r0
    f7a4:	30 5d       	subi	r19, 0xD0	; 208
    f7a6:	31 93       	st	Z+, r19
    f7a8:	de f6       	brtc	.-74     	; 0xf760 <__ultoa_invert+0xe>
    f7aa:	cf 01       	movw	r24, r30
    f7ac:	08 95       	ret
    f7ae:	46 2f       	mov	r20, r22
    f7b0:	47 70       	andi	r20, 0x07	; 7
    f7b2:	40 5d       	subi	r20, 0xD0	; 208
    f7b4:	41 93       	st	Z+, r20
    f7b6:	b3 e0       	ldi	r27, 0x03	; 3
    f7b8:	0f d0       	rcall	.+30     	; 0xf7d8 <__ultoa_invert+0x86>
    f7ba:	c9 f7       	brne	.-14     	; 0xf7ae <__ultoa_invert+0x5c>
    f7bc:	f6 cf       	rjmp	.-20     	; 0xf7aa <__ultoa_invert+0x58>
    f7be:	46 2f       	mov	r20, r22
    f7c0:	4f 70       	andi	r20, 0x0F	; 15
    f7c2:	40 5d       	subi	r20, 0xD0	; 208
    f7c4:	4a 33       	cpi	r20, 0x3A	; 58
    f7c6:	18 f0       	brcs	.+6      	; 0xf7ce <__ultoa_invert+0x7c>
    f7c8:	49 5d       	subi	r20, 0xD9	; 217
    f7ca:	31 fd       	sbrc	r19, 1
    f7cc:	40 52       	subi	r20, 0x20	; 32
    f7ce:	41 93       	st	Z+, r20
    f7d0:	02 d0       	rcall	.+4      	; 0xf7d6 <__ultoa_invert+0x84>
    f7d2:	a9 f7       	brne	.-22     	; 0xf7be <__ultoa_invert+0x6c>
    f7d4:	ea cf       	rjmp	.-44     	; 0xf7aa <__ultoa_invert+0x58>
    f7d6:	b4 e0       	ldi	r27, 0x04	; 4
    f7d8:	a6 95       	lsr	r26
    f7da:	97 95       	ror	r25
    f7dc:	87 95       	ror	r24
    f7de:	77 95       	ror	r23
    f7e0:	67 95       	ror	r22
    f7e2:	ba 95       	dec	r27
    f7e4:	c9 f7       	brne	.-14     	; 0xf7d8 <__ultoa_invert+0x86>
    f7e6:	00 97       	sbiw	r24, 0x00	; 0
    f7e8:	61 05       	cpc	r22, r1
    f7ea:	71 05       	cpc	r23, r1
    f7ec:	08 95       	ret
    f7ee:	9b 01       	movw	r18, r22
    f7f0:	ac 01       	movw	r20, r24
    f7f2:	0a 2e       	mov	r0, r26
    f7f4:	06 94       	lsr	r0
    f7f6:	57 95       	ror	r21
    f7f8:	47 95       	ror	r20
    f7fa:	37 95       	ror	r19
    f7fc:	27 95       	ror	r18
    f7fe:	ba 95       	dec	r27
    f800:	c9 f7       	brne	.-14     	; 0xf7f4 <__ultoa_invert+0xa2>
    f802:	62 0f       	add	r22, r18
    f804:	73 1f       	adc	r23, r19
    f806:	84 1f       	adc	r24, r20
    f808:	95 1f       	adc	r25, r21
    f80a:	a0 1d       	adc	r26, r0
    f80c:	08 95       	ret

0000f80e <__ctype_isfalse>:
    f80e:	99 27       	eor	r25, r25
    f810:	88 27       	eor	r24, r24

0000f812 <__ctype_istrue>:
    f812:	08 95       	ret

0000f814 <eeprom_read_byte>:
    f814:	03 d0       	rcall	.+6      	; 0xf81c <eeprom_mapen>
    f816:	80 81       	ld	r24, Z
    f818:	99 27       	eor	r25, r25
    f81a:	08 95       	ret

0000f81c <eeprom_mapen>:
    f81c:	fc 01       	movw	r30, r24
    f81e:	e0 50       	subi	r30, 0x00	; 0
    f820:	fc 4e       	sbci	r31, 0xEC	; 236
    f822:	08 95       	ret

0000f824 <eeprom_read_dword>:
    f824:	0e 94 0e 7c 	call	0xf81c	; 0xf81c <eeprom_mapen>
    f828:	60 81       	ld	r22, Z
    f82a:	71 81       	ldd	r23, Z+1	; 0x01
    f82c:	82 81       	ldd	r24, Z+2	; 0x02
    f82e:	93 81       	ldd	r25, Z+3	; 0x03
    f830:	08 95       	ret

0000f832 <eeprom_read_word>:
    f832:	0e 94 0e 7c 	call	0xf81c	; 0xf81c <eeprom_mapen>
    f836:	80 81       	ld	r24, Z
    f838:	91 81       	ldd	r25, Z+1	; 0x01
    f83a:	08 95       	ret

0000f83c <__divmodqi4>:
    f83c:	87 fb       	bst	r24, 7
    f83e:	08 2e       	mov	r0, r24
    f840:	06 26       	eor	r0, r22
    f842:	87 fd       	sbrc	r24, 7
    f844:	81 95       	neg	r24
    f846:	67 fd       	sbrc	r22, 7
    f848:	61 95       	neg	r22
    f84a:	0e 94 33 7c 	call	0xf866	; 0xf866 <__udivmodqi4>
    f84e:	0e f4       	brtc	.+2      	; 0xf852 <__divmodqi4_1>
    f850:	91 95       	neg	r25

0000f852 <__divmodqi4_1>:
    f852:	07 fc       	sbrc	r0, 7
    f854:	81 95       	neg	r24

0000f856 <__divmodqi4_exit>:
    f856:	08 95       	ret

0000f858 <__xload_1>:
    f858:	57 fd       	sbrc	r21, 7
    f85a:	03 c0       	rjmp	.+6      	; 0xf862 <__xload_1+0xa>
    f85c:	5b bf       	out	0x3b, r21	; 59
    f85e:	67 91       	elpm	r22, Z+
    f860:	08 95       	ret
    f862:	60 81       	ld	r22, Z
    f864:	08 95       	ret

0000f866 <__udivmodqi4>:
    f866:	99 1b       	sub	r25, r25
    f868:	79 e0       	ldi	r23, 0x09	; 9
    f86a:	04 c0       	rjmp	.+8      	; 0xf874 <__udivmodqi4_ep>

0000f86c <__udivmodqi4_loop>:
    f86c:	99 1f       	adc	r25, r25
    f86e:	96 17       	cp	r25, r22
    f870:	08 f0       	brcs	.+2      	; 0xf874 <__udivmodqi4_ep>
    f872:	96 1b       	sub	r25, r22

0000f874 <__udivmodqi4_ep>:
    f874:	88 1f       	adc	r24, r24
    f876:	7a 95       	dec	r23
    f878:	c9 f7       	brne	.-14     	; 0xf86c <__udivmodqi4_loop>
    f87a:	80 95       	com	r24
    f87c:	08 95       	ret

0000f87e <__do_global_dtors>:
    f87e:	12 e0       	ldi	r17, 0x02	; 2
    f880:	c7 e3       	ldi	r28, 0x37	; 55
    f882:	d2 e0       	ldi	r29, 0x02	; 2
    f884:	04 c0       	rjmp	.+8      	; 0xf88e <__do_global_dtors+0x10>
    f886:	fe 01       	movw	r30, r28
    f888:	0e 94 4d 73 	call	0xe69a	; 0xe69a <__tablejump2__>
    f88c:	21 96       	adiw	r28, 0x01	; 1
    f88e:	c9 33       	cpi	r28, 0x39	; 57
    f890:	d1 07       	cpc	r29, r17
    f892:	c9 f7       	brne	.-14     	; 0xf886 <__do_global_dtors+0x8>
    f894:	f8 94       	cli

0000f896 <__stop_program>:
    f896:	ff cf       	rjmp	.-2      	; 0xf896 <__stop_program>
